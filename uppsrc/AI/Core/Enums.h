#ifndef _AI_TextCore_Enums_h_
#define _AI_TextCore_Enums_h_

NAMESPACE_UPP

// TODO move to a file
enum {
	SCORE_IDEA,
	SCORE_EMOTION,
	SCORE_HOOK,
	SCORE_SHARE,
	SCORE_VALUE,
	SCORE_COMEDY,
	SCORE_SEX,
	SCORE_POLITICS,
	SCORE_LOVE,
	SCORE_SOCIAL,

	SCORE_COUNT
};

// TODO rename these to DB_DATA_SRC_TYPE or something
// TODO these should be removed
enum {
	DB_SONG,
	DB_TWITTER,
	DB_BLOG,
	DB_DIALOG,
	DB_STORYBOARD,
	DB_CODE,
	
	DB_COUNT
};

inline String GetAppModeString(int appmode) {
	switch (appmode) {
		case DB_SONG:			return "Song";
		case DB_TWITTER:		return "Twitter";
		case DB_BLOG:			return "Blog";
		case DB_DIALOG:			return "Dialog";
		case DB_STORYBOARD:		return "Storyboard";
		case DB_CODE:			return "Code";
		default: break;
	}
	return "<error>";
}

enum {
	STRESS_NONE,
	STRESS_PRIMARY,
	STRESS_SECONDARY,
};

enum {
#define ATTR_ITEM(e, g, i0, i1) e,
ATTR_LIST
#undef ATTR_ITEM
ATTR_COUNT
};

enum {
	GENDER_CHILD,
	GENDER_AUTHORITY,
	GENDER_MALE,
	GENDER_FEMALE,
	GENDER_SELLER,
	GENDER_BUYER,
	GENDER_MARKETER,
	GENDER_CONSUMER,
	
	GENDER_COUNT // feel free to add
};

String GetGenderString(int i);
Vector<String> GetGenders();
int FindGender(const String& s);

enum{
	TCENT_SAFE_MALE,
	TCENT_SAFE_FEMALE,
	TCENT_UNSAFE_MALE,
	TCENT_UNSAFE_FEMALE,
	
	TCENT_COUNT
};

inline int GetTypeclassEntity(bool unsafe, bool gender) {
	return unsafe * 2 + gender * 1;
}


enum {
	MARKETPRIORITY_IN_SALE,
	MARKETPRIORITY_SELL_UPCOMING,
	MARKETPRIORITY_SOLD,
	MARKETPRIORITY_POSTPONE_SELL,
	MARKETPRIORITY_WONT_SELL,
	
	MARKETPRIORITY_COUNT
};

String GetMarketPriorityKey(int i);

// TODO move to a file
// TODO: maybe rename some of these
#define BIOCATEGORY_LIST \
	BIOCATEGORY(HOME) \
	BIOCATEGORY(HOME_KITCHEN) \
	BIOCATEGORY(HOME_WORKDESK) \
	BIOCATEGORY(HOME_BEDROOM) \
	BIOCATEGORY(HOME_COMPUTER) \
	BIOCATEGORY(PEOPLE_FRIENDS) \
	BIOCATEGORY(PEOPLE_CLOSE_FRIENDS) \
	BIOCATEGORY(PEOPLE_ENEMIES) \
	BIOCATEGORY(PEOPLE_PUBLIC_IN_GENERAL) \
	BIOCATEGORY(PEOPLE_SYSTEMIC_ENEMIES) \
	BIOCATEGORY(SEXUALITY_ADULT_ENTERNTAINMENT) \
	BIOCATEGORY(SEXUALITY_EXPERIENCES) \
	BIOCATEGORY(EDUCATION_CAMPUS) \
	BIOCATEGORY(EDUCATION_HOME) \
	BIOCATEGORY(EDUCATION_INTERNET) \
	BIOCATEGORY(EDUCATION_MUSIC_PRODUCTION) \
	BIOCATEGORY(FAMILY_PARENTAL) \
	BIOCATEGORY(FAMILY_OWN) \
	BIOCATEGORY(EVENTS_MUSIC) \
	BIOCATEGORY(EVENTS_SPORT) \
	BIOCATEGORY(EVENTS_FOOD) \
	BIOCATEGORY(EVENTS_OTHER) \
	BIOCATEGORY(POLITICAL) \
	BIOCATEGORY(POLITICAL_PIRATISM) \
	BIOCATEGORY(PERSONAL_TASTE_FOOD) \
	BIOCATEGORY(PERSONAL_TASTE_ENTERNTAINMENT) \
	BIOCATEGORY(PERSONAL_TASTE_VIDEOGAMES) \
	BIOCATEGORY(PERSONAL_TASTE_MOVIES) \
	BIOCATEGORY(PERSONAL_TASTE_TV) \
	BIOCATEGORY(PERSONAL_TASTE_BOOKS) \
	BIOCATEGORY(PERSONAL_TASTE_WORLD_INFORMATION) \
	BIOCATEGORY(PERSONAL_TASTE_HOBBIES) \
	BIOCATEGORY(PERSONAL_TASTE_PHYSICAL_EXERCISE) \
	BIOCATEGORY(PERSONAL_TASTE_ADVENTURES) \
	BIOCATEGORY(PERSONAL_TASTE_YOUTUBE) \
	BIOCATEGORY(PERSONAL_TASTE_MUSIC) \
	BIOCATEGORY(TRADING_BUYING) \
	BIOCATEGORY(TRADING_SELLING) \
	BIOCATEGORY(HEALTH) \
	BIOCATEGORY(HEALTH_SUPPLEMENTS) \
	BIOCATEGORY(HEALTH_MEDICATION) \
	BIOCATEGORY(HEALTH_DOCTOR) \
	BIOCATEGORY(HEALTH_OPERATIONS) \
	BIOCATEGORY(ANIMALS_PETS) \
	BIOCATEGORY(ANIMALS_WILD) \
	BIOCATEGORY(WORK_PROGRAMMING) \
	BIOCATEGORY(WORK_MUSIC_COLLABORATION) \
	BIOCATEGORY(WORK_MUSIC_PRODUCTION) \
	BIOCATEGORY(WORK_SONGWRITING) \
	BIOCATEGORY(BADGE_OF_HONOR) \
	BIOCATEGORY(BADGE_OF_SHAME) \
	BIOCATEGORY(BADGE_OF_JUDGEMENT) \
	BIOCATEGORY(POLITICAL_IDENTITY) \
	BIOCATEGORY(MYSELF) \
	BIOCATEGORY(COTTAGE) \
	BIOCATEGORY(BADGE_OF_HONOR_FOR_SEXUALITY) \
	BIOCATEGORY(BADGE_OF_SHAME_FOR_SEXUALITY) \
	BIOCATEGORY(BADGE_OF_JUDGEMENT_FOR_SEXUALITY) \
	BIOCATEGORY(BADGE_OF_HONOR_FOR_RELATIONSHIPS) \
	BIOCATEGORY(BADGE_OF_SHAME_FOR_RELATIONSHIPS) \
	BIOCATEGORY(BADGE_OF_JUDGEMENT_FOR_RELATIONSHIPS) \
	BIOCATEGORY(BADGE_OF_HONOR_FOR_SOCIAL_ISSUES) \
	BIOCATEGORY(BADGE_OF_SHAME_FOR_SOCIAL_ISSUES) \
	BIOCATEGORY(BADGE_OF_JUDGEMENT_FOR_SOCIAL_ISSUES) \

enum {
	#define BIOCATEGORY(x) BIOCATEGORY_##x,
	BIOCATEGORY_LIST
	#undef BIOCATEGORY
	
	BIOCATEGORY_COUNT
};

String GetBiographyCategoryEnum(int i);
String GetBiographyCategoryKey(int i);
const char* GetBiographyCategoryEnumCstr(int i);
int FindBiographyCategoryEnum(String s);

// TODO move to a file
#define SOCIETYROLE_LIST \
	SOCIETYROLE(WIFE) \
	SOCIETYROLE(BEST_MAN) \
	SOCIETYROLE(MOTHER) \
	SOCIETYROLE(FATHER) \
	SOCIETYROLE(LITTLE_SISTER) \
	SOCIETYROLE(LITTLE_BROTHER) \
	SOCIETYROLE(BIG_SISTER) \
	SOCIETYROLE(BIG_BROTHER) \
	SOCIETYROLE(MATERNAL_GRANDMOTHER) \
	SOCIETYROLE(MATERNAL_GRANDFATHER) \
	SOCIETYROLE(PATERNAL_GRANDMOTHER) \
	SOCIETYROLE(PATERNAL_GRANDFATHER) \
	SOCIETYROLE(MATERNAL_AUNT) \
	SOCIETYROLE(MATERNAL_UNCLE) \
	SOCIETYROLE(PATERNAL_AUNT) \
	SOCIETYROLE(PATERNAL_UNCLE) \
	SOCIETYROLE(MATERNAL_FEMALE_COUSIN) \
	SOCIETYROLE(MATERNAL_MALE_COUSIN) \
	SOCIETYROLE(PATERNAL_FEMALE_COUSIN) \
	SOCIETYROLE(PATERNAL_MALE_COUSIN) \
	\
	SOCIETYROLE(FEMALE_IN_INTERNET_SHALLOW_IMAGE_SITE) \
	SOCIETYROLE(  MALE_IN_INTERNET_SHALLOW_IMAGE_SITE) \
	SOCIETYROLE(FEMALE_IN_INTERNET_SHALLOW_REEL_VIDEO_SITE) \
	SOCIETYROLE(  MALE_IN_INTERNET_SHALLOW_REEL_VIDEO_SITE) \
	SOCIETYROLE(FEMALE_IN_INTERNET_SHALLOW_PUBLIC_MESSAGE_SITE) \
	SOCIETYROLE(  MALE_IN_INTERNET_SHALLOW_PUBLIC_MESSAGE_SITE) \
	SOCIETYROLE(FEMALE_IN_INTERNET_SHALLOW_VIDEO_STREAMING_SITE) \
	SOCIETYROLE(  MALE_IN_INTERNET_SHALLOW_VIDEO_STREAMING_SITE) \
	SOCIETYROLE(FEMALE_IN_INTERNET_MODERATE_FULL_PROFILE_SITE) \
	SOCIETYROLE(  MALE_IN_INTERNET_MODERATE_FULL_PROFILE_SITE) \
	SOCIETYROLE(FEMALE_IN_INTERNET_MODERATE_VIDEO_SITE) \
	SOCIETYROLE(  MALE_IN_INTERNET_MODERATE_VIDEO_SITE) \
	SOCIETYROLE(FEMALE_IN_INTERNET_PROFSSIONAL_INDUSTRY_SITE) \
	SOCIETYROLE(  MALE_IN_INTERNET_PROFSSIONAL_INDUSTRY_SITE) \
	SOCIETYROLE(FEMALE_IN_INTERNET_SOCIAL_MUSIC_SITE) \
	SOCIETYROLE(  MALE_IN_INTERNET_SOCIAL_MUSIC_SITE) \
	SOCIETYROLE(FEMALE_IN_INTERNET_SOCIAL_PROGRAMMING_SITE) \
	SOCIETYROLE(  MALE_IN_INTERNET_SOCIAL_PROGRAMMING_SITE) \
	SOCIETYROLE(FEMALE_IN_INTERNET_FORUM_MUSIC) \
	SOCIETYROLE(  MALE_IN_INTERNET_FORUM_MUSIC) \
	SOCIETYROLE(FEMALE_IN_INTERNET_FORUM_PROGRAMMING) \
	SOCIETYROLE(  MALE_IN_INTERNET_FORUM_PROGRAMMING) \
	SOCIETYROLE(FEMALE_IN_INTERNET_WEBSITE_READER) /* a person who reads a website */ \
	SOCIETYROLE(  MALE_IN_INTERNET_WEBSITE_READER) \
	SOCIETYROLE(FEMALE_IN_INTERNET_MUSIC_COOPERATION_SITE) \
	SOCIETYROLE(  MALE_IN_INTERNET_MUSIC_COOPERATION_SITE) \
	SOCIETYROLE(FEMALE_IN_INTERNET_PROGRAMMING_COOPERATION_SITE) \
	SOCIETYROLE(  MALE_IN_INTERNET_PROGRAMMING_COOPERATION_SITE) \
	\
	SOCIETYROLE(FEMALE_PEER_IN_MILITARY_SERVICE) \
	SOCIETYROLE(  MALE_PEER_IN_MILITARY_SERVICE) \
	SOCIETYROLE(FEMALE_SUPERIOR_IN_MILITARY_SERVICE) \
	SOCIETYROLE(  MALE_SUPERIOR_IN_MILITARY_SERVICE) \
	SOCIETYROLE(FEMALE_INFERIOR_IN_MILITARY_SERVICE) \
	SOCIETYROLE(  MALE_INFERIOR_IN_MILITARY_SERVICE) \
	\
	SOCIETYROLE(DAUGHTER) \
	SOCIETYROLE(SON) \
	SOCIETYROLE(FEMALE_RECRUITER_FOR_WORK) \
	SOCIETYROLE(  MALE_RECRUITER_FOR_WORK) \
	SOCIETYROLE(FEMALE_IN_INTERNET_REPUBLICAN_PUBLIC_MESSAGE_SITE) \
	SOCIETYROLE(  MALE_IN_INTERNET_REPUBLICAN_PUBLIC_MESSAGE_SITE) \
	SOCIETYROLE(FEMALE_IN_INTERNET_INFLUENCER_FOR_ART_AND_MUSIC) \
	SOCIETYROLE(  MALE_IN_INTERNET_INFLUENCER_FOR_ART_AND_MUSIC) \
	\
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_RIGHTS_OF_MUSIC_PRODUCERS) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_INTEREST_OF_MUSIC_PRODUCERS) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_RIGHTS_OF_MUSIC_COMPOSERS) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_INTEREST_OF_MUSIC_COMPOSERS) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_RIGHTS_OF_MUSIC_LYRICISTS) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_INTEREST_OF_MUSIC_LYRICISTS) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_RIGHTS_OF_MUSIC_PUBLISHERS) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_INTEREST_OF_MUSIC_PUBLISHERS) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_RIGHTS_OF_PERFORMING_ARTISTS) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_INTEREST_OF_PERFORMING_ARTISTS) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_RIGHTS_OF_RECORD_COMPANIES) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_INTEREST_OF_RECORD_COMPANIES) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_RIGHTS_OF_MUSIC_JOURNALISTS) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_INTEREST_OF_MUSIC_JOURNALISTS) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_RIGHTS_OF_MUSICIANS_AND_MUSIC_WORKERS) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_INTEREST_OF_MUSICIANS_AND_MUSIC_WORKERS) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_RIGHTS_OF_MUSIC_INDUSTRY) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_INTEREST_OF_MUSIC_INDUSTRY) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_RIGHTS_OF_MUSIC_EDUCATORS) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_INTEREST_OF_MUSIC_EDUCATORS) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_RIGHTS_OF_MUSIC_RECORD_ARCHIVERS) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_INTEREST_OF_MUSIC_RECORD_ARCHIVERS) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_RIGHTS_OF_ACCOUNTANTS_OF_MUSIC_PRODUCERS) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_INTEREST_OF_ACCOUNTANTS_OF_MUSIC_PRODUCERS) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_RIGHTS_OF_MUSIC_ARTIST_MANAGERS) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_INTEREST_OF_MUSIC_ARTIST_MANAGERS) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_RIGHTS_OF_MUSIC_CONSUMERS) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_INTEREST_OF_MUSIC_CONSUMERS) \
	\
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_RIGHTS_OF_COMPUTER_PROGRAMMERS) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_INTEREST_OF_COMPUTER_PROGRAMMERS) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_RIGHTS_OF_ACCOUNTANTS_OF_COMPUTER_PROGRAMMERS) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_INTEREST_OF_ACCOUNTANTS_OF_COMPUTER_PROGRAMMERS) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_RIGHTS_OF_SOFTWARE_COMPANIES) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_INTEREST_OF_SOFTWARE_COMPANIES) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_RIGHTS_OF_SOFTWARE_INDUSTRY) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_INTEREST_OF_SOFTWARE_INDUSTRY) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_RIGHTS_OF_SOFTWARE_PROJECT_MANAGERS) \
	SOCIETYROLE(REPRESENTATIVE_OF_THE_ORGANIZATION_FOR_INTEREST_OF_SOFTWARE_PROJECT_MANAGERS) \
	\
	SOCIETYROLE(ANGRY_PERSON_IN_THE_INTERNET) \
	SOCIETYROLE(EMPATHETIC_PERSON_IN_THE_INTERNET) \
	SOCIETYROLE(CURIOUS_PERSON_IN_THE_INTERNET) \
	SOCIETYROLE(ENTHUSIASTIC_PERSON_IN_THE_INTERNET) \
	SOCIETYROLE(SKEPTICAL_PERSON_IN_THE_INTERNET) \
	SOCIETYROLE(CONFUSED_PERSON_IN_THE_INTERNET) \
	SOCIETYROLE(EMOTIONAL_PERSON_IN_THE_INTERNET) \
	SOCIETYROLE(CRITICAL_PERSON_IN_THE_INTERNET) \
	SOCIETYROLE(MOTIVATIONAL_PERSON_IN_THE_INTERNET) \
	SOCIETYROLE(SUPPORTIVE_PERSON_IN_THE_INTERNET) \
	SOCIETYROLE(ANXIOUS_PERSON_IN_THE_INTERNET) \
	SOCIETYROLE(HUMOROUS_PERSON_IN_THE_INTERNET) \
	SOCIETYROLE(DEFENSIVE_PERSON_IN_THE_INTERNET) \
	SOCIETYROLE(OVERWHELMED_PERSON_IN_THE_INTERNET) \
	SOCIETYROLE(NOSTALGIC_PERSON_IN_THE_INTERNET) \
	SOCIETYROLE(OBJECTIVE_PERSON_IN_THE_INTERNET) \



enum {
	#define SOCIETYROLE(x) SOCIETYROLE_##x,
	SOCIETYROLE_LIST
	#undef SOCIETYROLE
	
	SOCIETYROLE_COUNT
};

String GetSocietyRoleEnum(int i);
String GetSocietyRoleKey(int i);
String GetSocietyRoleDescription(int i);


// TODO move to a file
#define SOCIETYROLE_SCORE_LIST \
	SOCIETYROLE_SCORE(FAMILY_CHOSEN_BY_ME) \
	SOCIETYROLE_SCORE(FAMILY_CAUSED_BY_MY_PARENTS) \
	SOCIETYROLE_SCORE(GENERAL_PUBLIC) \
	SOCIETYROLE_SCORE(EMOTIONAL_PEOPLE) \
	SOCIETYROLE_SCORE(REPRESENTATIVE_FOR_RIGHTS_OF_SOMEONE) \
	\
	SOCIETYROLE_SCORE(REPRESENTATIVE_FOR_INTEREST_OF_SOMEONE) \
	SOCIETYROLE_SCORE(FEMALE) \
	SOCIETYROLE_SCORE(MALE) \
	SOCIETYROLE_SCORE(MUSIC_RELATED) \
	SOCIETYROLE_SCORE(COMPUTER_RELATED) \
	\
	SOCIETYROLE_SCORE(WORK_RELATED) \
	SOCIETYROLE_SCORE(MILTARY_RANK_RELATED) \
	SOCIETYROLE_SCORE(SHALLOWNESS) \
	SOCIETYROLE_SCORE(PROFESSIONALISM) \


enum {
	#define SOCIETYROLE_SCORE(x) SOCIETYROLE_SCORE_##x,
	SOCIETYROLE_SCORE_LIST
	#undef SOCIETYROLE_SCORE
	
	SOCIETYROLE_SCORE_COUNT
};

String GetSocietyRoleScoreKey(int i);
String GetSocietyRoleScoreEnum(int i);

enum {
	BIOSCORE_EMPATHY,
	BIOSCORE_ATTRACTION,
	BIOSCORE_VALUE,
	BIOSCORE_LEADERSHIP,
	
	BIOSCORE_COUNT
};

enum {
	PLATDESC_MODE_FINAL,
	PLATDESC_MODE_FINAL_DIALECT,
	PLATDESC_MODE_FINAL_TRANSLATED,
	PLATDESC_MODE_FINAL_TRANSLATED_DIALECT,
	
	PLATDESC_MODE_COUNT,
};

enum {
	PLATDESC_LEN_FULL,
	PLATDESC_LEN_1280_CHARS,
	PLATDESC_LEN_160_CHARS,
	PLATDESC_LEN_40_CHARS,
	
	PLATDESC_LEN_COUNT,
};

String GetPlatformDescriptionModeKey(int i);
String GetPlatformDescriptionLengthKey(int i);
int GetPlatformDescriptionLength(int i);

// TODO move to a file
enum {
	PLATFORM_EMAIL,
	PLATFORM_TWITTER,
	PLATFORM_THREADS,
	PLATFORM_FACEBOOK,
	PLATFORM_INSTAGRAM,
	
	PLATFORM_TIKTOK,
	PLATFORM_GETTR,
	PLATFORM_LINKEDIN,
	PLATFORM_SOUNDCLOUD,
	PLATFORM_MUSIC_DISTRIBUTOR, // e.g. distrokid
	
	
	PLATFORM_YOUTUBE,
	PLATFORM_VK,
	PLATFORM_REDDIT,
	PLATFORM_FORUM,
	PLATFORM_BLOGGER,
	
	PLATFORM_WEBSITE,
	PLATFORM_TWITCH,
	PLATFORM_STUMBLE,
	PLATFORM_GITHUB,
	PLATFORM_MYSPACE,
	
	
	PLATFORM_MIKSERINET,
	PLATFORM_IRCGALLERIA,
	PLATFORM_DISCORD,
	PLATFORM_MUKKEN,
	PLATFORM_BANDCAMP,
	
	PLATFORM_REMOTEMORE,
	PLATFORM_KUVAKENET,
	PLATFORM_REVERBNATION,
	PLATFORM_SONICBIDS,
	PLATFORM_MUSICGATEWAY,
	
	
	PLATFORM_INDIEONTHEMOVE,
	PLATFORM_VOWAVE, // vowave.com
	PLATFORM_AUDIUS, // audius.co
	PLATFORM_SONGTRADR, // songtradr.com
	PLATFORM_GROOVER, // groover.co
	
	PLATFORM_AIRPLAYDIRECT,
	PLATFORM_N1M, // n1m.com
	PLATFORM_SOUNDBETTER, // soundbetter.com
	PLATFORM_ABOUTME, // about.me
	PLATFORM_FIVERR, // fiverr.com
	
	
	PLATFORM_THEDOTS, // the-dots.com
	PLATFORM_CONSTANTCONTACT, // constantcontact.com
	PLATFORM_MUUSIKOIDEN_NET,
	PLATFORM_PODCAST,
	PLATFORM_TINDER,
	
	PLATFORM_PATREON,
	PLATFORM_LOCALS,
	
	// Add these!
	// PLATFORM_MUSOSOUP // musosoup.com
	// PLATFORM_UPCOMINGSOUNDS // upcomingsounds.com
	
	// Don't add these...
	// PLATFORM_SOUNDMASH, // soundmash.me
	// PLATFORM_INSTRUMENTAL, // https://weareinstrumental.com/
	// PLATFORM_DISCOGS, // discogs.com
	// PLATFORM_ALLMUSIC, // allmusic.com
	
	
	PLATFORM_COUNT
};


#define PLATFORM_PROFILE_LIST \
	PLATFORM_PROFILE(ANY) \
	PLATFORM_PROFILE(MUSIC_ARTIST) \
	PLATFORM_PROFILE(VISUAL_ARTIST) \
	PLATFORM_PROFILE(PHOTOGRAPHER) \
	PLATFORM_PROFILE(REAL_PERSON) \
	
enum {
	#define PLATFORM_PROFILE(x) PLATFORM_PROFILE_##x,
	PLATFORM_PROFILE_LIST
	#undef PLATFORM_PROFILE
	
	PLATFORM_PROFILE_COUNT,
};

const char* GetPlatformProfileEnum(int i);
String GetPlatformProfileKey(int i);

#define PLATFORM_ATTR_LIST \
	PLATFORM_ATTR(TITLE) \
	PLATFORM_ATTR(MESSAGE) \
	PLATFORM_ATTR(HASHTAGS) \
	PLATFORM_ATTR(AUDIO) \
	PLATFORM_ATTR(MUSIC) \
	PLATFORM_ATTR(VIDEO) \
	PLATFORM_ATTR(REEL) \
	PLATFORM_ATTR(IMAGE) \
	PLATFORM_ATTR(LINK_PROMOTION) \
	PLATFORM_ATTR(COMMENTS) \
	PLATFORM_ATTR(COMMENT_SELF_PROMOTION_HACK) \
	PLATFORM_ATTR(DESCRIPTION) \
	PLATFORM_ATTR(PROFILE_IMAGE) \
	PLATFORM_ATTR(MUSIC_COVER) \
	PLATFORM_ATTR(Q_AND_A) \
	PLATFORM_ATTR(Q_AND_A_HACK) \
	PLATFORM_ATTR(TESTIMONIAL_HACK) \


enum {
	#define PLATFORM_ATTR(x) PLATFORM_ATTR_##x,
	PLATFORM_ATTR_LIST
	#undef PLATFORM_ATTR
	
	PLATFORM_ATTR_COUNT,
};

const char* GetPlatformAttrEnum(int i);
String GetPlatformAttrKey(int i);


enum {
	TIME_ACCURACY_NONE,
	TIME_ACCURACY_DATE,
	TIME_ACCURACY_TIME,
	
	TIME_ACCURACY_COUNT,
};


END_UPP_NAMESPACE

#endif
