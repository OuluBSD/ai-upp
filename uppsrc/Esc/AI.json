{
	"saved_hash": "9d4a44fcf8a812000c1c1a30541733248ce3d245",
	"files": [
		{
			"key": "Esc.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_ESC_ESC_H_",
						"t": "",
						"i": "_ESC_ESC_H_",
						"r": "_ESC_ESC_H_",
						"s": "",
						"u": "_ESC_ESC_H_",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "19e1d58ca8084b40ad3e12360c82403e9d3169e6"
							}
						]
					},
					{
						"k": 5,
						"d": true,
						"iv": false,
						"is": false,
						"n": "EscTypeKind",
						"t": "Upp::EscTypeKind",
						"i": "Upp::EscTypeKind",
						"r": "enum EscTypeKind",
						"s": "Upp",
						"u": "ESCTYPEKIND",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "626db51e4ccecc8f61f9f44bf998080b4d5716b6"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_VOID",
						"t": "Upp::EscTypeKind",
						"i": "Upp::ESC_VOID",
						"r": "ESC_VOID",
						"s": "Upp",
						"u": "ESC_VOID",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1493164e1d871a727101906fc87b301fd481deda"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_DOUBLE",
						"t": "Upp::EscTypeKind",
						"i": "Upp::ESC_DOUBLE",
						"r": "ESC_DOUBLE",
						"s": "Upp",
						"u": "ESC_DOUBLE",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "74a34a2256456622a0126555a5e0c037f05ff6d5"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_ARRAY",
						"t": "Upp::EscTypeKind",
						"i": "Upp::ESC_ARRAY",
						"r": "ESC_ARRAY",
						"s": "Upp",
						"u": "ESC_ARRAY",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c0dfb8b2a3fe3aa242c39d27ec233c8964d2d665"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_MAP",
						"t": "Upp::EscTypeKind",
						"i": "Upp::ESC_MAP",
						"r": "ESC_MAP",
						"s": "Upp",
						"u": "ESC_MAP",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f744f2c0c3b8958b1f627abb02a7be43381dca89"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_LAMBDA",
						"t": "Upp::EscTypeKind",
						"i": "Upp::ESC_LAMBDA",
						"r": "ESC_LAMBDA",
						"s": "Upp",
						"u": "ESC_LAMBDA",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f5c48b70900801f5c9f00df9a09b13889193dacc"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_INT64",
						"t": "Upp::EscTypeKind",
						"i": "Upp::ESC_INT64",
						"r": "ESC_INT64",
						"s": "Upp",
						"u": "ESC_INT64",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d7267f5147b8dd6a7d9101fe7d6ffa1c57c9dadd"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "EscTypeName",
						"t": "String (int)",
						"i": "Upp::EscTypeName(int)",
						"r": "String EscTypeName(int sv_type)",
						"s": "Upp",
						"u": "ESCTYPENAME",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9057b9bc3d48b62f5abb7e6c67569c36be077f53"
							}
						]
					},
					{
						"k": 2,
						"d": false,
						"iv": false,
						"is": false,
						"n": "EscEscape",
						"t": "Upp::EscEscape",
						"i": "Upp::EscEscape",
						"r": "EscEscape",
						"s": "Upp",
						"u": "ESCESCAPE",
						"q": "Upp::EscEscape",
						"w": "UPP::ESCESCAPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "400920d8bb554051ef957510631e9e0098c43314"
							}
						]
					},
					{
						"k": 4,
						"d": false,
						"iv": false,
						"is": false,
						"n": "EscLambda",
						"t": "Upp::EscLambda",
						"i": "Upp::EscLambda",
						"r": "EscLambda",
						"s": "Upp",
						"u": "ESCLAMBDA",
						"q": "Upp::EscLambda",
						"w": "UPP::ESCLAMBDA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dad75a02bd567cc1510db45832e17392cc3df988"
							}
						]
					},
					{
						"k": 2,
						"d": false,
						"iv": false,
						"is": false,
						"n": "EscHandle",
						"t": "Upp::EscHandle",
						"i": "Upp::EscHandle",
						"r": "EscHandle",
						"s": "Upp",
						"u": "ESCHANDLE",
						"q": "Upp::EscHandle",
						"w": "UPP::ESCHANDLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "83a5adf746467db59e94d7ff3694fd46a373bbe2"
							}
						]
					},
					{
						"k": 2,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Esc",
						"t": "Upp::Esc",
						"i": "Upp::Esc",
						"r": "Esc",
						"s": "Upp",
						"u": "ESC",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4e92e152917d1b6e25a2b88057d759b81b6a6125"
							}
						]
					},
					{
						"k": 4,
						"d": true,
						"iv": false,
						"is": false,
						"n": "EscValue",
						"t": "Upp::EscValue",
						"i": "Upp::EscValue",
						"r": "EscValue : Moveable<EscValue>",
						"s": "Upp",
						"u": "ESCVALUE",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "Upp::Moveable",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "579557c5c325f27044e02309a1a6b77194515cab"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "RefCount",
						"t": "Upp::EscValue::RefCount",
						"i": "Upp::EscValue::RefCount",
						"r": "RefCount",
						"s": "Upp",
						"u": "REFCOUNT",
						"q": "Upp::EscValue::RefCount",
						"w": "UPP::ESCVALUE::REFCOUNT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "aae7cc8e9590deb4ce4a8698711efd1692cf9ea9"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "refcount",
						"t": "Atomic",
						"i": "Upp::EscValue::RefCount::refcount",
						"r": "Atomic refcount",
						"s": "Upp",
						"u": "REFCOUNT",
						"q": "Upp::EscValue::RefCount",
						"w": "UPP::ESCVALUE::REFCOUNT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b9402e14b750fcfc18c28b3654970812aeef9714"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "RefCount",
						"t": "void ()",
						"i": "Upp::EscValue::RefCount::RefCount()",
						"r": "RefCount()",
						"s": "Upp",
						"u": "REFCOUNT",
						"q": "Upp::EscValue::RefCount",
						"w": "UPP::ESCVALUE::REFCOUNT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ec06a692aac54d226bc9921796258c8c069e4baa"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "type",
						"t": "int",
						"i": "Upp::EscValue::type",
						"r": "int type",
						"s": "Upp",
						"u": "TYPE",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "95a40036426410741ec133b1d4be17b5f5bc0d58"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "hash",
						"t": "hash_t",
						"i": "Upp::EscValue::hash",
						"r": "mutable hash_t hash",
						"s": "Upp",
						"u": "HASH",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e90ee16f5942d5c956529e3aedd52b21ed7d068d"
							}
						]
					},
					{
						"k": 2,
						"d": false,
						"iv": false,
						"is": false,
						"n": "EscMap",
						"t": "Upp::EscValue::EscMap",
						"i": "Upp::EscValue::EscMap",
						"r": "EscMap",
						"s": "Upp",
						"u": "ESCMAP",
						"q": "Upp::EscValue::EscMap",
						"w": "UPP::ESCVALUE::ESCMAP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "469651e6b6995a2b726618b4d9b203fa54a4d93c"
							}
						]
					},
					{
						"k": 2,
						"d": false,
						"iv": false,
						"is": false,
						"n": "EscArray",
						"t": "Upp::EscValue::EscArray",
						"i": "Upp::EscValue::EscArray",
						"r": "EscArray",
						"s": "Upp",
						"u": "ESCARRAY",
						"q": "Upp::EscValue::EscArray",
						"w": "UPP::ESCVALUE::ESCARRAY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e767b3b1160ba5ba896b722e6c39d143b6b1a68c"
							}
						]
					},
					{
						"k": 3,
						"d": true,
						"iv": false,
						"is": false,
						"n": "(anonymous union at C:\\Users\\sblo\\ai-upp\\uppsrc\\Esc\\Esc.h:30:2)",
						"t": "Upp::EscValue::(anonymous union at C:\\Users\\sblo\\ai-upp\\uppsrc\\Esc\\Esc.h:30:2)",
						"i": "Upp::EscValue::(anonymous at C:\\Users\\sblo\\ai-upp\\uppsrc\\Esc\\Esc.)",
						"r": "",
						"s": "Upp",
						"u": "(ANONYMOUS UNION AT C:\\USERS\\SBLO\\AI-UPP\\UPPSRC\\ESC\\ESC.H:30:2)",
						"q": "(anonymous union at C:\\Users\\sblo\\ai-upp\\uppsrc\\Esc\\Esc.h:30:2)",
						"w": "(ANONYMOUS UNION AT C:\\USERS\\SBLO\\AI-UPP\\UPPSRC\\ESC\\ESC.H:30:2)",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "317d06215de61ec41d2e84b8b359ff5cdd572dab"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "number",
						"t": "double",
						"i": "Upp::EscValue::number",
						"r": "double number",
						"s": "Upp",
						"u": "NUMBER",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6b88717b23c5be4ae14b0d1164ffd0143fa46a86"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "i64",
						"t": "int64",
						"i": "Upp::EscValue::i64",
						"r": "int64 i64",
						"s": "Upp",
						"u": "I64",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "23486d21840f00fb0a0476cbbe22fc346ab69ce2"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "array",
						"t": "EscArray *",
						"i": "Upp::EscValue::array",
						"r": "EscArray *array",
						"s": "Upp",
						"u": "ARRAY",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3f6b700f078fe2ca292e1038fe41d4f8e402ead3"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "map",
						"t": "EscMap *",
						"i": "Upp::EscValue::map",
						"r": "EscMap *map",
						"s": "Upp",
						"u": "MAP",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "278511a063b6ff7f1cac74d9f788ba50afb01956"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "lambda",
						"t": "EscLambda *",
						"i": "Upp::EscValue::lambda",
						"r": "EscLambda *lambda",
						"s": "Upp",
						"u": "LAMBDA",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ce4410e7c6c6ffd6e6e29167cda1bc1a55b73522"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Free",
						"t": "void ()",
						"i": "Upp::EscValue::Free()",
						"r": "void Free()",
						"s": "Upp",
						"u": "FREE",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fa14dbd0b5045b9fdbea3150c65174b7459e5a54"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Assign",
						"t": "void (const EscValue &)",
						"i": "Upp::EscValue::Assign(const EscValue&)",
						"r": "void Assign(const EscValue& s)",
						"s": "Upp",
						"u": "ASSIGN",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f8d6c4b7c40889e25fd2ebbec45ad9ecbd1383d3"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "InitString",
						"t": "void (const WString &)",
						"i": "Upp::EscValue::InitString(const WString&)",
						"r": "void InitString(const WString& w)",
						"s": "Upp",
						"u": "INITSTRING",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "794d7aecfdda765868eabc0a6e576059e68089d6"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "CloneArray",
						"t": "Vector<EscValue> &()",
						"i": "Upp::EscValue::CloneArray()",
						"r": "Vector<EscValue>& CloneArray()",
						"s": "Upp",
						"u": "CLONEARRAY",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "690dfb80b73d7723ab685700e18df9ba257e50c9"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "CloneMap",
						"t": "VectorMap<EscValue, EscValue> &()",
						"i": "Upp::EscValue::CloneMap()",
						"r": "VectorMap<EscValue, EscValue>& CloneMap()",
						"s": "Upp",
						"u": "CLONEMAP",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d3cbd611faad5bbacf5a8a0238b4979e75c0ea77"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": true,
						"n": "total",
						"t": "int",
						"i": "Upp::EscValue::total",
						"r": "static int total",
						"s": "Upp",
						"u": "TOTAL",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c52a19d7e01eb11e1ba7b16402906ba4435b5ddb"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": true,
						"n": "max_total",
						"t": "int",
						"i": "Upp::EscValue::max_total",
						"r": "static int max_total",
						"s": "Upp",
						"u": "MAX_TOTAL",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6c7257f5ac1f70f0120e95b73ad7001e26365aa8"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": true,
						"n": "GetTotalCount",
						"t": "int ()",
						"i": "Upp::EscValue::GetTotalCount()",
						"r": "static int GetTotalCount()",
						"s": "Upp",
						"u": "GETTOTALCOUNT",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9a4866568c820809d0c3d0ffbe778e5a8a41a8e8"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": true,
						"n": "SetMaxTotalCount",
						"t": "void (int)",
						"i": "Upp::EscValue::SetMaxTotalCount(int)",
						"r": "static void SetMaxTotalCount(int n)",
						"s": "Upp",
						"u": "SETMAXTOTALCOUNT",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b0a5491bdf89947650d5f05abc589780cb93b515"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": true,
						"n": "GetMaxTotalCount",
						"t": "int ()",
						"i": "Upp::EscValue::GetMaxTotalCount()",
						"r": "static int GetMaxTotalCount()",
						"s": "Upp",
						"u": "GETMAXTOTALCOUNT",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "db709caf9b04dc3bc86a3296785f5754eef81f4e"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "IsVoid",
						"t": "bool () const",
						"i": "Upp::EscValue::IsVoid()const",
						"r": "bool IsVoid() const",
						"s": "Upp",
						"u": "ISVOID",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6ae7ee6b83bc2feffe253d8edfd90e63b76a5043"
							}
						]
					},
					{
						"k": 24,
						"d": false,
						"iv": false,
						"is": false,
						"n": "EscValue",
						"t": "void ()",
						"i": "Upp::EscValue::EscValue()",
						"r": "EscValue()",
						"s": "Upp",
						"u": "ESCVALUE",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "09c78c2341da536817fbc0a897c24682fb18eaf8"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "IsNumber",
						"t": "bool () const",
						"i": "Upp::EscValue::IsNumber()const",
						"r": "bool IsNumber() const",
						"s": "Upp",
						"u": "ISNUMBER",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e2737b4b241053a0d28c4192f0dd9dfac1731774"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "GetNumber",
						"t": "double () const",
						"i": "Upp::EscValue::GetNumber()const",
						"r": "double GetNumber() const",
						"s": "Upp",
						"u": "GETNUMBER",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "09615aec39dba63f53c6e83de28fd976c9161523"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "IsInt64",
						"t": "bool () const",
						"i": "Upp::EscValue::IsInt64()const",
						"r": "bool IsInt64() const",
						"s": "Upp",
						"u": "ISINT64",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "906514107da51791674127133c519aaf20905611"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "GetInt64",
						"t": "int64 () const",
						"i": "Upp::EscValue::GetInt64()const",
						"r": "int64 GetInt64() const",
						"s": "Upp",
						"u": "GETINT64",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8419b471d2093fbb1279c4040d60e901cd3c744b"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "IsInt",
						"t": "bool () const",
						"i": "Upp::EscValue::IsInt()const",
						"r": "bool IsInt() const",
						"s": "Upp",
						"u": "ISINT",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "361c88e32c4075229f3f39192ab8db4b9c0d9bdb"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "GetInt",
						"t": "int () const",
						"i": "Upp::EscValue::GetInt()const",
						"r": "int GetInt() const",
						"s": "Upp",
						"u": "GETINT",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "82916dabb54fbd51d341a4958f12c0324ba9111f"
							}
						]
					},
					{
						"k": 24,
						"d": false,
						"iv": false,
						"is": false,
						"n": "EscValue",
						"t": "void (double)",
						"i": "Upp::EscValue::EscValue(double)",
						"r": "EscValue(double n)",
						"s": "Upp",
						"u": "ESCVALUE",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5a54833e69775c5aca2d4599739dd8b20a70713b"
							}
						]
					},
					{
						"k": 24,
						"d": false,
						"iv": false,
						"is": false,
						"n": "EscValue",
						"t": "void (int64)",
						"i": "Upp::EscValue::EscValue(int64)",
						"r": "EscValue(int64 n)",
						"s": "Upp",
						"u": "ESCVALUE",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fab5608cf2a2f496764a8990bb2a173fc2ba729a"
							}
						]
					},
					{
						"k": 24,
						"d": false,
						"iv": false,
						"is": false,
						"n": "EscValue",
						"t": "void (int)",
						"i": "Upp::EscValue::EscValue(int)",
						"r": "EscValue(int n)",
						"s": "Upp",
						"u": "ESCVALUE",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ad24245bd5a325922b429ab63f4ecb5e56e53147"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "IsArray",
						"t": "bool () const",
						"i": "Upp::EscValue::IsArray()const",
						"r": "bool IsArray() const",
						"s": "Upp",
						"u": "ISARRAY",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "921f4f58016121367ad69e4102ded393304e852e"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "GetArray",
						"t": "const Vector<EscValue> &() const",
						"i": "Upp::EscValue::GetArray()const",
						"r": "const Vector<EscValue>& GetArray() const",
						"s": "Upp",
						"u": "GETARRAY",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a95d81d5e13238ea566725c0bad7427a4d298ddd"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "ArrayGet",
						"t": "EscValue (int) const",
						"i": "Upp::EscValue::ArrayGet(int)const",
						"r": "EscValue ArrayGet(int i) const",
						"s": "Upp",
						"u": "ARRAYGET",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f1d0ca28d6a62bca511ceed493e0c52cb86299c2"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "ArrayGet",
						"t": "EscValue (int, int) const",
						"i": "Upp::EscValue::ArrayGet(int,int)const",
						"r": "EscValue ArrayGet(int i, int n) const",
						"s": "Upp",
						"u": "ARRAYGET",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c1673ffa1a1364f865ac945e82b33dfea7576b13"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "ArraySet",
						"t": "bool (int, EscValue)",
						"i": "Upp::EscValue::ArraySet(int,EscValue)",
						"r": "bool ArraySet(int i, EscValue val)",
						"s": "Upp",
						"u": "ARRAYSET",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "595c45f0cc4d76b7bd4c8473c92a4438970ff2f3"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Replace",
						"t": "bool (int, int, EscValue)",
						"i": "Upp::EscValue::Replace(int,int,EscValue)",
						"r": "bool Replace(int i, int n, EscValue a)",
						"s": "Upp",
						"u": "REPLACE",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "415b17b45a98f629ec1495870d077beda0369c61"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "SetEmptyArray",
						"t": "void ()",
						"i": "Upp::EscValue::SetEmptyArray()",
						"r": "void SetEmptyArray()",
						"s": "Upp",
						"u": "SETEMPTYARRAY",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6962debb169f0ba3af532639bcd364b7190eaaa1"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "ArrayAdd",
						"t": "void (EscValue)",
						"i": "Upp::EscValue::ArrayAdd(EscValue)",
						"r": "void ArrayAdd(EscValue val)",
						"s": "Upp",
						"u": "ARRAYADD",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8e2fab24c3ff6ce74e99d4d9bdd553c877b26180"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Append",
						"t": "bool (EscValue)",
						"i": "Upp::EscValue::Append(EscValue)",
						"r": "bool Append(EscValue a)",
						"s": "Upp",
						"u": "APPEND",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "709e29379e8ad41afb23c17e1e343ef6ed95836d"
							}
						]
					},
					{
						"k": 26,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator WString",
						"t": "WString () const",
						"i": "Upp::EscValue::operator WString()const",
						"r": "operator WString() const",
						"s": "Upp",
						"u": "OPERATOR WSTRING",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f3d06813231e034a40d83d04c4c4ba4a5a686666"
							}
						]
					},
					{
						"k": 26,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator String",
						"t": "String () const",
						"i": "Upp::EscValue::operator String()const",
						"r": "operator String() const",
						"s": "Upp",
						"u": "OPERATOR STRING",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "56ba9e7ea92bea5393d245bc75a71b8d61402965"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "EscValue",
						"t": "void (const char *)",
						"i": "Upp::EscValue::EscValue(const char*)",
						"r": "EscValue(const char *s)",
						"s": "Upp",
						"u": "ESCVALUE",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9659be67750c12d3df325e0d007ad17d8601128d"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "EscValue",
						"t": "void (const WString &)",
						"i": "Upp::EscValue::EscValue(const WString&)",
						"r": "EscValue(const WString& s)",
						"s": "Upp",
						"u": "ESCVALUE",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b0387c391199b06d57011482c1dfb91a1c429c58"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "EscValue",
						"t": "void (const String &)",
						"i": "Upp::EscValue::EscValue(const String&)",
						"r": "EscValue(const String& s)",
						"s": "Upp",
						"u": "ESCVALUE",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "74bc98ed63d87412bd3d23a55b629729edf1b730"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "IsMap",
						"t": "bool () const",
						"i": "Upp::EscValue::IsMap()const",
						"r": "bool IsMap() const",
						"s": "Upp",
						"u": "ISMAP",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3fa1563b703b56f85477e0dfa1f4a7d94ec9fed8"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "GetMap",
						"t": "const VectorMap<EscValue, EscValue> &() const",
						"i": "Upp::EscValue::GetMap()const",
						"r": "const VectorMap<EscValue, EscValue>& GetMap() const",
						"s": "Upp",
						"u": "GETMAP",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "365571118b0381dc3ea9498b9152552e6f966c17"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "MapGet",
						"t": "EscValue (EscValue) const",
						"i": "Upp::EscValue::MapGet(EscValue)const",
						"r": "EscValue MapGet(EscValue key) const",
						"s": "Upp",
						"u": "MAPGET",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ec4df5973eb8886919531006e7252e9f824d92d7"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "MapSet",
						"t": "void (EscValue, EscValue)",
						"i": "Upp::EscValue::MapSet(EscValue,EscValue)",
						"r": "void MapSet(EscValue key, EscValue value)",
						"s": "Upp",
						"u": "MAPSET",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1fb70dd8ee4b64053cc5887cc4fff0a5aaa061e5"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "SetEmptyMap",
						"t": "void ()",
						"i": "Upp::EscValue::SetEmptyMap()",
						"r": "void SetEmptyMap()",
						"s": "Upp",
						"u": "SETEMPTYMAP",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e8d4c922e3e96e0bd732533eb6fefb24a1dd2684"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "IsLambda",
						"t": "bool () const",
						"i": "Upp::EscValue::IsLambda()const",
						"r": "bool IsLambda() const",
						"s": "Upp",
						"u": "ISLAMBDA",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cbd481a04d1ecd3dd70fc5b36a835918c6d54665"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "GetLambda",
						"t": "const EscLambda &() const",
						"i": "Upp::EscValue::GetLambda()const",
						"r": "const EscLambda& GetLambda() const",
						"s": "Upp",
						"u": "GETLAMBDA",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5170b4733af0528762de8bef30aece9eef6c55fb"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "CreateLambda",
						"t": "EscLambda &()",
						"i": "Upp::EscValue::CreateLambda()",
						"r": "EscLambda& CreateLambda()",
						"s": "Upp",
						"u": "CREATELAMBDA",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b58eb4868e74fa004a6a80d22759ac955c53a15f"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Escape",
						"t": "void (const char *, Event<EscEscape &>)",
						"i": "Upp::EscValue::Escape(const char*,Event)",
						"r": "void Escape(const char *method, Event<EscEscape&> escape)",
						"s": "Upp",
						"u": "ESCAPE",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bf6052fa4af000c29cc7dbcd8a8aaaecadf3a84c"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Escape",
						"t": "void (const char *, EscHandle *, Event<EscEscape &>)",
						"i": "Upp::EscValue::Escape(const char*,EscHandle*,Event)",
						"r": "void Escape(const char *method, EscHandle *h, Event<EscEscape&> escape)",
						"s": "Upp",
						"u": "ESCAPE",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "866ddd41c3d8ba88cc5540e370ac9134d2b9ddd5"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "HasNumberField",
						"t": "bool (const char *) const",
						"i": "Upp::EscValue::HasNumberField(const char*)const",
						"r": "bool HasNumberField(const char *id) const",
						"s": "Upp",
						"u": "HASNUMBERFIELD",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6eb556adefa70b1b3ce8449edc248a930bac0cce"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "GetFieldInt",
						"t": "int (const char *) const",
						"i": "Upp::EscValue::GetFieldInt(const char*)const",
						"r": "int GetFieldInt(const char *id) const",
						"s": "Upp",
						"u": "GETFIELDINT",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b77115cdb59fc2165058cd732d126fc5822f316f"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "GetType",
						"t": "int () const",
						"i": "Upp::EscValue::GetType()const",
						"r": "int GetType() const",
						"s": "Upp",
						"u": "GETTYPE",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f326e1aa5b59e3a41d6a1502aebf2c025d427160"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "GetTypeName",
						"t": "String () const",
						"i": "Upp::EscValue::GetTypeName()const",
						"r": "String GetTypeName() const",
						"s": "Upp",
						"u": "GETTYPENAME",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "572700506b6f1e1e99b7e43c6a9a7ee983f9c0d5"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "GetCount",
						"t": "int () const",
						"i": "Upp::EscValue::GetCount()const",
						"r": "int GetCount() const",
						"s": "Upp",
						"u": "GETCOUNT",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "03308607138625f7e4e198ad5e223198735af9e4"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "GetHashValue",
						"t": "hash_t () const",
						"i": "Upp::EscValue::GetHashValue()const",
						"r": "hash_t GetHashValue() const",
						"s": "Upp",
						"u": "GETHASHVALUE",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "274814bc0fca9ae376b2845fc8051e2b8f4d1dfd"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator==",
						"t": "bool (const EscValue &) const",
						"i": "Upp::EscValue::operator==(const EscValue&)const",
						"r": "bool operator",
						"s": "Upp",
						"u": "OPERATOR==",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ce8c2a946376dc9d37a8d831e72a62169df351c8"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator!=",
						"t": "bool (const EscValue &) const",
						"i": "Upp::EscValue::operator!=(const EscValue&)const",
						"r": "bool operator!",
						"s": "Upp",
						"u": "OPERATOR!=",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "60a38e63ad2bea381834dc866e0c0024268c48b7"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "ToString",
						"t": "String (int, int, bool, int) const",
						"i": "Upp::EscValue::ToString(int,int,bool,int)const",
						"r": "String ToString(int maxlen = 2147483647, int indent_step = 4, bool hex = false, int indent = 0) const",
						"s": "Upp",
						"u": "TOSTRING",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c7190eb4b97080c8e35bf8ef0d6c903083962b17"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator=",
						"t": "EscValue &(const EscValue &)",
						"i": "Upp::EscValue::operator=(const EscValue&)",
						"r": "EscValue& operator",
						"s": "Upp",
						"u": "OPERATOR=",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9f70aaae80d8f9caa0ffa475c3d9b0586c71db51"
							}
						]
					},
					{
						"k": 24,
						"d": false,
						"iv": false,
						"is": false,
						"n": "EscValue",
						"t": "void (const EscValue &)",
						"i": "Upp::EscValue::EscValue(const EscValue&)",
						"r": "EscValue(const EscValue& src)",
						"s": "Upp",
						"u": "ESCVALUE",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ded8d8485298d0cfe397ebaad0c41be9ce8f70f2"
							}
						]
					},
					{
						"k": 25,
						"d": false,
						"iv": false,
						"is": false,
						"n": "~EscValue",
						"t": "void () noexcept",
						"i": "Upp::EscValue::~()",
						"r": "~EscValue()",
						"s": "Upp",
						"u": "~ESCVALUE",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b816c1c9bdcedc00bd09c0b84e643bd9992690cf"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "EscArray",
						"t": "Upp::EscValue::EscArray",
						"i": "Upp::EscValue::EscArray",
						"r": "EscValue::EscArray : EscValue::RefCount",
						"s": "Upp",
						"u": "ESCARRAY",
						"q": "Upp::EscValue::EscArray",
						"w": "UPP::ESCVALUE::ESCARRAY",
						"y": "Upp::EscValue::RefCount",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0a33a2a69475e9c0b79b15fa354cb57f71d8c3d0"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "array",
						"t": "Vector<EscValue>",
						"i": "Upp::EscValue::EscArray::array",
						"r": "Vector<EscValue> array",
						"s": "Upp",
						"u": "ARRAY",
						"q": "Upp::EscValue::EscArray",
						"w": "UPP::ESCVALUE::ESCARRAY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e6ef5c948174a30d07d1f917283eb9507d690142"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Retain",
						"t": "void ()",
						"i": "Upp::EscValue::EscArray::Retain()",
						"r": "void Retain()",
						"s": "Upp",
						"u": "RETAIN",
						"q": "Upp::EscValue::EscArray",
						"w": "UPP::ESCVALUE::ESCARRAY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ac1b50c9317b38681cc387e0ee33fd7988ddf717"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Release",
						"t": "void ()",
						"i": "Upp::EscValue::EscArray::Release()",
						"r": "void Release()",
						"s": "Upp",
						"u": "RELEASE",
						"q": "Upp::EscValue::EscArray",
						"w": "UPP::ESCVALUE::ESCARRAY",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e17bba4ed054d6d831cbfee549b7e070f03035d5"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "EscMap",
						"t": "Upp::EscValue::EscMap",
						"i": "Upp::EscValue::EscMap",
						"r": "EscValue::EscMap : EscValue::RefCount",
						"s": "Upp",
						"u": "ESCMAP",
						"q": "Upp::EscValue::EscMap",
						"w": "UPP::ESCVALUE::ESCMAP",
						"y": "Upp::EscValue::RefCount",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4ac67bd2e5d7f4d94b8cdf32132c8ce419084d54"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "map",
						"t": "VectorMap<EscValue, EscValue>",
						"i": "Upp::EscValue::EscMap::map",
						"r": "VectorMap<EscValue, EscValue> map",
						"s": "Upp",
						"u": "MAP",
						"q": "Upp::EscValue::EscMap",
						"w": "UPP::ESCVALUE::ESCMAP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9a4d085f8a40f1546de381f98a34b5ccbb8f48a7"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "count",
						"t": "int",
						"i": "Upp::EscValue::EscMap::count",
						"r": "int count",
						"s": "Upp",
						"u": "COUNT",
						"q": "Upp::EscValue::EscMap",
						"w": "UPP::ESCVALUE::ESCMAP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2b4793e716c0b2f8ec0aaa12b661d063ac10cbe2"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Retain",
						"t": "void ()",
						"i": "Upp::EscValue::EscMap::Retain()",
						"r": "void Retain()",
						"s": "Upp",
						"u": "RETAIN",
						"q": "Upp::EscValue::EscMap",
						"w": "UPP::ESCVALUE::ESCMAP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ac1b50c9317b38681cc387e0ee33fd7988ddf717"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Release",
						"t": "void ()",
						"i": "Upp::EscValue::EscMap::Release()",
						"r": "void Release()",
						"s": "Upp",
						"u": "RELEASE",
						"q": "Upp::EscValue::EscMap",
						"w": "UPP::ESCVALUE::ESCMAP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e17bba4ed054d6d831cbfee549b7e070f03035d5"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "EscMap",
						"t": "void ()",
						"i": "Upp::EscValue::EscMap::EscMap()",
						"r": "EscMap()",
						"s": "Upp",
						"u": "ESCMAP",
						"q": "Upp::EscValue::EscMap",
						"w": "UPP::ESCVALUE::ESCMAP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1257c806accc789ad8f11b3a98e87b3e75333fe3"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "EscHandle",
						"t": "Upp::EscHandle",
						"i": "Upp::EscHandle",
						"r": "EscHandle",
						"s": "Upp",
						"u": "ESCHANDLE",
						"q": "Upp::EscHandle",
						"w": "UPP::ESCHANDLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a3cf17fa6227f9158f533548cce93f07c37f5d25"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "refcount",
						"t": "Atomic",
						"i": "Upp::EscHandle::refcount",
						"r": "Atomic refcount",
						"s": "Upp",
						"u": "REFCOUNT",
						"q": "Upp::EscHandle",
						"w": "UPP::ESCHANDLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b9402e14b750fcfc18c28b3654970812aeef9714"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Retain",
						"t": "void ()",
						"i": "Upp::EscHandle::Retain()",
						"r": "void Retain()",
						"s": "Upp",
						"u": "RETAIN",
						"q": "Upp::EscHandle",
						"w": "UPP::ESCHANDLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e17da1eff2c0f0e922817b7f18034397cec07a38"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Release",
						"t": "void ()",
						"i": "Upp::EscHandle::Release()",
						"r": "void Release()",
						"s": "Upp",
						"u": "RELEASE",
						"q": "Upp::EscHandle",
						"w": "UPP::ESCHANDLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f5c429a26455ca182bc7327101192d00fdb680f8"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "EscHandle",
						"t": "void ()",
						"i": "Upp::EscHandle::EscHandle()",
						"r": "EscHandle()",
						"s": "Upp",
						"u": "ESCHANDLE",
						"q": "Upp::EscHandle",
						"w": "UPP::ESCHANDLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "be6e7d7ff9b191aeb6188777eadabeb91c105448"
							}
						]
					},
					{
						"k": 25,
						"d": true,
						"iv": false,
						"is": false,
						"n": "~EscHandle",
						"t": "void () noexcept",
						"i": "Upp::EscHandle::~()",
						"r": "~EscHandle()",
						"s": "Upp",
						"u": "~ESCHANDLE",
						"q": "Upp::EscHandle",
						"w": "UPP::ESCHANDLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1e5db0743471e62159b65053f330917fa56c8db3"
							}
						]
					},
					{
						"k": 4,
						"d": true,
						"iv": false,
						"is": false,
						"n": "EscLambda",
						"t": "Upp::EscLambda",
						"i": "Upp::EscLambda",
						"r": "EscLambda",
						"s": "Upp",
						"u": "ESCLAMBDA",
						"q": "Upp::EscLambda",
						"w": "UPP::ESCLAMBDA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "19dbf717642a8779665d941f44a980d4eb813938"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "refcount",
						"t": "Atomic",
						"i": "Upp::EscLambda::refcount",
						"r": "Atomic refcount",
						"s": "Upp",
						"u": "REFCOUNT",
						"q": "Upp::EscLambda",
						"w": "UPP::ESCLAMBDA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b9402e14b750fcfc18c28b3654970812aeef9714"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Retain",
						"t": "void ()",
						"i": "Upp::EscLambda::Retain()",
						"r": "void Retain()",
						"s": "Upp",
						"u": "RETAIN",
						"q": "Upp::EscLambda",
						"w": "UPP::ESCLAMBDA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ac1b50c9317b38681cc387e0ee33fd7988ddf717"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Release",
						"t": "void ()",
						"i": "Upp::EscLambda::Release()",
						"r": "void Release()",
						"s": "Upp",
						"u": "RELEASE",
						"q": "Upp::EscLambda",
						"w": "UPP::ESCLAMBDA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e17bba4ed054d6d831cbfee549b7e070f03035d5"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "EscLambda",
						"t": "void ()",
						"i": "Upp::EscLambda::EscLambda()",
						"r": "EscLambda()",
						"s": "Upp",
						"u": "ESCLAMBDA",
						"q": "Upp::EscLambda",
						"w": "UPP::ESCLAMBDA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0e2654c99ddab7fd6f85f1bd1a79c43d0127cd06"
							}
						]
					},
					{
						"k": 25,
						"d": true,
						"iv": false,
						"is": false,
						"n": "~EscLambda",
						"t": "void () noexcept",
						"i": "Upp::EscLambda::~()",
						"r": "~EscLambda()",
						"s": "Upp",
						"u": "~ESCLAMBDA",
						"q": "Upp::EscLambda",
						"w": "UPP::ESCLAMBDA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f0bdbe3f66c14162e5fd7bbb43d87a325244d630"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "arg",
						"t": "Vector<String>",
						"i": "Upp::EscLambda::arg",
						"r": "Vector<String> arg",
						"s": "Upp",
						"u": "ARG",
						"q": "Upp::EscLambda",
						"w": "UPP::ESCLAMBDA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b0afad4b0c4c5cf0ea582f675494a203aeb2a56d"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "def",
						"t": "Vector<String>",
						"i": "Upp::EscLambda::def",
						"r": "Vector<String> def",
						"s": "Upp",
						"u": "DEF",
						"q": "Upp::EscLambda",
						"w": "UPP::ESCLAMBDA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "009f5c38f4b96fb14fec103564e0a9b338076695"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "inout",
						"t": "Vector<bool>",
						"i": "Upp::EscLambda::inout",
						"r": "Vector<bool> inout",
						"s": "Upp",
						"u": "INOUT",
						"q": "Upp::EscLambda",
						"w": "UPP::ESCLAMBDA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7637a706a037670925b511b19cff64adcc68538c"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "code",
						"t": "String",
						"i": "Upp::EscLambda::code",
						"r": "String code",
						"s": "Upp",
						"u": "CODE",
						"q": "Upp::EscLambda",
						"w": "UPP::ESCLAMBDA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ddbada31db059dc76df02f85c9f46096ab8dda85"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "handle",
						"t": "EscHandle *",
						"i": "Upp::EscLambda::handle",
						"r": "EscHandle *handle",
						"s": "Upp",
						"u": "HANDLE",
						"q": "Upp::EscLambda",
						"w": "UPP::ESCLAMBDA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d3a7f1c28b811eea11c6febc072a543c685f5c85"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "escape",
						"t": "Event<EscEscape &>",
						"i": "Upp::EscLambda::escape",
						"r": "Event<EscEscape&> escape",
						"s": "Upp",
						"u": "ESCAPE",
						"q": "Upp::EscLambda",
						"w": "UPP::ESCLAMBDA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "48694a956bc9d2ab3062300f1f932f87a16e982e"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "varargs",
						"t": "bool",
						"i": "Upp::EscLambda::varargs",
						"r": "bool varargs",
						"s": "Upp",
						"u": "VARARGS",
						"q": "Upp::EscLambda",
						"w": "UPP::ESCLAMBDA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "097334f2a7f2b5b767705fae81cdc270dcabcc07"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "filename",
						"t": "String",
						"i": "Upp::EscLambda::filename",
						"r": "String filename",
						"s": "Upp",
						"u": "FILENAME",
						"q": "Upp::EscLambda",
						"w": "UPP::ESCLAMBDA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9a70cc45a9c94456c92e27476dfa250e048b60f3"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "line",
						"t": "int",
						"i": "Upp::EscLambda::line",
						"r": "int line",
						"s": "Upp",
						"u": "LINE",
						"q": "Upp::EscLambda",
						"w": "UPP::ESCLAMBDA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4d3b152a2c0990d497af0b373a50167b82826a59"
							}
						]
					},
					{
						"k": 24,
						"d": false,
						"iv": false,
						"is": false,
						"n": "EscLambda",
						"t": "void (const EscLambda &)",
						"i": "Upp::EscLambda::EscLambda(const EscLambda&)",
						"r": "EscLambda(const EscLambda&)",
						"s": "Upp",
						"u": "ESCLAMBDA",
						"q": "Upp::EscLambda",
						"w": "UPP::ESCLAMBDA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fa5483b811ba7fb7a2e27e8967c72a78c3a00535"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "operator=",
						"t": "void (const EscLambda &)",
						"i": "Upp::EscLambda::operator=(const EscLambda&)",
						"r": "void operator",
						"s": "Upp",
						"u": "OPERATOR=",
						"q": "Upp::EscLambda",
						"w": "UPP::ESCLAMBDA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "def09f77d20b26755b3c8f54203b6a57b3a3ebaa"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "GetHashValue",
						"t": "hash_t (const EscValue &)",
						"i": "Upp::GetHashValue(const EscValue&)",
						"r": "template<> hash_t GetHashValue<class EscValue>(const EscValue& v)",
						"s": "Upp",
						"u": "GETHASHVALUE",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b47e55471b646179912dfc6b591e642ce6f2b02b"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "IsTrue",
						"t": "bool (const EscValue &)",
						"i": "Upp::IsTrue(const EscValue&)",
						"r": "bool IsTrue(const EscValue& a)",
						"s": "Upp",
						"u": "ISTRUE",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d659161a384eb0ece4679d942aaa289c124159eb"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "SkipBlock",
						"t": "void (CParser &)",
						"i": "Upp::SkipBlock(CParser&)",
						"r": "void SkipBlock(CParser& p)",
						"s": "Upp",
						"u": "SKIPBLOCK",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1dd6e5198370f6596b68cf9d921a5c7c739e22bd"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "ReadLambda",
						"t": "EscValue (CParser &)",
						"i": "Upp::ReadLambda(CParser&)",
						"r": "EscValue ReadLambda(CParser& p)",
						"s": "Upp",
						"u": "READLAMBDA",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "99f1e2cc310117a72ed0f5e4366e749b5bf9dc27"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "ReadLambda",
						"t": "EscValue (const char *)",
						"i": "Upp::ReadLambda(const char*)",
						"r": "EscValue ReadLambda(const char *s)",
						"s": "Upp",
						"u": "READLAMBDA",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "218016901e587887ed1fe3cc1cb50cd240169a54"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Esc",
						"t": "Upp::Esc",
						"i": "Upp::Esc",
						"r": "Esc : public CParser",
						"s": "Upp",
						"u": "ESC",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "Upp::CParser",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e9048a4c1b5855ee68f8a50edb23bd7420f37502"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "SRVal",
						"t": "Upp::Esc::SRVal",
						"i": "Upp::Esc::SRVal",
						"r": "SRVal : Moveable<SRVal>",
						"s": "Upp",
						"u": "SRVAL",
						"q": "Upp::Esc::SRVal",
						"w": "UPP::ESC::SRVAL",
						"y": "Upp::Moveable",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dee5acb14dc3dc1ae76200d4b3266ab3e3a61800"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "lval",
						"t": "EscValue *",
						"i": "Upp::Esc::SRVal::lval",
						"r": "EscValue *lval",
						"s": "Upp",
						"u": "LVAL",
						"q": "Upp::Esc::SRVal",
						"w": "UPP::ESC::SRVAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d00530079bf64ab6a7e3bb552797215d76eb3ce0"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "rval",
						"t": "EscValue",
						"i": "Upp::Esc::SRVal::rval",
						"r": "EscValue rval",
						"s": "Upp",
						"u": "RVAL",
						"q": "Upp::Esc::SRVal",
						"w": "UPP::ESC::SRVAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c8e6ee63e86829d23ddcc3401d9102f3237b48f7"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "sbs",
						"t": "EscValue",
						"i": "Upp::Esc::SRVal::sbs",
						"r": "EscValue sbs",
						"s": "Upp",
						"u": "SBS",
						"q": "Upp::Esc::SRVal",
						"w": "UPP::ESC::SRVAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0c7e995438054e8b804f32c7c6bcf4d43671c940"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "SRVal",
						"t": "void ()",
						"i": "Upp::Esc::SRVal::SRVal()",
						"r": "SRVal()",
						"s": "Upp",
						"u": "SRVAL",
						"q": "Upp::Esc::SRVal",
						"w": "UPP::ESC::SRVAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1b306aabf9035c7656f31e92be3d5ceca7b2a386"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "SRVal",
						"t": "void (const EscValue &)",
						"i": "Upp::Esc::SRVal::SRVal(const EscValue&)",
						"r": "SRVal(const EscValue& v)",
						"s": "Upp",
						"u": "SRVAL",
						"q": "Upp::Esc::SRVal",
						"w": "UPP::ESC::SRVAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5ba7b63780b1ed4a2212bb9ddd65ac7db529b127"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "SRVal",
						"t": "void (double)",
						"i": "Upp::Esc::SRVal::SRVal(double)",
						"r": "SRVal(double n)",
						"s": "Upp",
						"u": "SRVAL",
						"q": "Upp::Esc::SRVal",
						"w": "UPP::ESC::SRVAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1674e5732eaebc1eafdc93aa0e903546a038b45a"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "SRVal",
						"t": "void (int64)",
						"i": "Upp::Esc::SRVal::SRVal(int64)",
						"r": "SRVal(int64 n)",
						"s": "Upp",
						"u": "SRVAL",
						"q": "Upp::Esc::SRVal",
						"w": "UPP::ESC::SRVAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2362df16f7538d4d58b59b70c231245e8d43f89d"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "SRVal",
						"t": "void (uint64)",
						"i": "Upp::Esc::SRVal::SRVal(uint64)",
						"r": "SRVal(uint64 n)",
						"s": "Upp",
						"u": "SRVAL",
						"q": "Upp::Esc::SRVal",
						"w": "UPP::ESC::SRVAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ee87269489a025726274394e965b50daf4d889a1"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "SRVal",
						"t": "void (bool)",
						"i": "Upp::Esc::SRVal::SRVal(bool)",
						"r": "SRVal(bool n)",
						"s": "Upp",
						"u": "SRVAL",
						"q": "Upp::Esc::SRVal",
						"w": "UPP::ESC::SRVAL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f2db2f9c6adee6804ed1848e70a3585a1dc0c980"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "global",
						"t": "ArrayMap<String, EscValue> &",
						"i": "Upp::Esc::global",
						"r": "ArrayMap<String, EscValue>& global",
						"s": "Upp",
						"u": "GLOBAL",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "70331b6c96a8de6786b5f0e90ac53f5ee8c9a6ae"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "self",
						"t": "EscValue",
						"i": "Upp::Esc::self",
						"r": "EscValue self",
						"s": "Upp",
						"u": "SELF",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f81cfe422d30171d05cd9331739ad2fe4fd44be7"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "var",
						"t": "ArrayMap<String, EscValue>",
						"i": "Upp::Esc::var",
						"r": "ArrayMap<String, EscValue> var",
						"s": "Upp",
						"u": "VAR",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6717c9b195e827737d0c4ef55d37b67ffb58d39d"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "skipexp",
						"t": "int",
						"i": "Upp::Esc::skipexp",
						"r": "int skipexp",
						"s": "Upp",
						"u": "SKIPEXP",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "38be98fc0ee255fcfa66716ca467022becb6506d"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "loop",
						"t": "int",
						"i": "Upp::Esc::loop",
						"r": "int loop",
						"s": "Upp",
						"u": "LOOP",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dd36c9f81290d7cc6cfa7fad4228751cbd4c317b"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "no_break",
						"t": "bool",
						"i": "Upp::Esc::no_break",
						"r": "bool no_break",
						"s": "Upp",
						"u": "NO_BREAK",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f0ed9c3b060a8b55283a1de64da09b29c733f572"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "no_return",
						"t": "bool",
						"i": "Upp::Esc::no_return",
						"r": "bool no_return",
						"s": "Upp",
						"u": "NO_RETURN",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c17c5777d90bafd81c8d6942f4e79984d3c67c15"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "no_continue",
						"t": "bool",
						"i": "Upp::Esc::no_continue",
						"r": "bool no_continue",
						"s": "Upp",
						"u": "NO_CONTINUE",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e88e232c5a5c3fae7e8c4f72e3891718175df02b"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "op_limit",
						"t": "int &",
						"i": "Upp::Esc::op_limit",
						"r": "int& op_limit",
						"s": "Upp",
						"u": "OP_LIMIT",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "330443853eb29bf0f4145b88def464406d263fc3"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "r_stack_level",
						"t": "int",
						"i": "Upp::Esc::r_stack_level",
						"r": "int r_stack_level",
						"s": "Upp",
						"u": "R_STACK_LEVEL",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8024df95069c2bbd6ef22a7923b28fe5538ca0d9"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "return_value",
						"t": "EscValue",
						"i": "Upp::Esc::return_value",
						"r": "EscValue return_value",
						"s": "Upp",
						"u": "RETURN_VALUE",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e13f83986aef5e0d39abe4f6db3872fedae91031"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": true,
						"n": "stack_level",
						"t": "int",
						"i": "Upp::Esc::stack_level",
						"r": "static int stack_level",
						"s": "Upp",
						"u": "STACK_LEVEL",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a01ec7b14e543df5eb7e8d03550852730c5ce927"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "OutOfMemory",
						"t": "void ()",
						"i": "Upp::Esc::OutOfMemory()",
						"r": "void OutOfMemory()",
						"s": "Upp",
						"u": "OUTOFMEMORY",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3b7398967e35d63d9cd8c6f65793b1a2178b8e20"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "TestLimit",
						"t": "void ()",
						"i": "Upp::Esc::TestLimit()",
						"r": "void TestLimit()",
						"s": "Upp",
						"u": "TESTLIMIT",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0fcec5915a2523e21b2d99d4418862af3afb3016"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "DoCompare",
						"t": "double (const EscValue &, const EscValue &, const char *)",
						"i": "Upp::Esc::DoCompare(const EscValue&,const EscValue&,const char*)",
						"r": "double DoCompare(const EscValue& a, const EscValue& b, const char *op)",
						"s": "Upp",
						"u": "DOCOMPARE",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f24590e459140b580b941a425aa5cff8acd5794e"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "DoCompare",
						"t": "double (const SRVal &, const char *)",
						"i": "Upp::Esc::DoCompare(const SRVal&,const char*)",
						"r": "double DoCompare(const SRVal& a, const char *op)",
						"s": "Upp",
						"u": "DOCOMPARE",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fa27a27e534374666844ad168a5a7dc91f2416b2"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "ReadName",
						"t": "String ()",
						"i": "Upp::Esc::ReadName()",
						"r": "String ReadName()",
						"s": "Upp",
						"u": "READNAME",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "791511ad1e81edcb702a34d8a75b5fd4a4486fe9"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "ExecuteLambda",
						"t": "EscValue (const String &, EscValue, SRVal, Vector<SRVal> &)",
						"i": "Upp::Esc::ExecuteLambda(const String&,EscValue,SRVal,Vector&)",
						"r": "EscValue ExecuteLambda(const String& id, EscValue lambda, SRVal self, Vector<SRVal>& arg)",
						"s": "Upp",
						"u": "EXECUTELAMBDA",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c13cd55cf6552f2c0c471933374f63399541a6c7"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Assign",
						"t": "void (EscValue &, const Vector<EscValue> &, int, const EscValue &)",
						"i": "Upp::Esc::Assign(EscValue&,const Vector&,int,const EscValue&)",
						"r": "void Assign(EscValue& val, const Vector<EscValue>& sbs, int si, const EscValue& src)",
						"s": "Upp",
						"u": "ASSIGN",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8a271d61a42fb758485df2c742dec5a110ddfd38"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Get",
						"t": "EscValue (const SRVal &)",
						"i": "Upp::Esc::Get(const SRVal&)",
						"r": "EscValue Get(const SRVal& val)",
						"s": "Upp",
						"u": "GET",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "861f0c7caab15e6342a1431b077800374be86dd1"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Assign",
						"t": "void (const SRVal &, const EscValue &)",
						"i": "Upp::Esc::Assign(const SRVal&,const EscValue&)",
						"r": "void Assign(const SRVal& val, const EscValue& src)",
						"s": "Upp",
						"u": "ASSIGN",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e344f4a3c17c4e6a7d7ea01ca0a36cadcf2f9bde"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "GetExp",
						"t": "EscValue ()",
						"i": "Upp::Esc::GetExp()",
						"r": "EscValue GetExp()",
						"s": "Upp",
						"u": "GETEXP",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f4ff9e91158b6560f38e49169fe4da4bdb268085"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Number",
						"t": "double (const EscValue &, const char *)",
						"i": "Upp::Esc::Number(const EscValue&,const char*)",
						"r": "double Number(const EscValue& a, const char *oper)",
						"s": "Upp",
						"u": "NUMBER",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "36969cecd19021754bed7d3f53c30d392b3b977a"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Int",
						"t": "int64 (const EscValue &, const char *)",
						"i": "Upp::Esc::Int(const EscValue&,const char*)",
						"r": "int64 Int(const EscValue& a, const char *oper)",
						"s": "Upp",
						"u": "INT",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "90a9bd9e791e29e30361d9df6e459dc1177c2f1b"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Number",
						"t": "double (const SRVal &, const char *)",
						"i": "Upp::Esc::Number(const SRVal&,const char*)",
						"r": "double Number(const SRVal& a, const char *oper)",
						"s": "Upp",
						"u": "NUMBER",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3f384c8d002d94c4c80b056da1ce6e0f580ef1d4"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Int",
						"t": "int64 (const SRVal &, const char *)",
						"i": "Upp::Esc::Int(const SRVal&,const char*)",
						"r": "int64 Int(const SRVal& a, const char *oper)",
						"s": "Upp",
						"u": "INT",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d4059471808ce4315543a33b37e983cc3db56e36"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "MulArray",
						"t": "EscValue (EscValue, EscValue)",
						"i": "Upp::Esc::MulArray(EscValue,EscValue)",
						"r": "EscValue MulArray(EscValue array, EscValue times)",
						"s": "Upp",
						"u": "MULARRAY",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "936cd0c1fda318ab16b758620480f014e955658c"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Subscript",
						"t": "void (SRVal &, SRVal, String)",
						"i": "Upp::Esc::Subscript(SRVal&,SRVal,String)",
						"r": "void Subscript(SRVal& r, SRVal _self, String id)",
						"s": "Upp",
						"u": "SUBSCRIPT",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "462b12a3519d2feaab3a936df64dff2b3cb46852"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Subscript",
						"t": "void (SRVal &)",
						"i": "Upp::Esc::Subscript(SRVal&)",
						"r": "void Subscript(SRVal& r)",
						"s": "Upp",
						"u": "SUBSCRIPT",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3b0eacb577079675ebb381093d98654e13618595"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Term",
						"t": "void (SRVal &)",
						"i": "Upp::Esc::Term(SRVal&)",
						"r": "void Term(SRVal& r)",
						"s": "Upp",
						"u": "TERM",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "342e6e5d61542f902ad8292ba7778aa740edc23a"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Unary",
						"t": "void (SRVal &)",
						"i": "Upp::Esc::Unary(SRVal&)",
						"r": "void Unary(SRVal& r)",
						"s": "Upp",
						"u": "UNARY",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "745a5f5146550a9e12f74115d88365c23056da0a"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Mul",
						"t": "void (SRVal &)",
						"i": "Upp::Esc::Mul(SRVal&)",
						"r": "void Mul(SRVal& r)",
						"s": "Upp",
						"u": "MUL",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3211b1452d993eddf97262cad0accc55b7dc972c"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Add",
						"t": "void (SRVal &)",
						"i": "Upp::Esc::Add(SRVal&)",
						"r": "void Add(SRVal& r)",
						"s": "Upp",
						"u": "ADD",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "55161cff0bdae857157edf05c8f3e2be8864671f"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Shift",
						"t": "void (SRVal &)",
						"i": "Upp::Esc::Shift(SRVal&)",
						"r": "void Shift(SRVal& r)",
						"s": "Upp",
						"u": "SHIFT",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8ceecea57596d5439a5e368089d26aed7926f462"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Compare",
						"t": "void (SRVal &)",
						"i": "Upp::Esc::Compare(SRVal&)",
						"r": "void Compare(SRVal& r)",
						"s": "Upp",
						"u": "COMPARE",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ef0f941906d0fa34b9017ee64485c2c2250d9dbb"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Equal",
						"t": "void (SRVal &)",
						"i": "Upp::Esc::Equal(SRVal&)",
						"r": "void Equal(SRVal& r)",
						"s": "Upp",
						"u": "EQUAL",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "df2fbb901690900ceed8d2fc78a7ccd49dfd237d"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "BinAnd",
						"t": "void (SRVal &)",
						"i": "Upp::Esc::BinAnd(SRVal&)",
						"r": "void BinAnd(SRVal& r)",
						"s": "Upp",
						"u": "BINAND",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a545f0f85391bc3734cf5b23935e8bbd0e76c3a3"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "BinXor",
						"t": "void (SRVal &)",
						"i": "Upp::Esc::BinXor(SRVal&)",
						"r": "void BinXor(SRVal& r)",
						"s": "Upp",
						"u": "BINXOR",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dfe703a5f984e091795d0b161aec3042b09c157e"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "BinOr",
						"t": "void (SRVal &)",
						"i": "Upp::Esc::BinOr(SRVal&)",
						"r": "void BinOr(SRVal& r)",
						"s": "Upp",
						"u": "BINOR",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5e4b4aaa2bff1e4f714b9aa8c0e4c63ced05302e"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "And",
						"t": "void (SRVal &)",
						"i": "Upp::Esc::And(SRVal&)",
						"r": "void And(SRVal& r)",
						"s": "Upp",
						"u": "AND",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6e7254cee8173e1038d043f1adce905964575dc6"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Or",
						"t": "void (SRVal &)",
						"i": "Upp::Esc::Or(SRVal&)",
						"r": "void Or(SRVal& r)",
						"s": "Upp",
						"u": "OR",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "51134faef517327a3d3667e04196c10929a169f6"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Cond",
						"t": "void (SRVal &)",
						"i": "Upp::Esc::Cond(SRVal&)",
						"r": "void Cond(SRVal& r)",
						"s": "Upp",
						"u": "COND",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5dae39251f3a49e2bfbdf1557b19672bfd4acee9"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Assign",
						"t": "void (SRVal &)",
						"i": "Upp::Esc::Assign(SRVal&)",
						"r": "void Assign(SRVal& r)",
						"s": "Upp",
						"u": "ASSIGN",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "06766352d01a232b6ae62e9a835ef5bdb4d61d36"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Exp",
						"t": "void (SRVal &)",
						"i": "Upp::Esc::Exp(SRVal&)",
						"r": "void Exp(SRVal& r)",
						"s": "Upp",
						"u": "EXP",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fa07b714062a0adfe703af67f3c6261ffd9e531b"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "SkipTerm",
						"t": "void ()",
						"i": "Upp::Esc::SkipTerm()",
						"r": "void SkipTerm()",
						"s": "Upp",
						"u": "SKIPTERM",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "255f8bedf1ef85d00d00e1c0cb84806d164ec010"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "SkipStatement",
						"t": "void ()",
						"i": "Upp::Esc::SkipStatement()",
						"r": "void SkipStatement()",
						"s": "Upp",
						"u": "SKIPSTATEMENT",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9602552bbd738a5ad32ba1048b08b81ea74bf37b"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "SkipExp",
						"t": "void ()",
						"i": "Upp::Esc::SkipExp()",
						"r": "void SkipExp()",
						"s": "Upp",
						"u": "SKIPEXP",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c11390027eede70a4076f52f7e998ac1ac2a9319"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "PCond",
						"t": "bool ()",
						"i": "Upp::Esc::PCond()",
						"r": "bool PCond()",
						"s": "Upp",
						"u": "PCOND",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7a12712776e99ba5e614716de00f81fcd0b98ea1"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "FinishSwitch",
						"t": "void ()",
						"i": "Upp::Esc::FinishSwitch()",
						"r": "void FinishSwitch()",
						"s": "Upp",
						"u": "FINISHSWITCH",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "32e0cdeac990861cd9dfdb45ed98adebc8ed98cb"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "DoStatement",
						"t": "void ()",
						"i": "Upp::Esc::DoStatement()",
						"r": "void DoStatement()",
						"s": "Upp",
						"u": "DOSTATEMENT",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3303ee42a208052bbeef75a6ed038c8f04a523fb"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Run",
						"t": "void ()",
						"i": "Upp::Esc::Run()",
						"r": "void Run()",
						"s": "Upp",
						"u": "RUN",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ea27fdaf634d79c16e17f85082233835acb391d0"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Esc",
						"t": "void (ArrayMap<String, EscValue> &, const char *, int &, const String &, int)",
						"i": "Upp::Esc::Esc(ArrayMap&,const char*,int&,const String&,int)",
						"r": "Esc(ArrayMap<String, EscValue>& global, const char *s, int& oplimit, const String& fn, int line = 1)",
						"s": "Upp",
						"u": "ESC",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "551345dc91af316a814f008a2c9dbeb474fda84e"
							}
						]
					},
					{
						"k": 25,
						"d": true,
						"iv": false,
						"is": false,
						"n": "~Esc",
						"t": "void () noexcept",
						"i": "Upp::Esc::~()",
						"r": "~Esc()",
						"s": "Upp",
						"u": "~ESC",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7475d516bc9b8fb5596d48fafc63895a44389a80"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "EscEscape",
						"t": "Upp::EscEscape",
						"i": "Upp::EscEscape",
						"r": "EscEscape",
						"s": "Upp",
						"u": "ESCESCAPE",
						"q": "Upp::EscEscape",
						"w": "UPP::ESCESCAPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9b21ae0fe881481bc4ec5700e93c040f05d0abf7"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "esc",
						"t": "Esc &",
						"i": "Upp::EscEscape::esc",
						"r": "Esc& esc",
						"s": "Upp",
						"u": "ESC",
						"q": "Upp::EscEscape",
						"w": "UPP::ESCESCAPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cf6dc8b7a6ccc60c12baffc48717f08d416eadc8"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "self",
						"t": "EscValue",
						"i": "Upp::EscEscape::self",
						"r": "EscValue self",
						"s": "Upp",
						"u": "SELF",
						"q": "Upp::EscEscape",
						"w": "UPP::ESCESCAPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9752f449c9adc3cdc9419d09463bc767c7faa8fa"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "arg",
						"t": "Array<EscValue> &",
						"i": "Upp::EscEscape::arg",
						"r": "Array<EscValue>& arg",
						"s": "Upp",
						"u": "ARG",
						"q": "Upp::EscEscape",
						"w": "UPP::ESCESCAPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ea325206d56d0a334fa1681c3b119a23fb79f6cf"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ret_val",
						"t": "EscValue",
						"i": "Upp::EscEscape::ret_val",
						"r": "EscValue ret_val",
						"s": "Upp",
						"u": "RET_VAL",
						"q": "Upp::EscEscape",
						"w": "UPP::ESCESCAPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "24918a59a75d5e50d81fb833cc7541b9cd90c3f3"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "id",
						"t": "String",
						"i": "Upp::EscEscape::id",
						"r": "String id",
						"s": "Upp",
						"u": "ID",
						"q": "Upp::EscEscape",
						"w": "UPP::ESCESCAPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "56ac96b8ec581d6aa2254512b28f1ef3d37c7f61"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator[]",
						"t": "EscValue &(int)",
						"i": "Upp::EscEscape::operator[](int)",
						"r": "EscValue& operator[](int i)",
						"s": "Upp",
						"u": "OPERATOR[]",
						"q": "Upp::EscEscape",
						"w": "UPP::ESCESCAPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "76509adf1077b56c57b1a746298ca1a76615a26b"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "GetCount",
						"t": "int () const",
						"i": "Upp::EscEscape::GetCount()const",
						"r": "int GetCount() const",
						"s": "Upp",
						"u": "GETCOUNT",
						"q": "Upp::EscEscape",
						"w": "UPP::ESCESCAPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "aef79369622d84dc86af1dd2851f802dbef9e03d"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator=",
						"t": "void (const EscValue &)",
						"i": "Upp::EscEscape::operator=(const EscValue&)",
						"r": "void operator",
						"s": "Upp",
						"u": "OPERATOR=",
						"q": "Upp::EscEscape",
						"w": "UPP::ESCESCAPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "36c2f271a7e50bcdd6a99be3284a593f68b3a847"
							}
						]
					},
					{
						"k": 26,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator Upp::EscValue &",
						"t": "EscValue &()",
						"i": "Upp::EscEscape::operator EscValue&()",
						"r": "operator EscValue&()",
						"s": "Upp",
						"u": "OPERATOR UPP::ESCVALUE &",
						"q": "Upp::EscEscape",
						"w": "UPP::ESCESCAPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "75eda5c1d07eebe239dfd8da18e81f7e6395bd99"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ThrowError",
						"t": "void (const char *)",
						"i": "Upp::EscEscape::ThrowError(const char*)",
						"r": "void ThrowError(const char *s)",
						"s": "Upp",
						"u": "THROWERROR",
						"q": "Upp::EscEscape",
						"w": "UPP::ESCESCAPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4b3e32722d412fd35966e38606a47783dc654b5f"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "DumpType",
						"t": "String (int)",
						"i": "Upp::EscEscape::DumpType(int)",
						"r": "String DumpType(int i)",
						"s": "Upp",
						"u": "DUMPTYPE",
						"q": "Upp::EscEscape",
						"w": "UPP::ESCESCAPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "37a0c935df3c023e1774a64c60d4131def5da39d"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "InCall",
						"t": "String ()",
						"i": "Upp::EscEscape::InCall()",
						"r": "String InCall()",
						"s": "Upp",
						"u": "INCALL",
						"q": "Upp::EscEscape",
						"w": "UPP::ESCESCAPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "60118d46bef48b469f8d38b1f36ef69e1cd0afb8"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "CheckNumber",
						"t": "void (int)",
						"i": "Upp::EscEscape::CheckNumber(int)",
						"r": "void CheckNumber(int i)",
						"s": "Upp",
						"u": "CHECKNUMBER",
						"q": "Upp::EscEscape",
						"w": "UPP::ESCESCAPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6ea45504c444184995d78f9af2e5db945a1e0e09"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "CheckArray",
						"t": "void (int)",
						"i": "Upp::EscEscape::CheckArray(int)",
						"r": "void CheckArray(int i)",
						"s": "Upp",
						"u": "CHECKARRAY",
						"q": "Upp::EscEscape",
						"w": "UPP::ESCESCAPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8eebd4a7fcd3aecdefc6fb1aed2754863057d273"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "CheckMap",
						"t": "void (int)",
						"i": "Upp::EscEscape::CheckMap(int)",
						"r": "void CheckMap(int i)",
						"s": "Upp",
						"u": "CHECKMAP",
						"q": "Upp::EscEscape",
						"w": "UPP::ESCESCAPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7e9ea8ecca8e19ed68088f715c55ed7b405810bc"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Number",
						"t": "double (int)",
						"i": "Upp::EscEscape::Number(int)",
						"r": "double Number(int i)",
						"s": "Upp",
						"u": "NUMBER",
						"q": "Upp::EscEscape",
						"w": "UPP::ESCESCAPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "367a4b016a489fd9bb5ffa39e47ef40fbe532159"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Int",
						"t": "int (int)",
						"i": "Upp::EscEscape::Int(int)",
						"r": "int Int(int i)",
						"s": "Upp",
						"u": "INT",
						"q": "Upp::EscEscape",
						"w": "UPP::ESCESCAPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bd591f147d5822370775b694909ee948fcfea7b3"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "EscEscape",
						"t": "void (Esc &, EscValue, Array<EscValue> &)",
						"i": "Upp::EscEscape::EscEscape(Esc&,EscValue,Array&)",
						"r": "EscEscape(Esc& esc, EscValue self, Array<EscValue>& arg)",
						"s": "Upp",
						"u": "ESCESCAPE",
						"q": "Upp::EscEscape",
						"w": "UPP::ESCESCAPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ea9e57fc23e35ea266f7bc00ff552531ec1004ef"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Escape",
						"t": "void (ArrayMap<String, EscValue> &, const char *, void (*)(EscEscape &))",
						"i": "Upp::Escape(ArrayMap&,const char*,void(*)(EscEscape&))",
						"r": "void Escape(ArrayMap<String, EscValue>& globals, const char *function, void (*escape)(EscEscape&))",
						"s": "Upp",
						"u": "ESCAPE",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0a7e4054f555c9978c4e16d21419183ea2a98a38"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Escfn",
						"t": "void (ArrayMap<String, EscValue> &, const char *, void (*)(EscEscape &))",
						"i": "Upp::Escfn(ArrayMap&,const char*,void(*)(EscEscape&))",
						"r": "void Escfn(ArrayMap<String, EscValue>& globals, const char *function, void (*escape)(EscEscape&))",
						"s": "Upp",
						"u": "ESCFN",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0a145dcbd977aa00864ebdd02df66115c88907a8"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Escape",
						"t": "void (ArrayMap<String, EscValue> &, const char *, Event<EscEscape &>)",
						"i": "Upp::Escape(ArrayMap&,const char*,Event)",
						"r": "void Escape(ArrayMap<String, EscValue>& globals, const char *function, Event<EscEscape&> escape)",
						"s": "Upp",
						"u": "ESCAPE",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d6193698b6340ce9b4f08ca72dd7c9e34d8307cf"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Scan",
						"t": "void (ArrayMap<String, EscValue> &, const char *, const char *)",
						"i": "Upp::Scan(ArrayMap&,const char*,const char*)",
						"r": "void Scan(ArrayMap<String, EscValue>& global, const char *code, const char *filename = \"\")",
						"s": "Upp",
						"u": "SCAN",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "77dbb672fe6689e3b95dfa428aed73fa08d56f3f"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "StdLib",
						"t": "void (ArrayMap<String, EscValue> &)",
						"i": "Upp::StdLib(ArrayMap&)",
						"r": "void StdLib(ArrayMap<String, EscValue>& global)",
						"s": "Upp",
						"u": "STDLIB",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b12f1d58d85d3e35335a8702ff4fabe116a13db6"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LambdaArgs",
						"t": "void (CParser &, EscLambda &)",
						"i": "Upp::LambdaArgs(CParser&,EscLambda&)",
						"r": "void LambdaArgs(CParser& p, EscLambda& l)",
						"s": "Upp",
						"u": "LAMBDAARGS",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7e9c2f643240dda8dc9cbdab79778b7a5f924059"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Execute",
						"t": "EscValue (ArrayMap<String, EscValue> &, EscValue *, const EscValue &, Vector<EscValue> &, int)",
						"i": "Upp::Execute(ArrayMap&,EscValue*,const EscValue&,Vector&,int)",
						"r": "EscValue Execute(ArrayMap<String, EscValue>& global, EscValue *self, const EscValue& lambda, Vector<EscValue>& arg, int oplimit = 50000)",
						"s": "Upp",
						"u": "EXECUTE",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "50520a30b024cc0306ad8fde6d98afd9fce2a077"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Execute",
						"t": "EscValue (ArrayMap<String, EscValue> &, EscValue *, const char *, Vector<EscValue> &, int)",
						"i": "Upp::Execute(ArrayMap&,EscValue*,const char*,Vector&,int)",
						"r": "EscValue Execute(ArrayMap<String, EscValue>& global, EscValue *self, const char *name, Vector<EscValue>& arg, int oplimit = 50000)",
						"s": "Upp",
						"u": "EXECUTE",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c7ec4f1549c24e7412ec607a7b37bab949f20702"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Execute",
						"t": "EscValue (ArrayMap<String, EscValue> &, const char *, int)",
						"i": "Upp::Execute(ArrayMap&,const char*,int)",
						"r": "EscValue Execute(ArrayMap<String, EscValue>& global, const char *name, int oplimit = 50000)",
						"s": "Upp",
						"u": "EXECUTE",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "57c2b597b0c1d98c3344729950851ec417f5d720"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Evaluatex",
						"t": "EscValue (const char *, ArrayMap<String, EscValue> &, int)",
						"i": "Upp::Evaluatex(const char*,ArrayMap&,int)",
						"r": "EscValue Evaluatex(const char *expression, ArrayMap<String, EscValue>& global, int oplimit = 50000)",
						"s": "Upp",
						"u": "EVALUATEX",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4ab7602642914ba607ce6a4418df9dec535ebd30"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Evaluate",
						"t": "EscValue (const char *, ArrayMap<String, EscValue> &, int)",
						"i": "Upp::Evaluate(const char*,ArrayMap&,int)",
						"r": "EscValue Evaluate(const char *expression, ArrayMap<String, EscValue>& global, int oplimit = 50000)",
						"s": "Upp",
						"u": "EVALUATE",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d1efed2a8f6f8cd9698f6a71d6d2263b1bfc6c1b"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "EscFromStdValue",
						"t": "EscValue (const Value &)",
						"i": "Upp::EscFromStdValue(const Value&)",
						"r": "EscValue EscFromStdValue(const Value& v)",
						"s": "Upp",
						"u": "ESCFROMSTDVALUE",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a8de6aa8d5ce2f07b17009c00b9da7620d72f3f2"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "StdValueFromEsc",
						"t": "Value (const EscValue &)",
						"i": "Upp::StdValueFromEsc(const EscValue&)",
						"r": "Value StdValueFromEsc(const EscValue& v)",
						"s": "Upp",
						"u": "STDVALUEFROMESC",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a39ac154b1cbd91d7997b7828bb4b13de0b777c0"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "StdValueLib",
						"t": "void (ArrayMap<String, EscValue> &)",
						"i": "Upp::StdValueLib(ArrayMap&)",
						"r": "void StdValueLib(ArrayMap<String, EscValue>& global)",
						"s": "Upp",
						"u": "STDVALUELIB",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bc7b4aacd653b6e862ff40e2bf4ed0039870b38e"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "IsDate",
						"t": "bool (const EscValue &)",
						"i": "Upp::IsDate(const EscValue&)",
						"r": "bool IsDate(const EscValue& v)",
						"s": "Upp",
						"u": "ISDATE",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3f90af6fe03d18ac70c0289b13ee5d6cc87d7f3d"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "IsTime",
						"t": "bool (const EscValue &)",
						"i": "Upp::IsTime(const EscValue&)",
						"r": "bool IsTime(const EscValue& v)",
						"s": "Upp",
						"u": "ISTIME",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2cfb8eaf38ea3ab962cac5b155d86e93da4a32c8"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Expand",
						"t": "String (const String &, ArrayMap<String, EscValue> &, int, String (*)(const Value &))",
						"i": "Upp::Expand(const String&,ArrayMap&,int,String(*)(const Value&))",
						"r": "String Expand(const String& doc, ArrayMap<String, EscValue>& global, int oplimit = 50000, String (*format)(const Value&) = StdFormat)",
						"s": "Upp",
						"u": "EXPAND",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "98bad6188301b281b3977005f80fe7abbc018735"
							}
						]
					}
				]
			}
		},
		{
			"key": "EscValue.cpp",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LTIMING",
						"t": "",
						"i": "LTIMING",
						"r": "LTIMING",
						"s": "",
						"u": "LTIMING",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4f9878c4dbace497a771c3c744aea49fc03d5632"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "EscTypeName",
						"t": "String (int)",
						"i": "Upp::EscTypeName(int)",
						"r": "String EscTypeName(int sv_type)",
						"s": "Upp",
						"u": "ESCTYPENAME",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "50f1dc8a44871880a22f1ee968b464eca72d7a93"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": false,
						"n": "total",
						"t": "int",
						"i": "Upp::EscValue::total",
						"r": "int total",
						"s": "Upp",
						"u": "TOTAL",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f49ef7e3237734a91925e09ffc19446247df8f40"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": false,
						"n": "max_total",
						"t": "int",
						"i": "Upp::EscValue::max_total",
						"r": "int max_total",
						"s": "Upp",
						"u": "MAX_TOTAL",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "af9da5e83950bf716b67fbc426835cb5ab360ac1"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Free",
						"t": "void ()",
						"i": "Upp::EscValue::Free()",
						"r": "void Free()",
						"s": "Upp",
						"u": "FREE",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "20c36e1e4751d7acc7ee6aa903eba919efc6e1a2"
							}
						]
					},
					{
						"k": 25,
						"d": true,
						"iv": false,
						"is": false,
						"n": "~EscValue",
						"t": "void () noexcept",
						"i": "Upp::EscValue::~()",
						"r": "~EscValue()",
						"s": "Upp",
						"u": "~ESCVALUE",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "25840c9f692afd7e3a297c00742b3a96892bcba0"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Assign",
						"t": "void (const EscValue &)",
						"i": "Upp::EscValue::Assign(const EscValue&)",
						"r": "void Assign(const EscValue& s)",
						"s": "Upp",
						"u": "ASSIGN",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a510533ae61b7a3acfe53fa914b333a2f291fbee"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator=",
						"t": "EscValue &(const EscValue &)",
						"i": "Upp::EscValue::operator=(const EscValue&)",
						"r": "EscValue& operator",
						"s": "Upp",
						"u": "OPERATOR=",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0a5afc927a7b60d1f532c83fe5e512acc0f260e6"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "EscValue",
						"t": "void (const EscValue &)",
						"i": "Upp::EscValue::EscValue(const EscValue&)",
						"r": "EscValue(const EscValue& s)",
						"s": "Upp",
						"u": "ESCVALUE",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d81846e3258947ee2f5280e52a68324e983ed891"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "CreateLambda",
						"t": "EscLambda &()",
						"i": "Upp::EscValue::CreateLambda()",
						"r": "EscLambda& CreateLambda()",
						"s": "Upp",
						"u": "CREATELAMBDA",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a880f4ac844274ee8551babb5fcb7132f73a36c5"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "GetLambda",
						"t": "const EscLambda &() const",
						"i": "Upp::EscValue::GetLambda()const",
						"r": "const EscLambda& GetLambda() const",
						"s": "Upp",
						"u": "GETLAMBDA",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6d9a76470b84e6c0a09e1c2a8987728574acb03e"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "GetCount",
						"t": "int () const",
						"i": "Upp::EscValue::GetCount()const",
						"r": "int GetCount() const",
						"s": "Upp",
						"u": "GETCOUNT",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "297e96d0d374026d1e765ba191f7d1485f151dd6"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "GetHashValue",
						"t": "hash_t () const",
						"i": "Upp::EscValue::GetHashValue()const",
						"r": "hash_t GetHashValue() const",
						"s": "Upp",
						"u": "GETHASHVALUE",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2b1f3f57617e0c5d3782ca46c83fc9d4933b7258"
							}
						]
					},
					{
						"k": 30,
						"d": true,
						"iv": false,
						"is": false,
						"n": "EqVector",
						"t": "bool (const T &, const T &)",
						"i": "Upp::EqVector(const T&,const T&)",
						"r": "template <class T> bool EqVector(const T& a, const T& b)",
						"s": "Upp",
						"u": "EQVECTOR",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5d54ebf9b743c7a14ee2b177ee91887ecbd120c2"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator==",
						"t": "bool (const EscValue &) const",
						"i": "Upp::EscValue::operator==(const EscValue&)const",
						"r": "bool operator",
						"s": "Upp",
						"u": "OPERATOR==",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ab09e4aae6e93bd6eac739f06d5fa372c8c2395f"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ToString",
						"t": "String (int, int, bool, int) const",
						"i": "Upp::EscValue::ToString(int,int,bool,int)const",
						"r": "String ToString(int maxlen = 2147483647, int indent_step = 4, bool hex = false, int indent = 0) const",
						"s": "Upp",
						"u": "TOSTRING",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c29cb00cbfb6a9b7b9f31a464f21a6a8435a0b6f"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "GetNumber",
						"t": "double () const",
						"i": "Upp::EscValue::GetNumber()const",
						"r": "double GetNumber() const",
						"s": "Upp",
						"u": "GETNUMBER",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a91d02b7999380cb13e619a41ccb377999fe51f8"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "GetInt64",
						"t": "int64 () const",
						"i": "Upp::EscValue::GetInt64()const",
						"r": "int64 GetInt64() const",
						"s": "Upp",
						"u": "GETINT64",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "34fd2849fff87e7ffeaca77f9cad27d853539b64"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "IsInt",
						"t": "bool () const",
						"i": "Upp::EscValue::IsInt()const",
						"r": "bool IsInt() const",
						"s": "Upp",
						"u": "ISINT",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "06a133bd738d96d6c8211eb2465e53f43638251d"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "GetInt",
						"t": "int () const",
						"i": "Upp::EscValue::GetInt()const",
						"r": "int GetInt() const",
						"s": "Upp",
						"u": "GETINT",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "85b7030b69002354108a8b9136d88d2e3b896c3a"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "IsTrue",
						"t": "bool (const EscValue &)",
						"i": "Upp::IsTrue(const EscValue&)",
						"r": "bool IsTrue(const EscValue& a)",
						"s": "Upp",
						"u": "ISTRUE",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ffc065957a0ab9f168ce982bc7f5aa53bf0c8989"
							}
						]
					}
				]
			}
		},
		{
			"key": "EscArray.cpp",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LTIMING",
						"t": "",
						"i": "LTIMING",
						"r": "LTIMING",
						"s": "",
						"u": "LTIMING",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4f9878c4dbace497a771c3c744aea49fc03d5632"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "CloneArray",
						"t": "Vector<EscValue> &()",
						"i": "Upp::EscValue::CloneArray()",
						"r": "Vector<EscValue>& CloneArray()",
						"s": "Upp",
						"u": "CLONEARRAY",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "11cf143bb380fe4dc764ce7f3f913cbfbf9db3d1"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "GetArray",
						"t": "const Vector<EscValue> &() const",
						"i": "Upp::EscValue::GetArray()const",
						"r": "const Vector<EscValue>& GetArray() const",
						"s": "Upp",
						"u": "GETARRAY",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "73a037167932f6932b9c0d56a35c6cf46184cd5c"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ArrayGet",
						"t": "EscValue (int) const",
						"i": "Upp::EscValue::ArrayGet(int)const",
						"r": "EscValue ArrayGet(int i) const",
						"s": "Upp",
						"u": "ARRAYGET",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d55ac17c8fbb31bcba0ae1ef68bfc1418e3a01ad"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ArrayGet",
						"t": "EscValue (int, int) const",
						"i": "Upp::EscValue::ArrayGet(int,int)const",
						"r": "EscValue ArrayGet(int i, int n) const",
						"s": "Upp",
						"u": "ARRAYGET",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7ab5aede227f063b44f064e4bc850b0ca1250de3"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "SetEmptyArray",
						"t": "void ()",
						"i": "Upp::EscValue::SetEmptyArray()",
						"r": "void SetEmptyArray()",
						"s": "Upp",
						"u": "SETEMPTYARRAY",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1bc7160e311674b00ed8496d78b7eed3cfb90ee2"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ArraySet",
						"t": "bool (int, EscValue)",
						"i": "Upp::EscValue::ArraySet(int,EscValue)",
						"r": "bool ArraySet(int i, EscValue val)",
						"s": "Upp",
						"u": "ARRAYSET",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4ce0aeab4d4eac431ba3a5d75fa5dee8372ae54d"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ArrayAdd",
						"t": "void (EscValue)",
						"i": "Upp::EscValue::ArrayAdd(EscValue)",
						"r": "void ArrayAdd(EscValue val)",
						"s": "Upp",
						"u": "ARRAYADD",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "296d10c74aef54149bc61ab49f2318ad37b34431"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Replace",
						"t": "bool (int, int, EscValue)",
						"i": "Upp::EscValue::Replace(int,int,EscValue)",
						"r": "bool Replace(int i, int n, EscValue a)",
						"s": "Upp",
						"u": "REPLACE",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "aee34d6fdbad5148df5ed3095f055d959e9a63db"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Append",
						"t": "bool (EscValue)",
						"i": "Upp::EscValue::Append(EscValue)",
						"r": "bool Append(EscValue a)",
						"s": "Upp",
						"u": "APPEND",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7f5ecd65170a81915172ba9c92496952a5042bd4"
							}
						]
					},
					{
						"k": 26,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator WString",
						"t": "WString () const",
						"i": "Upp::EscValue::operator WString()const",
						"r": "operator WString() const",
						"s": "Upp",
						"u": "OPERATOR WSTRING",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bf4c8f5a3be2ed0dbee5dfbb363e25b867c245b7"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "InitString",
						"t": "void (const WString &)",
						"i": "Upp::EscValue::InitString(const WString&)",
						"r": "void InitString(const WString& s)",
						"s": "Upp",
						"u": "INITSTRING",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5ea4fa3be0de3ff73943ab1bfe668a75a79fdedc"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "GetTotalCount",
						"t": "int ()",
						"i": "Upp::EscValue::GetTotalCount()",
						"r": "int GetTotalCount()",
						"s": "Upp",
						"u": "GETTOTALCOUNT",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "72691d710a68b010ff46738886a1fe231ded25d6"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "SetMaxTotalCount",
						"t": "void (int)",
						"i": "Upp::EscValue::SetMaxTotalCount(int)",
						"r": "void SetMaxTotalCount(int n)",
						"s": "Upp",
						"u": "SETMAXTOTALCOUNT",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c784142cabf86fa09dd08ea7404f733df0d0392b"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "GetMaxTotalCount",
						"t": "int ()",
						"i": "Upp::EscValue::GetMaxTotalCount()",
						"r": "int GetMaxTotalCount()",
						"s": "Upp",
						"u": "GETMAXTOTALCOUNT",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e1b9a5b400a0bed6836aca64a428bfc8a10bf413"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "EscValue",
						"t": "void ()",
						"i": "Upp::EscValue::EscValue()",
						"r": "EscValue()",
						"s": "Upp",
						"u": "ESCVALUE",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "152698d04ca252663f946c8a1bebd2e6c30c788a"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "EscValue",
						"t": "void (double)",
						"i": "Upp::EscValue::EscValue(double)",
						"r": "EscValue(double n)",
						"s": "Upp",
						"u": "ESCVALUE",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "32b6c512987c27f7201412f176703ebca4fb50f8"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "EscValue",
						"t": "void (int64)",
						"i": "Upp::EscValue::EscValue(int64)",
						"r": "EscValue(int64 n)",
						"s": "Upp",
						"u": "ESCVALUE",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d0381d81ac494844a57e2189ed98a0557ff26d42"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "EscValue",
						"t": "void (int)",
						"i": "Upp::EscValue::EscValue(int)",
						"r": "EscValue(int n)",
						"s": "Upp",
						"u": "ESCVALUE",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "11c8e18867536a350fcdece5176c7af6c0f4417a"
							}
						]
					}
				]
			}
		},
		{
			"key": "EscMap.cpp",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LTIMING",
						"t": "",
						"i": "LTIMING",
						"r": "LTIMING",
						"s": "",
						"u": "LTIMING",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4f9878c4dbace497a771c3c744aea49fc03d5632"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "CloneMap",
						"t": "VectorMap<EscValue, EscValue> &()",
						"i": "Upp::EscValue::CloneMap()",
						"r": "VectorMap<EscValue, EscValue>& CloneMap()",
						"s": "Upp",
						"u": "CLONEMAP",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1b19a51f96e2521bf49cc0ac19fed94b71ff8300"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "GetMap",
						"t": "const VectorMap<EscValue, EscValue> &() const",
						"i": "Upp::EscValue::GetMap()const",
						"r": "const VectorMap<EscValue, EscValue>& GetMap() const",
						"s": "Upp",
						"u": "GETMAP",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "aa4e96f9f5a25ad16d1de7fcb56035bb20841882"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "SetEmptyMap",
						"t": "void ()",
						"i": "Upp::EscValue::SetEmptyMap()",
						"r": "void SetEmptyMap()",
						"s": "Upp",
						"u": "SETEMPTYMAP",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "76e434c6b3a963577bad52589eec8e5633c95b16"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "MapGet",
						"t": "EscValue (EscValue) const",
						"i": "Upp::EscValue::MapGet(EscValue)const",
						"r": "EscValue MapGet(EscValue key) const",
						"s": "Upp",
						"u": "MAPGET",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "302788ac40f26f69828d4a8798e9656787604499"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "MapSet",
						"t": "void (EscValue, EscValue)",
						"i": "Upp::EscValue::MapSet(EscValue,EscValue)",
						"r": "void MapSet(EscValue key, EscValue value)",
						"s": "Upp",
						"u": "MAPSET",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bbc45a4f3b7644626e173a32aa44a398bf243c76"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "HasNumberField",
						"t": "bool (const char *) const",
						"i": "Upp::EscValue::HasNumberField(const char*)const",
						"r": "bool HasNumberField(const char *id) const",
						"s": "Upp",
						"u": "HASNUMBERFIELD",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "da2f2506d48f29a97f435bcfbad03bbfb86be311"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "GetFieldInt",
						"t": "int (const char *) const",
						"i": "Upp::EscValue::GetFieldInt(const char*)const",
						"r": "int GetFieldInt(const char *id) const",
						"s": "Upp",
						"u": "GETFIELDINT",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "28a946685adfed8a657980eaa1310dbc9be2f890"
							}
						]
					}
				]
			}
		},
		{
			"key": "Esc.cpp",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LTIMING",
						"t": "",
						"i": "LTIMING",
						"r": "LTIMING",
						"s": "",
						"u": "LTIMING",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4f9878c4dbace497a771c3c744aea49fc03d5632"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "OutOfMemory",
						"t": "void ()",
						"i": "Upp::Esc::OutOfMemory()",
						"r": "void OutOfMemory()",
						"s": "Upp",
						"u": "OUTOFMEMORY",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2f2b67776f12e8edff8c1e042dec8c717ba97b59"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "TestLimit",
						"t": "void ()",
						"i": "Upp::Esc::TestLimit()",
						"r": "void TestLimit()",
						"s": "Upp",
						"u": "TESTLIMIT",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5bed0e31d5847b2e31038bae00bda1db48f5c97f"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Get",
						"t": "EscValue (const SRVal &)",
						"i": "Upp::Esc::Get(const SRVal&)",
						"r": "EscValue Get(const SRVal& val)",
						"s": "Upp",
						"u": "GET",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1b389a22986dfd82e903c95910cfc5a332f93b29"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Assign",
						"t": "void (EscValue &, const Vector<EscValue> &, int, const EscValue &)",
						"i": "Upp::Esc::Assign(EscValue&,const Vector&,int,const EscValue&)",
						"r": "void Assign(EscValue& val, const Vector<EscValue>& sbs, int si, const EscValue& src)",
						"s": "Upp",
						"u": "ASSIGN",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cc2c6158324d16576ce21f66e129603f3759622b"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Assign",
						"t": "void (const SRVal &, const EscValue &)",
						"i": "Upp::Esc::Assign(const SRVal&,const EscValue&)",
						"r": "void Assign(const SRVal& val, const EscValue& src)",
						"s": "Upp",
						"u": "ASSIGN",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "160e190db6dc97df0a1eb94797256c9ecf65f512"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ExecuteLambda",
						"t": "EscValue (const String &, EscValue, SRVal, Vector<SRVal> &)",
						"i": "Upp::Esc::ExecuteLambda(const String&,EscValue,SRVal,Vector&)",
						"r": "EscValue ExecuteLambda(const String& id, EscValue lambda, SRVal self, Vector<SRVal>& arg)",
						"s": "Upp",
						"u": "EXECUTELAMBDA",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a8045651f1d2d1fde085fc661eb9f63f967a47f6"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Subscript",
						"t": "void (Esc::SRVal &, Esc::SRVal, String)",
						"i": "Upp::Esc::Subscript(Esc::SRVal&,Esc::SRVal,String)",
						"r": "void Subscript(Esc::SRVal& r, Esc::SRVal _self, String id)",
						"s": "Upp",
						"u": "SUBSCRIPT",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f370aec64358f9898d91a84abce6941cc8add7a4"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Subscript",
						"t": "void (Esc::SRVal &)",
						"i": "Upp::Esc::Subscript(Esc::SRVal&)",
						"r": "void Subscript(Esc::SRVal& r)",
						"s": "Upp",
						"u": "SUBSCRIPT",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "da96f25351fb33cc7c958e826f1c1ec116e4534d"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Term",
						"t": "void (SRVal &)",
						"i": "Upp::Esc::Term(SRVal&)",
						"r": "void Term(SRVal& r)",
						"s": "Upp",
						"u": "TERM",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "924b2ca92704dbcaf116b8336ef949e3cf5bfae5"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Lims",
						"t": "String (const String &)",
						"i": "Upp::Lims(const String&)",
						"r": "String Lims(const String& s)",
						"s": "Upp",
						"u": "LIMS",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5b685dcee9b238b935ce8d1c75efe70b58c23d79"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Number",
						"t": "double (const EscValue &, const char *)",
						"i": "Upp::Esc::Number(const EscValue&,const char*)",
						"r": "double Number(const EscValue& a, const char *oper)",
						"s": "Upp",
						"u": "NUMBER",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9c4744373699f12e76eb632c168a238c34407eac"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Int",
						"t": "int64 (const EscValue &, const char *)",
						"i": "Upp::Esc::Int(const EscValue&,const char*)",
						"r": "int64 Int(const EscValue& a, const char *oper)",
						"s": "Upp",
						"u": "INT",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fd064f48c95197556974d5ed05d37d71c7bc7564"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Number",
						"t": "double (const Esc::SRVal &, const char *)",
						"i": "Upp::Esc::Number(const Esc::SRVal&,const char*)",
						"r": "double Number(const Esc::SRVal& a, const char *oper)",
						"s": "Upp",
						"u": "NUMBER",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4d1fc658bb674c5d52fff0b3c41e23ac5a15d8ea"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Int",
						"t": "int64 (const Esc::SRVal &, const char *)",
						"i": "Upp::Esc::Int(const Esc::SRVal&,const char*)",
						"r": "int64 Int(const Esc::SRVal& a, const char *oper)",
						"s": "Upp",
						"u": "INT",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a87f4e6eb76258ab15f47e5ddc86b579dbac86ec"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Unary",
						"t": "void (Esc::SRVal &)",
						"i": "Upp::Esc::Unary(Esc::SRVal&)",
						"r": "void Unary(Esc::SRVal& r)",
						"s": "Upp",
						"u": "UNARY",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ae2343309f35f263a2f1c8042231a5de8235ef7a"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "MulArray",
						"t": "EscValue (EscValue, EscValue)",
						"i": "Upp::Esc::MulArray(EscValue,EscValue)",
						"r": "EscValue MulArray(EscValue array, EscValue times)",
						"s": "Upp",
						"u": "MULARRAY",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "05945295cda436ffc3c9464173ac699facf576bb"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Mul",
						"t": "void (Esc::SRVal &)",
						"i": "Upp::Esc::Mul(Esc::SRVal&)",
						"r": "void Mul(Esc::SRVal& r)",
						"s": "Upp",
						"u": "MUL",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7d2b94fde8dd65b576ebfa6306910a1008395b93"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Add",
						"t": "void (Esc::SRVal &)",
						"i": "Upp::Esc::Add(Esc::SRVal&)",
						"r": "void Add(Esc::SRVal& r)",
						"s": "Upp",
						"u": "ADD",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "be54fa8bfb8b928a8091c9ec5fdb65433d0abd97"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Shift",
						"t": "void (Esc::SRVal &)",
						"i": "Upp::Esc::Shift(Esc::SRVal&)",
						"r": "void Shift(Esc::SRVal& r)",
						"s": "Upp",
						"u": "SHIFT",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e92146bfd5e155442c308f3a0e9e30450bd3c857"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "DoCompare",
						"t": "double (const EscValue &, const EscValue &, const char *)",
						"i": "Upp::Esc::DoCompare(const EscValue&,const EscValue&,const char*)",
						"r": "double DoCompare(const EscValue& a, const EscValue& b, const char *op)",
						"s": "Upp",
						"u": "DOCOMPARE",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "72c3cdc21337e5037f0845b623c1a1efb4808d8b"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "DoCompare",
						"t": "double (const SRVal &, const char *)",
						"i": "Upp::Esc::DoCompare(const SRVal&,const char*)",
						"r": "double DoCompare(const SRVal& a, const char *op)",
						"s": "Upp",
						"u": "DOCOMPARE",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1c60d80e2906b0c69302b62efdd6fe5e51c15762"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Compare",
						"t": "void (Esc::SRVal &)",
						"i": "Upp::Esc::Compare(Esc::SRVal&)",
						"r": "void Compare(Esc::SRVal& r)",
						"s": "Upp",
						"u": "COMPARE",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a62cc206422df03c2d45be7c61c4f0323b61fb8f"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Equal",
						"t": "void (Esc::SRVal &)",
						"i": "Upp::Esc::Equal(Esc::SRVal&)",
						"r": "void Equal(Esc::SRVal& r)",
						"s": "Upp",
						"u": "EQUAL",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4e7cf4560c1043921ae1ed769b92c991b2d714a6"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "BinAnd",
						"t": "void (Esc::SRVal &)",
						"i": "Upp::Esc::BinAnd(Esc::SRVal&)",
						"r": "void BinAnd(Esc::SRVal& r)",
						"s": "Upp",
						"u": "BINAND",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b2462d2f8d6c1e4f99acf90c59c10695888afa6c"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "BinXor",
						"t": "void (Esc::SRVal &)",
						"i": "Upp::Esc::BinXor(Esc::SRVal&)",
						"r": "void BinXor(Esc::SRVal& r)",
						"s": "Upp",
						"u": "BINXOR",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6fe39ec1209d5958469537f009329ef90403eea8"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "BinOr",
						"t": "void (Esc::SRVal &)",
						"i": "Upp::Esc::BinOr(Esc::SRVal&)",
						"r": "void BinOr(Esc::SRVal& r)",
						"s": "Upp",
						"u": "BINOR",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a756cae51fe08d2078b7f64999e8d926cb121843"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "And",
						"t": "void (Esc::SRVal &)",
						"i": "Upp::Esc::And(Esc::SRVal&)",
						"r": "void And(Esc::SRVal& r)",
						"s": "Upp",
						"u": "AND",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "326e2e728715023482ae5934af70797605cc8d23"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Or",
						"t": "void (Esc::SRVal &)",
						"i": "Upp::Esc::Or(Esc::SRVal&)",
						"r": "void Or(Esc::SRVal& r)",
						"s": "Upp",
						"u": "OR",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4e7adad070686dbe4056975f748bd8280eb9b331"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Cond",
						"t": "void (Esc::SRVal &)",
						"i": "Upp::Esc::Cond(Esc::SRVal&)",
						"r": "void Cond(Esc::SRVal& r)",
						"s": "Upp",
						"u": "COND",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "07526911d12db5a6846132798e21e4be3cdd5d95"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Assign",
						"t": "void (Esc::SRVal &)",
						"i": "Upp::Esc::Assign(Esc::SRVal&)",
						"r": "void Assign(Esc::SRVal& r)",
						"s": "Upp",
						"u": "ASSIGN",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "261dfe455e8649e81f70b4ae353ee8f8b0dddd63"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": false,
						"n": "stack_level",
						"t": "int",
						"i": "Upp::Esc::stack_level",
						"r": "int stack_level",
						"s": "Upp",
						"u": "STACK_LEVEL",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d90e82c938ae9bd434d3ec5e87a284caa116d397"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Exp",
						"t": "void (Esc::SRVal &)",
						"i": "Upp::Esc::Exp(Esc::SRVal&)",
						"r": "void Exp(Esc::SRVal& r)",
						"s": "Upp",
						"u": "EXP",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "05b31a085e0322285c9c3dacc4cecb76fa8908db"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "GetExp",
						"t": "EscValue ()",
						"i": "Upp::Esc::GetExp()",
						"r": "EscValue GetExp()",
						"s": "Upp",
						"u": "GETEXP",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f35e16d6f4a407e1911745b2e318629c4d33f956"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "SkipTerm",
						"t": "void ()",
						"i": "Upp::Esc::SkipTerm()",
						"r": "void SkipTerm()",
						"s": "Upp",
						"u": "SKIPTERM",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6e98fadfa7fa32bb405918e7610d0dad6e51a82d"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "SkipExp",
						"t": "void ()",
						"i": "Upp::Esc::SkipExp()",
						"r": "void SkipExp()",
						"s": "Upp",
						"u": "SKIPEXP",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0e8a822e090975c35a2d23c3fa90f3cb4a0c1136"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "SkipBlock",
						"t": "void (CParser &)",
						"i": "Upp::SkipBlock(CParser&)",
						"r": "void SkipBlock(CParser& p)",
						"s": "Upp",
						"u": "SKIPBLOCK",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f55d7c03ce5ebaba9e5baa2122285b11f9c5786f"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "SkipStatement",
						"t": "void ()",
						"i": "Upp::Esc::SkipStatement()",
						"r": "void SkipStatement()",
						"s": "Upp",
						"u": "SKIPSTATEMENT",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "663ea61ac17ce01ec8579b663249776dc000c275"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "PCond",
						"t": "bool ()",
						"i": "Upp::Esc::PCond()",
						"r": "bool PCond()",
						"s": "Upp",
						"u": "PCOND",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f47c7101c511cd02d47bcda670f14ed7ac5a1229"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "FinishSwitch",
						"t": "void ()",
						"i": "Upp::Esc::FinishSwitch()",
						"r": "void FinishSwitch()",
						"s": "Upp",
						"u": "FINISHSWITCH",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8618fa5292f31d6b2c91f827046ff86fc0a51c22"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "DoStatement",
						"t": "void ()",
						"i": "Upp::Esc::DoStatement()",
						"r": "void DoStatement()",
						"s": "Upp",
						"u": "DOSTATEMENT",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "861433015b0f5174ccbe0e4e8aea07d719c09da3"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Run",
						"t": "void ()",
						"i": "Upp::Esc::Run()",
						"r": "void Run()",
						"s": "Upp",
						"u": "RUN",
						"q": "Upp::Esc",
						"w": "UPP::ESC",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "47248c475e9460cb0fe0aac18c5a180a058937d5"
							}
						]
					}
				]
			}
		},
		{
			"key": "EscRun.cpp",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LTIMING",
						"t": "",
						"i": "LTIMING",
						"r": "LTIMING",
						"s": "",
						"u": "LTIMING",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4f9878c4dbace497a771c3c744aea49fc03d5632"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "LambdaArgs",
						"t": "void (CParser &, EscLambda &)",
						"i": "Upp::LambdaArgs(CParser&,EscLambda&)",
						"r": "void LambdaArgs(CParser& p, EscLambda& l)",
						"s": "Upp",
						"u": "LAMBDAARGS",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "27fb55de54074b7bb62b79e49fc339de5b405cff"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ReadLambda",
						"t": "EscValue (CParser &)",
						"i": "Upp::ReadLambda(CParser&)",
						"r": "EscValue ReadLambda(CParser& p)",
						"s": "Upp",
						"u": "READLAMBDA",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4485119949838430189038b1aa9a460df15d5b1b"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ReadLambda",
						"t": "EscValue (const char *)",
						"i": "Upp::ReadLambda(const char*)",
						"r": "EscValue ReadLambda(const char *s)",
						"s": "Upp",
						"u": "READLAMBDA",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "80ceb92c1ba8edc7cc9c2cfb686e373bf03e6dc0"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "InCall",
						"t": "String ()",
						"i": "Upp::EscEscape::InCall()",
						"r": "String InCall()",
						"s": "Upp",
						"u": "INCALL",
						"q": "Upp::EscEscape",
						"w": "UPP::ESCESCAPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e8a70ec0f50894e62cb9063d9b795ee0cc516222"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "DumpType",
						"t": "String (int)",
						"i": "Upp::EscEscape::DumpType(int)",
						"r": "String DumpType(int i)",
						"s": "Upp",
						"u": "DUMPTYPE",
						"q": "Upp::EscEscape",
						"w": "UPP::ESCESCAPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "02187a45fb4d90c0ab0ba4f9856b5d8e39488db9"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "CheckNumber",
						"t": "void (int)",
						"i": "Upp::EscEscape::CheckNumber(int)",
						"r": "void CheckNumber(int i)",
						"s": "Upp",
						"u": "CHECKNUMBER",
						"q": "Upp::EscEscape",
						"w": "UPP::ESCESCAPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f1a7c765db4ac0dd63296c6352a3244834b3f235"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Number",
						"t": "double (int)",
						"i": "Upp::EscEscape::Number(int)",
						"r": "double Number(int i)",
						"s": "Upp",
						"u": "NUMBER",
						"q": "Upp::EscEscape",
						"w": "UPP::ESCESCAPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c6c9d2f8ee0c6a5323e683a8440c9f559868ad38"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Int",
						"t": "int (int)",
						"i": "Upp::EscEscape::Int(int)",
						"r": "int Int(int i)",
						"s": "Upp",
						"u": "INT",
						"q": "Upp::EscEscape",
						"w": "UPP::ESCESCAPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "00aa7dc08c1c9e689905b93db3167b8ec48057d0"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "CheckArray",
						"t": "void (int)",
						"i": "Upp::EscEscape::CheckArray(int)",
						"r": "void CheckArray(int i)",
						"s": "Upp",
						"u": "CHECKARRAY",
						"q": "Upp::EscEscape",
						"w": "UPP::ESCESCAPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "95b6b93644b26c5757710b362ba113b8cf14d799"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "CheckMap",
						"t": "void (int)",
						"i": "Upp::EscEscape::CheckMap(int)",
						"r": "void CheckMap(int i)",
						"s": "Upp",
						"u": "CHECKMAP",
						"q": "Upp::EscEscape",
						"w": "UPP::ESCESCAPE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f4db3dc891380c30f2614c7cca3a352fa2b9c9cb"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Escape",
						"t": "void (ArrayMap<String, EscValue> &, const char *, Event<EscEscape &>)",
						"i": "Upp::Escape(ArrayMap&,const char*,Event)",
						"r": "void Escape(ArrayMap<String, EscValue>& globals, const char *function, Event<EscEscape&> escape)",
						"s": "Upp",
						"u": "ESCAPE",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "344d8de6b8155488f3705e889fbb03dd6b3075ee"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Escape",
						"t": "void (ArrayMap<String, EscValue> &, const char *, void (*)(EscEscape &))",
						"i": "Upp::Escape(ArrayMap&,const char*,void(*)(EscEscape&))",
						"r": "void Escape(ArrayMap<String, EscValue>& globals, const char *function, void (*escape)(EscEscape&))",
						"s": "Upp",
						"u": "ESCAPE",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "22b47302aa4af0527ce57b4d1ff60c230d65cb1f"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Escape",
						"t": "void (const char *, Event<EscEscape &>)",
						"i": "Upp::EscValue::Escape(const char*,Event)",
						"r": "void Escape(const char *method, Event<EscEscape&> escape)",
						"s": "Upp",
						"u": "ESCAPE",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fc29d022b886c5e81a2ae9d34735e74c42f8ea8b"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Escape",
						"t": "void (const char *, EscHandle *, Event<EscEscape &>)",
						"i": "Upp::EscValue::Escape(const char*,EscHandle*,Event)",
						"r": "void Escape(const char *method, EscHandle *h, Event<EscEscape&> escape)",
						"s": "Upp",
						"u": "ESCAPE",
						"q": "Upp::EscValue",
						"w": "UPP::ESCVALUE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "781d9242ff09c49a9600e99426bfdb8db403a0b6"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Scan",
						"t": "void (ArrayMap<String, EscValue> &, const char *, const char *)",
						"i": "Upp::Scan(ArrayMap&,const char*,const char*)",
						"r": "void Scan(ArrayMap<String, EscValue>& global, const char *file, const char *filename = \"\")",
						"s": "Upp",
						"u": "SCAN",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9830ee6d865f54e4b934cbd5bd08a70a5a5b82ca"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Execute",
						"t": "EscValue (ArrayMap<String, EscValue> &, EscValue *, const EscValue &, Vector<EscValue> &, int)",
						"i": "Upp::Execute(ArrayMap&,EscValue*,const EscValue&,Vector&,int)",
						"r": "EscValue Execute(ArrayMap<String, EscValue>& global, EscValue *self, const EscValue& lambda, Vector<EscValue>& arg, int op_limit = 50000)",
						"s": "Upp",
						"u": "EXECUTE",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2236815355d9e145573330aca5d653751f0ceb75"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Execute",
						"t": "EscValue (ArrayMap<String, EscValue> &, EscValue *, const char *, Vector<EscValue> &, int)",
						"i": "Upp::Execute(ArrayMap&,EscValue*,const char*,Vector&,int)",
						"r": "EscValue Execute(ArrayMap<String, EscValue>& global, EscValue *self, const char *name, Vector<EscValue>& arg, int op_limit = 50000)",
						"s": "Upp",
						"u": "EXECUTE",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "56d43eb809d2671e7c838b208bca10bf7305840a"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Execute",
						"t": "EscValue (ArrayMap<String, EscValue> &, const char *, int)",
						"i": "Upp::Execute(ArrayMap&,const char*,int)",
						"r": "EscValue Execute(ArrayMap<String, EscValue>& global, const char *name, int op_limit = 50000)",
						"s": "Upp",
						"u": "EXECUTE",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "528c8228d1476e018f7f7c16f285fde6849aac2c"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Evaluatex",
						"t": "EscValue (const char *, ArrayMap<String, EscValue> &, int)",
						"i": "Upp::Evaluatex(const char*,ArrayMap&,int)",
						"r": "EscValue Evaluatex(const char *expression, ArrayMap<String, EscValue>& global, int oplimit = 50000)",
						"s": "Upp",
						"u": "EVALUATEX",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9335737a620da169a9b2f31de38a1c2f2bb83c16"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Evaluate",
						"t": "EscValue (const char *, ArrayMap<String, EscValue> &, int)",
						"i": "Upp::Evaluate(const char*,ArrayMap&,int)",
						"r": "EscValue Evaluate(const char *expression, ArrayMap<String, EscValue>& global, int oplimit = 50000)",
						"s": "Upp",
						"u": "EVALUATE",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3ce51af28879e0444a3d1f9511484ddc9b2d69a9"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Expand",
						"t": "String (const String &, ArrayMap<String, EscValue> &, int, String (*)(const Value &))",
						"i": "Upp::Expand(const String&,ArrayMap&,int,String(*)(const Value&))",
						"r": "String Expand(const String& doc, ArrayMap<String, EscValue>& global, int oplimit = 50000, String (*format)(const Value&) = StdFormat)",
						"s": "Upp",
						"u": "EXPAND",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f346977469d1b506b8c0d9cdf4fb33025292da9c"
							}
						]
					}
				]
			}
		},
		{
			"key": "EscStdLib.cpp",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LTIMING",
						"t": "",
						"i": "LTIMING",
						"r": "LTIMING",
						"s": "",
						"u": "LTIMING",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4f9878c4dbace497a771c3c744aea49fc03d5632"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_count",
						"t": "void (EscEscape &)",
						"i": "Upp::ESC_count(EscEscape&)",
						"r": "void ESC_count(EscEscape& e)",
						"s": "Upp",
						"u": "ESC_COUNT",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "62dcf3e9af482a9d3a5256a1cdda4a7c19004229"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_is_void",
						"t": "void (EscEscape &)",
						"i": "Upp::ESC_is_void(EscEscape&)",
						"r": "void ESC_is_void(EscEscape& e)",
						"s": "Upp",
						"u": "ESC_IS_VOID",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1d4c078fb30763887f16118a9aaf89076131d84d"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_is_number",
						"t": "void (EscEscape &)",
						"i": "Upp::ESC_is_number(EscEscape&)",
						"r": "void ESC_is_number(EscEscape& e)",
						"s": "Upp",
						"u": "ESC_IS_NUMBER",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1f6fd126324c025925bc7550212c517f3e98d3ca"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_is_array",
						"t": "void (EscEscape &)",
						"i": "Upp::ESC_is_array(EscEscape&)",
						"r": "void ESC_is_array(EscEscape& e)",
						"s": "Upp",
						"u": "ESC_IS_ARRAY",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5ccf58881439261baffe617e8f48291c35083568"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_is_map",
						"t": "void (EscEscape &)",
						"i": "Upp::ESC_is_map(EscEscape&)",
						"r": "void ESC_is_map(EscEscape& e)",
						"s": "Upp",
						"u": "ESC_IS_MAP",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "157cc67d4964c7738ae5b3424d120aa530287e9d"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_int",
						"t": "void (EscEscape &)",
						"i": "Upp::ESC_int(EscEscape&)",
						"r": "void ESC_int(EscEscape& e)",
						"s": "Upp",
						"u": "ESC_INT",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3a992651f5e6cede9bb5d705d4fb311cbcf03da2"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_to_string",
						"t": "void (EscEscape &)",
						"i": "Upp::ESC_to_string(EscEscape&)",
						"r": "void ESC_to_string(EscEscape& e)",
						"s": "Upp",
						"u": "ESC_TO_STRING",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d2337322a52b6c6783f8647c897f3c48bd83cc2f"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_to_number",
						"t": "void (EscEscape &)",
						"i": "Upp::ESC_to_number(EscEscape&)",
						"r": "void ESC_to_number(EscEscape& e)",
						"s": "Upp",
						"u": "ESC_TO_NUMBER",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ddf4483f4f3955eb18428ab05e516dc3494986a3"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_rand",
						"t": "void (EscEscape &)",
						"i": "Upp::ESC_rand(EscEscape&)",
						"r": "void ESC_rand(EscEscape& e)",
						"s": "Upp",
						"u": "ESC_RAND",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5c6ab2e43f2f2544e71116c18076afa157654c28"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_keys",
						"t": "void (EscEscape &)",
						"i": "Upp::ESC_keys(EscEscape&)",
						"r": "void ESC_keys(EscEscape& e)",
						"s": "Upp",
						"u": "ESC_KEYS",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b46aff8c3a9065885065d593c7ca28bae395ee36"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_values",
						"t": "void (EscEscape &)",
						"i": "Upp::ESC_values(EscEscape&)",
						"r": "void ESC_values(EscEscape& e)",
						"s": "Upp",
						"u": "ESC_VALUES",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7e480a0590db8564bc5a5c62fff1c27564a7e530"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_reverse",
						"t": "void (EscEscape &)",
						"i": "Upp::ESC_reverse(EscEscape&)",
						"r": "void ESC_reverse(EscEscape& e)",
						"s": "Upp",
						"u": "ESC_REVERSE",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d352bcfbff53f30e37d8fd3d3b6fdb99a0ef76a4"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "EscCmp",
						"t": "Upp::EscCmp",
						"i": "Upp::EscCmp",
						"r": "EscCmp",
						"s": "Upp",
						"u": "ESCCMP",
						"q": "Upp::EscCmp",
						"w": "UPP::ESCCMP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4dbf19b74a2190e00408566fd21d7ac95cb8b220"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "esc",
						"t": "Esc *",
						"i": "Upp::EscCmp::esc",
						"r": "Esc *esc",
						"s": "Upp",
						"u": "ESC",
						"q": "Upp::EscCmp",
						"w": "UPP::ESCCMP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8118c456e81386b1911ce4f8e11a07d37c958246"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "operator()",
						"t": "bool (const EscValue &, const EscValue &) const",
						"i": "Upp::EscCmp::operator()(const EscValue&,const EscValue&)const",
						"r": "bool operator()(const EscValue& a, const EscValue& b) const",
						"s": "Upp",
						"u": "OPERATOR()",
						"q": "Upp::EscCmp",
						"w": "UPP::ESCCMP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5db4f8c5b2598a29cdac57d26f271a879146256c"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "EscGetSortOrder",
						"t": "Vector<int> (EscEscape &)",
						"i": "Upp::EscGetSortOrder(EscEscape&)",
						"r": "Vector<int> EscGetSortOrder(EscEscape& e)",
						"s": "Upp",
						"u": "ESCGETSORTORDER",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0b76154a2eaf2e0597547d5b9c87bbe2640c65c1"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_sort",
						"t": "void (EscEscape &)",
						"i": "Upp::ESC_sort(EscEscape&)",
						"r": "void ESC_sort(EscEscape& e)",
						"s": "Upp",
						"u": "ESC_SORT",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c778fc9f874238e6d45bd6ddafbe1d95e6562633"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_order",
						"t": "void (EscEscape &)",
						"i": "Upp::ESC_order(EscEscape&)",
						"r": "void ESC_order(EscEscape& e)",
						"s": "Upp",
						"u": "ESC_ORDER",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cbab6d6097390f0201a52c350cbe2b1e073211e2"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_mid",
						"t": "void (EscEscape &)",
						"i": "Upp::ESC_mid(EscEscape&)",
						"r": "void ESC_mid(EscEscape& e)",
						"s": "Upp",
						"u": "ESC_MID",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4b06bb5cb6922b650bfaa3c36a85cb038e9d8910"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_exists",
						"t": "void (EscEscape &)",
						"i": "Upp::ESC_exists(EscEscape&)",
						"r": "void ESC_exists(EscEscape& e)",
						"s": "Upp",
						"u": "ESC_EXISTS",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "682c34d7f6eab97142da8d741607cf7daa57eb67"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_FileOut",
						"t": "Upp::ESC_FileOut",
						"i": "Upp::ESC_FileOut",
						"r": "ESC_FileOut : public EscHandle",
						"s": "Upp",
						"u": "ESC_FILEOUT",
						"q": "Upp::ESC_FileOut",
						"w": "UPP::ESC_FILEOUT",
						"y": "Upp::EscHandle",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e155ad608399d1c41d08cf0156a1c4ff7f550b94"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "file",
						"t": "FileStream",
						"i": "Upp::ESC_FileOut::file",
						"r": "FileStream file",
						"s": "Upp",
						"u": "FILE",
						"q": "Upp::ESC_FileOut",
						"w": "UPP::ESC_FILEOUT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "569145d20683144667e994dce2f2addc7ee792c4"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Put",
						"t": "void (EscEscape &)",
						"i": "Upp::ESC_FileOut::Put(EscEscape&)",
						"r": "void Put(EscEscape& e)",
						"s": "Upp",
						"u": "PUT",
						"q": "Upp::ESC_FileOut",
						"w": "UPP::ESC_FILEOUT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1cc56f6943d766fa37971cba6270d270bac8a93f"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "PutLine",
						"t": "void (EscEscape &)",
						"i": "Upp::ESC_FileOut::PutLine(EscEscape&)",
						"r": "void PutLine(EscEscape& e)",
						"s": "Upp",
						"u": "PUTLINE",
						"q": "Upp::ESC_FileOut",
						"w": "UPP::ESC_FILEOUT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c6e6df81793e2a9c30f29215306e98c09bc4d0e1"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Close",
						"t": "void (EscEscape &)",
						"i": "Upp::ESC_FileOut::Close(EscEscape&)",
						"r": "void Close(EscEscape& e)",
						"s": "Upp",
						"u": "CLOSE",
						"q": "Upp::ESC_FileOut",
						"w": "UPP::ESC_FILEOUT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "80a60317d930fa450be75e5d36ca2e80a1156ead"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "CLASSNAME",
						"t": "Upp::ESC_FileOut::CLASSNAME",
						"i": "Upp::ESC_FileOut::CLASSNAME",
						"r": "typedef ESC_FileOut CLASSNAME",
						"s": "Upp",
						"u": "CLASSNAME",
						"q": "Upp::ESC_FileOut",
						"w": "UPP::ESC_FILEOUT",
						"y": "Upp::ESC_FileOut",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1aefcb7d667ef2fbdc4ef3c1c1fb204c3fbcb5f9"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_FileOut",
						"t": "void (EscEscape &, EscValue &, int)",
						"i": "Upp::ESC_FileOut::ESC_FileOut(EscEscape&,EscValue&,int)",
						"r": "ESC_FileOut(EscEscape& e, EscValue& v, int style)",
						"s": "Upp",
						"u": "ESC_FILEOUT",
						"q": "Upp::ESC_FileOut",
						"w": "UPP::ESC_FILEOUT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "34ecebae776e8f572cfe7589a7b8d2aafdf563b9"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_OpenFileOut",
						"t": "void (EscEscape &)",
						"i": "Upp::ESC_OpenFileOut(EscEscape&)",
						"r": "void ESC_OpenFileOut(EscEscape& e)",
						"s": "Upp",
						"u": "ESC_OPENFILEOUT",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "562d0c98d0f9dd8407d602dac79c57aa133cd894"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_OpenFileAppend",
						"t": "void (EscEscape &)",
						"i": "Upp::ESC_OpenFileAppend(EscEscape&)",
						"r": "void ESC_OpenFileAppend(EscEscape& e)",
						"s": "Upp",
						"u": "ESC_OPENFILEAPPEND",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "285d8af6a3f75bd8a85e1d07f33626dc1cb7ed6d"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_FileIn",
						"t": "Upp::ESC_FileIn",
						"i": "Upp::ESC_FileIn",
						"r": "ESC_FileIn : public EscHandle",
						"s": "Upp",
						"u": "ESC_FILEIN",
						"q": "Upp::ESC_FileIn",
						"w": "UPP::ESC_FILEIN",
						"y": "Upp::EscHandle",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0d073b7748a244390ec571c4c63191d354be6fe7"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "file",
						"t": "FileIn",
						"i": "Upp::ESC_FileIn::file",
						"r": "FileIn file",
						"s": "Upp",
						"u": "FILE",
						"q": "Upp::ESC_FileIn",
						"w": "UPP::ESC_FILEIN",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4e1e889455bbbca0b33b7c86315a93eefdf1b458"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "IsEof",
						"t": "void (EscEscape &)",
						"i": "Upp::ESC_FileIn::IsEof(EscEscape&)",
						"r": "void IsEof(EscEscape& e)",
						"s": "Upp",
						"u": "ISEOF",
						"q": "Upp::ESC_FileIn",
						"w": "UPP::ESC_FILEIN",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "86052cc8fa3af36a9fc6b63363f5eeb1128ee207"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Get",
						"t": "void (EscEscape &)",
						"i": "Upp::ESC_FileIn::Get(EscEscape&)",
						"r": "void Get(EscEscape& e)",
						"s": "Upp",
						"u": "GET",
						"q": "Upp::ESC_FileIn",
						"w": "UPP::ESC_FILEIN",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7a9e874fcc7679ae95a3914f9c9961088f34c99d"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "GetLine",
						"t": "void (EscEscape &)",
						"i": "Upp::ESC_FileIn::GetLine(EscEscape&)",
						"r": "void GetLine(EscEscape& e)",
						"s": "Upp",
						"u": "GETLINE",
						"q": "Upp::ESC_FileIn",
						"w": "UPP::ESC_FILEIN",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8ef65a32475548e63ca6c4d24b37f965e69b58e2"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Close",
						"t": "void (EscEscape &)",
						"i": "Upp::ESC_FileIn::Close(EscEscape&)",
						"r": "void Close(EscEscape& e)",
						"s": "Upp",
						"u": "CLOSE",
						"q": "Upp::ESC_FileIn",
						"w": "UPP::ESC_FILEIN",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "80a60317d930fa450be75e5d36ca2e80a1156ead"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "CLASSNAME",
						"t": "Upp::ESC_FileIn::CLASSNAME",
						"i": "Upp::ESC_FileIn::CLASSNAME",
						"r": "typedef ESC_FileIn CLASSNAME",
						"s": "Upp",
						"u": "CLASSNAME",
						"q": "Upp::ESC_FileIn",
						"w": "UPP::ESC_FILEIN",
						"y": "Upp::ESC_FileIn",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cee07c1f565de34e24fe7475d385defbba8acd32"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_FileIn",
						"t": "void (EscEscape &, EscValue &)",
						"i": "Upp::ESC_FileIn::ESC_FileIn(EscEscape&,EscValue&)",
						"r": "ESC_FileIn(EscEscape& e, EscValue& v)",
						"s": "Upp",
						"u": "ESC_FILEIN",
						"q": "Upp::ESC_FileIn",
						"w": "UPP::ESC_FILEIN",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9869b7a256e8ecc9b7b05a6e276eb024bc1f716b"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_OpenFileIn",
						"t": "void (EscEscape &)",
						"i": "Upp::ESC_OpenFileIn(EscEscape&)",
						"r": "void ESC_OpenFileIn(EscEscape& e)",
						"s": "Upp",
						"u": "ESC_OPENFILEIN",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d91d632ed8ef65c2023de9a16c9c0d44b0c76fff"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "IsDate",
						"t": "bool (const EscValue &)",
						"i": "Upp::IsDate(const EscValue&)",
						"r": "bool IsDate(const EscValue& v)",
						"s": "Upp",
						"u": "ISDATE",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e3997ad260d30dc560e47017acb9c45e6de170cf"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "IsTime",
						"t": "bool (const EscValue &)",
						"i": "Upp::IsTime(const EscValue&)",
						"r": "bool IsTime(const EscValue& v)",
						"s": "Upp",
						"u": "ISTIME",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "74ce7c744f8a2dd56e3ce0065ee2ca09c0d1b5c1"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "SIC_IsDate",
						"t": "void (EscEscape &)",
						"i": "Upp::SIC_IsDate(EscEscape&)",
						"r": "void SIC_IsDate(EscEscape& e)",
						"s": "Upp",
						"u": "SIC_ISDATE",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "40cbfadbc8c19ad291c75fc5503269c0ec7fbf15"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "SIC_IsTime",
						"t": "void (EscEscape &)",
						"i": "Upp::SIC_IsTime(EscEscape&)",
						"r": "void SIC_IsTime(EscEscape& e)",
						"s": "Upp",
						"u": "SIC_ISTIME",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3cbb8be31f29daee8ab5febdf906351e5041b461"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "SIC_GetSysTime",
						"t": "void (EscEscape &)",
						"i": "Upp::SIC_GetSysTime(EscEscape&)",
						"r": "void SIC_GetSysTime(EscEscape& e)",
						"s": "Upp",
						"u": "SIC_GETSYSTIME",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5bff30ef129973c292123793aeaff80f0aaef8b2"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_ToLower",
						"t": "void (EscEscape &)",
						"i": "Upp::ESC_ToLower(EscEscape&)",
						"r": "void ESC_ToLower(EscEscape& e)",
						"s": "Upp",
						"u": "ESC_TOLOWER",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "017655659fc37081551216ef6bf4cb2128b4c64e"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_ToUpper",
						"t": "void (EscEscape &)",
						"i": "Upp::ESC_ToUpper(EscEscape&)",
						"r": "void ESC_ToUpper(EscEscape& e)",
						"s": "Upp",
						"u": "ESC_TOUPPER",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9ef24c423217f87e8716baf44c26ff7edf2ea232"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ESC_replace",
						"t": "void (EscEscape &)",
						"i": "Upp::ESC_replace(EscEscape&)",
						"r": "void ESC_replace(EscEscape& e)",
						"s": "Upp",
						"u": "ESC_REPLACE",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "90b1d15f98bc2ba3a2e3a12b9fae241096f4c91c"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "StdLib",
						"t": "void (ArrayMap<String, EscValue> &)",
						"i": "Upp::StdLib(ArrayMap&)",
						"r": "void StdLib(ArrayMap<String, EscValue>& global)",
						"s": "Upp",
						"u": "STDLIB",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f91ebd185ffeaacb8be3c5a0631093c084edffdb"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "FN",
						"t": "",
						"i": "FN",
						"r": "FN",
						"s": "",
						"u": "FN",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4369b382162b5d0058a158b89326790f1e991d61"
							}
						]
					}
				]
			}
		},
		{
			"key": "Value.cpp",
			"value": {
				"items": [
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "EscFromStdValue",
						"t": "EscValue (const Value &)",
						"i": "Upp::EscFromStdValue(const Value&)",
						"r": "EscValue EscFromStdValue(const Value& v)",
						"s": "Upp",
						"u": "ESCFROMSTDVALUE",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9071f2c3e578da1c9cf0e001e160ab4ea8fcde95"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "StdValueFromEsc",
						"t": "Value (const EscValue &)",
						"i": "Upp::StdValueFromEsc(const EscValue&)",
						"r": "Value StdValueFromEsc(const EscValue& v)",
						"s": "Upp",
						"u": "STDVALUEFROMESC",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "00d0854c5ce2fefe1d85b1e2fb1042e15fd41c59"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "SIC_StdFormat",
						"t": "void (EscEscape &)",
						"i": "Upp::SIC_StdFormat(EscEscape&)",
						"r": "void SIC_StdFormat(EscEscape& e)",
						"s": "Upp",
						"u": "SIC_STDFORMAT",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fcd3409f8352cf67d0ecc3bb86184faea4dca22f"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "StdValueLib",
						"t": "void (ArrayMap<String, EscValue> &)",
						"i": "Upp::StdValueLib(ArrayMap&)",
						"r": "void StdValueLib(ArrayMap<String, EscValue>& global)",
						"s": "Upp",
						"u": "STDVALUELIB",
						"q": "Upp",
						"w": "UPP",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5ee85521e4055adaab6fa814d14d77007e75ae1f"
							}
						]
					}
				]
			}
		}
	]
}