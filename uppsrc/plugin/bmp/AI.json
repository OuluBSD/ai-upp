{"source_files":[{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\bmp\\bmp.h","value":"data3õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0012_plugin_bmp_bmp_h_\u0000\u0012_plugin_bmp_bmp_h_\u0012_plugin_bmp_bmp_h_\u0000\u0012_PLUGIN_BMP_BMP_H_\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0015\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u001CBMPRaster__initialize_struct\avoid ()AUpp::BMPRaster__initialize_struct::BMPRaster__initialize_struct()\u001EBMPRaster__initialize_struct()\u0003Upp\u001CBMPRASTER__INITIALIZE_STRUCT!Upp::BMPRaster__initialize_struct!UPP::BMPRASTER__INITIALIZE_STRUCT\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0015\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u001CBMPRaster__initialize_struct!Upp::BMPRaster__initialize_struct!Upp::BMPRaster__initialize_struct\u001CBMPRaster__initialize_struct\u0003Upp\u001CBMPRASTER__INITIALIZE_STRUCT!Upp::BMPRaster__initialize_struct!UPP::BMPRASTER__INITIALIZE_STRUCT\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0015\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u001CBMPRaster__initialize_struct\avoid ()AUpp::BMPRaster__initialize_struct::BMPRaster__initialize_struct()\u001EBMPRaster__initialize_struct()\u0003Upp\u001CBMPRASTER__INITIALIZE_STRUCT!Upp::BMPRaster__initialize_struct!UPP::BMPRASTER__INITIALIZE_STRUCT\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0015\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0001\u001BBMPRaster__initialize_dummy#struct BMPRaster__initialize_struct Upp::BMPRaster__initialize_dummy?static BMPRaster__initialize_struct BMPRaster__initialize_dummy\u0003Upp\u001BBMPRASTER__INITIALIZE_DUMMY\u0003Upp\u0003UPP\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0015\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u001CBMPRaster__initialize_struct!Upp::BMPRaster__initialize_struct!Upp::BMPRaster__initialize_struct\u001CBMPRaster__initialize_struct\u0003Upp\u001CBMPRASTER__INITIALIZE_STRUCT!Upp::BMPRaster__initialize_struct!UPP::BMPRASTER__INITIALIZE_STRUCT\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0015\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0016BMPRaster__initializer\avoid ()\u001DUpp::BMPRaster__initializer()\u001Dvoid BMPRaster__initializer()\u0003Upp\u0016BMPRASTER__INITIALIZER\u0003Upp\u0003UPP\u0000\u0000\u0004\u0000\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0001\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\tBMPRaster\u000EUpp::BMPRaster\u000EUpp::BMPRaster\u001FBMPRaster : public StreamRaster\u0003Upp\tBMPRASTER\u000EUpp::BMPRaster\u000EUPP::BMPRASTER\u0011Upp::StreamRaster\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0000\u0000\u0000\n\u0000\u0000\u0000\u0016\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0000\u0000\u0004size\u0004Size\u0014Upp::BMPRaster::size\tSize size\u0003Upp\u0004SIZE\u000EUpp::BMPRaster\u000EUPP::BMPRASTER\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000\v\u0000\u0000\u0000\u0001\u0000\u0000\u0000\v\u0000\u0000\u0000\u001B\u0000\u0000\u0000\v\u0000\u0000\u0000\u0001\u0000\u0000\trow_bytes\u0003int\u0019Upp::BMPRaster::row_bytes\rint row_bytes\u0003Upp\tROW_BYTES\u000EUpp::BMPRaster\u000EUPP::BMPRASTER\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000\f\u0000\u0000\u0000\u0001\u0000\u0000\u0000\f\u0000\u0000\u0000\u0019\u0000\u0000\u0000\f\u0000\u0000\u0000\u0001\u0000\u0000\apalette\fBuffer<RGBA>\u0017Upp::BMPRaster::palette\u0014Buffer<RGBA> palette\u0003Upp\aPALETTE\u000EUpp::BMPRaster\u000EUPP::BMPRASTER\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0000\r\u0000\u0000\u0000\u001A\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\bscanline\fBuffer<byte>\u0018Upp::BMPRaster::scanline\u0015Buffer<byte> scanline\u0003Upp\bSCANLINE\u000EUpp::BMPRaster\u000EUPP::BMPRASTER\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0001\u0000\u0000\atopdown\u0004bool\u0017Upp::BMPRaster::topdown\fbool topdown\u0003Upp\aTOPDOWN\u000EUpp::BMPRaster\u000EUPP::BMPRASTER\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\u0004soff\u0005int64\u0014Upp::BMPRaster::soff\nint64 soff\u0003Upp\u0004SOFF\u000EUpp::BMPRaster\u000EUPP::BMPRASTER\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0003fmt\fRasterFormat\u0013Upp::BMPRaster::fmt\u0010RasterFormat fmt\u0003Upp\u0003FMT\u000EUpp::BMPRaster\u000EUPP::BMPRASTER\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0004info\fRaster::Info\u0014Upp::BMPRaster::info\u0011Raster::Info info\u0003Upp\u0004INFO\u000EUpp::BMPRaster\u000EUPP::BMPRASTER\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0000\u0003rle\u0010One<ImageRaster>\u0013Upp::BMPRaster::rle\u0014One<ImageRaster> rle\u0003Upp\u0003RLE\u000EUpp::BMPRaster\u000EUPP::BMPRASTER\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0000\u0000\u0004file\u0004bool\u0014Upp::BMPRaster::file\tbool file\u0003Upp\u0004FILE\u000EUpp::BMPRaster\u000EUPP::BMPRASTER\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0001\u0000\u0006Create\abool ()\u0018Upp::BMPRaster::Create()\rbool Create()\u0003Upp\u0006CREATE\u000EUpp::BMPRaster\u000EUPP::BMPRASTER\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0001\u0000\aGetInfo\aInfo ()\u0019Upp::BMPRaster::GetInfo()\u000EInfo GetInfo()\u0003Upp\aGETINFO\u000EUpp::BMPRaster\u000EUPP::BMPRASTER\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0001\u0000\aGetSize\aSize ()\u0019Upp::BMPRaster::GetSize()\u000ESize GetSize()\u0003Upp\aGETSIZE\u000EUpp::BMPRaster\u000EUPP::BMPRASTER\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0019\u0000\u0000\u0000\"\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0000\u0001\u0000\aGetLine\nLine (int)\u001CUpp::BMPRaster::GetLine(int)\u0016Line GetLine(int line)\u0003Upp\aGETLINE\u000EUpp::BMPRaster\u000EUPP::BMPRASTER\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001A\u0000\u0000\u0000\"\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0000\u0001\u0000\u000FGetPaletteCount\u0006int ()!Upp::BMPRaster::GetPaletteCount()\u0015int GetPaletteCount()\u0003Upp\u000FGETPALETTECOUNT\u000EUpp::BMPRaster\u000EUPP::BMPRASTER\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0000\u0001\u0000\nGetPalette\bRGBA *()\u001CUpp::BMPRaster::GetPalette()\u0012RGBA *GetPalette()\u0003Upp\nGETPALETTE\u000EUpp::BMPRaster\u000EUPP::BMPRASTER\u0000\u0000\u0015\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001C\u0000\u0000\u0000(\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0000\u0001\u0000\tGetFormat\u0016const RasterFormat *()\u001BUpp::BMPRaster::GetFormat()\u001Fconst RasterFormat *GetFormat()\u0003Upp\tGETFORMAT\u000EUpp::BMPRaster\u000EUPP::BMPRASTER\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001E\u0000\u0000\u0000,\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0000\tBMPRaster\vvoid (bool)\u001FUpp::BMPRaster::BMPRaster(bool)\u001BBMPRaster(bool file = true)\u0003Upp\tBMPRASTER\u000EUpp::BMPRaster\u000EUPP::BMPRASTER\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001F\u0000\u0000\u0000\r\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0000\u0000\u0000\n~BMPRaster\u0010void () noexcept\u0013Upp::BMPRaster::~()\f~BMPRaster()\u0003Upp\n~BMPRASTER\u000EUpp::BMPRaster\u000EUPP::BMPRASTER\u0000\u0000\u0004\u0000\u0000\u0000\u0006\u0000\u0000\u0000\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\"\u0000\u0000\u0000\u0001\u0000\u0000\u00005\u0000\u0000\u0000\u0001\u0000\u0000\nBMPEncoder\u000FUpp::BMPEncoder\u000FUpp::BMPEncoder'BMPEncoder : public StreamRasterEncoder\u0003Upp\nBMPENCODER\u000FUpp::BMPEncoder\u000FUPP::BMPENCODER\u0018Upp::StreamRasterEncoder\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\u0000#\u0000\u0000\u0000\u0017\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\trow_bytes\u0003int\u001AUpp::BMPEncoder::row_bytes\rint row_bytes\u0003Upp\tROW_BYTES\u000FUpp::BMPEncoder\u000FUPP::BMPENCODER\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000$\u0000\u0000\u0000\u0001\u0000\u0000\u0000$\u0000\u0000\u0000\u0013\u0000\u0000\u0000$\u0000\u0000\u0000\u0001\u0000\u0000\u0005linei\u0003int\u0016Upp::BMPEncoder::linei\tint linei\u0003Upp\u0005LINEI\u000FUpp::BMPEncoder\u000FUPP::BMPENCODER\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000%\u0000\u0000\u0000\u0001\u0000\u0000\u0000%\u0000\u0000\u0000\u0012\u0000\u0000\u0000%\u0000\u0000\u0000\u0001\u0000\u0000\u0004soff\u0005int64\u0015Upp::BMPEncoder::soff\nint64 soff\u0003Upp\u0004SOFF\u000FUpp::BMPEncoder\u000FUPP::BMPENCODER\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000&\u0000\u0000\u0000\u0001\u0000\u0000\u0000&\u0000\u0000\u0000\u0016\u0000\u0000\u0000&\u0000\u0000\u0000\u0001\u0000\u0000\bscanline\fBuffer<byte>\u0019Upp::BMPEncoder::scanline\u0015Buffer<byte> scanline\u0003Upp\bSCANLINE\u000FUpp::BMPEncoder\u000FUPP::BMPENCODER\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000'\u0000\u0000\u0000\u0001\u0000\u0000\u0000'\u0000\u0000\u0000\u0017\u0000\u0000\u0000'\u0000\u0000\u0000\u0001\u0000\u0000\tlinebytes\u0003int\u001AUpp::BMPEncoder::linebytes\rint linebytes\u0003Upp\tLINEBYTES\u000FUpp::BMPEncoder\u000FUPP::BMPENCODER\u0000\u0000\u0006\u0000\u0000\u0000\v\u0000\u0000\u0000)\u0000\u0000\u0000\u0001\u0000\u0000\u0000)\u0000\u0000\u0000\u000E\u0000\u0000\u0000)\u0000\u0000\u0000\u0001\u0000\u0000\u0003bpp\u0003int\u0014Upp::BMPEncoder::bpp\aint bpp\u0003Upp\u0003BPP\u000FUpp::BMPEncoder\u000FUPP::BMPENCODER\u0000\u0000\u0006\u0000\u0000\u0000\v\u0000\u0000\u0000*\u0000\u0000\u0000\u0001\u0000\u0000\u0000*\u0000\u0000\u0000\u0014\u0000\u0000\u0000*\u0000\u0000\u0000\u0001\u0000\u0000\tgrayscale\u0004bool\u001AUpp::BMPEncoder::grayscale\u000Ebool grayscale\u0003Upp\tGRAYSCALE\u000FUpp::BMPEncoder\u000FUPP::BMPENCODER\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000-\u0000\u0000\u0000\u0001\u0000\u0000\u0000-\u0000\u0000\u0000\u001F\u0000\u0000\u0000-\u0000\u0000\u0000\u0000\u0001\u0000\u000FGetPaletteCount\u0006int ()\"Upp::BMPEncoder::GetPaletteCount()\u0015int GetPaletteCount()\u0003Upp\u000FGETPALETTECOUNT\u000FUpp::BMPEncoder\u000FUPP::BMPENCODER\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000.\u0000\u0000\u0000\u0001\u0000\u0000\u0000.\u0000\u0000\u0000\u001C\u0000\u0000\u0000.\u0000\u0000\u0000\u0000\u0001\u0000\u0005Start\vvoid (Size)\u001CUpp::BMPEncoder::Start(Size)\u0013void Start(Size sz)\u0003Upp\u0005START\u000FUpp::BMPEncoder\u000FUPP::BMPENCODER\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000/\u0000\u0000\u0000\u0001\u0000\u0000\u0000/\u0000\u0000\u0000,\u0000\u0000\u0000/\u0000\u0000\u0000\u0000\u0001\u0000\fWriteLineRaw\u0013void (const byte *)*Upp::BMPEncoder::WriteLineRaw(const byte*)#void WriteLineRaw(const byte *data)\u0003Upp\fWRITELINERAW\u000FUpp::BMPEncoder\u000FUPP::BMPENCODER\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u00001\u0000\u0000\u0000\u0001\u0000\u0000\u00001\u0000\u0000\u0000I\u0000\u0000\u00001\u0000\u0000\u0000\u0001\u0000\u0000\u0003Bpp\u0011BMPEncoder &(int)\u0019Upp::BMPEncoder::Bpp(int)\u0019BMPEncoder& Bpp(int _bpp)\u0003Upp\u0003BPP\u000FUpp::BMPEncoder\u000FUPP::BMPENCODER\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u00002\u0000\u0000\u0000\u0001\u0000\u0000\u00002\u0000\u0000\u0000M\u0000\u0000\u00002\u0000\u0000\u0000\u0001\u0000\u0000\u0004Mono\u0012BMPEncoder &(bool)\u001BUpp::BMPEncoder::Mono(bool) BMPEncoder& Mono(bool gs = true)\u0003Upp\u0004MONO\u000FUpp::BMPEncoder\u000FUPP::BMPENCODER\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u00004\u0000\u0000\u0000\u0001\u0000\u0000\u00004\u0000\u0000\u0000K\u0000\u0000\u00004\u0000\u0000\u0000\u0001\u0000\u0000\nBMPEncoder\u0010void (int, bool)%Upp::BMPEncoder::BMPEncoder(int,bool)*BMPEncoder(int _bpp = 24, bool gs = false)\u0003Upp\nBMPENCODER\u000FUpp::BMPEncoder\u000FUPP::BMPENCODER\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u00007\u0000\u0000\u0000\u0000\u0000\u0000\u00007\u0000\u0000\u0000\u0001\u0000\u0000\u0000>\u0000\u0000\u0000\u0001\u0000\u0000C(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\bmp\\bmp.h:56:1)HUpp::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\bmp\\bmp.h:56:1)=Upp::(unnamed at C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\bmp\\bmp.)\u0004enum\u0003UppC(UNNAMED ENUM AT C:\\USERS\\SBLO\\AI-UPP\\UPPSRC\\PLUGIN\\BMP\\BMP.H:56:1)\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u00008\u0000\u0000\u0000\u0001\u0000\u0000\u00008\u0000\u0000\u0000\u0011\u0000\u0000\u00008\u0000\u0000\u0000\u0001\u0000\u0000\aWI_MONOHUpp::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\bmp\\bmp.h:56:1)\fUpp::WI_MONO\aWI_MONO\u0003Upp\aWI_MONO\u0003Upp\u0003UPP\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u00009\u0000\u0000\u0000\u0001\u0000\u0000\u00009\u0000\u0000\u0000\u0011\u0000\u0000\u00009\u0000\u0000\u0000\u0001\u0000\u0000\aWI_4BITHUpp::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\bmp\\bmp.h:56:1)\fUpp::WI_4BIT\aWI_4BIT\u0003Upp\aWI_4BIT\u0003Upp\u0003UPP\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000:\u0000\u0000\u0000\u0001\u0000\u0000\u0000:\u0000\u0000\u0000\u0011\u0000\u0000\u0000:\u0000\u0000\u0000\u0001\u0000\u0000\aWI_8BITHUpp::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\bmp\\bmp.h:56:1)\fUpp::WI_8BIT\aWI_8BIT\u0003Upp\aWI_8BIT\u0003Upp\u0003UPP\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000;\u0000\u0000\u0000\u0001\u0000\u0000\u0000;\u0000\u0000\u0000\u0011\u0000\u0000\u0000;\u0000\u0000\u0000\u0001\u0000\u0000\bWI_32BITHUpp::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\bmp\\bmp.h:56:1)\rUpp::WI_32BIT\bWI_32BIT\u0003Upp\bWI_32BIT\u0003Upp\u0003UPP\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000<\u0000\u0000\u0000\u0001\u0000\u0000\u0000<\u0000\u0000\u0000)\u0000\u0000\u0000<\u0000\u0000\u0000\u0001\u0000\u0000\bWI_COLORHUpp::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\bmp\\bmp.h:56:1)\rUpp::WI_COLOR\bWI_COLOR\u0003Upp\bWI_COLOR\u0003Upp\u0003UPP\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000=\u0000\u0000\u0000\u0001\u0000\u0000\u0000=\u0000\u0000\u0000\u0011\u0000\u0000\u0000=\u0000\u0000\u0000\u0001\u0000\u0000\tWI_CURSORHUpp::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\bmp\\bmp.h:56:1)\u000EUpp::WI_CURSOR\tWI_CURSOR\u0003Upp\tWI_CURSOR\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u000E\u0000\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0000\u0000\u0000;\u0000\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\bReadIcon\u001CVector<Image> (String, bool)\u001AUpp::ReadIcon(String,bool);Vector<Image> ReadIcon(String data, bool just_best = false)\u0003Upp\bREADICON\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u000E\u0000\u0000\u0000A\u0000\u0000\u0000\u0000\u0000\u0000\u0000A\u0000\u0000\u0000I\u0000\u0000\u0000A\u0000\u0000\u0000\u0000\u0000\u0000\tWriteIcon#String (const Vector<Image> &, int)!Upp::WriteIcon(const Vector&,int)BString WriteIcon(const Vector<Image>& icons, int flags = WI_COLOR)\u0003Upp\tWRITEICON\u0003Upp\u0003UPP\u0000\u0000end\u0000l\u001F\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\bmp\\bmphdr.h","value":"data*õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u000F_nImage__bmp_h_\u0000\u000F_nImage__bmp_h_\u000F_nImage__bmp_h_\u0000\u000F_NIMAGE__BMP_H_\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0000\u000EBMP_FILEHEADER\u0013Upp::BMP_FILEHEADER\u0013Upp::BMP_FILEHEADER&__attribute__((packed)) BMP_FILEHEADER\u0003Upp\u000EBMP_FILEHEADER\u0013Upp::BMP_FILEHEADER\u0013UPP::BMP_FILEHEADER\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\b\u0000\u0000\u0000\u000F\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0006bfType\u0004word\u001BUpp::BMP_FILEHEADER::bfType\vword bfType\u0003Upp\u0006BFTYPE\u0013Upp::BMP_FILEHEADER\u0013UPP::BMP_FILEHEADER\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\t\u0000\u0000\u0000\u0001\u0000\u0000\u0000\t\u0000\u0000\u0000\u000F\u0000\u0000\u0000\t\u0000\u0000\u0000\u0001\u0000\u0000\u0006bfSize\u0005dword\u001BUpp::BMP_FILEHEADER::bfSize\fdword bfSize\u0003Upp\u0006BFSIZE\u0013Upp::BMP_FILEHEADER\u0013UPP::BMP_FILEHEADER\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0000\u0000\u0000\n\u0000\u0000\u0000\u0014\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0000\u0000\vbfReserved1\u0004word Upp::BMP_FILEHEADER::bfReserved1\u0010word bfReserved1\u0003Upp\vBFRESERVED1\u0013Upp::BMP_FILEHEADER\u0013UPP::BMP_FILEHEADER\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\v\u0000\u0000\u0000\u0001\u0000\u0000\u0000\v\u0000\u0000\u0000\u0014\u0000\u0000\u0000\v\u0000\u0000\u0000\u0001\u0000\u0000\vbfReserved2\u0004word Upp::BMP_FILEHEADER::bfReserved2\u0010word bfReserved2\u0003Upp\vBFRESERVED2\u0013Upp::BMP_FILEHEADER\u0013UPP::BMP_FILEHEADER\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\f\u0000\u0000\u0000\u0001\u0000\u0000\u0000\f\u0000\u0000\u0000\u0012\u0000\u0000\u0000\f\u0000\u0000\u0000\u0001\u0000\u0000\tbfOffBits\u0005dword\u001EUpp::BMP_FILEHEADER::bfOffBits\u000Fdword bfOffBits\u0003Upp\tBFOFFBITS\u0013Upp::BMP_FILEHEADER\u0013UPP::BMP_FILEHEADER\u0000\u0000\u0015\u0000\u0000\u0000\t\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0001\u0000\u0000\nSwapEndian\avoid ()!Upp::BMP_FILEHEADER::SwapEndian()\u0011void SwapEndian()\u0003Upp\nSWAPENDIAN\u0013Upp::BMP_FILEHEADER\u0013UPP::BMP_FILEHEADER\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0001\u0000\u0000\u0000:\u0000\u0000\u0000\u0001\u0000\u0000\u000EBMP_INFOHEADER\u0013Upp::BMP_INFOHEADER\u0013Upp::BMP_INFOHEADER&__attribute__((packed)) BMP_INFOHEADER\u0003Upp\u000EBMP_INFOHEADER\u0013Upp::BMP_INFOHEADER\u0013UPP::BMP_INFOHEADER\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0000\u0006biSize\u0005dword\u001BUpp::BMP_INFOHEADER::biSize\fdword biSize\u0003Upp\u0006BISIZE\u0013Upp::BMP_INFOHEADER\u0013UPP::BMP_INFOHEADER\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0001\u0000\u0000\abiWidth\u0005int32\u001CUpp::BMP_INFOHEADER::biWidth\rint32 biWidth\u0003Upp\aBIWIDTH\u0013Upp::BMP_INFOHEADER\u0013UPP::BMP_INFOHEADER\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\u0000 \u0000\u0000\u0000\u0014\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\bbiHeight\u0005int32\u001DUpp::BMP_INFOHEADER::biHeight\u000Eint32 biHeight\u0003Upp\bBIHEIGHT\u0013Upp::BMP_INFOHEADER\u0013UPP::BMP_INFOHEADER\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000!\u0000\u0000\u0000\u0001\u0000\u0000\u0000!\u0000\u0000\u0000\u0014\u0000\u0000\u0000!\u0000\u0000\u0000\u0001\u0000\u0000\bbiPlanes\u0004word\u001DUpp::BMP_INFOHEADER::biPlanes\rword biPlanes\u0003Upp\bBIPLANES\u0013Upp::BMP_INFOHEADER\u0013UPP::BMP_INFOHEADER\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000\"\u0000\u0000\u0000\u0001\u0000\u0000\u0000\"\u0000\u0000\u0000\u0016\u0000\u0000\u0000\"\u0000\u0000\u0000\u0001\u0000\u0000\nbiBitCount\u0004word\u001FUpp::BMP_INFOHEADER::biBitCount\u000Fword biBitCount\u0003Upp\nBIBITCOUNT\u0013Upp::BMP_INFOHEADER\u0013UPP::BMP_INFOHEADER\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\u0000#\u0000\u0000\u0000\u0019\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\rbiCompression\u0005dword\"Upp::BMP_INFOHEADER::biCompression\u0013dword biCompression\u0003Upp\rBICOMPRESSION\u0013Upp::BMP_INFOHEADER\u0013UPP::BMP_INFOHEADER\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000$\u0000\u0000\u0000\u0001\u0000\u0000\u0000$\u0000\u0000\u0000\u0017\u0000\u0000\u0000$\u0000\u0000\u0000\u0001\u0000\u0000\vbiSizeImage\u0005dword Upp::BMP_INFOHEADER::biSizeImage\u0011dword biSizeImage\u0003Upp\vBISIZEIMAGE\u0013Upp::BMP_INFOHEADER\u0013UPP::BMP_INFOHEADER\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000%\u0000\u0000\u0000\u0001\u0000\u0000\u0000%\u0000\u0000\u0000\u001B\u0000\u0000\u0000%\u0000\u0000\u0000\u0001\u0000\u0000\u000FbiXPelsPerMeter\u0005int32$Upp::BMP_INFOHEADER::biXPelsPerMeter\u0015int32 biXPelsPerMeter\u0003Upp\u000FBIXPELSPERMETER\u0013Upp::BMP_INFOHEADER\u0013UPP::BMP_INFOHEADER\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000&\u0000\u0000\u0000\u0001\u0000\u0000\u0000&\u0000\u0000\u0000\u001B\u0000\u0000\u0000&\u0000\u0000\u0000\u0001\u0000\u0000\u000FbiYPelsPerMeter\u0005int32$Upp::BMP_INFOHEADER::biYPelsPerMeter\u0015int32 biYPelsPerMeter\u0003Upp\u000FBIYPELSPERMETER\u0013Upp::BMP_INFOHEADER\u0013UPP::BMP_INFOHEADER\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000'\u0000\u0000\u0000\u0001\u0000\u0000\u0000'\u0000\u0000\u0000\u0015\u0000\u0000\u0000'\u0000\u0000\u0000\u0001\u0000\u0000\tbiClrUsed\u0005dword\u001EUpp::BMP_INFOHEADER::biClrUsed\u000Fdword biClrUsed\u0003Upp\tBICLRUSED\u0013Upp::BMP_INFOHEADER\u0013UPP::BMP_INFOHEADER\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000(\u0000\u0000\u0000\u0001\u0000\u0000\u0000(\u0000\u0000\u0000\u001A\u0000\u0000\u0000(\u0000\u0000\u0000\u0001\u0000\u0000\u000EbiClrImportant\u0005dword#Upp::BMP_INFOHEADER::biClrImportant\u0014dword biClrImportant\u0003Upp\u000EBICLRIMPORTANT\u0013Upp::BMP_INFOHEADER\u0013UPP::BMP_INFOHEADER\u0000\u0000\u0015\u0000\u0000\u0000\t\u0000\u0000\u0000*\u0000\u0000\u0000\u0001\u0000\u0000\u0000*\u0000\u0000\u0000\u0002\u0000\u0000\u00009\u0000\u0000\u0000\u0001\u0000\u0000\nSwapEndian\avoid ()!Upp::BMP_INFOHEADER::SwapEndian()\u0011void SwapEndian()\u0003Upp\nSWAPENDIAN\u0013Upp::BMP_INFOHEADER\u0013UPP::BMP_INFOHEADER\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0000\u0000\u0000\u0001\u0000\u0000\u0000F\u0000\u0000\u0000\u0001\u0000\u0000\aBMP_RGB\fUpp::BMP_RGB\fUpp::BMP_RGB\aBMP_RGB\u0003Upp\aBMP_RGB\fUpp::BMP_RGB\fUPP::BMP_RGB\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000B\u0000\u0000\u0000\u0004\u0000\u0000\u0000B\u0000\u0000\u0000\u0013\u0000\u0000\u0000B\u0000\u0000\u0000\u0001\u0000\u0000\argbBlue\u0004byte\u0015Upp::BMP_RGB::rgbBlue\fbyte rgbBlue\u0003Upp\aRGBBLUE\fUpp::BMP_RGB\fUPP::BMP_RGB\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000C\u0000\u0000\u0000\u0004\u0000\u0000\u0000C\u0000\u0000\u0000\u0014\u0000\u0000\u0000C\u0000\u0000\u0000\u0001\u0000\u0000\brgbGreen\u0004byte\u0016Upp::BMP_RGB::rgbGreen\rbyte rgbGreen\u0003Upp\bRGBGREEN\fUpp::BMP_RGB\fUPP::BMP_RGB\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000D\u0000\u0000\u0000\u0004\u0000\u0000\u0000D\u0000\u0000\u0000\u0012\u0000\u0000\u0000D\u0000\u0000\u0000\u0001\u0000\u0000\u0006rgbRed\u0004byte\u0014Upp::BMP_RGB::rgbRed\vbyte rgbRed\u0003Upp\u0006RGBRED\fUpp::BMP_RGB\fUPP::BMP_RGB\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000E\u0000\u0000\u0000\u0004\u0000\u0000\u0000E\u0000\u0000\u0000\u0017\u0000\u0000\u0000E\u0000\u0000\u0000\u0001\u0000\u0000\vrgbReserved\u0004byte\u0019Upp::BMP_RGB::rgbReserved\u0010byte rgbReserved\u0003Upp\vRGBRESERVED\fUpp::BMP_RGB\fUPP::BMP_RGB\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000H\u0000\u0000\u0000\u0000\u0000\u0000\u0000H\u0000\u0000\u0000\u0001\u0000\u0000\u0000L\u0000\u0000\u0000\u0001\u0000\u0000\vBMP_ICONDIR\u0010Upp::BMP_ICONDIR\u0010Upp::BMP_ICONDIR#__attribute__((packed)) BMP_ICONDIR\u0003Upp\vBMP_ICONDIR\u0010Upp::BMP_ICONDIR\u0010UPP::BMP_ICONDIR\u0000\u0000\u0006\u0000\u0000\u0000\u0010\u0000\u0000\u0000I\u0000\u0000\u0000\u0001\u0000\u0000\u0000I\u0000\u0000\u0000\u001A\u0000\u0000\u0000I\u0000\u0000\u0000\u0001\u0000\u0000\nidReserved\u0004word\u001CUpp::BMP_ICONDIR::idReserved\u000Fword idReserved\u0003Upp\nIDRESERVED\u0010Upp::BMP_ICONDIR\u0010UPP::BMP_ICONDIR\u0000\u0000\u0006\u0000\u0000\u0000\u0010\u0000\u0000\u0000J\u0000\u0000\u0000\u0001\u0000\u0000\u0000J\u0000\u0000\u0000\u0016\u0000\u0000\u0000J\u0000\u0000\u0000\u0001\u0000\u0000\u0006idType\u0004word\u0018Upp::BMP_ICONDIR::idType\vword idType\u0003Upp\u0006IDTYPE\u0010Upp::BMP_ICONDIR\u0010UPP::BMP_ICONDIR\u0000\u0000\u0006\u0000\u0000\u0000\u0010\u0000\u0000\u0000K\u0000\u0000\u0000\u0001\u0000\u0000\u0000K\u0000\u0000\u0000\u0017\u0000\u0000\u0000K\u0000\u0000\u0000\u0001\u0000\u0000\aidCount\u0004word\u0019Upp::BMP_ICONDIR::idCount\fword idCount\u0003Upp\aIDCOUNT\u0010Upp::BMP_ICONDIR\u0010UPP::BMP_ICONDIR\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000R\u0000\u0000\u0000\u0000\u0000\u0000\u0000R\u0000\u0000\u0000\u0001\u0000\u0000\u0000[\u0000\u0000\u0000\u0001\u0000\u0000\u0010BMP_ICONDIRENTRY\u0015Upp::BMP_ICONDIRENTRY\u0015Upp::BMP_ICONDIRENTRY(__attribute__((packed)) BMP_ICONDIRENTRY\u0003Upp\u0010BMP_ICONDIRENTRY\u0015Upp::BMP_ICONDIRENTRY\u0015UPP::BMP_ICONDIRENTRY\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000S\u0000\u0000\u0000\u0001\u0000\u0000\u0000S\u0000\u0000\u0000\u0013\u0000\u0000\u0000S\u0000\u0000\u0000\u0001\u0000\u0000\u0006bWidth\u0004byte\u001DUpp::BMP_ICONDIRENTRY::bWidth\vbyte bWidth\u0003Upp\u0006BWIDTH\u0015Upp::BMP_ICONDIRENTRY\u0015UPP::BMP_ICONDIRENTRY\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000T\u0000\u0000\u0000\u0001\u0000\u0000\u0000T\u0000\u0000\u0000\u0014\u0000\u0000\u0000T\u0000\u0000\u0000\u0001\u0000\u0000\abHeight\u0004byte\u001EUpp::BMP_ICONDIRENTRY::bHeight\fbyte bHeight\u0003Upp\aBHEIGHT\u0015Upp::BMP_ICONDIRENTRY\u0015UPP::BMP_ICONDIRENTRY\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000U\u0000\u0000\u0000\u0001\u0000\u0000\u0000U\u0000\u0000\u0000\u0018\u0000\u0000\u0000U\u0000\u0000\u0000\u0001\u0000\u0000\vbColorCount\u0004byte\"Upp::BMP_ICONDIRENTRY::bColorCount\u0010byte bColorCount\u0003Upp\vBCOLORCOUNT\u0015Upp::BMP_ICONDIRENTRY\u0015UPP::BMP_ICONDIRENTRY\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000V\u0000\u0000\u0000\u0001\u0000\u0000\u0000V\u0000\u0000\u0000\u0016\u0000\u0000\u0000V\u0000\u0000\u0000\u0001\u0000\u0000\tbReserved\u0004byte Upp::BMP_ICONDIRENTRY::bReserved\u000Ebyte bReserved\u0003Upp\tBRESERVED\u0015Upp::BMP_ICONDIRENTRY\u0015UPP::BMP_ICONDIRENTRY\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000W\u0000\u0000\u0000\u0001\u0000\u0000\u0000W\u0000\u0000\u0000\u0016\u0000\u0000\u0000W\u0000\u0000\u0000\u0001\u0000\u0000\twHotSpotX\u0005short Upp::BMP_ICONDIRENTRY::wHotSpotX\u000Fshort wHotSpotX\u0003Upp\tWHOTSPOTX\u0015Upp::BMP_ICONDIRENTRY\u0015UPP::BMP_ICONDIRENTRY\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000X\u0000\u0000\u0000\u0001\u0000\u0000\u0000X\u0000\u0000\u0000\u0016\u0000\u0000\u0000X\u0000\u0000\u0000\u0001\u0000\u0000\twHotSpotY\u0005short Upp::BMP_ICONDIRENTRY::wHotSpotY\u000Fshort wHotSpotY\u0003Upp\tWHOTSPOTY\u0015Upp::BMP_ICONDIRENTRY\u0015UPP::BMP_ICONDIRENTRY\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000Y\u0000\u0000\u0000\u0001\u0000\u0000\u0000Y\u0000\u0000\u0000\u0019\u0000\u0000\u0000Y\u0000\u0000\u0000\u0001\u0000\u0000\fdwBytesInRes\u0005dword#Upp::BMP_ICONDIRENTRY::dwBytesInRes\u0012dword dwBytesInRes\u0003Upp\fDWBYTESINRES\u0015Upp::BMP_ICONDIRENTRY\u0015UPP::BMP_ICONDIRENTRY\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000Z\u0000\u0000\u0000\u0001\u0000\u0000\u0000Z\u0000\u0000\u0000\u001A\u0000\u0000\u0000Z\u0000\u0000\u0000\u0001\u0000\u0000\rdwImageOffset\u0005dword$Upp::BMP_ICONDIRENTRY::dwImageOffset\u0013dword dwImageOffset\u0003Upp\rDWIMAGEOFFSET\u0015Upp::BMP_ICONDIRENTRY\u0015UPP::BMP_ICONDIRENTRY\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000e\u0000\u0000\u0000\u0001\u0000\u0000\u0000h\u0000\u0000\u0000\u0001\u0000\u0000\tBMPHeader\u000EUpp::BMPHeader\u000EUpp::BMPHeader!BMPHeader : public BMP_INFOHEADER\u0003Upp\tBMPHEADER\u000EUpp::BMPHeader\u000EUPP::BMPHEADER\u0013Upp::BMP_INFOHEADER\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000g\u0000\u0000\u0000\u0001\u0000\u0000\u0000g\u0000\u0000\u0000\u0015\u0000\u0000\u0000g\u0000\u0000\u0000\u0001\u0000\u0000\apalette\fBMP_RGB[256]\u0017Upp::BMPHeader::palette\u0014BMP_RGB palette[256]\u0003Upp\aPALETTE\u000EUpp::BMPHeader\u000EUPP::BMPHEADER\u0000\u0000end\u0000,\u0018\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\bmp\\Bmp.cpp","value":"data\u000E\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u00004\u0000\u0000\u0000\u0001\u0000\u0000\rLoadBMPHeader\"bool (Stream &, BMPHeader &, bool)+Upp::LoadBMPHeader(Stream&,BMPHeader&,bool)@bool LoadBMPHeader(Stream& stream, BMPHeader& header, bool file)\u0003Upp\rLOADBMPHEADER\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u00006\u0000\u0000\u0000\u0000\u0000\u0000\u00006\u0000\u0000\u0000\u0001\u0000\u0000\u0000<\u0000\u0000\u0000\u0001\u0000\u0001\nGetDotSize\u0015Size (Size, int, int)\u001DUpp::GetDotSize(Size,int,int)9static Size GetDotSize(Size pixel_size, int xpm, int ypm)\u0003Upp\nGETDOTSIZE\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000>\u0000\u0000\u0000\u0000\u0000\u0000\u0000>\u0000\u0000\u0000\u0001\u0000\u0000\u0000î\u0000\u0000\u0000\u0001\u0001\u0000\u0006Create\abool ()\u0018Upp::BMPRaster::Create()\rbool Create()\u0003Upp\u0006CREATE\u000EUpp::BMPRaster\u000EUPP::BMPRASTER\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000ð\u0000\u0000\u0000\u0000\u0000\u0000\u0000ð\u0000\u0000\u0000\u0001\u0000\u0000\u0000ó\u0000\u0000\u0000\u0001\u0001\u0000\aGetSize\aSize ()\u0019Upp::BMPRaster::GetSize()\u000ESize GetSize()\u0003Upp\aGETSIZE\u000EUpp::BMPRaster\u000EUPP::BMPRASTER\u0000\u0000\u0015\u0000\u0000\u0000\u0018\u0000\u0000\u0000õ\u0000\u0000\u0000\u0000\u0000\u0000\u0000õ\u0000\u0000\u0000\u0001\u0000\u0000\u0000ø\u0000\u0000\u0000\u0001\u0001\u0000\aGetInfo\u000FRaster::Info ()\u0019Upp::BMPRaster::GetInfo()\u0016Raster::Info GetInfo()\u0003Upp\aGETINFO\u000EUpp::BMPRaster\u000EUPP::BMPRASTER\u0000\u0000\u0015\u0000\u0000\u0000\u0018\u0000\u0000\u0000ú\u0000\u0000\u0000\u0000\u0000\u0000\u0000ú\u0000\u0000\u0000\u0001\u0000\u0000\u0000\t\u0001\u0000\u0000\u0001\u0001\u0000\aGetLine\u0012Raster::Line (int)\u001CUpp::BMPRaster::GetLine(int)\u001ERaster::Line GetLine(int line)\u0003Upp\aGETLINE\u000EUpp::BMPRaster\u000EUPP::BMPRASTER\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000\v\u0001\u0000\u0000\u0000\u0000\u0000\u0000\v\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u000E\u0001\u0000\u0000\u0001\u0001\u0000\u000FGetPaletteCount\u0006int ()!Upp::BMPRaster::GetPaletteCount()\u0015int GetPaletteCount()\u0003Upp\u000FGETPALETTECOUNT\u000EUpp::BMPRaster\u000EUPP::BMPRASTER\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0010\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0001\u0001\u0000\nGetPalette\bRGBA *()\u001CUpp::BMPRaster::GetPalette()\u0012RGBA *GetPalette()\u0003Upp\nGETPALETTE\u000EUpp::BMPRaster\u000EUPP::BMPRASTER\u0000\u0000\u0015\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0018\u0001\u0000\u0000\u0001\u0001\u0000\tGetFormat\u0016const RasterFormat *()\u001BUpp::BMPRaster::GetFormat()\u001Fconst RasterFormat *GetFormat()\u0003Upp\tGETFORMAT\u000EUpp::BMPRaster\u000EUPP::BMPRASTER\u0000\u0000\u0019\u0000\u0000\u0000\v\u0000\u0000\u0000\u001A\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u001A\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u001C\u0001\u0000\u0000\u0001\u0000\u0000\n~BMPRaster\u0010void () noexcept\u0013Upp::BMPRaster::~()\f~BMPRaster()\u0003Upp\n~BMPRASTER\u000EUpp::BMPRaster\u000EUPP::BMPRASTER\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0001\u0000\u0000\u0000!\u0001\u0000\u0000\u0001\u0000\u0000\u0019BMPRaster__initializer_fn\avoid () Upp::BMPRaster__initializer_fn() void BMPRaster__initializer_fn()\u0003Upp\u0019BMPRASTER__INITIALIZER_FN\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0016\u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0001\u0000\u0000\u0016BMPRaster__initializer\avoid ()\u001DUpp::BMPRaster__initializer()\u001Dvoid BMPRaster__initializer()\u0003Upp\u0016BMPRASTER__INITIALIZER\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0016\u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0000\u0000\u0000\u0019BMPRaster__initializer_fn\avoid () Upp::BMPRaster__initializer_fn() void BMPRaster__initializer_fn()\u0003Upp\u0019BMPRASTER__INITIALIZER_FN\u0003Upp\u0003UPP\u0000\u0000end\u0000+\b\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\bmp\\BmpWrite.cpp","value":"data\u0004\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0001\u0000\u000FGetPaletteCount\u0006int ()\"Upp::BMPEncoder::GetPaletteCount()\u0015int GetPaletteCount()\u0003Upp\u000FGETPALETTECOUNT\u000FUpp::BMPEncoder\u000FUPP::BMPENCODER\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0001\u0000\u0000\u0000M\u0000\u0000\u0000\u0001\u0001\u0000\u0005Start\vvoid (Size)\u001CUpp::BMPEncoder::Start(Size)\u0015void Start(Size size)\u0003Upp\u0005START\u000FUpp::BMPEncoder\u000FUPP::BMPENCODER\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000O\u0000\u0000\u0000\u0000\u0000\u0000\u0000O\u0000\u0000\u0000\u0001\u0000\u0000\u0000T\u0000\u0000\u0000\u0001\u0001\u0000\fWriteLineRaw\u0013void (const byte *)*Upp::BMPEncoder::WriteLineRaw(const byte*) void WriteLineRaw(const byte *s)\u0003Upp\fWRITELINERAW\u000FUpp::BMPEncoder\u000FUPP::BMPENCODER\u0000\u0000end\u0000ý\u0001\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\bmp\\Icon.cpp","value":"data\u0003\b\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\bReadIcon\u001CVector<Image> (String, bool)\u001AUpp::ReadIcon(String,bool);Vector<Image> ReadIcon(String data, bool just_best = false)\u0003Upp\bREADICON\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000é\u0000\u0000\u0000\u0001\u0000\u0000\tWriteIcon#String (const Vector<Image> &, int)!Upp::WriteIcon(const Vector&,int)BString WriteIcon(const Vector<Image>& icons, int flags = WI_COLOR)\u0003Upp\tWRITEICON\u0003Upp\u0003UPP\u0000\u0000end\u0000\u0001\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\bmp\\BmpReg.icpp","value":"data\u0001end\u0000\t\u0000\u0000\u0000"}]}