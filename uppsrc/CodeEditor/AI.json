{"source_files":[{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CodeEditor.t","value":"data\u0001end\u0000\t\u0000\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Register.cpp","value":"data\u0006\u0015\u0000\u0000\u00009\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0004defs-ArrayMap<String, EditorSyntax::SyntaxDef> &()\u0019Upp::EditorSyntax::defs()1ArrayMap<String, EditorSyntax::SyntaxDef>& defs()\u0003Upp\u0004DEFS\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\bRegister\"void (char *, int, char *, char *)2Upp::EditorSyntax::Register(char*,int,char*,char*)Cvoid Register(char *id, int factory, char *exts, char *description)\u0003Upp\bREGISTER\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000 \u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0001\u0000\u0000\u0006Create\u001AOne<EditorSyntax> (char *) Upp::EditorSyntax::Create(char*)\"One<EditorSyntax> Create(char *id)\u0003Upp\u0006CREATE\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0000\u0000%\u0000\u0000\u0000\u0001\u0000\u0000\u0014GetSyntaxForFilename\u000FString (char *).Upp::EditorSyntax::GetSyntaxForFilename(char*)%String GetSyntaxForFilename(char *fn)\u0003Upp\u0014GETSYNTAXFORFILENAME\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000'\u0000\u0000\u0000\u0000\u0000\u0000\u0000'\u0000\u0000\u0000\u0001\u0000\u0000\u00000\u0000\u0000\u0000\u0001\u0000\u0000\u0014GetSyntaxDescription\fString (int),Upp::EditorSyntax::GetSyntaxDescription(int)\"String GetSyntaxDescription(int i)\u0003Upp\u0014GETSYNTAXDESCRIPTION\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000end\u0000)\u0004\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\HighlightOut.cpp","value":"data\v\u0018\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\v\u0000\u0000\u0000\u0001\u0000\u0000\u000FHighlightOutput$void (Vector<LineEdit::Highlight> &).Upp::HighlightOutput::HighlightOutput(Vector&)/HighlightOutput(Vector<LineEdit::Highlight>& v)\u0003Upp\u000FHIGHLIGHTOUTPUT\u0014Upp::HighlightOutput\u0014UPP::HIGHLIGHTOUTPUT\u0000\u0000\u0019\u0000\u0000\u0000\u0011\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0001\u0000\u0000\u0010~HighlightOutput\u0010void () noexcept\u0019Upp::HighlightOutput::~()\u0012~HighlightOutput()\u0003Upp\u0010~HIGHLIGHTOUTPUT\u0014Upp::HighlightOutput\u0014UPP::HIGHLIGHTOUTPUT\u0000\u0000\u0015\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0000\u0000$\u0000\u0000\u0000\u0001\u0000\u0000\u0003Set\u001Avoid (int, int, HlStyle &)+Upp::HighlightOutput::Set(int,int,HlStyle&)*void Set(int pos, int count, HlStyle& ink)\u0003Upp\u0003SET\u0014Upp::HighlightOutput\u0014UPP::HIGHLIGHTOUTPUT\u0000\u0000\u0015\u0000\u0000\u0000\u0016\u0000\u0000\u0000&\u0000\u0000\u0000\u0000\u0000\u0000\u0000&\u0000\u0000\u0000\u0001\u0000\u0000\u00003\u0000\u0000\u0000\u0001\u0000\u0000\aSetFont\u001Avoid (int, int, HlStyle &)/Upp::HighlightOutput::SetFont(int,int,HlStyle&),void SetFont(int pos, int count, HlStyle& f)\u0003Upp\aSETFONT\u0014Upp::HighlightOutput\u0014UPP::HIGHLIGHTOUTPUT\u0000\u0000\u0015\u0000\u0000\u0000\u0016\u0000\u0000\u00005\u0000\u0000\u0000\u0000\u0000\u0000\u00005\u0000\u0000\u0000\u0001\u0000\u0000\u0000;\u0000\u0000\u0000\u0001\u0000\u0000\bSetPaper\u0016void (int, int, Color)-Upp::HighlightOutput::SetPaper(int,int,Color).void SetPaper(int pos, int count, Color paper)\u0003Upp\bSETPAPER\u0014Upp::HighlightOutput\u0014UPP::HIGHLIGHTOUTPUT\u0000\u0000\u0015\u0000\u0000\u0000\u0016\u0000\u0000\u0000=\u0000\u0000\u0000\u0000\u0000\u0000\u0000=\u0000\u0000\u0000\u0001\u0000\u0000\u0000C\u0000\u0000\u0000\u0001\u0000\u0000\bSetFlags\u0015void (int, int, word),Upp::HighlightOutput::SetFlags(int,int,word)-void SetFlags(int pos, int count, word flags)\u0003Upp\bSETFLAGS\u0014Upp::HighlightOutput\u0014UPP::HIGHLIGHTOUTPUT\u0000\u0000\u0015\u0000\u0000\u0000\u0016\u0000\u0000\u0000E\u0000\u0000\u0000\u0000\u0000\u0000\u0000E\u0000\u0000\u0000\u0001\u0000\u0000\u0000K\u0000\u0000\u0000\u0001\u0000\u0000\u0006SetInk\u0016void (int, int, Color)+Upp::HighlightOutput::SetInk(int,int,Color)*void SetInk(int pos, int count, Color ink)\u0003Upp\u0006SETINK\u0014Upp::HighlightOutput\u0014UPP::HIGHLIGHTOUTPUT\u0000\u0000\u0015\u0000\u0000\u0000\u0016\u0000\u0000\u0000M\u0000\u0000\u0000\u0000\u0000\u0000\u0000M\u0000\u0000\u0000\u0001\u0000\u0000\u0000R\u0000\u0000\u0000\u0001\u0000\u0000\u0003Put\u001Cvoid (int, HlStyle &, Color)-Upp::HighlightOutput::Put(int,HlStyle&,Color).void Put(int count, HlStyle& ink, Color paper)\u0003Upp\u0003PUT\u0014Upp::HighlightOutput\u0014UPP::HIGHLIGHTOUTPUT\u0000\u0000\u0015\u0000\u0000\u0000\u0016\u0000\u0000\u0000T\u0000\u0000\u0000\u0000\u0000\u0000\u0000T\u0000\u0000\u0000\u0001\u0000\u0000\u0000W\u0000\u0000\u0000\u0001\u0000\u0000\u0003Put void (int, HlStyle &, HlStyle &)0Upp::HighlightOutput::Put(int,HlStyle&,HlStyle&)1void Put(int count, HlStyle& ink, HlStyle& paper)\u0003Upp\u0003PUT\u0014Upp::HighlightOutput\u0014UPP::HIGHLIGHTOUTPUT\u0000\u0000\u0015\u0000\u0000\u0000\u001E\u0000\u0000\u0000Y\u0000\u0000\u0000\u0006\u0000\u0000\u0000Y\u0000\u0000\u0000\u0001\u0000\u0000\u0000è\u0000\u0000\u0000\u0001\u0000\u0000\aCString\u0010wchar *(wchar *)%Upp::HighlightOutput::CString(wchar*)\u0018wchar *CString(wchar *p)\u0003Upp\aCSTRING\u0014Upp::HighlightOutput\u0014UPP::HIGHLIGHTOUTPUT\u0000\u0000end\u0000\u0018\b\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.cpp","value":"data\u000F\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0001\u0000\u0005Clear\avoid ()\u001AUpp::EditorSyntax::Clear()\fvoid Clear()\u0003Upp\u0005CLEAR\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0001\u0000\nScanSyntax!void (wchar *, wchar *, int, int)4Upp::EditorSyntax::ScanSyntax(wchar*,wchar*,int,int)<void ScanSyntax(wchar *ln, wchar *e, int line, int tab_size)\u0003Upp\nSCANSYNTAX\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0001\u0001\u0000\tSerialize\u000Fvoid (Stream &)%Upp::EditorSyntax::Serialize(Stream&)\u0019void Serialize(Stream& s)\u0003Upp\tSERIALIZE\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0001\u0000\fIndentInsert\u001Dvoid (CodeEditor &, int, int)4Upp::EditorSyntax::IndentInsert(CodeEditor&,int,int)9void IndentInsert(CodeEditor& editor, int chr, int count)\u0003Upp\fINDENTINSERT\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0001\u0000\rCheckBrackets%bool (CodeEditor &, int64 &, int64 &);Upp::EditorSyntax::CheckBrackets(CodeEditor&,int64&,int64&)<bool CheckBrackets(CodeEditor& e, int64& bpos0, int64& bpos)\u0003Upp\rCHECKBRACKETS\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0001\u0000\tCanAssist\abool ()\u001EUpp::EditorSyntax::CanAssist()\u0010bool CanAssist()\u0003Upp\tCANASSIST\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0001\u0000\u0000\u0000!\u0000\u0000\u0000\u0001\u0001\u0000\u000FReformatComment\u0013void (CodeEditor &)/Upp::EditorSyntax::ReformatComment(CodeEditor&)#void ReformatComment(CodeEditor& e)\u0003Upp\u000FREFORMATCOMMENT\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000#\u0000\u0000\u0000\u0000\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\u0000&\u0000\u0000\u0000\u0001\u0001\u0000\u000EGetBlockHeader\u0017bool (Point &, Point &)0Upp::EditorSyntax::GetBlockHeader(Point&,Point&)#bool GetBlockHeader(Point&, Point&)\u0003Upp\u000EGETBLOCKHEADER\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000(\u0000\u0000\u0000\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0001\u0000\u0000\u0000+\u0000\u0000\u0000\u0001\u0001\u0000\rGetBlockLevel\u0006int ()\"Upp::EditorSyntax::GetBlockLevel()\u0013int GetBlockLevel()\u0003Upp\rGETBLOCKLEVEL\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000-\u0000\u0000\u0000\u0000\u0000\u0000\u0000-\u0000\u0000\u0000\u0001\u0000\u0000\u0000/\u0000\u0000\u0000\u0001\u0001\u0000\tHighlightDvoid (wchar *, wchar *, HighlightOutput &, CodeEditor *, int, int64)RUpp::EditorSyntax::Highlight(wchar*,wchar*,HighlightOutput&,CodeEditor*,int,int64)cvoid Highlight(wchar *s, wchar *end, HighlightOutput& hls, CodeEditor *editor, int line, int64 pos)\u0003Upp\tHIGHLIGHT\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u001E\u0000\u0000\u00001\u0000\u0000\u0000\u0000\u0000\u0000\u00001\u0000\u0000\u0000\u0001\u0000\u0000\u00004\u0000\u0000\u0000\u0001\u0001\u0000\vPickIfStack\u0012Vector<IfState> () Upp::EditorSyntax::PickIfStack()\u001DVector<IfState> PickIfStack()\u0003Upp\vPICKIFSTACK\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u00006\u0000\u0000\u0000\u0000\u0000\u0000\u00006\u0000\u0000\u0000\u0001\u0000\u0000\u0000@\u0000\u0000\u0000\u0001\u0000\u0000\aIfColor\fColor (char) Upp::EditorSyntax::IfColor(char)\u0015Color IfColor(char c)\u0003Upp\aIFCOLOR\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000B\u0000\u0000\u0000\u0000\u0000\u0000\u0000B\u0000\u0000\u0000\u0001\u0000\u0000\u0000D\u0000\u0000\u0000\u0001\u0001\u0000\u0012CheckSyntaxRefresh%void (CodeEditor &, int64, WString &)AUpp::EditorSyntax::CheckSyntaxRefresh(CodeEditor&,int64,WString&)@void CheckSyntaxRefresh(CodeEditor& e, int64 pos, WString& text)\u0003Upp\u0012CHECKSYNTAXREFRESH\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0019\u0000\u0000\u0000\u000E\u0000\u0000\u0000F\u0000\u0000\u0000\u0000\u0000\u0000\u0000F\u0000\u0000\u0000 \u0000\u0000\u0000F\u0000\u0000\u0000\u0001\u0000\u0000\r~EditorSyntax\u0010void () noexcept\u0016Upp::EditorSyntax::~()\u000F~EditorSyntax()\u0003Upp\r~EDITORSYNTAX\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000end\u0000]\v\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Style.cpp","value":"data\u001A\t\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000*\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\bhl_style\vHlStyle[55]\u001DUpp::HighlightSetup::hl_style\u0014HlStyle hl_style[55]\u0003Upp\bHL_STYLE\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\t\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000(\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0001\u0000\u0000\fhilite_scope\u0004byte!Upp::HighlightSetup::hilite_scope\u0011byte hilite_scope\u0003Upp\fHILITE_SCOPE\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\t\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000(\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\fhilite_ifdef\u0004byte!Upp::HighlightSetup::hilite_ifdef\u0011byte hilite_ifdef\u0003Upp\fHILITE_IFDEF\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\t\u0000\u0000\u0000\u0018\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000*\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u000Ehilite_bracket\u0004byte#Upp::HighlightSetup::hilite_bracket\u0013byte hilite_bracket\u0003Upp\u000EHILITE_BRACKET\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\t\u0000\u0000\u0000\u0018\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u00002\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0013thousands_separator\u0004bool(Upp::HighlightSetup::thousands_separator\u0018bool thousands_separator\u0003Upp\u0013THOUSANDS_SEPARATOR\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\t\u0000\u0000\u0000\u0018\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n\u0000\u0000\u0000-\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0000\u0000\rindent_spaces\u0004bool\"Upp::HighlightSetup::indent_spaces\u0012bool indent_spaces\u0003Upp\rINDENT_SPACES\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\t\u0000\u0000\u0000\u0018\u0000\u0000\u0000\v\u0000\u0000\u0000\u0000\u0000\u0000\u0000\v\u0000\u0000\u00005\u0000\u0000\u0000\v\u0000\u0000\u0000\u0001\u0000\u0000\u0015no_parenthesis_indent\u0004bool*Upp::HighlightSetup::no_parenthesis_indent\u001Abool no_parenthesis_indent\u0003Upp\u0015NO_PARENTHESIS_INDENT\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\t\u0000\u0000\u0000\u0018\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000)\u0000\u0000\u0000\f\u0000\u0000\u0000\u0001\u0000\u0000\rindent_amount\u0003int\"Upp::HighlightSetup::indent_amount\u0011int indent_amount\u0003Upp\rINDENT_AMOUNT\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000ı\u0001\u0000\u0000\b\u0000\u0000\u0000\u000E\u0000\u0000\u0000\b\u0000\u0000\u0000\u000E\u0000\u0000\u0000 \u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\bHL_COLOR\u0000\bHL_COLOR\bHL_COLOR\u0000\bHL_COLOR\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0001\ns_hl_color\nchar *[55]\u000FUpp::s_hl_color\u0019static char *s_hl_color[]\u0003Upp\nS_HL_COLOR\u0003Upp\u0003UPP\u0000\u0000ı\u0001\u0000\u0000\b\u0000\u0000\u0000\u0014\u0000\u0000\u0000\b\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\bHL_COLOR\u0000\bHL_COLOR\bHL_COLOR\u0000\bHL_COLOR\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0001\ts_hl_name\nchar *[55]\u000EUpp::s_hl_name\u0018static char *s_hl_name[]\u0003Upp\tS_HL_NAME\u0003Upp\u0003UPP\u0000\u0000ı\u0001\u0000\u0000\b\u0000\u0000\u0000\u001A\u0000\u0000\u0000\b\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0000\u0000\u0000\bHL_COLOR\u0000\bHL_COLOR\bHL_COLOR\u0000\bHL_COLOR\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\f\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0000\u0001\ts_hl_font\bbool[55]\u000EUpp::s_hl_font\u0017static bool s_hl_font[]\u0003Upp\tS_HL_FONT\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\u0000&\u0000\u0000\u0000\u0001\u0000\u0000\u000FDefaultHlStyles\avoid ()&Upp::HighlightSetup::DefaultHlStyles()\u0016void DefaultHlStyles()\u0003Upp\u000FDEFAULTHLSTYLES\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\u0015\u0000\u0000\u0000\u001C\u0000\u0000\u0000(\u0000\u0000\u0000\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0001\u0000\u0000\u00001\u0000\u0000\u0000\u0001\u0000\u0000\bInitOnce\avoid ()\u001FUpp::HighlightSetup::InitOnce()\u000Fvoid InitOnce()\u0003Upp\bINITONCE\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\u0015\u0000\u0000\u0000\u001F\u0000\u0000\u00003\u0000\u0000\u0000\u0006\u0000\u0000\u00003\u0000\u0000\u0000\u0001\u0000\u0000\u00007\u0000\u0000\u0000\u0001\u0000\u0000\nGetHlStyle\u000EHlStyle &(int)$Upp::HighlightSetup::GetHlStyle(int)\u001AHlStyle& GetHlStyle(int i)\u0003Upp\nGETHLSTYLE\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\u0015\u0000\u0000\u0000\u001C\u0000\u0000\u00009\u0000\u0000\u0000\u0006\u0000\u0000\u00009\u0000\u0000\u0000\u0001\u0000\u0000\u0000=\u0000\u0000\u0000\u0001\u0000\u0000\tGetHlName\vchar *(int)#Upp::HighlightSetup::GetHlName(int)\u0016char *GetHlName(int i)\u0003Upp\tGETHLNAME\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000?\u0000\u0000\u0000\u0000\u0000\u0000\u0000?\u0000\u0000\u0000\u0001\u0000\u0000\u0000C\u0000\u0000\u0000\u0001\u0000\u0000\tHasHlFont\nbool (int)#Upp::HighlightSetup::HasHlFont(int)\u0015bool HasHlFont(int i)\u0003Upp\tHASHLFONT\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\u0015\u0000\u0000\u0000\u0016\u0000\u0000\u0000E\u0000\u0000\u0000\u0000\u0000\u0000\u0000E\u0000\u0000\u0000\u0001\u0000\u0000\u0000M\u0000\u0000\u0000\u0001\u0000\u0000\nSetHlStyle#void (int, Color, bool, bool, bool)9Upp::HighlightSetup::SetHlStyle(int,Color,bool,bool,bool)_void SetHlStyle(int i, Color c, bool bold = false, bool italic = false, bool underline = false)\u0003Upp\nSETHLSTYLE\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000O\u0000\u0000\u0000\u0000\u0000\u0000\u0000O\u0000\u0000\u0000\u0001\u0000\u0000\u0000o\u0000\u0000\u0000\u0001\u0000\u0000\fLoadHlStyles\rvoid (char *)(Upp::HighlightSetup::LoadHlStyles(char*)\u001Avoid LoadHlStyles(char *s)\u0003Upp\fLOADHLSTYLES\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000q\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ä\u0000\u0000\u0000\u0001\u0000\u0000\rStoreHlStyles\tString ()$Upp::HighlightSetup::StoreHlStyles()\u0016String StoreHlStyles()\u0003Upp\rSTOREHLSTYLES\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000Ç\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ç\u0000\u0000\u0000\u0001\u0000\u0000\u0000ç\u0000\u0000\u0000\u0001\u0000\u0000\nHostColors\avoid ()!Upp::HighlightSetup::HostColors()\u0011void HostColors()\u0003Upp\nHOSTCOLORS\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000è\u0000\u0000\u0000\u0000\u0000\u0000\u0000è\u0000\u0000\u0000\u0001\u0000\u0000\u0000À\u0000\u0000\u0000\u0001\u0000\u0000\tDarkTheme\vvoid (bool)$Upp::HighlightSetup::DarkTheme(bool) void DarkTheme(bool host = true)\u0003Upp\tDARKTHEME\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000Õ\u0000\u0000\u0000\u0000\u0000\u0000\u0000Õ\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0014\u0001\u0000\u0000\u0001\u0000\u0000\nWhiteTheme\vvoid (bool)%Upp::HighlightSetup::WhiteTheme(bool)!void WhiteTheme(bool host = true)\u0003Upp\nWHITETHEME\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000end\u0000i\u000F\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\RegisterSyntax.cpp","value":"data\b\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\rCreateCSyntax\u001Fvoid (One<EditorSyntax> &, int)\u001CUpp::CreateCSyntax(One&,int)2void CreateCSyntax(One<EditorSyntax>& e, int kind)\u0003Upp\rCREATECSYNTAX\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u000FRegisterCSyntax\"void (char *, int, char *, char *)+Upp::RegisterCSyntax(char*,int,char*,char*)Gvoid RegisterCSyntax(char *id, int kind, char *exts, char *description)\u0003Upp\u000FREGISTERCSYNTAX\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0000\u0010CreateDiffSyntax\u001Avoid (One<EditorSyntax> &)\u001BUpp::CreateDiffSyntax(One&)+void CreateDiffSyntax(One<EditorSyntax>& e)\u0003Upp\u0010CREATEDIFFSYNTAX\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0012CreatePythonSyntax\u001Avoid (One<EditorSyntax> &)\u001DUpp::CreatePythonSyntax(One&)-void CreatePythonSyntax(One<EditorSyntax>& e)\u0003Upp\u0012CREATEPYTHONSYNTAX\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0001\u0000\u0000\u000FCreateTagSyntax&void (One<EditorSyntax> &, bool, bool)$Upp::CreateTagSyntax(One&,bool,bool)@void CreateTagSyntax(One<EditorSyntax>& e, bool html, bool witz)\u0003Upp\u000FCREATETAGSYNTAX\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0000\u0000!\u0000\u0000\u0000\u0001\u0000\u0000\u000FCreateLogSyntax\u001Avoid (One<EditorSyntax> &)\u001AUpp::CreateLogSyntax(One&)*void CreateLogSyntax(One<EditorSyntax>& e)\u0003Upp\u000FCREATELOGSYNTAX\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000#\u0000\u0000\u0000\u0000\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\u0000>\u0000\u0000\u0000\u0001\u0000\u0000\u0015RegisterSyntaxModules\avoid ()\u001CUpp::RegisterSyntaxModules()\u001Cvoid RegisterSyntaxModules()\u0003Upp\u0015REGISTERSYNTAXMODULES\u0003Upp\u0003UPP\u0000\u0000end\u00005\u0005\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CSyntax.cpp","value":"data\v\b\u0000\u0000\u0000\r\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\teatstring\u0010wchar *(wchar *)\u0016Upp::eatstring(wchar*)\u001Awchar *eatstring(wchar *s)\u0003Upp\tEATSTRING\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\astrnext\u001Ewchar *(wchar *, wchar *, int)\u001FUpp::strnext(wchar*,wchar*,int),wchar *strnext(wchar *p, wchar *end, int ch)\u0003Upp\aSTRNEXT\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000!\u0000\u0000\u0000\u0001\u0000\u0000\vClearBraces\avoid ()\u001BUpp::CSyntax::ClearBraces()\u0012void ClearBraces()\u0003Upp\vCLEARBRACES\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000#\u0000\u0000\u0000\u0000\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\u0000+\u0000\u0000\u0000\u0001\u0001\u0000\u0005Clear\avoid ()\u0015Upp::CSyntax::Clear()\fvoid Clear()\u0003Upp\u0005CLEAR\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\b\u0000\u0000\u0000\r\u0000\u0000\u0000-\u0000\u0000\u0000\u0006\u0000\u0000\u0000-\u0000\u0000\u0000\u0001\u0000\u0000\u0000@\u0000\u0000\u0000\u0001\u0000\u0000\u0006isstmt\u0010wchar *(wchar *)\u0013Upp::isstmt(wchar*)\u0017wchar *isstmt(wchar *p)\u0003Upp\u0006ISSTMT\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u000F\u0000\u0000\u0000B\u0000\u0000\u0000\u0000\u0000\u0000\u0000B\u0000\u0000\u0000\u0001\u0000\u0000\u0000R\u0000\u0000\u0000\u0001\u0000\u0001\asReadLn\u0011WString (wchar *)\u0014Upp::sReadLn(wchar*) static WString sReadLn(wchar *p)\u0003Upp\aSREADLN\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0004\u0000\u0000\u0000T\u0000\u0000\u0000\u0000\u0000\u0000\u0000T\u0000\u0000\u0000\u0001\u0000\u0000\u0000Y\u0000\u0000\u0000\u0001\u0000\u0000\u0005LastC\u0016int (wchar *, wchar *)\u0019Upp::LastC(wchar*,wchar*)\u001Dint LastC(wchar *b, wchar *e)\u0003Upp\u0005LASTC\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000[\u0000\u0000\u0000\u0000\u0000\u0000\u0000[\u0000\u0000\u0000\u0001\u0000\u0000\u0000d\u0000\u0000\u0000\u0001\u0000\u0000\tGrounding\u0017void (wchar *, wchar *)&Upp::CSyntax::Grounding(wchar*,wchar*)\"void Grounding(wchar *b, wchar *e)\u0003Upp\tGROUNDING\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000f\u0000\u0000\u0000\u0001\u0000\u0000\u0000x\u0001\u0000\u0000\u0001\u0001\u0000\nScanSyntax!void (wchar *, wchar *, int, int)/Upp::CSyntax::ScanSyntax(wchar*,wchar*,int,int)<void ScanSyntax(wchar *ln, wchar *e, int line, int tab_size)\u0003Upp\nSCANSYNTAX\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000z\u0001\u0000\u0000\u0000\u0000\u0000\u0000z\u0001\u0000\u0000\u0001\u0000\u0000\u0000î\u0001\u0000\u0000\u0001\u0001\u0000\tSerialize\u000Fvoid (Stream &) Upp::CSyntax::Serialize(Stream&)\u0019void Serialize(Stream& s)\u0003Upp\tSERIALIZE\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000end\u0000ˆ\u0005\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CInit.cpp","value":"data\f\t\u0000\u0000\u0000!\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000(\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\akeyword\u0015Vector<Index<String>>\u0015Upp::CSyntax::keyword\u001DVector<Index<String>> keyword\u0003Upp\aKEYWORD\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\t\u0000\u0000\u0000!\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000)\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0001\u0000\u0000\bbreakers\vVector<int>\u0016Upp::CSyntax::breakers\u0014Vector<int> breakers\u0003Upp\bBREAKERS\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\t\u0000\u0000\u0000!\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000%\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0004name\u0015Vector<Index<String>>\u0012Upp::CSyntax::name\u001AVector<Index<String>> name\u0003Upp\u0004NAME\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\t\u0000\u0000\u0000!\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000'\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0006kw_upp\rIndex<String>\u0014Upp::CSyntax::kw_upp\u0014Index<String> kw_upp\u0003Upp\u0006KW_UPP\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\t\u0000\u0000\u0000!\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000*\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\tkw_macros\u0003int\u0017Upp::CSyntax::kw_macros\rint kw_macros\u0003Upp\tKW_MACROS\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\t\u0000\u0000\u0000!\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000(\u0000\u0000\u0000\t\u0000\u0000\u0000\u0001\u0000\u0000\akw_logs\u0003int\u0015Upp::CSyntax::kw_logs\vint kw_logs\u0003Upp\aKW_LOGS\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\t\u0000\u0000\u0000!\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n\u0000\u0000\u0000,\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0000\u0000\vkw_sql_base\u0003int\u0019Upp::CSyntax::kw_sql_base\u000Fint kw_sql_base\u0003Upp\vKW_SQL_BASE\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\t\u0000\u0000\u0000!\u0000\u0000\u0000\v\u0000\u0000\u0000\u0000\u0000\u0000\u0000\v\u0000\u0000\u0000,\u0000\u0000\u0000\v\u0000\u0000\u0000\u0001\u0000\u0000\vkw_sql_func\u0003int\u0019Upp::CSyntax::kw_sql_func\u000Fint kw_sql_func\u0003Upp\vKW_SQL_FUNC\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0000\aInitUpp\rint (char **)\u001DUpp::CSyntax::InitUpp(char**)\u0015int InitUpp(char **q)\u0003Upp\aINITUPP\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0001\u0000\u0000\u0000Y\u0001\u0000\u0000\u0001\u0000\u0000\fInitKeywords\avoid ()\u001CUpp::CSyntax::InitKeywords()\u0013void InitKeywords()\u0003Upp\fINITKEYWORDS\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000[\u0001\u0000\u0000\u0000\u0000\u0000\u0000[\u0001\u0000\u0000\u0001\u0000\u0000\u0000l\u0001\u0000\u0000\u0001\u0000\u0000\nLoadSyntax\u0016int (char **, char **))Upp::CSyntax::LoadSyntax(char*[],char*[])/int LoadSyntax(char *keywords[], char *names[])\u0003Upp\nLOADSYNTAX\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000end\u0000\"\u0006\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CHighlight.cpp","value":"data\vı\u0001\u0000\u0000\b\u0000\u0000\u0000\u0004\u0000\u0000\u0000\b\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\aLTIMING\u0000\aLTIMING\aLTIMING\u0000\aLTIMING\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0004cmps\u001Dbool (wchar *, char *, int &)\u001CUpp::cmps(wchar*,char*,int&)$bool cmps(wchar *q, char *s, int& n)\u0003Upp\u0004CMPS\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\rIsUpperString\rbool (char *)\u0019Upp::IsUpperString(char*)\u001Bbool IsUpperString(char *q)\u0003Upp\rISUPPERSTRING\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\nBlockColor\vColor (int)\u001DUpp::CSyntax::BlockColor(int)\u001BColor BlockColor(int level)\u0003Upp\nBLOCKCOLOR\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0000%\u0000\u0000\u0000\u0001\u0000\u0000\u00003\u0000\u0000\u0000\u0001\u0000\u0000\aBracket-void (int64, HighlightOutput &, CodeEditor *)9Upp::CSyntax::Bracket(int64,HighlightOutput&,CodeEditor*)Avoid Bracket(int64 pos, HighlightOutput& hls, CodeEditor *editor)\u0003Upp\aBRACKET\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\b\u0000\u0000\u0000\r\u0000\u0000\u00005\u0000\u0000\u0000\u0006\u0000\u0000\u00005\u0000\u0000\u0000\u0001\u0000\u0000\u0000`\u0000\u0000\u0000\u0001\u0000\u0000\u000FHighlightNumber5wchar *(HighlightOutput &, wchar *, bool, bool, bool)<Upp::HighlightNumber(HighlightOutput&,wchar*,bool,bool,bool)Uwchar *HighlightNumber(HighlightOutput& hls, wchar *p, bool ts, bool octal, bool css)\u0003Upp\u000FHIGHLIGHTNUMBER\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\r\u0000\u0000\u0000b\u0000\u0000\u0000\u0006\u0000\u0000\u0000b\u0000\u0000\u0000\u0001\u0000\u0000\u0000o\u0000\u0000\u0000\u0001\u0000\u0000\u000FHighlightHexBin.wchar *(HighlightOutput &, wchar *, int, bool)6Upp::HighlightHexBin(HighlightOutput&,wchar*,int,bool)Zwchar *HighlightHexBin(HighlightOutput& hls, wchar *p, int plen, bool thousands_separator)\u0003Upp\u000FHIGHLIGHTHEXBIN\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000\u0016\u0000\u0000\u0000q\u0000\u0000\u0000\u0006\u0000\u0000\u0000q\u0000\u0000\u0000\u0001\u0000\u0000\u0000á\u0000\u0000\u0000\u0001\u0000\u0000\tDoComment,wchar *(HighlightOutput &, wchar *, wchar *)7Upp::CSyntax::DoComment(HighlightOutput&,wchar*,wchar*):wchar *DoComment(HighlightOutput& hls, wchar *p, wchar *e)\u0003Upp\tDOCOMMENT\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000â\u0000\u0000\u0000\u0000\u0000\u0000\u0000â\u0000\u0000\u0000\u0001\u0000\u0000\u0000û\u0000\u0000\u0000\u0001\u0000\u0000\tRawString\u0015bool (wchar *, int &)$Upp::CSyntax::RawString(wchar*,int&) bool RawString(wchar *p, int& n)\u0003Upp\tRAWSTRING\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000†\u0000\u0000\u0000\u0000\u0000\u0000\u0000†\u0000\u0000\u0000\u0001\u0000\u0000\u0000π\u0001\u0000\u0000\u0001\u0001\u0000\tHighlightDvoid (wchar *, wchar *, HighlightOutput &, CodeEditor *, int, int64)MUpp::CSyntax::Highlight(wchar*,wchar*,HighlightOutput&,CodeEditor*,int,int64)evoid Highlight(wchar *ltext, wchar *e, HighlightOutput& hls, CodeEditor *editor, int line, int64 pos)\u0003Upp\tHIGHLIGHT\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000end\u0000\u0018\b\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CLogic.cpp","value":"data\u000F\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0001\u0000\fIndentInsert\u001Dvoid (CodeEditor &, int, int)/Upp::CSyntax::IndentInsert(CodeEditor&,int,int)4void IndentInsert(CodeEditor& e, int chr, int count)\u0003Upp\fINDENTINSERT\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0001\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0001\asSpaces\u0017void (int &, WString &)\u001BUpp::sSpaces(int&,WString&))static void sSpaces(int& cp, WString& ln)\u0003Upp\aSSPACES\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\u0000!\u0000\u0000\u0000\u0001\u0000\u0000\rGetCommentPos\"int (CodeEditor &, int, WString &)5Upp::CSyntax::GetCommentPos(CodeEditor&,int,WString&)4int GetCommentPos(CodeEditor& e, int l, WString& ch)\u0003Upp\rGETCOMMENTPOS\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000#\u0000\u0000\u0000\u0000\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\u0000û\u0000\u0000\u0000\u0001\u0000\u0000\rIndentInsert0#void (CodeEditor &, int, int, bool)5Upp::CSyntax::IndentInsert0(CodeEditor&,int,int,bool)Dvoid IndentInsert0(CodeEditor& e, int chr, int count, bool reformat)\u0003Upp\rINDENTINSERT0\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000†\u0000\u0000\u0000\u0000\u0000\u0000\u0000†\u0000\u0000\u0000\u0001\u0000\u0000\u0000º\u0000\u0000\u0000\u0001\u0001\u0000\u000FReformatComment\u0013void (CodeEditor &)*Upp::CSyntax::ReformatComment(CodeEditor&)#void ReformatComment(CodeEditor& e)\u0003Upp\u000FREFORMATCOMMENT\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000æ\u0000\u0000\u0000\u0000\u0000\u0000\u0000æ\u0000\u0000\u0000\u0001\u0000\u0000\u0000¡\u0000\u0000\u0000\u0001\u0000\u0000\tNotEscape\u0017bool (int64, WString &)\u001EUpp::NotEscape(int64,WString&)%bool NotEscape(int64 pos, WString& s)\u0003Upp\tNOTESCAPE\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000√\u0000\u0000\u0000\u0000\u0000\u0000\u0000√\u0000\u0000\u0000\u0001\u0000\u0000\u0000ˆ\u0000\u0000\u0000\u0001\u0000\u0000\fCheckBracketRbool (CodeEditor &, int, int64, int64, int64, WString, int, int, int64 &, int64 &)[Upp::CSyntax::CheckBracket(CodeEditor&,int,int64,int64,int64,WString,int,int,int64&,int64&)ˇÑ\u0000\u0000\u0000bool CheckBracket(CodeEditor& e, int li, int64 pos, int64 ppos, int64 pos0, WString ln, int d, int limit, int64& bpos0, int64& bpos)\u0003Upp\fCHECKBRACKET\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000¯\u0000\u0000\u0000\u0000\u0000\u0000\u0000¯\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0001\u0000\u0000\u0001\u0000\u0000\u0010CheckLeftBracket,bool (CodeEditor &, int64, int64 &, int64 &)?Upp::CSyntax::CheckLeftBracket(CodeEditor&,int64,int64&,int64&)Jbool CheckLeftBracket(CodeEditor& e, int64 pos, int64& bpos0, int64& bpos)\u0003Upp\u0010CHECKLEFTBRACKET\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0001\u0000\u0000\u0000\f\u0001\u0000\u0000\u0001\u0000\u0000\u0011CheckRightBracket,bool (CodeEditor &, int64, int64 &, int64 &)@Upp::CSyntax::CheckRightBracket(CodeEditor&,int64,int64&,int64&)Kbool CheckRightBracket(CodeEditor& e, int64 pos, int64& bpos0, int64& bpos)\u0003Upp\u0011CHECKRIGHTBRACKET\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u000E\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u000E\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0001\u0001\u0000\rCheckBrackets%bool (CodeEditor &, int64 &, int64 &)6Upp::CSyntax::CheckBrackets(CodeEditor&,int64&,int64&)<bool CheckBrackets(CodeEditor& e, int64& bpos0, int64& bpos)\u0003Upp\rCHECKBRACKETS\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u001A\u0001\u0000\u0000\u0001\u0001\u0000\tCanAssist\abool ()\u0019Upp::CSyntax::CanAssist()\u0010bool CanAssist()\u0003Upp\tCANASSIST\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u001C\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u001C\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u001F\u0001\u0000\u0000\u0001\u0001\u0000\vPickIfStack\u0012Vector<IfState> ()\u001BUpp::CSyntax::PickIfStack()\u001DVector<IfState> PickIfStack()\u0003Upp\vPICKIFSTACK\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0001\u0000\u0000\u00003\u0001\u0000\u0000\u0001\u0001\u0000\u0012CheckSyntaxRefresh%void (CodeEditor &, int64, WString &)<Upp::CSyntax::CheckSyntaxRefresh(CodeEditor&,int64,WString&)@void CheckSyntaxRefresh(CodeEditor& e, int64 pos, WString& text)\u0003Upp\u0012CHECKSYNTAXREFRESH\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0001\u0000\u0000\u0000:\u0001\u0000\u0000\u0001\u0001\u0000\u000EGetBlockHeader\u0017bool (Point &, Point &)+Upp::CSyntax::GetBlockHeader(Point&,Point&)5bool GetBlockHeader(Point& blk_start, Point& blk_end)\u0003Upp\u000EGETBLOCKHEADER\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000end\u0000â\f\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\DiffSyntax.cpp","value":"data\a\u0018\u0000\u0000\u0000\f\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\nDiffSyntax\avoid ()\u001DUpp::DiffSyntax::DiffSyntax()\fDiffSyntax()\u0003Upp\nDIFFSYNTAX\u000FUpp::DiffSyntax\u000FUPP::DIFFSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0001\u0001\u0000\tHighlightDvoid (wchar *, wchar *, HighlightOutput &, CodeEditor *, int, int64)PUpp::DiffSyntax::Highlight(wchar*,wchar*,HighlightOutput&,CodeEditor*,int,int64)gvoid Highlight(wchar *start, wchar *end, HighlightOutput& hls, CodeEditor *editor, int line, int64 pos)\u0003Upp\tHIGHLIGHT\u000FUpp::DiffSyntax\u000FUPP::DIFFSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0001\u0000\u0000\u0003Put\u0014void (int, int, int)!Upp::DiffSyntax::Put(int,int,int)6void Put(int ink, int n = 1, int paper = PAPER_NORMAL)\u0003Upp\u0003PUT\u000FUpp::DiffSyntax\u000FUPP::DIFFSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0000\u0000=\u0000\u0000\u0000\u0001\u0000\u0000\u0002Do6void (wchar *, wchar *, CodeEditor *, int, int, int64)<Upp::DiffSyntax::Do(wchar*,wchar*,CodeEditor*,int,int,int64)Tvoid Do(wchar *ln, wchar *end, CodeEditor *editor, int line, int tabsize, int64 pos)\u0003Upp\u0002DO\u000FUpp::DiffSyntax\u000FUPP::DIFFSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000?\u0000\u0000\u0000\u0000\u0000\u0000\u0000?\u0000\u0000\u0000\u0001\u0000\u0000\u0000I\u0000\u0000\u0000\u0001\u0000\u0000\u001DFindTheNumberOfCharsToLineEnd\u0016int (wchar *, wchar *)=Upp::DiffSyntax::FindTheNumberOfCharsToLineEnd(wchar*,wchar*)=int FindTheNumberOfCharsToLineEnd(wchar *current, wchar *end)\u0003Upp\u001DFINDTHENUMBEROFCHARSTOLINEEND\u000FUpp::DiffSyntax\u000FUPP::DIFFSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000K\u0000\u0000\u0000\u0000\u0000\u0000\u0000K\u0000\u0000\u0000\u0001\u0000\u0000\u0000[\u0000\u0000\u0000\u0001\u0000\u0000\tIsPattern\u001Fbool (wchar *, wchar *, String)0Upp::DiffSyntax::IsPattern(wchar*,wchar*,String):bool IsPattern(wchar *current, wchar *end, String pattern)\u0003Upp\tISPATTERN\u000FUpp::DiffSyntax\u000FUPP::DIFFSYNTAX\u0000\u0000end\u0000∂\u0005\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\TagSyntax.cpp","value":"data\u0011\u0018\u0000\u0000\u0000\v\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0000\u0000\tTagSyntax\avoid ()\u001BUpp::TagSyntax::TagSyntax()\vTagSyntax()\u0003Upp\tTAGSYNTAX\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0001\u0000\u0005Clear\avoid ()\u0017Upp::TagSyntax::Clear()\fvoid Clear()\u0003Upp\u0005CLEAR\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0004Put0\u0014void (int, int, int)!Upp::TagSyntax::Put0(int,int,int)7void Put0(int ink, int n = 1, int paper = PAPER_NORMAL)\u0003Upp\u0004PUT0\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\u0006Spaces\u0019wchar *(wchar *, wchar *)%Upp::TagSyntax::Spaces(wchar*,wchar*)!wchar *Spaces(wchar *s, wchar *e)\u0003Upp\u0006SPACES\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\"\u0000\u0000\u0000\u0001\u0000\u0000\u0000(\u0000\u0000\u0000\u0001\u0000\u0000\bDoScript6void (wchar *, wchar *, CodeEditor *, int, int, int64)AUpp::TagSyntax::DoScript(wchar*,wchar*,CodeEditor*,int,int,int64)Wvoid DoScript(wchar *s, wchar *e, CodeEditor *editor, int line, int tabsize, int64 pos)\u0003Upp\bDOSCRIPT\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\b\u0000\u0000\u0000\u0014\u0000\u0000\u0000+\u0000\u0000\u0000\u0000\u0000\u0000\u0000*\u0000\u0000\u0000\u0001\u0000\u0000\u00000\u0000\u0000\u0000\u0001\u0000\u0001\vsSkipSpaces\u0019wchar *(wchar *, wchar *)\u001FUpp::sSkipSpaces(wchar*,wchar*)-static wchar *sSkipSpaces(wchar *s, wchar *e)\u0003Upp\vSSKIPSPACES\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u00002\u0000\u0000\u0000\u0000\u0000\u0000\u00002\u0000\u0000\u0000\u0001\u0000\u0000\u00009\u0000\u0000\u0000\u0001\u0000\u0000\u0006cmp_wi\u001Cbool (wchar *, wchar *, int)\u001EUpp::cmp_wi(wchar*,wchar*,int)(bool cmp_wi(wchar *s, wchar *t, int len)\u0003Upp\u0006CMP_WI\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000<\u0000\u0000\u0000\u0000\u0000\u0000\u0000;\u0000\u0000\u0000\u0001\u0000\u0000\u0000E\u0000\u0000\u0000\u0001\u0000\u0000\bIsEndTag%bool (wchar *, wchar *, wchar *, int)'Upp::IsEndTag(wchar*,wchar*,wchar*,int)6bool IsEndTag(wchar *s, wchar *e, wchar *tag, int len)\u0003Upp\bISENDTAG\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\r\u0000\u0000\u0000G\u0000\u0000\u0000\u0006\u0000\u0000\u0000G\u0000\u0000\u0000\u0001\u0000\u0000\u0000^\u0000\u0000\u0000\u0001\u0000\u0000\vIsScriptEnd\u001Fwchar *(wchar *, wchar *, bool)$Upp::IsScriptEnd(wchar*,wchar*,bool)3wchar *IsScriptEnd(wchar *s, wchar *e, bool script)\u0003Upp\vISSCRIPTEND\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000`\u0000\u0000\u0000\u0000\u0000\u0000\u0000`\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0002Do6void (wchar *, wchar *, CodeEditor *, int, int, int64);Upp::TagSyntax::Do(wchar*,wchar*,CodeEditor*,int,int,int64)Qvoid Do(wchar *s, wchar *e, CodeEditor *editor, int line, int tabsize, int64 pos)\u0003Upp\u0002DO\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000Ú\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ú\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0001\u0001\u0000\u0012CheckSyntaxRefresh%void (CodeEditor &, int64, WString &)>Upp::TagSyntax::CheckSyntaxRefresh(CodeEditor&,int64,WString&)@void CheckSyntaxRefresh(CodeEditor& e, int64 pos, WString& text)\u0003Upp\u0012CHECKSYNTAXREFRESH\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0001\u0000\u0000\u0000\b\u0001\u0000\u0000\u0001\u0001\u0000\nScanSyntax!void (wchar *, wchar *, int, int)1Upp::TagSyntax::ScanSyntax(wchar*,wchar*,int,int):void ScanSyntax(wchar *s, wchar *e, int line, int tabsize)\u0003Upp\nSCANSYNTAX\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\n\u0001\u0000\u0000\u0000\u0000\u0000\u0000\n\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u000F\u0001\u0000\u0000\u0001\u0001\u0000\tHighlightDvoid (wchar *, wchar *, HighlightOutput &, CodeEditor *, int, int64)OUpp::TagSyntax::Highlight(wchar*,wchar*,HighlightOutput&,CodeEditor*,int,int64)cvoid Highlight(wchar *s, wchar *end, HighlightOutput& hls, CodeEditor *editor, int line, int64 pos)\u0003Upp\tHIGHLIGHT\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0001\u0001\u0000\fIndentInsert\u001Dvoid (CodeEditor &, int, int)1Upp::TagSyntax::IndentInsert(CodeEditor&,int,int)9void IndentInsert(CodeEditor& editor, int chr, int count)\u0003Upp\fINDENTINSERT\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0001\u0001\u0000\rCheckBrackets%bool (CodeEditor &, int64 &, int64 &)8Upp::TagSyntax::CheckBrackets(CodeEditor&,int64&,int64&)<bool CheckBrackets(CodeEditor& e, int64& bpos0, int64& bpos)\u0003Upp\rCHECKBRACKETS\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000 \u0001\u0000\u0000\u0000\u0000\u0000\u0000 \u0001\u0000\u0000\u0001\u0000\u0000\u0000)\u0001\u0000\u0000\u0001\u0001\u0000\tSerialize\u000Fvoid (Stream &)\"Upp::TagSyntax::Serialize(Stream&)\u0019void Serialize(Stream& s)\u0003Upp\tSERIALIZE\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000end\u0000K\r\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\PythonSyntax.cpp","value":"data\b\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000>\u0000\u0000\u0000\u0001\u0001\u0000\tHighlightDvoid (wchar *, wchar *, HighlightOutput &, CodeEditor *, int, int64)RUpp::PythonSyntax::Highlight(wchar*,wchar*,HighlightOutput&,CodeEditor*,int,int64)cvoid Highlight(wchar *s, wchar *end, HighlightOutput& hls, CodeEditor *editor, int line, int64 pos)\u0003Upp\tHIGHLIGHT\u0011Upp::PythonSyntax\u0011UPP::PYTHONSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0000\u0000\u0000\u0001\u0000\u0000\u0000S\u0000\u0000\u0000\u0001\u0001\u0000\fIndentInsert\u001Dvoid (CodeEditor &, int, int)4Upp::PythonSyntax::IndentInsert(CodeEditor&,int,int)9void IndentInsert(CodeEditor& editor, int chr, int count)\u0003Upp\fINDENTINSERT\u0011Upp::PythonSyntax\u0011UPP::PYTHONSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000U\u0000\u0000\u0000\u0000\u0000\u0000\u0000U\u0000\u0000\u0000\u0001\u0000\u0000\u0000\\\u0000\u0000\u0000\u0001\u0000\u0000\fLineHasColon\u0010bool (WString &))Upp::PythonSyntax::LineHasColon(WString&) bool LineHasColon(WString& line)\u0003Upp\fLINEHASCOLON\u0011Upp::PythonSyntax\u0011UPP::PYTHONSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000^\u0000\u0000\u0000\u0000\u0000\u0000\u0000^\u0000\u0000\u0000\u0001\u0000\u0000\u0000k\u0000\u0000\u0000\u0001\u0000\u0000\u0018CalculateLineIndetations!int (WString &, Identation::Type)FUpp::PythonSyntax::CalculateLineIndetations(WString&,Identation::Type)Bint CalculateLineIndetations(WString& line, Identation::Type type)\u0003Upp\u0018CALCULATELINEINDETATIONS\u0011Upp::PythonSyntax\u0011UPP::PYTHONSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000-\u0000\u0000\u0000m\u0000\u0000\u0000\u0000\u0000\u0000\u0000m\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ñ\u0000\u0000\u0000\u0001\u0000\u0000\u0012FindIdentationType8PythonSyntax::Identation::Type (CodeEditor &, WString &);Upp::PythonSyntax::FindIdentationType(CodeEditor&,WString&)TPythonSyntax::Identation::Type FindIdentationType(CodeEditor& editor, WString& line)\u0003Upp\u0012FINDIDENTATIONTYPE\u0011Upp::PythonSyntax\u0011UPP::PYTHONSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000Ü\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ü\u0000\u0000\u0000\u0001\u0000\u0000\u0000ò\u0000\u0000\u0000\u0001\u0000\u0000\u001CCalculateSpaceIndetationSize\u0012int (CodeEditor &)<Upp::PythonSyntax::CalculateSpaceIndetationSize(CodeEditor&)4int CalculateSpaceIndetationSize(CodeEditor& editor)\u0003Upp\u001CCALCULATESPACEINDETATIONSIZE\u0011Upp::PythonSyntax\u0011UPP::PYTHONSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000ö\u0000\u0000\u0000\u0000\u0000\u0000\u0000ö\u0000\u0000\u0000\u0001\u0000\u0000\u0000ü\u0000\u0000\u0000\u0001\u0000\u0000\u0013GetIdentationByType\u0017char (Identation::Type)8Upp::PythonSyntax::GetIdentationByType(Identation::Type)/char GetIdentationByType(Identation::Type type)\u0003Upp\u0013GETIDENTATIONBYTYPE\u0011Upp::PythonSyntax\u0011UPP::PYTHONSYNTAX\u0000\u0000end\u0000k\a\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\LogSyntax.cpp","value":"data\u0005ı\u0001\u0000\u0000\b\u0000\u0000\u0000\u0004\u0000\u0000\u0000\b\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\aLTIMING\u0000\aLTIMING\aLTIMING\u0000\aLTIMING\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\t\u0000\u0000\u0000\u0001\u0000\u0000\u0003Is3\u0013bool (wchar *, int)\u0014Upp::Is3(wchar*,int)\u0019bool Is3(wchar *s, int c)\u0003Upp\u0003IS3\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\v\u0000\u0000\u0000\u0000\u0000\u0000\u0000\v\u0000\u0000\u0000\u0001\u0000\u0000\u0000T\u0000\u0000\u0000\u0001\u0001\u0000\tHighlightDvoid (wchar *, wchar *, HighlightOutput &, CodeEditor *, int, int64)OUpp::LogSyntax::Highlight(wchar*,wchar*,HighlightOutput&,CodeEditor*,int,int64)cvoid Highlight(wchar *s, wchar *end, HighlightOutput& hls, CodeEditor *editor, int line, int64 pos)\u0003Upp\tHIGHLIGHT\u000EUpp::LogSyntax\u000EUPP::LOGSYNTAX\u0000\u0000ı\u0001\u0000\u0000\t\u0000\u0000\u0000\u0018\u0000\u0000\u0000\t\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0002P2\u0000\u0002P2\u0002P2\u0000\u0002P2\u0000\u0000\u0000\u0000end\u0000G\u0002\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\EditorBar.cpp","value":"data&\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000!\u0000\u0000\u0000\u0001\u0000\u0000\bRenumber\u0011void (LineInfo &)\u0018Upp::Renumber(LineInfo&)\u001Bvoid Renumber(LineInfo& lf)\u0003Upp\bRENUMBER\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000#\u0000\u0000\u0000\u0000\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\u0000'\u0000\u0000\u0000\u0001\u0000\u0000\u0010ClearBreakpoints\u0011void (LineInfo &) Upp::ClearBreakpoints(LineInfo&)#void ClearBreakpoints(LineInfo& lf)\u0003Upp\u0010CLEARBREAKPOINTS\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000)\u0000\u0000\u0000\u0000\u0000\u0000\u0000)\u0000\u0000\u0000\u0001\u0000\u0000\u0000.\u0000\u0000\u0000\u0001\u0000\u0000\u0013ValidateBreakpoints\u0011void (LineInfo &)#Upp::ValidateBreakpoints(LineInfo&)&void ValidateBreakpoints(LineInfo& lf)\u0003Upp\u0013VALIDATEBREAKPOINTS\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u00000\u0000\u0000\u0000\u0000\u0000\u0000\u00000\u0000\u0000\u0000\u0001\u0000\u0000\u00003\u0000\u0000\u0000\u0001\u0000\u0000\vsPaintImage void (Draw &, int, int, Image &)1Upp::EditorBar::sPaintImage(Draw&,int,int,Image&)4void sPaintImage(Draw& w, int y, int fy, Image& img)\u0003Upp\vSPAINTIMAGE\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u00005\u0000\u0000\u0000\u0000\u0000\u0000\u00005\u0000\u0000\u0000\u0001\u0000\u0000\u0000ü\u0000\u0000\u0000\u0001\u0001\u0000\u0005Paint\rvoid (Draw &)\u001CUpp::EditorBar::Paint(Draw&)\u0013void Paint(Draw& w)\u0003Upp\u0005PAINT\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000°\u0000\u0000\u0000\u0000\u0000\u0000\u0000°\u0000\u0000\u0000\u0001\u0000\u0000\u0000Æ\u0000\u0000\u0000\u0001\u0001\u0000\tMouseMove\u0013void (Point, dword)&Upp::EditorBar::MouseMove(Point,dword)$void MouseMove(Point p, dword flags)\u0003Upp\tMOUSEMOVE\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000∞\u0000\u0000\u0000\u0000\u0000\u0000\u0000∞\u0000\u0000\u0000\u0001\u0000\u0000\u0000∂\u0000\u0000\u0000\u0001\u0001\u0000\nMouseLeave\avoid ()\u001CUpp::EditorBar::MouseLeave()\u0011void MouseLeave()\u0003Upp\nMOUSELEAVE\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000∏\u0000\u0000\u0000\u0000\u0000\u0000\u0000∏\u0000\u0000\u0000\u0001\u0000\u0000\u0000¡\u0000\u0000\u0000\u0001\u0001\u0000\bLeftDown\u0013void (Point, dword)%Upp::EditorBar::LeftDown(Point,dword)#void LeftDown(Point p, dword flags)\u0003Upp\bLEFTDOWN\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000√\u0000\u0000\u0000\u0000\u0000\u0000\u0000√\u0000\u0000\u0000\u0001\u0000\u0000\u0000…\u0000\u0000\u0000\u0001\u0000\u0000\nPointBreak\u000FString &(int &) Upp::EditorBar::PointBreak(int&)\u001AString& PointBreak(int& y)\u0003Upp\nPOINTBREAK\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000À\u0000\u0000\u0000\u0000\u0000\u0000\u0000À\u0000\u0000\u0000\u0001\u0000\u0000\u0000’\u0000\u0000\u0000\u0001\u0001\u0000\nLeftDouble\u0013void (Point, dword)'Upp::EditorBar::LeftDouble(Point,dword)%void LeftDouble(Point p, dword flags)\u0003Upp\nLEFTDOUBLE\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000◊\u0000\u0000\u0000\u0000\u0000\u0000\u0000◊\u0000\u0000\u0000\u0001\u0000\u0000\u0000€\u0000\u0000\u0000\u0001\u0001\u0000\tRightDown\u0013void (Point, dword)&Upp::EditorBar::RightDown(Point,dword)$void RightDown(Point p, dword flags)\u0003Upp\tRIGHTDOWN\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000›\u0000\u0000\u0000\u0000\u0000\u0000\u0000›\u0000\u0000\u0000\u0001\u0000\u0000\u0000Â\u0000\u0000\u0000\u0001\u0001\u0000\nMouseWheel\u0018void (Point, int, dword)+Upp::EditorBar::MouseWheel(Point,int,dword)4void MouseWheel(Point p, int zdelta, dword keyflags)\u0003Upp\nMOUSEWHEEL\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000Á\u0000\u0000\u0000\u0000\u0000\u0000\u0000Á\u0000\u0000\u0000\u0001\u0000\u0000\u0000˝\u0000\u0000\u0000\u0001\u0000\u0000\vInsertLines\u000Fvoid (int, int)$Upp::EditorBar::InsertLines(int,int)\"void InsertLines(int i, int count)\u0003Upp\vINSERTLINES\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000ˇ\u0000\u0000\u0000\u0000\u0000\u0000\u0000ˇ\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000F\u0001\u0000\u0000\u0001\u0000\u0000\vRemoveLines\u000Fvoid (int, int)$Upp::EditorBar::RemoveLines(int,int)\"void RemoveLines(int i, int count)\u0003Upp\vREMOVELINES\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0018\u0001\u0000\u0000\u0001\u0000\u0000\nClearLines\avoid ()\u001CUpp::EditorBar::ClearLines()\u0011void ClearLines()\u0003Upp\nCLEARLINES\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u001A\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u001A\u0001\u0000\u0000\u0001\u0000\u0000\u00004\u0001\u0000\u0000\u0001\u0000\u0000\vGetLineInfo\vLineInfo ()\u001DUpp::EditorBar::GetLineInfo()\u0016LineInfo GetLineInfo()\u0003Upp\vGETLINEINFO\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u00006\u0001\u0000\u0000\u0000\u0000\u0000\u00006\u0001\u0000\u0000\u0001\u0000\u0000\u0000M\u0001\u0000\u0000\u0001\u0000\u0000\vSetLineInfo\u0016void (LineInfo &, int)*Upp::EditorBar::SetLineInfo(LineInfo&,int))void SetLineInfo(LineInfo& lf, int total)\u0003Upp\vSETLINEINFO\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000O\u0001\u0000\u0000\u0000\u0000\u0000\u0000O\u0001\u0000\u0000\u0001\u0000\u0000\u0000T\u0001\u0000\u0000\u0001\u0000\u0000\bRenumber\nvoid (int)\u001DUpp::EditorBar::Renumber(int)\u001Cvoid Renumber(int linecount)\u0003Upp\bRENUMBER\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000V\u0001\u0000\u0000\u0000\u0000\u0000\u0000V\u0001\u0000\u0000\u0001\u0000\u0000\u0000[\u0001\u0000\u0000\u0001\u0000\u0000\u0010ClearBreakpoints\avoid ()\"Upp::EditorBar::ClearBreakpoints()\u0017void ClearBreakpoints()\u0003Upp\u0010CLEARBREAKPOINTS\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000]\u0001\u0000\u0000\u0000\u0000\u0000\u0000]\u0001\u0000\u0000\u0001\u0000\u0000\u0000c\u0001\u0000\u0000\u0001\u0000\u0000\u0013ValidateBreakpoints\avoid ()%Upp::EditorBar::ValidateBreakpoints()\u001Avoid ValidateBreakpoints()\u0003Upp\u0013VALIDATEBREAKPOINTS\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000e\u0001\u0000\u0000\u0000\u0000\u0000\u0000e\u0001\u0000\u0000\u0001\u0000\u0000\u0000h\u0001\u0000\u0000\u0001\u0000\u0000\rGetBreakpoint\fString (int)\"Upp::EditorBar::GetBreakpoint(int)\u001CString GetBreakpoint(int ln)\u0003Upp\rGETBREAKPOINT\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000j\u0001\u0000\u0000\u0000\u0000\u0000\u0000j\u0001\u0000\u0000\u0001\u0000\u0000\u0000p\u0001\u0000\u0000\u0001\u0000\u0000\u0010ClearAnnotations\avoid ()\"Upp::EditorBar::ClearAnnotations()\u0017void ClearAnnotations()\u0003Upp\u0010CLEARANNOTATIONS\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000r\u0001\u0000\u0000\u0000\u0000\u0000\u0000r\u0001\u0000\u0000\u0001\u0000\u0000\u0000y\u0001\u0000\u0000\u0001\u0000\u0000\rSetAnnotation\u001Dvoid (int, Image &, String &)1Upp::EditorBar::SetAnnotation(int,Image&,String&)5void SetAnnotation(int line, Image& img, String& ann)\u0003Upp\rSETANNOTATION\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000{\u0001\u0000\u0000\u0000\u0000\u0000\u0000{\u0001\u0000\u0000\u0001\u0000\u0000\u0000~\u0001\u0000\u0000\u0001\u0000\u0000\rGetAnnotation\fString (int)\"Upp::EditorBar::GetAnnotation(int)\u001EString GetAnnotation(int line)\u0003Upp\rGETANNOTATION\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000Ä\u0001\u0000\u0000\u0000\u0000\u0000\u0000Ä\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ñ\u0001\u0000\u0000\u0001\u0000\u0000\rSetBreakpoint\u0014void (int, String &)*Upp::EditorBar::SetBreakpoint(int,String&)%void SetBreakpoint(int ln, String& s)\u0003Upp\rSETBREAKPOINT\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000Ü\u0001\u0000\u0000\u0000\u0000\u0000\u0000Ü\u0001\u0000\u0000\u0001\u0000\u0000\u0000£\u0001\u0000\u0000\u0001\u0000\u0000\tSetEdited\u000Fvoid (int, int)\"Upp::EditorBar::SetEdited(int,int)%void SetEdited(int ln, int count = 1)\u0003Upp\tSETEDITED\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000•\u0001\u0000\u0000\u0000\u0000\u0000\u0000•\u0001\u0000\u0000\u0001\u0000\u0000\u0000Æ\u0001\u0000\u0000\u0001\u0000\u0000\vClearEdited\avoid ()\u001DUpp::EditorBar::ClearEdited()\u0012void ClearEdited()\u0003Upp\vCLEAREDITED\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000∞\u0001\u0000\u0000\u0000\u0000\u0000\u0000∞\u0001\u0000\u0000\u0001\u0000\u0000\u0000∂\u0001\u0000\u0000\u0001\u0000\u0000\tGetLineNo\tint (int)\u001EUpp::EditorBar::GetLineNo(int)\u0019int GetLineNo(int lineno)\u0003Upp\tGETLINENO\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000∏\u0001\u0000\u0000\u0000\u0000\u0000\u0000∏\u0001\u0000\u0000\u0001\u0000\u0000\u0000¿\u0001\u0000\u0000\u0001\u0000\u0000\tGetNoLine\tint (int)\u001EUpp::EditorBar::GetNoLine(int)\u0017int GetNoLine(int line)\u0003Upp\tGETNOLINE\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000¬\u0001\u0000\u0000\u0000\u0000\u0000\u0000¬\u0001\u0000\u0000\u0001\u0000\u0000\u0000»\u0001\u0000\u0000\u0001\u0000\u0000\u0006SetPtr\u0018void (int, Image &, int)&Upp::EditorBar::SetPtr(int,Image&,int)(void SetPtr(int line, Image& img, int i)\u0003Upp\u0006SETPTR\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000 \u0001\u0000\u0000\u0000\u0000\u0000\u0000 \u0001\u0000\u0000\u0001\u0000\u0000\u0000Œ\u0001\u0000\u0000\u0001\u0000\u0000\aHidePtr\avoid ()\u0019Upp::EditorBar::HidePtr()\u000Evoid HidePtr()\u0003Upp\aHIDEPTR\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000–\u0001\u0000\u0000\u0000\u0000\u0000\u0000–\u0001\u0000\u0000\u0001\u0000\u0000\u0000‹\u0001\u0000\u0000\u0001\u0000\u0000\bSyncSize\avoid ()\u001AUpp::EditorBar::SyncSize()\u000Fvoid SyncSize()\u0003Upp\bSYNCSIZE\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000ﬁ\u0001\u0000\u0000\u0000\u0000\u0000\u0000ﬁ\u0001\u0000\u0000\u0001\u0000\u0000\u0000‚\u0001\u0000\u0000\u0001\u0000\u0000\vLineNumbers\vvoid (bool)!Upp::EditorBar::LineNumbers(bool)\u0018void LineNumbers(bool b)\u0003Upp\vLINENUMBERS\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000‰\u0001\u0000\u0000\u0000\u0000\u0000\u0000‰\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ë\u0001\u0000\u0000\u0001\u0000\u0000\vAnnotations\nvoid (int) Upp::EditorBar::Annotations(int)\u001Bvoid Annotations(int width)\u0003Upp\vANNOTATIONS\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0018\u0000\u0000\u0000\v\u0000\u0000\u0000Í\u0001\u0000\u0000\u0000\u0000\u0000\u0000Í\u0001\u0000\u0000\u0001\u0000\u0000\u0000ˆ\u0001\u0000\u0000\u0001\u0000\u0000\tEditorBar\avoid ()\u001BUpp::EditorBar::EditorBar()\vEditorBar()\u0003Upp\tEDITORBAR\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000¯\u0001\u0000\u0000\u0000\u0000\u0000\u0000¯\u0001\u0000\u0000\u0001\u0000\u0000\u0000˛\u0001\u0000\u0000\u0001\u0000\u0000\vStatusImage\u000Evoid (Image &)#Upp::EditorBar::StatusImage(Image&)\u001Avoid StatusImage(Image& m)\u0003Upp\vSTATUSIMAGE\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0019\u0000\u0000\u0000\v\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0002\u0000\u0000\u0001\u0000\u0000\n~EditorBar\u0010void () noexcept\u0013Upp::EditorBar::~()\f~EditorBar()\u0003Upp\n~EDITORBAR\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000end\u0000t\u0018\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CodeEditor.h","value":"dataˇß\u0001\u0000\u0000ı\u0001\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\vIDEEDITOR_H\u0000\vIDEEDITOR_H\vIDEEDITOR_H\u0000\vIDEEDITOR_H\u0000\u0000\u0000\u0000ı\u0001\u0000\u0000\t\u0000\u0000\u0000\t\u0000\u0000\u0000\t\u0000\u0000\u0000\t\u0000\u0000\u0000/\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\nLAYOUTFILE\u0000\nLAYOUTFILE\nLAYOUTFILE\u0000\nLAYOUTFILE\u0000\u0000\u0000\u0000ı\u0001\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u0000\u001A\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\vIMAGEVECTOR\u0000\vIMAGEVECTOR\vIMAGEVECTOR\u0000\vIMAGEVECTOR\u0000\u0000\u0000\u0000ı\u0001\u0000\u0000\b\u0000\u0000\u0000\r\u0000\u0000\u0000\b\u0000\u0000\u0000\r\u0000\u0000\u0000!\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\nIMAGECLASS\u0000\nIMAGECLASS\nIMAGECLASS\u0000\nIMAGECLASS\u0000\u0000\u0000\u0000ı\u0001\u0000\u0000\b\u0000\u0000\u0000\u000E\u0000\u0000\u0000\b\u0000\u0000\u0000\u000E\u0000\u0000\u0000/\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\tIMAGEFILE\u0000\tIMAGEFILE\tIMAGEFILE\u0000\tIMAGEFILE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000`\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0010FindWildcardMenu%void (int, Point, bool, Ctrl *, bool)0Upp::FindWildcardMenu(int,Point,bool,Ctrl*,bool)Lvoid FindWildcardMenu(int cb, Point p, bool tablf, Ctrl *owner, bool regexp)\u0003Upp\u0010FINDWILDCARDMENU\u0003Upp\u0003UPP\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0001\u0000\u0000\u000ELineInfoRecord\u0013Upp::LineInfoRecord\u0013Upp::LineInfoRecord\u000ELineInfoRecord\u0003Upp\u000ELINEINFORECORD\u0013Upp::LineInfoRecord\u0013UPP::LINEINFORECORD\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0001\u0000\u0000\u0006lineno\u0003int\u001BUpp::LineInfoRecord::lineno\nint lineno\u0003Upp\u0006LINENO\u0013Upp::LineInfoRecord\u0013UPP::LINEINFORECORD\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0000\nbreakpoint\u0006String\u001FUpp::LineInfoRecord::breakpoint\u0011String breakpoint\u0003Upp\nBREAKPOINT\u0013Upp::LineInfoRecord\u0013UPP::LINEINFORECORD\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0017\u0000\u0000\u0000\r\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0005count\u0003int\u001AUpp::LineInfoRecord::count\tint count\u0003Upp\u0005COUNT\u0013Upp::LineInfoRecord\u0013UPP::LINEINFORECORD\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\vfirstedited\u0003int Upp::LineInfoRecord::firstedited\u000Fint firstedited\u0003Upp\vFIRSTEDITED\u0013Upp::LineInfoRecord\u0013UPP::LINEINFORECORD\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0006edited\u0003int\u001BUpp::LineInfoRecord::edited\nint edited\u0003Upp\u0006EDITED\u0013Upp::LineInfoRecord\u0013UPP::LINEINFORECORD\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001B\u0000\u0000\u0000!\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0001\u0000\u0000\u000ELineInfoRecord\avoid ()%Upp::LineInfoRecord::LineInfoRecord()\u0010LineInfoRecord()\u0003Upp\u000ELINEINFORECORD\u0013Upp::LineInfoRecord\u0013UPP::LINEINFORECORD\u0000\u0000\u0014\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0000\u0000\u0000&\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0000\bLineInfo\rUpp::LineInfo\rUpp::LineInfo&typedef Array<LineInfoRecord> LineInfo\u0003Upp\bLINEINFO\u0003Upp\u0003UPP\nUpp::Array\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\u0011LineInfoRemRecord\u0016Upp::LineInfoRemRecord\u0016Upp::LineInfoRemRecord\u0011LineInfoRemRecord\u0003Upp\u0011LINEINFOREMRECORD\u0016Upp::LineInfoRemRecord\u0016UPP::LINEINFOREMRECORD\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000!\u0000\u0000\u0000\u0001\u0000\u0000\u0000!\u0000\u0000\u0000\u0013\u0000\u0000\u0000!\u0000\u0000\u0000\u0001\u0000\u0000\vfirstedited\u0003int#Upp::LineInfoRemRecord::firstedited\u000Fint firstedited\u0003Upp\vFIRSTEDITED\u0016Upp::LineInfoRemRecord\u0016UPP::LINEINFOREMRECORD\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000\"\u0000\u0000\u0000\u0001\u0000\u0000\u0000\"\u0000\u0000\u0000\u000E\u0000\u0000\u0000\"\u0000\u0000\u0000\u0001\u0000\u0000\u0006edited\u0003int\u001EUpp::LineInfoRemRecord::edited\nint edited\u0003Upp\u0006EDITED\u0016Upp::LineInfoRemRecord\u0016UPP::LINEINFOREMRECORD\u0000\u0000\u0014\u0000\u0000\u0000\"\u0000\u0000\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0000%\u0000\u0000\u0000-\u0000\u0000\u0000%\u0000\u0000\u0000\u0001\u0000\u0000\vLineInfoRem\u0010Upp::LineInfoRem\u0010Upp::LineInfoRem-typedef Vector<LineInfoRemRecord> LineInfoRem\u0003Upp\vLINEINFOREM\u0003Upp\u0003UPP\vUpp::Vector\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000'\u0000\u0000\u0000\u0000\u0000\u0000\u0000'\u0000\u0000\u0000\u001B\u0000\u0000\u0000'\u0000\u0000\u0000\u0000\u0000\u0000\bRenumber\u0011void (LineInfo &)\u0018Upp::Renumber(LineInfo&)\u001Bvoid Renumber(LineInfo& lf)\u0003Upp\bRENUMBER\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000(\u0000\u0000\u0000\u0000\u0000\u0000\u0000(\u0000\u0000\u0000#\u0000\u0000\u0000(\u0000\u0000\u0000\u0000\u0000\u0000\u0010ClearBreakpoints\u0011void (LineInfo &) Upp::ClearBreakpoints(LineInfo&)#void ClearBreakpoints(LineInfo& lf)\u0003Upp\u0010CLEARBREAKPOINTS\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000)\u0000\u0000\u0000\u0000\u0000\u0000\u0000)\u0000\u0000\u0000&\u0000\u0000\u0000)\u0000\u0000\u0000\u0000\u0000\u0000\u0013ValidateBreakpoints\u0011void (LineInfo &)#Upp::ValidateBreakpoints(LineInfo&)&void ValidateBreakpoints(LineInfo& lf)\u0003Upp\u0013VALIDATEBREAKPOINTS\u0003Upp\u0003UPP\u0000\u0000\u0004\u0000\u0000\u0000\u0006\u0000\u0000\u0000+\u0000\u0000\u0000\u0000\u0000\u0000\u0000+\u0000\u0000\u0000\u0010\u0000\u0000\u0000+\u0000\u0000\u0000\u0000\u0000\u0000\nCodeEditor\u000FUpp::CodeEditor\u000FUpp::CodeEditor\nCodeEditor\u0003Upp\nCODEEDITOR\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0004\u0000\u0000\u0000\u0006\u0000\u0000\u0000-\u0000\u0000\u0000\u0000\u0000\u0000\u0000-\u0000\u0000\u0000\u0001\u0000\u0000\u0000ì\u0000\u0000\u0000\u0001\u0000\u0000\tEditorBar\u000EUpp::EditorBar\u000EUpp::EditorBar\tEditorBar\u0003Upp\tEDITORBAR\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000/\u0000\u0000\u0000\u0001\u0000\u0000\u0000/\u0000\u0000\u0000\u001C\u0000\u0000\u0000/\u0000\u0000\u0000\u0000\u0001\u0000\u0005Paint\rvoid (Draw &)\u001CUpp::EditorBar::Paint(Draw&)\u0013void Paint(Draw& w)\u0003Upp\u0005PAINT\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u00000\u0000\u0000\u0000\u0001\u0000\u0000\u00000\u0000\u0000\u0000-\u0000\u0000\u00000\u0000\u0000\u0000\u0000\u0001\u0000\tMouseMove\u0013void (Point, dword)&Upp::EditorBar::MouseMove(Point,dword)$void MouseMove(Point p, dword flags)\u0003Upp\tMOUSEMOVE\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u00001\u0000\u0000\u0000\u0001\u0000\u0000\u00001\u0000\u0000\u0000\u001A\u0000\u0000\u00001\u0000\u0000\u0000\u0000\u0001\u0000\nMouseLeave\avoid ()\u001CUpp::EditorBar::MouseLeave()\u0011void MouseLeave()\u0003Upp\nMOUSELEAVE\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u00002\u0000\u0000\u0000\u0001\u0000\u0000\u00002\u0000\u0000\u0000,\u0000\u0000\u00002\u0000\u0000\u0000\u0000\u0001\u0000\bLeftDown\u0013void (Point, dword)%Upp::EditorBar::LeftDown(Point,dword)#void LeftDown(Point p, dword flags)\u0003Upp\bLEFTDOWN\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u00003\u0000\u0000\u0000\u0001\u0000\u0000\u00003\u0000\u0000\u0000.\u0000\u0000\u00003\u0000\u0000\u0000\u0000\u0001\u0000\nLeftDouble\u0013void (Point, dword)'Upp::EditorBar::LeftDouble(Point,dword)%void LeftDouble(Point p, dword flags)\u0003Upp\nLEFTDOUBLE\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u00004\u0000\u0000\u0000\u0001\u0000\u0000\u00004\u0000\u0000\u0000-\u0000\u0000\u00004\u0000\u0000\u0000\u0000\u0001\u0000\tRightDown\u0013void (Point, dword)&Upp::EditorBar::RightDown(Point,dword)$void RightDown(Point p, dword flags)\u0003Upp\tRIGHTDOWN\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u00005\u0000\u0000\u0000\u0001\u0000\u0000\u00005\u0000\u0000\u0000=\u0000\u0000\u00005\u0000\u0000\u0000\u0000\u0001\u0000\nMouseWheel\u0018void (Point, int, dword)+Upp::EditorBar::MouseWheel(Point,int,dword)4void MouseWheel(Point p, int zdelta, dword keyflags)\u0003Upp\nMOUSEWHEEL\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u00008\u0000\u0000\u0000\u0001\u0000\u0000\u00008\u0000\u0000\u0000\u0002\u0000\u0000\u0000?\u0000\u0000\u0000\u0001\u0000\u0000\u0006LnInfo\u0016Upp::EditorBar::LnInfo\u0016Upp::EditorBar::LnInfo\u0006LnInfo\u0003Upp\u0006LNINFO\u0016Upp::EditorBar::LnInfo\u0016UPP::EDITORBAR::LNINFO\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u00009\u0000\u0000\u0000\u0002\u0000\u0000\u00009\u0000\u0000\u0000\u0014\u0000\u0000\u00009\u0000\u0000\u0000\u0001\u0000\u0000\u0006lineno\u0003int\u001EUpp::EditorBar::LnInfo::lineno\nint lineno\u0003Upp\u0006LINENO\u0016Upp::EditorBar::LnInfo\u0016UPP::EDITORBAR::LNINFO\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000:\u0000\u0000\u0000\u0002\u0000\u0000\u0000:\u0000\u0000\u0000\u0013\u0000\u0000\u0000:\u0000\u0000\u0000\u0001\u0000\u0000\nbreakpoint\u0006String\"Upp::EditorBar::LnInfo::breakpoint\u0011String breakpoint\u0003Upp\nBREAKPOINT\u0016Upp::EditorBar::LnInfo\u0016UPP::EDITORBAR::LNINFO\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000;\u0000\u0000\u0000\u0002\u0000\u0000\u0000;\u0000\u0000\u0000\u0018\u0000\u0000\u0000;\u0000\u0000\u0000\u0001\u0000\u0000\vfirstedited\u0003int#Upp::EditorBar::LnInfo::firstedited\u000Fint firstedited\u0003Upp\vFIRSTEDITED\u0016Upp::EditorBar::LnInfo\u0016UPP::EDITORBAR::LNINFO\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000<\u0000\u0000\u0000\u0002\u0000\u0000\u0000<\u0000\u0000\u0000\u0013\u0000\u0000\u0000<\u0000\u0000\u0000\u0001\u0000\u0000\u0006edited\u0003int\u001EUpp::EditorBar::LnInfo::edited\nint edited\u0003Upp\u0006EDITED\u0016Upp::EditorBar::LnInfo\u0016UPP::EDITORBAR::LNINFO\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000=\u0000\u0000\u0000\u0002\u0000\u0000\u0000=\u0000\u0000\u0000\r\u0000\u0000\u0000=\u0000\u0000\u0000\u0001\u0000\u0000\u0004icon\u0005Image\u001CUpp::EditorBar::LnInfo::icon\nImage icon\u0003Upp\u0004ICON\u0016Upp::EditorBar::LnInfo\u0016UPP::EDITORBAR::LNINFO\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000>\u0000\u0000\u0000\u0002\u0000\u0000\u0000>\u0000\u0000\u0000\u0013\u0000\u0000\u0000>\u0000\u0000\u0000\u0001\u0000\u0000\nannotation\u0006String\"Upp::EditorBar::LnInfo::annotation\u0011String annotation\u0003Upp\nANNOTATION\u0016Upp::EditorBar::LnInfo\u0016UPP::EDITORBAR::LNINFO\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000A\u0000\u0000\u0000\u0001\u0000\u0000\u0000A\u0000\u0000\u0000\u0014\u0000\u0000\u0000A\u0000\u0000\u0000\u0001\u0000\u0000\u0002li\u000EVector<LnInfo>\u0012Upp::EditorBar::li\u0011Vector<LnInfo> li\u0003Upp\u0002LI\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000B\u0000\u0000\u0000\u0001\u0000\u0000\u0000B\u0000\u0000\u0000\u001C\u0000\u0000\u0000B\u0000\u0000\u0000\u0001\u0000\u0000\nli_removed\vLineInfoRem\u001AUpp::EditorBar::li_removed\u0016LineInfoRem li_removed\u0003Upp\nLI_REMOVED\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000D\u0000\u0000\u0000\u0001\u0000\u0000\u0000D\u0000\u0000\u0000\u0019\u0000\u0000\u0000D\u0000\u0000\u0000\u0001\u0000\u0000\u0006editor\fCodeEditor *\u0016Upp::EditorBar::editor\u0012CodeEditor *editor\u0003Upp\u0006EDITOR\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000E\u0000\u0000\u0000\u0001\u0000\u0000\u0000E\u0000\u0000\u0000\u001C\u0000\u0000\u0000E\u0000\u0000\u0000\u0001\u0000\u0000\aptrline\u0006int[2]\u0017Upp::EditorBar::ptrline\u000Eint ptrline[2]\u0003Upp\aPTRLINE\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000F\u0000\u0000\u0000\u0001\u0000\u0000\u0000F\u0000\u0000\u0000\u001B\u0000\u0000\u0000F\u0000\u0000\u0000\u0001\u0000\u0000\u0006ptrimg\bImage[2]\u0016Upp::EditorBar::ptrimg\u000FImage ptrimg[2]\u0003Upp\u0006PTRIMG\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000G\u0000\u0000\u0000\u0001\u0000\u0000\u0000G\u0000\u0000\u0000\u001D\u0000\u0000\u0000G\u0000\u0000\u0000\u0001\u0000\u0000\vbingenabled\u0004bool\u001BUpp::EditorBar::bingenabled\u0010bool bingenabled\u0003Upp\vBINGENABLED\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000H\u0000\u0000\u0000\u0001\u0000\u0000\u0000H\u0000\u0000\u0000!\u0000\u0000\u0000H\u0000\u0000\u0000\u0001\u0000\u0000\u000Fhilite_if_endif\u0004bool\u001FUpp::EditorBar::hilite_if_endif\u0014bool hilite_if_endif\u0003Upp\u000FHILITE_IF_ENDIF\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000I\u0000\u0000\u0000\u0001\u0000\u0000\u0000I\u0000\u0000\u0000\u001E\u0000\u0000\u0000I\u0000\u0000\u0000\u0001\u0000\u0000\fline_numbers\u0004bool\u001CUpp::EditorBar::line_numbers\u0011bool line_numbers\u0003Upp\fLINE_NUMBERS\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000J\u0000\u0000\u0000\u0001\u0000\u0000\u0000J\u0000\u0000\u0000\u001D\u0000\u0000\u0000J\u0000\u0000\u0000\u0001\u0000\u0000\vannotations\u0003int\u001BUpp::EditorBar::annotations\u000Fint annotations\u0003Upp\vANNOTATIONS\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000K\u0000\u0000\u0000\u0001\u0000\u0000\u0000K\u0000\u0000\u0000#\u0000\u0000\u0000K\u0000\u0000\u0000\u0001\u0000\u0000\u0011ignored_next_edit\u0004bool!Upp::EditorBar::ignored_next_edit\u0016bool ignored_next_edit\u0003Upp\u0011IGNORED_NEXT_EDIT\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000L\u0000\u0000\u0000\u0001\u0000\u0000\u0000L\u0000\u0000\u0000\u001A\u0000\u0000\u0000L\u0000\u0000\u0000\u0001\u0000\u0000\bnext_age\u0003int\u0018Upp::EditorBar::next_age\fint next_age\u0003Upp\bNEXT_AGE\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000M\u0000\u0000\u0000\u0001\u0000\u0000\u0000M\u0000\u0000\u0000#\u0000\u0000\u0000M\u0000\u0000\u0000\u0001\u0000\u0000\u0011active_annotation\u0003int!Upp::EditorBar::active_annotation\u0015int active_annotation\u0003Upp\u0011ACTIVE_ANNOTATION\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000N\u0000\u0000\u0000\u0001\u0000\u0000\u0000N\u0000\u0000\u0000\u0019\u0000\u0000\u0000N\u0000\u0000\u0000\u0001\u0000\u0000\aanimate\rVector<Color>\u0017Upp::EditorBar::animate\u0015Vector<Color> animate\u0003Upp\aANIMATE\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000O\u0000\u0000\u0000\u0001\u0000\u0000\u0000O\u0000\u0000\u0000\u001E\u0000\u0000\u0000O\u0000\u0000\u0000\u0001\u0000\u0000\fstatus_image\u0005Image\u001CUpp::EditorBar::status_image\u0012Image status_image\u0003Upp\fSTATUS_IMAGE\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000P\u0000\u0000\u0000\u0001\u0000\u0000\u0000P\u0000\u0000\u0000!\u0000\u0000\u0000P\u0000\u0000\u0000\u0001\u0000\u0000\bbg_color\u0005Color\u0018Upp::EditorBar::bg_color\u000EColor bg_color\u0003Upp\bBG_COLOR\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000Q\u0000\u0000\u0000\u0001\u0000\u0000\u0000Q\u0000\u0000\u0000\u0016\u0000\u0000\u0000Q\u0000\u0000\u0000\u0001\u0000\u0000\u0004text\u0006String\u0014Upp::EditorBar::text\vString text\u0003Upp\u0004TEXT\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000R\u0000\u0000\u0000\u0001\u0000\u0000\u0000R\u0000\u0000\u0000#\u0000\u0000\u0000R\u0000\u0000\u0000\u0001\u0000\u0000\ntext_color\u0005Color\u001AUpp::EditorBar::text_color\u0010Color text_color\u0003Upp\nTEXT_COLOR\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\t\u0000\u0000\u0000T\u0000\u0000\u0000\u0001\u0000\u0000\u0000T\u0000\u0000\u0000\u001B\u0000\u0000\u0000T\u0000\u0000\u0000\u0000\u0000\u0000\nPointBreak\u000FString &(int &) Upp::EditorBar::PointBreak(int&)\u001AString& PointBreak(int& y)\u0003Upp\nPOINTBREAK\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\t\u0000\u0000\u0000U\u0000\u0000\u0000\u0001\u0000\u0000\u0000U\u0000\u0000\u0000>\u0000\u0000\u0000U\u0000\u0000\u0000\u0000\u0000\u0000\vsPaintImage void (Draw &, int, int, Image &)1Upp::EditorBar::sPaintImage(Draw&,int,int,Image&)4void sPaintImage(Draw& w, int y, int fy, Image& img)\u0003Upp\vSPAINTIMAGE\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000Z\u0000\u0000\u0000\u0001\u0000\u0000\u0000Z\u0000\u0000\u0000\u001A\u0000\u0000\u0000Z\u0000\u0000\u0000\u0001\u0000\u0000\u000EWhenBreakpoint\u0003int\u001EUpp::EditorBar::WhenBreakpoint\u0012int WhenBreakpoint\u0003Upp\u000EWHENBREAKPOINT\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000[\u0000\u0000\u0000\u0001\u0000\u0000\u0000[\u0000\u0000\u0000\u001E\u0000\u0000\u0000[\u0000\u0000\u0000\u0001\u0000\u0000\u0012WhenAnnotationMove\u0003int\"Upp::EditorBar::WhenAnnotationMove\u0016int WhenAnnotationMove\u0003Upp\u0012WHENANNOTATIONMOVE\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000\\\u0000\u0000\u0000\u0001\u0000\u0000\u0000\\\u0000\u0000\u0000\u001F\u0000\u0000\u0000\\\u0000\u0000\u0000\u0001\u0000\u0000\u0013WhenAnnotationClick\u0003int#Upp::EditorBar::WhenAnnotationClick\u0017int WhenAnnotationClick\u0003Upp\u0013WHENANNOTATIONCLICK\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000]\u0000\u0000\u0000\u0001\u0000\u0000\u0000]\u0000\u0000\u0000$\u0000\u0000\u0000]\u0000\u0000\u0000\u0001\u0000\u0000\u0018WhenAnnotationRightClick\u0003int(Upp::EditorBar::WhenAnnotationRightClick\u001Cint WhenAnnotationRightClick\u0003Upp\u0018WHENANNOTATIONRIGHTCLICK\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000_\u0000\u0000\u0000\u0001\u0000\u0000\u0000_\u0000\u0000\u0000#\u0000\u0000\u0000_\u0000\u0000\u0000\u0000\u0000\u0000\vInsertLines\u000Fvoid (int, int)$Upp::EditorBar::InsertLines(int,int)\"void InsertLines(int i, int count)\u0003Upp\vINSERTLINES\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000`\u0000\u0000\u0000\u0001\u0000\u0000\u0000`\u0000\u0000\u0000#\u0000\u0000\u0000`\u0000\u0000\u0000\u0000\u0000\u0000\vRemoveLines\u000Fvoid (int, int)$Upp::EditorBar::RemoveLines(int,int)\"void RemoveLines(int i, int count)\u0003Upp\vREMOVELINES\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000a\u0000\u0000\u0000\u0001\u0000\u0000\u0000a\u0000\u0000\u0000\u0012\u0000\u0000\u0000a\u0000\u0000\u0000\u0000\u0000\u0000\nClearLines\avoid ()\u001CUpp::EditorBar::ClearLines()\u0011void ClearLines()\u0003Upp\nCLEARLINES\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000c\u0000\u0000\u0000\u0001\u0000\u0000\u0000c\u0000\u0000\u00006\u0000\u0000\u0000c\u0000\u0000\u0000\u0001\u0000\u0000\u0006Scroll\avoid ()\u0018Upp::EditorBar::Scroll()\rvoid Scroll()\u0003Upp\u0006SCROLL\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000e\u0000\u0000\u0000\u0001\u0000\u0000\u0000e\u0000\u0000\u0000\u0010\u0000\u0000\u0000e\u0000\u0000\u0000\u0000\u0000\u0000\bSyncSize\avoid ()\u001AUpp::EditorBar::SyncSize()\u000Fvoid SyncSize()\u0003Upp\bSYNCSIZE\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000g\u0000\u0000\u0000\u0001\u0000\u0000\u0000g\u0000\u0000\u0000\u001D\u0000\u0000\u0000g\u0000\u0000\u0000\u0000\u0000\u0000\bRenumber\nvoid (int)\u001DUpp::EditorBar::Renumber(int)\u001Cvoid Renumber(int linecount)\u0003Upp\bRENUMBER\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000h\u0000\u0000\u0000\u0001\u0000\u0000\u0000h\u0000\u0000\u0000\u0018\u0000\u0000\u0000h\u0000\u0000\u0000\u0000\u0000\u0000\u0010ClearBreakpoints\avoid ()\"Upp::EditorBar::ClearBreakpoints()\u0017void ClearBreakpoints()\u0003Upp\u0010CLEARBREAKPOINTS\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000i\u0000\u0000\u0000\u0001\u0000\u0000\u0000i\u0000\u0000\u0000\u001B\u0000\u0000\u0000i\u0000\u0000\u0000\u0000\u0000\u0000\u0013ValidateBreakpoints\avoid ()%Upp::EditorBar::ValidateBreakpoints()\u001Avoid ValidateBreakpoints()\u0003Upp\u0013VALIDATEBREAKPOINTS\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\t\u0000\u0000\u0000k\u0000\u0000\u0000\u0001\u0000\u0000\u0000k\u0000\u0000\u0000\u001E\u0000\u0000\u0000k\u0000\u0000\u0000\u0000\u0000\u0000\rGetBreakpoint\fString (int)\"Upp::EditorBar::GetBreakpoint(int)\u001CString GetBreakpoint(int ln)\u0003Upp\rGETBREAKPOINT\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\t\u0000\u0000\u0000l\u0000\u0000\u0000\u0001\u0000\u0000\u0000l\u0000\u0000\u0000/\u0000\u0000\u0000l\u0000\u0000\u0000\u0000\u0000\u0000\rSetBreakpoint\u0014void (int, String &)*Upp::EditorBar::SetBreakpoint(int,String&)%void SetBreakpoint(int ln, String& s)\u0003Upp\rSETBREAKPOINT\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\t\u0000\u0000\u0000m\u0000\u0000\u0000\u0001\u0000\u0000\u0000m\u0000\u0000\u0000)\u0000\u0000\u0000m\u0000\u0000\u0000\u0000\u0000\u0000\tSetEdited\u000Fvoid (int, int)\"Upp::EditorBar::SetEdited(int,int)%void SetEdited(int ln, int count = 1)\u0003Upp\tSETEDITED\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\t\u0000\u0000\u0000n\u0000\u0000\u0000\u0001\u0000\u0000\u0000n\u0000\u0000\u0000\u0016\u0000\u0000\u0000n\u0000\u0000\u0000\u0000\u0000\u0000\vClearEdited\avoid ()\u001DUpp::EditorBar::ClearEdited()\u0012void ClearEdited()\u0003Upp\vCLEAREDITED\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000p\u0000\u0000\u0000\u0001\u0000\u0000\u0000p\u0000\u0000\u00008\u0000\u0000\u0000p\u0000\u0000\u0000\u0001\u0000\u0000\tSetEditor\u0013void (CodeEditor *)&Upp::EditorBar::SetEditor(CodeEditor*)\u001Dvoid SetEditor(CodeEditor *e)\u0003Upp\tSETEDITOR\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000r\u0000\u0000\u0000\u0001\u0000\u0000\u0000r\u0000\u0000\u0000\u0017\u0000\u0000\u0000r\u0000\u0000\u0000\u0000\u0000\u0000\vGetLineInfo\vLineInfo ()\u001DUpp::EditorBar::GetLineInfo()\u0016LineInfo GetLineInfo()\u0003Upp\vGETLINEINFO\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000s\u0000\u0000\u0000\u0001\u0000\u0000\u0000s\u0000\u0000\u00004\u0000\u0000\u0000s\u0000\u0000\u0000\u0000\u0000\u0000\vSetLineInfo\u0016void (LineInfo &, int)*Upp::EditorBar::SetLineInfo(LineInfo&,int))void SetLineInfo(LineInfo& li, int total)\u0003Upp\vSETLINEINFO\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000t\u0000\u0000\u0000\u0001\u0000\u0000\u0000t\u0000\u0000\u0000H\u0000\u0000\u0000t\u0000\u0000\u0000\u0001\u0000\u0000\u000EGetLineInfoRem\u000FLineInfoRem &() Upp::EditorBar::GetLineInfoRem()\u001DLineInfoRem& GetLineInfoRem()\u0003Upp\u000EGETLINEINFOREM\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000u\u0000\u0000\u0000\u0001\u0000\u0000\u0000u\u0000\u0000\u0000L\u0000\u0000\u0000u\u0000\u0000\u0000\u0001\u0000\u0000\u000ESetLineInfoRem\u0012void (LineInfoRem)+Upp::EditorBar::SetLineInfoRem(LineInfoRem)#void SetLineInfoRem(LineInfoRem li)\u0003Upp\u000ESETLINEINFOREM\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000w\u0000\u0000\u0000\u0001\u0000\u0000\u0000w\u0000\u0000\u0000\u001C\u0000\u0000\u0000w\u0000\u0000\u0000\u0000\u0000\u0000\u0010ClearAnnotations\avoid ()\"Upp::EditorBar::ClearAnnotations()\u0017void ClearAnnotations()\u0003Upp\u0010CLEARANNOTATIONS\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000x\u0000\u0000\u0000\u0001\u0000\u0000\u0000x\u0000\u0000\u0000F\u0000\u0000\u0000x\u0000\u0000\u0000\u0000\u0000\u0000\rSetAnnotation\u001Dvoid (int, Image &, String &)1Upp::EditorBar::SetAnnotation(int,Image&,String&)5void SetAnnotation(int line, Image& img, String& ann)\u0003Upp\rSETANNOTATION\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000y\u0000\u0000\u0000\u0001\u0000\u0000\u0000y\u0000\u0000\u0000!\u0000\u0000\u0000y\u0000\u0000\u0000\u0000\u0000\u0000\rGetAnnotation\fString (int)\"Upp::EditorBar::GetAnnotation(int)\u001EString GetAnnotation(int line)\u0003Upp\rGETANNOTATION\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000{\u0000\u0000\u0000\u0001\u0000\u0000\u0000{\u0000\u0000\u0000\u001F\u0000\u0000\u0000{\u0000\u0000\u0000\u0000\u0000\u0000\tGetLineNo\tint (int)\u001EUpp::EditorBar::GetLineNo(int)\u0019int GetLineNo(int lineno)\u0003Upp\tGETLINENO\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000|\u0000\u0000\u0000\u0001\u0000\u0000\u0000|\u0000\u0000\u0000\u001D\u0000\u0000\u0000|\u0000\u0000\u0000\u0000\u0000\u0000\tGetNoLine\tint (int)\u001EUpp::EditorBar::GetNoLine(int)\u0017int GetNoLine(int line)\u0003Upp\tGETNOLINE\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000~\u0000\u0000\u0000\u0001\u0000\u0000\u0000~\u0000\u0000\u00003\u0000\u0000\u0000~\u0000\u0000\u0000\u0000\u0000\u0000\u0006SetPtr\u0018void (int, Image &, int)&Upp::EditorBar::SetPtr(int,Image&,int)(void SetPtr(int line, Image& img, int i)\u0003Upp\u0006SETPTR\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\u007F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u007F\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u007F\u0000\u0000\u0000\u0000\u0000\u0000\aHidePtr\avoid ()\u0019Upp::EditorBar::HidePtr()\u000Evoid HidePtr()\u0003Upp\aHIDEPTR\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000Å\u0000\u0000\u0000\u0001\u0000\u0000\u0000Å\u0000\u0000\u0000>\u0000\u0000\u0000Å\u0000\u0000\u0000\u0001\u0000\u0000\u0013EnableBreakpointing\vvoid (bool))Upp::EditorBar::EnableBreakpointing(bool) void EnableBreakpointing(bool b)\u0003Upp\u0013ENABLEBREAKPOINTING\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000Ç\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ç\u0000\u0000\u0000M\u0000\u0000\u0000Ç\u0000\u0000\u0000\u0001\u0000\u0000\rHiliteIfEndif\vvoid (bool)#Upp::EditorBar::HiliteIfEndif(bool)\u001Avoid HiliteIfEndif(bool b)\u0003Upp\rHILITEIFENDIF\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000É\u0000\u0000\u0000\u0001\u0000\u0000\u0000É\u0000\u0000\u0000\u001D\u0000\u0000\u0000É\u0000\u0000\u0000\u0000\u0000\u0000\vLineNumbers\vvoid (bool)!Upp::EditorBar::LineNumbers(bool)\u0018void LineNumbers(bool b)\u0003Upp\vLINENUMBERS\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000Ñ\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ñ\u0000\u0000\u0000 \u0000\u0000\u0000Ñ\u0000\u0000\u0000\u0000\u0000\u0000\vAnnotations\nvoid (int) Upp::EditorBar::Annotations(int)\u001Bvoid Annotations(int width)\u0003Upp\vANNOTATIONS\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000Ü\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ü\u0000\u0000\u0000E\u0000\u0000\u0000Ü\u0000\u0000\u0000\u0001\u0000\u0000\u000FIsHiliteIfEndif\abool ()!Upp::EditorBar::IsHiliteIfEndif()\u0016bool IsHiliteIfEndif()\u0003Upp\u000FISHILITEIFENDIF\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000à\u0000\u0000\u0000\u0001\u0000\u0000\u0000à\u0000\u0000\u0000G\u0000\u0000\u0000à\u0000\u0000\u0000\u0001\u0000\u0000\u0017GetActiveAnnotationLine\u0006int ())Upp::EditorBar::GetActiveAnnotationLine()\u001Dint GetActiveAnnotationLine()\u0003Upp\u0017GETACTIVEANNOTATIONLINE\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000ä\u0000\u0000\u0000\u0001\u0000\u0000\u0000ä\u0000\u0000\u0000f\u0000\u0000\u0000ä\u0000\u0000\u0000\u0001\u0000\u0000\nSetAnimate\u0016void (Vector<Color> &)#Upp::EditorBar::SetAnimate(Vector&)!void SetAnimate(Vector<Color>& a)\u0003Upp\nSETANIMATE\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000å\u0000\u0000\u0000\u0001\u0000\u0000\u0000å\u0000\u0000\u0000%\u0000\u0000\u0000å\u0000\u0000\u0000\u0000\u0000\u0000\vStatusImage\u000Evoid (Image &)#Upp::EditorBar::StatusImage(Image&)\u001Avoid StatusImage(Image& m)\u0003Upp\vSTATUSIMAGE\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000é\u0000\u0000\u0000\u0001\u0000\u0000\u0000é\u0000\u0000\u0000[\u0000\u0000\u0000é\u0000\u0000\u0000\u0001\u0000\u0000\nBackground\fvoid (Color)!Upp::EditorBar::Background(Color)\u0018void Background(Color c)\u0003Upp\nBACKGROUND\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000è\u0000\u0000\u0000\u0001\u0000\u0000\u0000è\u0000\u0000\u0000w\u0000\u0000\u0000è\u0000\u0000\u0000\u0001\u0000\u0000\u0004Text\u0016void (String &, Color)#Upp::EditorBar::Text(String&,Color)\u001Dvoid Text(String& s, Color c)\u0003Upp\u0004TEXT\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000ë\u0000\u0000\u0000\u0001\u0000\u0000\u0000ë\u0000\u0000\u0000\f\u0000\u0000\u0000ë\u0000\u0000\u0000\u0000\u0000\u0000\tEditorBar\avoid ()\u001BUpp::EditorBar::EditorBar()\vEditorBar()\u0003Upp\tEDITORBAR\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0019\u0000\u0000\u0000\t\u0000\u0000\u0000í\u0000\u0000\u0000\u0001\u0000\u0000\u0000í\u0000\u0000\u0000\u0015\u0000\u0000\u0000í\u0000\u0000\u0000\u0000\u0000\u0000\n~EditorBar\avoid ()\u0013Upp::EditorBar::~()\f~EditorBar()\u0003Upp\n~EDITORBAR\u000EUpp::EditorBar\u000EUPP::EDITORBAR\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000ï\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï\u0000\u0000\u0000\u0001\u0000\u0000\u0000ô\u0000\u0000\u0000\u0001\u0000\u0000\bIdentPos\rUpp::IdentPos\rUpp::IdentPos\bIdentPos\u0003Upp\bIDENTPOS\rUpp::IdentPos\rUPP::IDENTPOS\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000ñ\u0000\u0000\u0000\u0001\u0000\u0000\u0000ñ\u0000\u0000\u0000\r\u0000\u0000\u0000ñ\u0000\u0000\u0000\u0001\u0000\u0000\u0005begin\u0003int\u0014Upp::IdentPos::begin\tint begin\u0003Upp\u0005BEGIN\rUpp::IdentPos\rUPP::IDENTPOS\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000ó\u0000\u0000\u0000\u0001\u0000\u0000\u0000ó\u0000\u0000\u0000\v\u0000\u0000\u0000ó\u0000\u0000\u0000\u0001\u0000\u0000\u0003end\u0003int\u0012Upp::IdentPos::end\aint end\u0003Upp\u0003END\rUpp::IdentPos\rUPP::IDENTPOS\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000ò\u0000\u0000\u0000\u0001\u0000\u0000\u0000ò\u0000\u0000\u0000\r\u0000\u0000\u0000ò\u0000\u0000\u0000\u0001\u0000\u0000\u0005ident\u0006String\u0014Upp::IdentPos::ident\fString ident\u0003Upp\u0005IDENT\rUpp::IdentPos\rUPP::IDENTPOS\u0000\u0000\b\u0000\u0000\u0000\u0010\u0000\u0000\u0000õ\u0000\u0000\u0000\u0000\u0000\u0000\u0000õ\u0000\u0000\u0000.\u0000\u0000\u0000õ\u0000\u0000\u0000\u0000\u0000\u0000\fGetLineIdent\u0018Array<IdentPos> (char *)\u0018Upp::GetLineIdent(char*)(Array<IdentPos> GetLineIdent(char *line)\u0003Upp\fGETLINEIDENT\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0010\u0000\u0000\u0000ú\u0000\u0000\u0000\u0000\u0000\u0000\u0000ú\u0000\u0000\u0000O\u0000\u0000\u0000ú\u0000\u0000\u0000\u0000\u0000\u0000\rGetLineString'Vector<Point> (wchar *, bool &, bool &)&Upp::GetLineString(wchar*,bool&,bool&)GVector<Point> GetLineString(wchar *wline, bool& is_begin, bool& is_end)\u0003Upp\rGETLINESTRING\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u0000û\u0000\u0000\u0000\u0000\u0000\u0000\u0000û\u0000\u0000\u0000O\u0000\u0000\u0000û\u0000\u0000\u0000\u0001\u0000\u0000\u0010CharFilterCIdent\tint (int)\u001AUpp::CharFilterCIdent(int)\u001Bint CharFilterCIdent(int i)\u0003Upp\u0010CHARFILTERCIDENT\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u0000ü\u0000\u0000\u0000\u0000\u0000\u0000\u0000ü\u0000\u0000\u0000H\u0000\u0000\u0000ü\u0000\u0000\u0000\u0001\u0000\u0000\u0006iscidl\nbool (int)\u0010Upp::iscidl(int)\u0012bool iscidl(int c)\u0003Upp\u0006ISCIDL\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u0000†\u0000\u0000\u0000\u0000\u0000\u0000\u0000†\u0000\u0000\u0000Q\u0000\u0000\u0000†\u0000\u0000\u0000\u0001\u0000\u0000\aislbrkt\nbool (int)\u0011Upp::islbrkt(int)\u0013bool islbrkt(int c)\u0003Upp\aISLBRKT\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u0000°\u0000\u0000\u0000\u0000\u0000\u0000\u0000°\u0000\u0000\u0000Q\u0000\u0000\u0000°\u0000\u0000\u0000\u0001\u0000\u0000\aisrbrkt\nbool (int)\u0011Upp::isrbrkt(int)\u0013bool isrbrkt(int c)\u0003Upp\aISRBRKT\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u0000¢\u0000\u0000\u0000\u0000\u0000\u0000\u0000¢\u0000\u0000\u0000I\u0000\u0000\u0000¢\u0000\u0000\u0000\u0001\u0000\u0000\u0006isbrkt\nbool (int)\u0010Upp::isbrkt(int)\u0012bool isbrkt(int c)\u0003Upp\u0006ISBRKT\u0003Upp\u0003UPP\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000§\u0000\u0000\u0000\u0000\u0000\u0000\u0000§\u0000\u0000\u0000\u0001\u0000\u0000\u0000∞\u0000\u0000\u0000\u0001\u0000\u0000\u000EFindReplaceDlg\u0013Upp::FindReplaceDlg\u0013Upp::FindReplaceDlg\u000EFindReplaceDlg\u0003Upp\u000EFINDREPLACEDLG\u0013Upp::FindReplaceDlg\u0013UPP::FINDREPLACEDLG\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000•\u0000\u0000\u0000\u0001\u0000\u0000\u0000•\u0000\u0000\u0000\u000E\u0000\u0000\u0000•\u0000\u0000\u0000\u0001\u0000\u0000\u0005itext\aWString\u001AUpp::FindReplaceDlg::itext\rWString itext\u0003Upp\u0005ITEXT\u0013Upp::FindReplaceDlg\u0013UPP::FINDREPLACEDLG\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000¶\u0000\u0000\u0000\u0001\u0000\u0000\u0000¶\u0000\u0000\u0000\u0012\u0000\u0000\u0000¶\u0000\u0000\u0000\u0001\u0000\u0000\treplacing\u0004bool\u001EUpp::FindReplaceDlg::replacing\u000Ebool replacing\u0003Upp\tREPLACING\u0013Upp::FindReplaceDlg\u0013UPP::FINDREPLACEDLG\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000®\u0000\u0000\u0000\u0001\u0000\u0000\u0000®\u0000\u0000\u0000'\u0000\u0000\u0000®\u0000\u0000\u0000\u0000\u0001\u0000\u0003Key\u0011bool (dword, int)#Upp::FindReplaceDlg::Key(dword,int)\u001Ebool Key(dword key, int count)\u0003Upp\u0003KEY\u0013Upp::FindReplaceDlg\u0013UPP::FINDREPLACEDLG\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000©\u0000\u0000\u0000\u0001\u0000\u0000\u0000©\u0000\u0000\u0000\u001B\u0000\u0000\u0000©\u0000\u0000\u0000\u0000\u0000\u0000\u0005Setup\vvoid (bool) Upp::FindReplaceDlg::Setup(bool)\u001Avoid Setup(bool doreplace)\u0003Upp\u0005SETUP\u0013Upp::FindReplaceDlg\u0013UPP::FINDREPLACEDLG\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000™\u0000\u0000\u0000\u0001\u0000\u0000\u0000™\u0000\u0000\u0000\f\u0000\u0000\u0000™\u0000\u0000\u0000\u0000\u0000\u0000\u0004Sync\avoid ()\u001BUpp::FindReplaceDlg::Sync()\vvoid Sync()\u0003Upp\u0004SYNC\u0013Upp::FindReplaceDlg\u0013UPP::FINDREPLACEDLG\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000´\u0000\u0000\u0000\u0001\u0000\u0000\u0000´\u0000\u0000\u0000[\u0000\u0000\u0000´\u0000\u0000\u0000\u0001\u0000\u0000\rIsIncremental\abool ()$Upp::FindReplaceDlg::IsIncremental()\u0014bool IsIncremental()\u0003Upp\rISINCREMENTAL\u0013Upp::FindReplaceDlg\u0013UPP::FINDREPLACEDLG\u0000\u0000\u0014\u0000\u0000\u0000\u0018\u0000\u0000\u0000≠\u0000\u0000\u0000\u0001\u0000\u0000\u0000≠\u0000\u0000\u0000!\u0000\u0000\u0000≠\u0000\u0000\u0000\u0001\u0000\u0000\tCLASSNAME\u001EUpp::FindReplaceDlg::CLASSNAME\u001EUpp::FindReplaceDlg::CLASSNAME typedef FindReplaceDlg CLASSNAME\u0003Upp\tCLASSNAME\u0013Upp::FindReplaceDlg\u0013UPP::FINDREPLACEDLG\u0013Upp::FindReplaceDlg\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ø\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ø\u0000\u0000\u0000\u0011\u0000\u0000\u0000Ø\u0000\u0000\u0000\u0000\u0000\u0000\u000EFindReplaceDlg\avoid ()%Upp::FindReplaceDlg::FindReplaceDlg()\u0010FindReplaceDlg()\u0003Upp\u000EFINDREPLACEDLG\u0013Upp::FindReplaceDlg\u0013UPP::FINDREPLACEDLG\u0000\u0000\u0004\u0000\u0000\u0000\u0006\u0000\u0000\u0000π\u0000\u0000\u0000\u0000\u0000\u0000\u0000π\u0000\u0000\u0000\u0001\u0000\u0000\u0000K\u0002\u0000\u0000\u0001\u0000\u0000\nCodeEditor\u000FUpp::CodeEditor\u000FUpp::CodeEditor3CodeEditor : public LineEdit, public HighlightSetup\u0003Upp\nCODEEDITOR\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR!Upp::LineEdit;Upp::HighlightSetup\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000æ\u0000\u0000\u0000\u0001\u0000\u0000\u0000æ\u0000\u0000\u0000)\u0000\u0000\u0000æ\u0000\u0000\u0000\u0000\u0001\u0000\u0003Key\u0011bool (dword, int)\u001FUpp::CodeEditor::Key(dword,int)\u001Fbool Key(dword code, int count)\u0003Upp\u0003KEY\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000ø\u0000\u0000\u0000\u0001\u0000\u0000\u0000ø\u0000\u0000\u00000\u0000\u0000\u0000ø\u0000\u0000\u0000\u0000\u0001\u0000\bLeftDown\u0013void (Point, dword)&Upp::CodeEditor::LeftDown(Point,dword)&void LeftDown(Point p, dword keyflags)\u0003Upp\bLEFTDOWN\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000¿\u0000\u0000\u0000\u0001\u0000\u0000\u0000¿\u0000\u0000\u00002\u0000\u0000\u0000¿\u0000\u0000\u0000\u0000\u0001\u0000\nLeftDouble\u0013void (Point, dword)(Upp::CodeEditor::LeftDouble(Point,dword)(void LeftDouble(Point p, dword keyflags)\u0003Upp\nLEFTDOUBLE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000¡\u0000\u0000\u0000\u0001\u0000\u0000\u0000¡\u0000\u0000\u00002\u0000\u0000\u0000¡\u0000\u0000\u0000\u0000\u0001\u0000\nLeftTriple\u0013void (Point, dword)(Upp::CodeEditor::LeftTriple(Point,dword)(void LeftTriple(Point p, dword keyflags)\u0003Upp\nLEFTTRIPLE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000¬\u0000\u0000\u0000\u0001\u0000\u0000\u0000¬\u0000\u0000\u00002\u0000\u0000\u0000¬\u0000\u0000\u0000\u0000\u0001\u0000\nLeftRepeat\u0013void (Point, dword)(Upp::CodeEditor::LeftRepeat(Point,dword)(void LeftRepeat(Point p, dword keyflags)\u0003Upp\nLEFTREPEAT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000√\u0000\u0000\u0000\u0001\u0000\u0000\u0000√\u0000\u0000\u00001\u0000\u0000\u0000√\u0000\u0000\u0000\u0000\u0001\u0000\tMouseMove\u0013void (Point, dword)'Upp::CodeEditor::MouseMove(Point,dword)'void MouseMove(Point p, dword keyflags)\u0003Upp\tMOUSEMOVE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000ƒ\u0000\u0000\u0000\u0001\u0000\u0000\u0000ƒ\u0000\u0000\u00003\u0000\u0000\u0000ƒ\u0000\u0000\u0000\u0000\u0001\u0000\vCursorImage\u0014Image (Point, dword))Upp::CodeEditor::CursorImage(Point,dword)*Image CursorImage(Point p, dword keyflags)\u0003Upp\vCURSORIMAGE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000≈\u0000\u0000\u0000\u0001\u0000\u0000\u0000≈\u0000\u0000\u0000#\u0000\u0000\u0000≈\u0000\u0000\u0000\u0000\u0001\u0000\tSerialize\u000Fvoid (Stream &)#Upp::CodeEditor::Serialize(Stream&)\u0019void Serialize(Stream& s)\u0003Upp\tSERIALIZE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000∆\u0000\u0000\u0000\u0001\u0000\u0000\u0000∆\u0000\u0000\u0000\u001B\u0000\u0000\u0000∆\u0000\u0000\u0000\u0000\u0001\u0000\nMouseLeave\avoid ()\u001DUpp::CodeEditor::MouseLeave()\u0011void MouseLeave()\u0003Upp\nMOUSELEAVE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000«\u0000\u0000\u0000\u0001\u0000\u0000\u0000«\u0000\u0000\u0000>\u0000\u0000\u0000«\u0000\u0000\u0000\u0000\u0001\u0000\nMouseWheel\u0018void (Point, int, dword),Upp::CodeEditor::MouseWheel(Point,int,dword)4void MouseWheel(Point p, int zdelta, dword keyFlags)\u0003Upp\nMOUSEWHEEL\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000»\u0000\u0000\u0000\u0001\u0000\u0000\u0000»\u0000\u0000\u0000\u0017\u0000\u0000\u0000»\u0000\u0000\u0000\u0000\u0001\u0000\u0006Layout\avoid ()\u0019Upp::CodeEditor::Layout()\rvoid Layout()\u0003Upp\u0006LAYOUT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000…\u0000\u0000\u0000\u0001\u0000\u0000\u0000…\u0000\u0000\u0000\u001D\u0000\u0000\u0000…\u0000\u0000\u0000\u0000\u0001\u0000\u0005Paint\rvoid (Draw &)\u001DUpp::CodeEditor::Paint(Draw&)\u0013void Paint(Draw& w)\u0003Upp\u0005PAINT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000Ã\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ã\u0000\u0000\u0000\u0002\u0000\u0000\u0000”\u0000\u0000\u0000\u0001\u0000\u0000\bMouseTip\u0019Upp::CodeEditor::MouseTip\u0019Upp::CodeEditor::MouseTip\bMouseTip\u0003Upp\bMOUSETIP\u0019Upp::CodeEditor::MouseTip\u0019UPP::CODEEDITOR::MOUSETIP\u0000\u0000\u0006\u0000\u0000\u0000\u0011\u0000\u0000\u0000Õ\u0000\u0000\u0000\u0002\u0000\u0000\u0000Õ\u0000\u0000\u0000\u0014\u0000\u0000\u0000Õ\u0000\u0000\u0000\u0001\u0000\u0000\u0003pos\u0003int\u001EUpp::CodeEditor::MouseTip::pos\aint pos\u0003Upp\u0003POS\u0019Upp::CodeEditor::MouseTip\u0019UPP::CODEEDITOR::MOUSETIP\u0000\u0000\u0006\u0000\u0000\u0000\u0011\u0000\u0000\u0000Œ\u0000\u0000\u0000\u0002\u0000\u0000\u0000Œ\u0000\u0000\u0000\u0016\u0000\u0000\u0000Œ\u0000\u0000\u0000\u0001\u0000\u0000\u0005value\u0005Value Upp::CodeEditor::MouseTip::value\vValue value\u0003Upp\u0005VALUE\u0019Upp::CodeEditor::MouseTip\u0019UPP::CODEEDITOR::MOUSETIP\u0000\u0000\u0006\u0000\u0000\u0000\u0011\u0000\u0000\u0000œ\u0000\u0000\u0000\b\u0000\u0000\u0000œ\u0000\u0000\u0000\u0018\u0000\u0000\u0000œ\u0000\u0000\u0000\u0001\u0000\u0000\adisplay\tDisplay *\"Upp::CodeEditor::MouseTip::display\u0010Display *display\u0003Upp\aDISPLAY\u0019Upp::CodeEditor::MouseTip\u0019UPP::CODEEDITOR::MOUSETIP\u0000\u0000\u0006\u0000\u0000\u0000\u0011\u0000\u0000\u0000–\u0000\u0000\u0000\u0002\u0000\u0000\u0000–\u0000\u0000\u0000\u0013\u0000\u0000\u0000–\u0000\u0000\u0000\u0001\u0000\u0000\u0002sz\u0004Size\u001DUpp::CodeEditor::MouseTip::sz\aSize sz\u0003Upp\u0002SZ\u0019Upp::CodeEditor::MouseTip\u0019UPP::CODEEDITOR::MOUSETIP\u0000\u0000\u0006\u0000\u0000\u0000\u0011\u0000\u0000\u0000—\u0000\u0000\u0000\u0002\u0000\u0000\u0000—\u0000\u0000\u0000 \u0000\u0000\u0000—\u0000\u0000\u0000\u0001\u0000\u0000\adelayed\u0004bool\"Upp::CodeEditor::MouseTip::delayed\fbool delayed\u0003Upp\aDELAYED\u0019Upp::CodeEditor::MouseTip\u0019UPP::CODEEDITOR::MOUSETIP\u0000\u0000\u0006\u0000\u0000\u0000\u0011\u0000\u0000\u0000“\u0000\u0000\u0000\u0002\u0000\u0000\u0000“\u0000\u0000\u0000\u001B\u0000\u0000\u0000“\u0000\u0000\u0000\u0001\u0000\u0000\nbackground\u0005Color%Upp::CodeEditor::MouseTip::background\u0010Color background\u0003Upp\nBACKGROUND\u0019Upp::CodeEditor::MouseTip\u0019UPP::CODEEDITOR::MOUSETIP\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000÷\u0000\u0000\u0000\u0001\u0000\u0000\u0000÷\u0000\u0000\u0000P\u0000\u0000\u0000÷\u0000\u0000\u0000\u0000\u0001\u0000\rHighlightLine0void (int, Vector<LineEdit::Highlight> &, int64)1Upp::CodeEditor::HighlightLine(int,Vector&,int64)Gvoid HighlightLine(int line, Vector<LineEdit::Highlight>& h, int64 pos)\u0003Upp\rHIGHLIGHTLINE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000◊\u0000\u0000\u0000\u0001\u0000\u0000\u0000◊\u0000\u0000\u00002\u0000\u0000\u0000◊\u0000\u0000\u0000\u0000\u0001\u0000\tPreInsert\u0015void (int, WString &)(Upp::CodeEditor::PreInsert(int,WString&)#void PreInsert(int pos, WString& s)\u0003Upp\tPREINSERT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000ÿ\u0000\u0000\u0000\u0001\u0000\u0000\u0000ÿ\u0000\u0000\u00003\u0000\u0000\u0000ÿ\u0000\u0000\u0000\u0000\u0001\u0000\nPostInsert\u0015void (int, WString &))Upp::CodeEditor::PostInsert(int,WString&)$void PostInsert(int pos, WString& s)\u0003Upp\nPOSTINSERT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000Ÿ\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ÿ\u0000\u0000\u0000*\u0000\u0000\u0000Ÿ\u0000\u0000\u0000\u0000\u0001\u0000\tPreRemove\u000Fvoid (int, int)#Upp::CodeEditor::PreRemove(int,int)!void PreRemove(int pos, int size)\u0003Upp\tPREREMOVE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000⁄\u0000\u0000\u0000\u0001\u0000\u0000\u0000⁄\u0000\u0000\u0000+\u0000\u0000\u0000⁄\u0000\u0000\u0000\u0000\u0001\u0000\nPostRemove\u000Fvoid (int, int)$Upp::CodeEditor::PostRemove(int,int)\"void PostRemove(int pos, int size)\u0003Upp\nPOSTREMOVE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000€\u0000\u0000\u0000\u0001\u0000\u0000\u0000€\u0000\u0000\u0000!\u0000\u0000\u0000€\u0000\u0000\u0000\u0000\u0001\u0000\tDirtyFrom\nvoid (int)\u001FUpp::CodeEditor::DirtyFrom(int)\u0018void DirtyFrom(int line)\u0003Upp\tDIRTYFROM\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000‹\u0000\u0000\u0000\u0001\u0000\u0000\u0000‹\u0000\u0000\u0000 \u0000\u0000\u0000‹\u0000\u0000\u0000\u0000\u0001\u0000\u0010SelectionChanged\avoid ()#Upp::CodeEditor::SelectionChanged()\u0017void SelectionChanged()\u0003Upp\u0010SELECTIONCHANGED\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000ﬁ\u0000\u0000\u0000\u0001\u0000\u0000\u0000ﬁ\u0000\u0000\u0000\u001A\u0000\u0000\u0000ﬁ\u0000\u0000\u0000\u0000\u0001\u0000\nClearLines\avoid ()\u001DUpp::CodeEditor::ClearLines()\u0011void ClearLines()\u0003Upp\nCLEARLINES\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000ﬂ\u0000\u0000\u0000\u0001\u0000\u0000\u0000ﬂ\u0000\u0000\u0000.\u0000\u0000\u0000ﬂ\u0000\u0000\u0000\u0000\u0001\u0000\vInsertLines\u000Fvoid (int, int)%Upp::CodeEditor::InsertLines(int,int)%void InsertLines(int line, int count)\u0003Upp\vINSERTLINES\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000‡\u0000\u0000\u0000\u0001\u0000\u0000\u0000‡\u0000\u0000\u0000.\u0000\u0000\u0000‡\u0000\u0000\u0000\u0000\u0001\u0000\vRemoveLines\u000Fvoid (int, int)%Upp::CodeEditor::RemoveLines(int,int)%void RemoveLines(int line, int count)\u0003Upp\vREMOVELINES\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000‚\u0000\u0000\u0000\u0001\u0000\u0000\u0000‚\u0000\u0000\u0000\u001C\u0000\u0000\u0000‚\u0000\u0000\u0000\u0000\u0001\u0000\fNewScrollPos\avoid ()\u001FUpp::CodeEditor::NewScrollPos()\u0013void NewScrollPos()\u0003Upp\fNEWSCROLLPOS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000‰\u0000\u0000\u0000\u0001\u0000\u0000\u0000‰\u0000\u0000\u0000\u001F\u0000\u0000\u0000‰\u0000\u0000\u0000\u0000\u0001\u0000\fGetPasteText\tString ()\u001FUpp::CodeEditor::GetPasteText()\u0015String GetPasteText()\u0003Upp\fGETPASTETEXT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000Ê\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ê\u0000\u0000\u0000\u0015\u0000\u0000\u0000Ê\u0000\u0000\u0000\u0001\u0000\u0000\adelayed\fTimeCallback\u0018Upp::CodeEditor::delayed\u0014TimeCallback delayed\u0003Upp\aDELAYED\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\u0017\u0000\u0000\u0000Ê\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ê\u0000\u0000\u0000\u001F\u0000\u0000\u0000Ê\u0000\u0000\u0000\u0001\u0000\u0000\bclosetip\fTimeCallback\u0019Upp::CodeEditor::closetip\u0015TimeCallback closetip\u0003Upp\bCLOSETIP\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000Ë\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ë\u0000\u0000\u0000\u0010\u0000\u0000\u0000Ë\u0000\u0000\u0000\u0001\u0000\u0000\u0003bar\tEditorBar\u0014Upp::CodeEditor::bar\rEditorBar bar\u0003Upp\u0003BAR\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000È\u0000\u0000\u0000\u0001\u0000\u0000\u0000È\u0000\u0000\u0000\u0012\u0000\u0000\u0000È\u0000\u0000\u0000\u0001\u0000\u0000\u0005line2\vVector<int>\u0016Upp::CodeEditor::line2\u0011Vector<int> line2\u0003Upp\u0005LINE2\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000Î\u0000\u0000\u0000\u0001\u0000\u0000\u0000Î\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\tSyntaxPos\u001AUpp::CodeEditor::SyntaxPos\u001AUpp::CodeEditor::SyntaxPos\tSyntaxPos\u0003Upp\tSYNTAXPOS\u001AUpp::CodeEditor::SyntaxPos\u001AUPP::CODEEDITOR::SYNTAXPOS\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000Ï\u0000\u0000\u0000\u0002\u0000\u0000\u0000Ï\u0000\u0000\u0000\r\u0000\u0000\u0000Ï\u0000\u0000\u0000\u0001\u0000\u0000\u0004line\u0003int Upp::CodeEditor::SyntaxPos::line\bint line\u0003Upp\u0004LINE\u001AUpp::CodeEditor::SyntaxPos\u001AUPP::CODEEDITOR::SYNTAXPOS\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000Ì\u0000\u0000\u0000\u0002\u0000\u0000\u0000Ì\u0000\u0000\u0000\r\u0000\u0000\u0000Ì\u0000\u0000\u0000\u0001\u0000\u0000\u0004data\u0006String Upp::CodeEditor::SyntaxPos::data\vString data\u0003Upp\u0004DATA\u001AUpp::CodeEditor::SyntaxPos\u001AUPP::CODEEDITOR::SYNTAXPOS\u0000\u0000\u0015\u0000\u0000\u0000\a\u0000\u0000\u0000Ô\u0000\u0000\u0000\u0002\u0000\u0000\u0000Ô\u0000\u0000\u0000*\u0000\u0000\u0000Ô\u0000\u0000\u0000\u0001\u0000\u0000\u0005Clear\avoid ()#Upp::CodeEditor::SyntaxPos::Clear()\fvoid Clear()\u0003Upp\u0005CLEAR\u001AUpp::CodeEditor::SyntaxPos\u001AUPP::CODEEDITOR::SYNTAXPOS\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000Ú\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ú\u0000\u0000\u0000\u001C\u0000\u0000\u0000Ú\u0000\u0000\u0000\u0001\u0000\u0000\fsyntax_cache\fSyntaxPos[6]\u001DUpp::CodeEditor::syntax_cache\u0019SyntaxPos syntax_cache[6]\u0003Upp\fSYNTAX_CACHE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000ˆ\u0000\u0000\u0000\u0001\u0000\u0000\u0000ˆ\u0000\u0000\u0000\f\u0000\u0000\u0000ˆ\u0000\u0000\u0000\u0001\u0000\u0000\u0003rmb\u0004char\u0014Upp::CodeEditor::rmb\bchar rmb\u0003Upp\u0003RMB\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000˜\u0000\u0000\u0000\u0001\u0000\u0000\u0000˜\u0000\u0000\u0000\u001F\u0000\u0000\u0000˜\u0000\u0000\u0000\u0001\u0000\u0000\u0016highlight_bracket_pos0\u0005int64'Upp::CodeEditor::highlight_bracket_pos0\u001Cint64 highlight_bracket_pos0\u0003Upp\u0016HIGHLIGHT_BRACKET_POS0\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000¯\u0000\u0000\u0000\u0001\u0000\u0000\u0000¯\u0000\u0000\u0000\u001E\u0000\u0000\u0000¯\u0000\u0000\u0000\u0001\u0000\u0000\u0015highlight_bracket_pos\u0005int64&Upp::CodeEditor::highlight_bracket_pos\u001Bint64 highlight_bracket_pos\u0003Upp\u0015HIGHLIGHT_BRACKET_POS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000˘\u0000\u0000\u0000\u0001\u0000\u0000\u0000˘\u0000\u0000\u0000\u0016\u0000\u0000\u0000˘\u0000\u0000\u0000\u0001\u0000\u0000\rbracket_flash\u0004bool\u001EUpp::CodeEditor::bracket_flash\u0012bool bracket_flash\u0003Upp\rBRACKET_FLASH\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000˙\u0000\u0000\u0000\u0001\u0000\u0000\u0000˙\u0000\u0000\u0000\u0016\u0000\u0000\u0000˙\u0000\u0000\u0000\u0001\u0000\u0000\rbracket_start\u0005int64\u001EUpp::CodeEditor::bracket_start\u0013int64 bracket_start\u0003Upp\rBRACKET_START\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000¸\u0000\u0000\u0000\u0001\u0000\u0000\u0000¸\u0000\u0000\u0000\u0010\u0000\u0000\u0000¸\u0000\u0000\u0000\u0001\u0000\u0000\abarline\u0004bool\u0018Upp::CodeEditor::barline\fbool barline\u0003Upp\aBARLINE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000˝\u0000\u0000\u0000\u0001\u0000\u0000\u0000˝\u0000\u0000\u0000\u0017\u0000\u0000\u0000˝\u0000\u0000\u0000\u0001\u0000\u0000\u000Estat_edit_time\u0006double\u001FUpp::CodeEditor::stat_edit_time\u0015double stat_edit_time\u0003Upp\u000ESTAT_EDIT_TIME\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000˛\u0000\u0000\u0000\u0001\u0000\u0000\u0000˛\u0000\u0000\u0000\u0016\u0000\u0000\u0000˛\u0000\u0000\u0000\u0001\u0000\u0000\rlast_key_time\u0004Time\u001EUpp::CodeEditor::last_key_time\u0012Time last_key_time\u0003Upp\rLAST_KEY_TIME\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\fauto_enclose\u0004bool\u001DUpp::CodeEditor::auto_enclose\u0011bool auto_enclose\u0003Upp\fAUTO_ENCLOSE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u0001\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0001\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0001\u0000\u0000\u0001\u0000\u0000\nmark_lines\u0004bool\u001BUpp::CodeEditor::mark_lines\u000Fbool mark_lines\u0003Upp\nMARK_LINES\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u0002\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0001\u0000\u0000\u0015\u0000\u0000\u0000\u0002\u0001\u0000\u0000\u0001\u0000\u0000\fcheck_edited\u0004bool\u001DUpp::CodeEditor::check_edited\u0011bool check_edited\u0003Upp\fCHECK_EDITED\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0001\u0000\u0000 \u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0001\u0000\u0000\u0017persistent_find_replace\u0004bool(Upp::CodeEditor::persistent_find_replace\u001Cbool persistent_find_replace\u0003Upp\u0017PERSISTENT_FIND_REPLACE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u0004\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0001\u0000\u0000\u001A\u0000\u0000\u0000\u0004\u0001\u0000\u0000\u0001\u0000\u0000\u0011do_ff_restore_pos\u0004bool\"Upp::CodeEditor::do_ff_restore_pos\u0016bool do_ff_restore_pos\u0003Upp\u0011DO_FF_RESTORE_POS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0018\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0001\u0000\u0000\u000Fwithfindreplace\u0004bool Upp::CodeEditor::withfindreplace\u0014bool withfindreplace\u0003Upp\u000FWITHFINDREPLACE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u0006\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0001\u0000\u0000\u0011\u0000\u0000\u0000\u0006\u0001\u0000\u0000\u0001\u0000\u0000\bwordwrap\u0004bool\u0019Upp::CodeEditor::wordwrap\rbool wordwrap\u0003Upp\bWORDWRAP\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\a\u0001\u0000\u0000\u0001\u0000\u0000\u0000\a\u0001\u0000\u0000\u0014\u0000\u0000\u0000\a\u0001\u0000\u0000\u0001\u0000\u0000\vblk0_header\u0004bool\u001CUpp::CodeEditor::blk0_header\u0010bool blk0_header\u0003Upp\vBLK0_HEADER\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\t\u0001\u0000\u0000\u0001\u0000\u0000\u0000\t\u0001\u0000\u0000\u0015\u0000\u0000\u0000\t\u0001\u0000\u0000\u0001\u0000\u0000\fff_start_pos\u0003int\u001DUpp::CodeEditor::ff_start_pos\u0010int ff_start_pos\u0003Upp\fFF_START_POS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\u0010\u0000\u0000\u0000\v\u0001\u0000\u0000\u0001\u0000\u0000\u0000\v\u0001\u0000\u0000\u001B\u0000\u0000\u0000\v\u0001\u0000\u0000\u0001\u0000\u0000\vfindreplace\u000EFindReplaceDlg\u001CUpp::CodeEditor::findreplace\u001AFindReplaceDlg findreplace\u0003Upp\vFINDREPLACE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0005\u0000\u0000\u0000\u0001\u0000\u0000\u0000\r\u0001\u0000\u0000\u0001\u0000\u0000\u0000\r\u0001\u0000\u0000\u0002\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0001\u0000\u0000K(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CodeEditor.h:270:2)\\Upp::CodeEditor::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CodeEditor.h:270:2)PUpp::CodeEditor::(unnamed at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CodeEditor.)\u0004enum\u0003UppK(UNNAMED ENUM AT C:\\USERS\\SBLO\\AI-UPP\\UPPSRC\\CODEEDITOR\\CODEEDITOR.H:270:2)\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u000E\u0001\u0000\u0000\u0002\u0000\u0000\u0000\u000E\u0001\u0000\u0000\u000E\u0000\u0000\u0000\u000E\u0001\u0000\u0000\u0001\u0000\u0000\aWILDANY\\Upp::CodeEditor::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CodeEditor.h:270:2)\u0018Upp::CodeEditor::WILDANY\aWILDANY\u0003Upp\aWILDANY\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u000F\u0001\u0000\u0000\u0002\u0000\u0000\u0000\u000F\u0001\u0000\u0000\t\u0000\u0000\u0000\u000F\u0001\u0000\u0000\u0001\u0000\u0000\aWILDONE\\Upp::CodeEditor::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CodeEditor.h:270:2)\u0018Upp::CodeEditor::WILDONE\aWILDONE\u0003Upp\aWILDONE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0010\u0001\u0000\u0000\u0002\u0000\u0000\u0000\u0010\u0001\u0000\u0000\v\u0000\u0000\u0000\u0010\u0001\u0000\u0000\u0001\u0000\u0000\tWILDSPACE\\Upp::CodeEditor::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CodeEditor.h:270:2)\u001AUpp::CodeEditor::WILDSPACE\tWILDSPACE\u0003Upp\tWILDSPACE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0002\u0000\u0000\u0000\u0011\u0001\u0000\u0000\f\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0001\u0000\u0000\nWILDNUMBER\\Upp::CodeEditor::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CodeEditor.h:270:2)\u001BUpp::CodeEditor::WILDNUMBER\nWILDNUMBER\u0003Upp\nWILDNUMBER\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0012\u0001\u0000\u0000\u0002\u0000\u0000\u0000\u0012\u0001\u0000\u0000\b\u0000\u0000\u0000\u0012\u0001\u0000\u0000\u0001\u0000\u0000\u0006WILDID\\Upp::CodeEditor::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CodeEditor.h:270:2)\u0017Upp::CodeEditor::WILDID\u0006WILDID\u0003Upp\u0006WILDID\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0002\u0000\u0000\u0000\u0018\u0001\u0000\u0000\u0001\u0000\u0000\u0005Found\u0016Upp::CodeEditor::Found\u0016Upp::CodeEditor::Found\u0005Found\u0003Upp\u0005FOUND\u0016Upp::CodeEditor::Found\u0016UPP::CODEEDITOR::FOUND\u0000\u0000\u0006\u0000\u0000\u0000\n\u0000\u0000\u0000\u0016\u0001\u0000\u0000\u0002\u0000\u0000\u0000\u0016\u0001\u0000\u0000\u000E\u0000\u0000\u0000\u0016\u0001\u0000\u0000\u0001\u0000\u0000\u0004type\u0003int\u001CUpp::CodeEditor::Found::type\bint type\u0003Upp\u0004TYPE\u0016Upp::CodeEditor::Found\u0016UPP::CODEEDITOR::FOUND\u0000\u0000\u0006\u0000\u0000\u0000\n\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0002\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u000E\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0001\u0000\u0000\u0004text\aWString\u001CUpp::CodeEditor::Found::text\fWString text\u0003Upp\u0004TEXT\u0016Upp::CodeEditor::Found\u0016UPP::CODEEDITOR::FOUND\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u001A\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u001A\u0001\u0000\u0000\u0017\u0000\u0000\u0000\u001A\u0001\u0000\u0000\u0001\u0000\u0000\tfoundwild\fArray<Found>\u001AUpp::CodeEditor::foundwild\u0016Array<Found> foundwild\u0003Upp\tFOUNDWILD\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u001B\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u001B\u0001\u0000\u0000\u0017\u0000\u0000\u0000\u001B\u0001\u0000\u0000\u0001\u0000\u0000\tfoundtext\aWString\u001AUpp::CodeEditor::foundtext\u0011WString foundtext\u0003Upp\tFOUNDTEXT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000\u001C\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u001C\u0001\u0000\u0000\u0010\u0000\u0000\u0000\u001C\u0001\u0000\u0000\u0001\u0000\u0000\bfoundsel\u0004bool\u0019Upp::CodeEditor::foundsel\rbool foundsel\u0003Upp\bFOUNDSEL\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000\u001D\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u001D\u0001\u0000\u0000\r\u0000\u0000\u0000\u001D\u0001\u0000\u0000\u0001\u0000\u0000\u0005found\u0004bool\u0016Upp::CodeEditor::found\nbool found\u0003Upp\u0005FOUND\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u001D\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u001D\u0001\u0000\u0000\u0019\u0000\u0000\u0000\u001D\u0001\u0000\u0000\u0001\u0000\u0000\nnotfoundfw\u0004bool\u001BUpp::CodeEditor::notfoundfw\u000Fbool notfoundfw\u0003Upp\nNOTFOUNDFW\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u001D\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u001D\u0001\u0000\u0000%\u0000\u0000\u0000\u001D\u0001\u0000\u0000\u0001\u0000\u0000\nnotfoundbk\u0004bool\u001BUpp::CodeEditor::notfoundbk\u000Fbool notfoundbk\u0003Upp\nNOTFOUNDBK\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0010\u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0001\u0000\u0000\bfoundpos\u0005int64\u0019Upp::CodeEditor::foundpos\u000Eint64 foundpos\u0003Upp\bFOUNDPOS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000\u001F\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u001F\u0001\u0000\u0000\u0011\u0000\u0000\u0000\u001F\u0001\u0000\u0000\u0001\u0000\u0000\tfoundsize\u0003int\u001AUpp::CodeEditor::foundsize\rint foundsize\u0003Upp\tFOUNDSIZE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0005\u0000\u0000\u0000\u0001\u0000\u0000\u0000!\u0001\u0000\u0000\u0001\u0000\u0000\u0000!\u0001\u0000\u0000)\u0000\u0000\u0000!\u0001\u0000\u0000\u0001\u0000\u0000K(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CodeEditor.h:290:2)\\Upp::CodeEditor::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CodeEditor.h:290:2)PUpp::CodeEditor::(unnamed at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CodeEditor.)\u0004enum\u0003UppK(UNNAMED ENUM AT C:\\USERS\\SBLO\\AI-UPP\\UPPSRC\\CODEEDITOR\\CODEEDITOR.H:290:2)\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\b\u0000\u0000\u0000!\u0001\u0000\u0000\b\u0000\u0000\u0000!\u0001\u0000\u0000\u0011\u0000\u0000\u0000!\u0001\u0000\u0000\u0001\u0000\u0000\tSEL_CHARS\\Upp::CodeEditor::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CodeEditor.h:290:2)\u001AUpp::CodeEditor::SEL_CHARS\tSEL_CHARS\u0003Upp\tSEL_CHARS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\a\u0000\u0000\u0000\u0013\u0000\u0000\u0000!\u0001\u0000\u0000\u0013\u0000\u0000\u0000!\u0001\u0000\u0000\u001C\u0000\u0000\u0000!\u0001\u0000\u0000\u0001\u0000\u0000\tSEL_WORDS\\Upp::CodeEditor::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CodeEditor.h:290:2)\u001AUpp::CodeEditor::SEL_WORDS\tSEL_WORDS\u0003Upp\tSEL_WORDS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\a\u0000\u0000\u0000\u001E\u0000\u0000\u0000!\u0001\u0000\u0000\u001E\u0000\u0000\u0000!\u0001\u0000\u0000'\u0000\u0000\u0000!\u0001\u0000\u0000\u0001\u0000\u0000\tSEL_LINES\\Upp::CodeEditor::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CodeEditor.h:290:2)\u001AUpp::CodeEditor::SEL_LINES\tSEL_LINES\u0003Upp\tSEL_LINES\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000\"\u0001\u0000\u0000\u0001\u0000\u0000\u0000\"\u0001\u0000\u0000\u000F\u0000\u0000\u0000\"\u0001\u0000\u0000\u0001\u0000\u0000\aselkind\u0003int\u0018Upp::CodeEditor::selkind\vint selkind\u0003Upp\aSELKIND\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000$\u0001\u0000\u0000\u0001\u0000\u0000\u0000$\u0001\u0000\u0000\u0014\u0000\u0000\u0000$\u0001\u0000\u0000\u0001\u0000\u0000\villuminated\aWString\u001CUpp::CodeEditor::illuminated\u0013WString illuminated\u0003Upp\vILLUMINATED\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000&\u0001\u0000\u0000\u0001\u0000\u0000\u0000&\u0001\u0000\u0000\f\u0000\u0000\u0000&\u0001\u0000\u0000\u0001\u0000\u0000\u0003iwc\u0006String\u0014Upp::CodeEditor::iwc\nString iwc\u0003Upp\u0003IWC\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000(\u0001\u0000\u0000\u0001\u0000\u0000\u0000(\u0001\u0000\u0000\u0011\u0000\u0000\u0000(\u0001\u0000\u0000\u0001\u0000\u0000\thighlight\u0006String\u001AUpp::CodeEditor::highlight\u0010String highlight\u0003Upp\tHIGHLIGHT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000*\u0001\u0000\u0000\u0001\u0000\u0000\u0000*\u0001\u0000\u0000\u001F\u0000\u0000\u0000*\u0001\u0000\u0000\u0001\u0000\u0000\u0013spellcheck_comments\u0003int$Upp::CodeEditor::spellcheck_comments\u0017int spellcheck_comments\u0003Upp\u0013SPELLCHECK_COMMENTS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000+\u0001\u0000\u0000\u0001\u0000\u0000\u0000+\u0001\u0000\u0000 \u0000\u0000\u0000+\u0001\u0000\u0000\u0001\u0000\u0000\u0011wordwrap_comments\u0004bool\"Upp::CodeEditor::wordwrap_comments\u0016bool wordwrap_comments\u0003Upp\u0011WORDWRAP_COMMENTS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000-\u0001\u0000\u0000\u0001\u0000\u0000\u0000-\u0001\u0000\u0000\u0002\u0000\u0000\u00005\u0001\u0000\u0000\u0001\u0000\u0000\u0003Tip\u0014Upp::CodeEditor::Tip\u0014Upp::CodeEditor::Tip\nTip : Ctrl\u0003Upp\u0003TIP\u0014Upp::CodeEditor::Tip\u0014UPP::CODEEDITOR::TIP\tUpp::Ctrl\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000.\u0001\u0000\u0000\u0002\u0000\u0000\u0000.\u0001\u0000\u0000\t\u0000\u0000\u0000.\u0001\u0000\u0000\u0001\u0000\u0000\u0001v\u0005Value\u0017Upp::CodeEditor::Tip::v\aValue v\u0003Upp\u0001V\u0014Upp::CodeEditor::Tip\u0014UPP::CODEEDITOR::TIP\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000/\u0001\u0000\u0000\u0002\u0000\u0000\u0000/\u0001\u0000\u0000\u0012\u0000\u0000\u0000/\u0001\u0000\u0000\u0001\u0000\u0000\nbackground\u0005Color Upp::CodeEditor::Tip::background\u0010Color background\u0003Upp\nBACKGROUND\u0014Upp::CodeEditor::Tip\u0014UPP::CODEEDITOR::TIP\u0000\u0000\u0006\u0000\u0000\u0000\u0011\u0000\u0000\u00000\u0001\u0000\u0000\b\u0000\u0000\u00000\u0001\u0000\u0000\u0012\u0000\u0000\u00000\u0001\u0000\u0000\u0001\u0000\u0000\u0001d\tDisplay *\u0017Upp::CodeEditor::Tip::d\nDisplay *d\u0003Upp\u0001D\u0014Upp::CodeEditor::Tip\u0014UPP::CODEEDITOR::TIP\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u00002\u0001\u0000\u0000\u0002\u0000\u0000\u00002\u0001\u0000\u0000\u001D\u0000\u0000\u00002\u0001\u0000\u0000\u0000\u0001\u0000\u0005Paint\rvoid (Draw &)\"Upp::CodeEditor::Tip::Paint(Draw&)\u0013void Paint(Draw& w)\u0003Upp\u0005PAINT\u0014Upp::CodeEditor::Tip\u0014UPP::CODEEDITOR::TIP\u0000\u0000\u0018\u0000\u0000\u0000\u0002\u0000\u0000\u00004\u0001\u0000\u0000\u0002\u0000\u0000\u00004\u0001\u0000\u0000\a\u0000\u0000\u00004\u0001\u0000\u0000\u0000\u0000\u0000\u0003Tip\avoid ()\u001BUpp::CodeEditor::Tip::Tip()\u0005Tip()\u0003Upp\u0003TIP\u0014Upp::CodeEditor::Tip\u0014UPP::CODEEDITOR::TIP\u0000\u0000\u0006\u0000\u0000\u0000\a\u0000\u0000\u00007\u0001\u0000\u0000\u0001\u0000\u0000\u00007\u0001\u0000\u0000\u001A\u0000\u0000\u00007\u0001\u0000\u0000\u0001\u0000\u0000\vdelayed_tip\u0004bool\u001CUpp::CodeEditor::delayed_tip\u0010bool delayed_tip\u0003Upp\vDELAYED_TIP\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\a\u0000\u0000\u00008\u0001\u0000\u0000\u0001\u0000\u0000\u00008\u0001\u0000\u0000\u0012\u0000\u0000\u00008\u0001\u0000\u0000\u0001\u0000\u0000\vdelayed_pos\u0005Point\u001CUpp::CodeEditor::delayed_pos\u0011Point delayed_pos\u0003Upp\vDELAYED_POS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\a\u0000\u0000\u00009\u0001\u0000\u0000\u0001\u0000\u0000\u00009\u0001\u0000\u0000\n\u0000\u0000\u00009\u0001\u0000\u0000\u0001\u0000\u0000\u0003tip\u0003Tip\u0014Upp::CodeEditor::tip\aTip tip\u0003Upp\u0003TIP\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\a\u0000\u0000\u0000:\u0001\u0000\u0000\u0001\u0000\u0000\u0000:\u0001\u0000\u0000\u0014\u0000\u0000\u0000:\u0001\u0000\u0000\u0001\u0000\u0000\u0006tippos\u0003int\u0017Upp::CodeEditor::tippos\nint tippos\u0003Upp\u0006TIPPOS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\a\u0000\u0000\u0000<\u0001\u0000\u0000\u0001\u0000\u0000\u0000<\u0001\u0000\u0000\u000F\u0000\u0000\u0000<\u0001\u0000\u0000\u0001\u0000\u0000\breplacei\u0003int\u0019Upp::CodeEditor::replacei\fint replacei\u0003Upp\bREPLACEI\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000>\u0001\u0000\u0000\u0001\u0000\u0000\u0000>\u0001\u0000\u0000&\u0000\u0000\u0000>\u0001\u0000\u0000\u0001\u0000\u0000\u000Fsearch_canceled\u0004bool Upp::CodeEditor::search_canceled\u0014bool search_canceled\u0003Upp\u000FSEARCH_CANCELED\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000?\u0001\u0000\u0000\u0001\u0000\u0000\u0000?\u0001\u0000\u0000\u001B\u0000\u0000\u0000?\u0001\u0000\u0000\u0001\u0000\u0000\fsearch_time0\u0003int\u001DUpp::CodeEditor::search_time0\u0010int search_time0\u0003Upp\fSEARCH_TIME0\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000@\u0001\u0000\u0000\u0001\u0000\u0000\u0000@\u0001\u0000\u0000\u001E\u0000\u0000\u0000@\u0001\u0000\u0000\u0001\u0000\u0000\u000Fsearch_progress\rOne<Progress> Upp::CodeEditor::search_progress\u001DOne<Progress> search_progress\u0003Upp\u000FSEARCH_PROGRESS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000B\u0001\u0000\u0000\u0001\u0000\u0000\u0000B\u0001\u0000\u0000\u001B\u0000\u0000\u0000B\u0001\u0000\u0000\u0001\u0000\u0000\frefresh_info\u0006String\u001DUpp::CodeEditor::refresh_info\u0013String refresh_info\u0003Upp\fREFRESH_INFO\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000D\u0001\u0000\u0000\u0001\u0000\u0000\u0000D\u0001\u0000\u0000\u0015\u0000\u0000\u0000D\u0001\u0000\u0000\u0001\u0000\u0000\u0006errors\rVector<Point>\u0017Upp::CodeEditor::errors\u0014Vector<Point> errors\u0003Upp\u0006ERRORS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000F\u0001\u0000\u0000\u0001\u0000\u0000\u0000F\u0001\u0000\u0000\u0002\u0000\u0000\u0000O\u0001\u0000\u0000\u0001\u0000\u0000\u000EScrollBarItems\u001FUpp::CodeEditor::ScrollBarItems\u001FUpp::CodeEditor::ScrollBarItems\u0015ScrollBarItems : Ctrl\u0003Upp\u000ESCROLLBARITEMS\u001FUpp::CodeEditor::ScrollBarItems\u001FUPP::CODEEDITOR::SCROLLBARITEMS\tUpp::Ctrl\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000G\u0001\u0000\u0000\u0002\u0000\u0000\u0000G\u0001\u0000\u0000\u000F\u0000\u0000\u0000G\u0001\u0000\u0000\u0001\u0000\u0000\u0002sb\vScrollBar &#Upp::CodeEditor::ScrollBarItems::sb\rScrollBar& sb\u0003Upp\u0002SB\u001FUpp::CodeEditor::ScrollBarItems\u001FUPP::CODEEDITOR::SCROLLBARITEMS\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000H\u0001\u0000\u0000\u0002\u0000\u0000\u0000H\u0001\u0000\u0000\u0014\u0000\u0000\u0000H\u0001\u0000\u0000\u0001\u0000\u0000\u0006editor\fCodeEditor &'Upp::CodeEditor::ScrollBarItems::editor\u0012CodeEditor& editor\u0003Upp\u0006EDITOR\u001FUpp::CodeEditor::ScrollBarItems\u001FUPP::CODEEDITOR::SCROLLBARITEMS\u0000\u0000\u0015\u0000\u0000\u0000\a\u0000\u0000\u0000J\u0001\u0000\u0000\u0002\u0000\u0000\u0000J\u0001\u0000\u0000\u0015\u0000\u0000\u0000J\u0001\u0000\u0000\u0000\u0001\u0000\u0005Paint\rvoid (Draw &)-Upp::CodeEditor::ScrollBarItems::Paint(Draw&)\u0013void Paint(Draw& w)\u0003Upp\u0005PAINT\u001FUpp::CodeEditor::ScrollBarItems\u001FUPP::CODEEDITOR::SCROLLBARITEMS\u0000\u0000\u0006\u0000\u0000\u0000#\u0000\u0000\u0000L\u0001\u0000\u0000\u0002\u0000\u0000\u0000L\u0001\u0000\u0000&\u0000\u0000\u0000L\u0001\u0000\u0000\u0001\u0000\u0000\u0003pos Vector<Tuple<int, Image, Color>>$Upp::CodeEditor::ScrollBarItems::pos$Vector<Tuple<int, Image, Color>> pos\u0003Upp\u0003POS\u001FUpp::CodeEditor::ScrollBarItems\u001FUPP::CODEEDITOR::SCROLLBARITEMS\u0000\u0000\u0018\u0000\u0000\u0000\u0002\u0000\u0000\u0000N\u0001\u0000\u0000\u0002\u0000\u0000\u0000N\u0001\u0000\u0000.\u0000\u0000\u0000N\u0001\u0000\u0000\u0000\u0000\u0000\u000EScrollBarItems void (ScrollBar &, CodeEditor &)GUpp::CodeEditor::ScrollBarItems::ScrollBarItems(ScrollBar&,CodeEditor&),ScrollBarItems(ScrollBar& sb, CodeEditor& e)\u0003Upp\u000ESCROLLBARITEMS\u001FUpp::CodeEditor::ScrollBarItems\u001FUPP::CODEEDITOR::SCROLLBARITEMS\u0000\u0000\u0006\u0000\u0000\u0000\u0010\u0000\u0000\u0000Q\u0001\u0000\u0000\u0001\u0000\u0000\u0000Q\u0001\u0000\u0000\u0013\u0000\u0000\u0000Q\u0001\u0000\u0000\u0001\u0000\u0000\u0003sbi\u000EScrollBarItems\u0014Upp::CodeEditor::sbi\u0012ScrollBarItems sbi\u0003Upp\u0003SBI\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000T\u0001\u0000\u0000\u0001\u0000\u0000\u0000T\u0001\u0000\u0000\f\u0000\u0000\u0000T\u0001\u0000\u0000\u0000\u0000\u0000\u0004HlSt\u0015Upp::CodeEditor::HlSt\u0015Upp::CodeEditor::HlSt\u0004HlSt\u0003Upp\u0004HLST\u0015Upp::CodeEditor::HlSt\u0015UPP::CODEEDITOR::HLST\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000V\u0001\u0000\u0000\u0001\u0000\u0000\u0000V\u0001\u0000\u0000-\u0000\u0000\u0000V\u0001\u0000\u0000\u0000\u0000\u0000\u000FMouseSelSpecial\u0013bool (Point, dword)-Upp::CodeEditor::MouseSelSpecial(Point,dword)*bool MouseSelSpecial(Point p, dword flags)\u0003Upp\u000FMOUSESELSPECIAL\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000W\u0001\u0000\u0000\u0001\u0000\u0000\u0000W\u0001\u0000\u0000\u0019\u0000\u0000\u0000W\u0001\u0000\u0000\u0000\u0000\u0000\u000FInitFindReplace\avoid ()\"Upp::CodeEditor::InitFindReplace()\u0016void InitFindReplace()\u0003Upp\u000FINITFINDREPLACE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000X\u0001\u0000\u0000\u0001\u0000\u0000\u0000X\u0001\u0000\u0000*\u0000\u0000\u0000X\u0001\u0000\u0000\u0000\u0000\u0000\u0016CancelBracketHighlight\u000Evoid (int64 &)/Upp::CodeEditor::CancelBracketHighlight(int64&)'void CancelBracketHighlight(int64& pos)\u0003Upp\u0016CANCELBRACKETHIGHLIGHT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000Y\u0001\u0000\u0000\u0001\u0000\u0000\u0000Y\u0001\u0000\u0000\u001F\u0000\u0000\u0000Y\u0001\u0000\u0000\u0000\u0000\u0000\fFindPrevNext\vvoid (bool)#Upp::CodeEditor::FindPrevNext(bool)\u001Cvoid FindPrevNext(bool prev)\u0003Upp\fFINDPREVNEXT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000Z\u0001\u0000\u0000\u0001\u0000\u0000\u0000Z\u0001\u0000\u0000\u0017\u0000\u0000\u0000Z\u0001\u0000\u0000\u0000\u0000\u0000\rCheckBrackets\avoid () Upp::CodeEditor::CheckBrackets()\u0014void CheckBrackets()\u0003Upp\rCHECKBRACKETS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000[\u0001\u0000\u0000\u0001\u0000\u0000\u0000[\u0001\u0000\u0000,\u0000\u0000\u0000[\u0001\u0000\u0000\u0000\u0000\u0000\u0016OpenNormalFindReplace0\vvoid (bool)-Upp::CodeEditor::OpenNormalFindReplace0(bool))void OpenNormalFindReplace0(bool replace)\u0003Upp\u0016OPENNORMALFINDREPLACE0\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000\\\u0001\u0000\u0000\u0001\u0000\u0000\u0000\\\u0001\u0000\u0000+\u0000\u0000\u0000\\\u0001\u0000\u0000\u0000\u0000\u0000\u0015OpenNormalFindReplace\vvoid (bool),Upp::CodeEditor::OpenNormalFindReplace(bool)(void OpenNormalFindReplace(bool replace)\u0003Upp\u0015OPENNORMALFINDREPLACE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000]\u0001\u0000\u0000\u0001\u0000\u0000\u0000]\u0001\u0000\u0000\u001F\u0000\u0000\u0000]\u0001\u0000\u0000\u0000\u0000\u0000\u0015FindReplaceAddHistory\avoid ()(Upp::CodeEditor::FindReplaceAddHistory()\u001Cvoid FindReplaceAddHistory()\u0003Upp\u0015FINDREPLACEADDHISTORY\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000^\u0001\u0000\u0000\u0001\u0000\u0000\u0000^\u0001\u0000\u0000\u0016\u0000\u0000\u0000^\u0001\u0000\u0000\u0000\u0000\u0000\fFindWildcard\avoid ()\u001FUpp::CodeEditor::FindWildcard()\u0013void FindWildcard()\u0003Upp\fFINDWILDCARD\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000_\u0001\u0000\u0000\u0001\u0000\u0000\u0000_\u0001\u0000\u0000\u0019\u0000\u0000\u0000_\u0001\u0000\u0000\u0000\u0000\u0000\u000FReplaceWildcard\avoid ()\"Upp::CodeEditor::ReplaceWildcard()\u0016void ReplaceWildcard()\u0003Upp\u000FREPLACEWILDCARD\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000`\u0001\u0000\u0000\u0001\u0000\u0000\u0000`\u0001\u0000\u0000%\u0000\u0000\u0000`\u0001\u0000\u0000\u0000\u0000\u0000\u000EInsertWildcard\rvoid (char *)&Upp::CodeEditor::InsertWildcard(char*)\u001Cvoid InsertWildcard(char *s)\u0003Upp\u000EINSERTWILDCARD\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000a\u0001\u0000\u0000\u0001\u0000\u0000\u0000a\u0001\u0000\u0000\u0019\u0000\u0000\u0000a\u0001\u0000\u0000\u0000\u0000\u0000\u000FIncrementalFind\avoid ()\"Upp::CodeEditor::IncrementalFind()\u0016void IncrementalFind()\u0003Upp\u000FINCREMENTALFIND\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000b\u0001\u0000\u0000\u0001\u0000\u0000\u0000b\u0001\u0000\u0000\u0012\u0000\u0000\u0000b\u0001\u0000\u0000\u0000\u0000\u0000\bNotFound\avoid ()\u001BUpp::CodeEditor::NotFound()\u000Fvoid NotFound()\u0003Upp\bNOTFOUND\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000c\u0001\u0000\u0000\u0001\u0000\u0000\u0000c\u0001\u0000\u0000\u0015\u0000\u0000\u0000c\u0001\u0000\u0000\u0000\u0000\u0000\vNoFindError\avoid ()\u001EUpp::CodeEditor::NoFindError()\u0012void NoFindError()\u0003Upp\vNOFINDERROR\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000d\u0001\u0000\u0000\u0001\u0000\u0000\u0000d\u0001\u0000\u0000:\u0000\u0000\u0000d\u0001\u0000\u0000\u0000\u0000\u0000\u0012CheckSyntaxRefresh\u0017void (int64, WString &)3Upp::CodeEditor::CheckSyntaxRefresh(int64,WString&)1void CheckSyntaxRefresh(int64 pos, WString& text)\u0003Upp\u0012CHECKSYNTAXREFRESH\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000e\u0001\u0000\u0000\u0001\u0000\u0000\u0000e\u0001\u0000\u0000\u001A\u0000\u0000\u0000e\u0001\u0000\u0000\u0000\u0000\u0000\u0010RefreshBlkHeader\avoid ()#Upp::CodeEditor::RefreshBlkHeader()\u0017void RefreshBlkHeader()\u0003Upp\u0010REFRESHBLKHEADER\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000g\u0001\u0000\u0000\u0001\u0000\u0000\u0000g\u0001\u0000\u00007\u0000\u0000\u0000g\u0001\u0000\u0000\u0000\u0000\u0000\bSetFound\u001Avoid (int, int, WString &)+Upp::CodeEditor::SetFound(int,int,WString&).void SetFound(int fi, int type, WString& text)\u0003Upp\bSETFOUND\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\t\u0000\u0000\u0000i\u0001\u0000\u0000\u0001\u0000\u0000\u0000i\u0001\u0000\u0000Y\u0000\u0000\u0000i\u0001\u0000\u0000\u0000\u0000\u0000\u0005Match,int (wchar *, wchar *, int, bool, bool, int)7Upp::CodeEditor::Match(wchar*,wchar*,int,bool,bool,int)Hint Match(wchar *f, wchar *s, int line, bool we, bool icase, int fi = 0)\u0003Upp\u0005MATCH\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\t\u0000\u0000\u0000j\u0001\u0000\u0000\u0001\u0000\u0000\u0000j\u0001\u0000\u0000\"\u0000\u0000\u0000j\u0001\u0000\u0000\u0000\u0000\u0000\aGetWild\u0014WString (int, int &)\"Upp::CodeEditor::GetWild(int,int&)!WString GetWild(int type, int& i)\u0003Upp\aGETWILD\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\t\u0000\u0000\u0000k\u0001\u0000\u0000\u0001\u0000\u0000\u0000k\u0001\u0000\u0000\u0019\u0000\u0000\u0000k\u0001\u0000\u0000\u0000\u0000\u0000\u000EGetReplaceText\nWString ()!Upp::CodeEditor::GetReplaceText()\u0018WString GetReplaceText()\u0003Upp\u000EGETREPLACETEXT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000m\u0001\u0000\u0000\u0001\u0000\u0000\u0000m\u0001\u0000\u0000(\u0000\u0000\u0000m\u0001\u0000\u0000\u0000\u0000\u0000\bInsertRS\u000Fbool (int, int)\"Upp::CodeEditor::InsertRS(int,int)%bool InsertRS(int chr, int count = 1)\u0003Upp\bINSERTRS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000o\u0001\u0000\u0000\u0001\u0000\u0000\u0000o\u0001\u0000\u0000(\u0000\u0000\u0000o\u0001\u0000\u0000\u0000\u0000\u0000\fIndentInsert\u000Fvoid (int, int)&Upp::CodeEditor::IndentInsert(int,int)%void IndentInsert(int chr, int count)\u0003Upp\fINDENTINSERT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000q\u0001\u0000\u0000\u0001\u0000\u0000\u0000q\u0001\u0000\u0000$\u0000\u0000\u0000q\u0001\u0000\u0000\u0000\u0000\u0000\u0015ForwardWhenBreakpoint\nvoid (int)+Upp::CodeEditor::ForwardWhenBreakpoint(int)!void ForwardWhenBreakpoint(int i)\u0003Upp\u0015FORWARDWHENBREAKPOINT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000s\u0001\u0000\u0000\u0001\u0000\u0000\u0000s\u0001\u0000\u0000Q\u0000\u0000\u0000s\u0001\u0000\u0000\u0000\u0000\u0000\u0013ToggleSimpleComment\u0019bool (int &, int &, bool)4Upp::CodeEditor::ToggleSimpleComment(int&,int&,bool)Nbool ToggleSimpleComment(int& start_line, int& end_line, bool usestars = true)\u0003Upp\u0013TOGGLESIMPLECOMMENT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000t\u0001\u0000\u0000\u0001\u0000\u0000\u0000t\u0001\u0000\u00001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000\u0000\u0000\u0012ToggleLineComments\vvoid (bool))Upp::CodeEditor::ToggleLineComments(bool).void ToggleLineComments(bool usestars = false)\u0003Upp\u0012TOGGLELINECOMMENTS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000u\u0001\u0000\u0000\u0001\u0000\u0000\u0000u\u0001\u0000\u0000\u001C\u0000\u0000\u0000u\u0001\u0000\u0000\u0000\u0000\u0000\u0012ToggleStarComments\avoid ()%Upp::CodeEditor::ToggleStarComments()\u0019void ToggleStarComments()\u0003Upp\u0012TOGGLESTARCOMMENTS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000v\u0001\u0000\u0000\u0001\u0000\u0000\u0000v\u0001\u0000\u0000G\u0000\u0000\u0000v\u0001\u0000\u0000\u0000\u0000\u0000\aEnclose\u001Fvoid (char *, char *, int, int)-Upp::CodeEditor::Enclose(char*,char*,int,int)8void Enclose(char *c1, char *c2, int l = -1, int h = -1)\u0003Upp\aENCLOSE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000w\u0001\u0000\u0000\u0001\u0000\u0000\u0000w\u0001\u0000\u0000\u001F\u0000\u0000\u0000w\u0001\u0000\u0000\u0000\u0000\u0000\u0004Make\nvoid (int)\u001AUpp::CodeEditor::Make(int)\u0011void Make(int op)\u0003Upp\u0004MAKE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000x\u0001\u0000\u0000\u0001\u0000\u0000\u0000x\u0001\u0000\u00000\u0000\u0000\u0000x\u0001\u0000\u0000\u0000\u0000\u0000\fTabsOrSpaces\u0015void (String &, bool)+Upp::CodeEditor::TabsOrSpaces(String&,bool)-void TabsOrSpaces(String& out, bool maketabs)\u0003Upp\fTABSORSPACES\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000y\u0001\u0000\u0000\u0001\u0000\u0000\u0000y\u0001\u0000\u0000\u001D\u0000\u0000\u0000y\u0001\u0000\u0000\u0000\u0000\u0000\bLineEnds\u000Fvoid (String &)\"Upp::CodeEditor::LineEnds(String&)\u001Avoid LineEnds(String& out)\u0003Upp\bLINEENDS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0005\u0000\u0000\u0000\u0001\u0000\u0000\u0000{\u0001\u0000\u0000\u0001\u0000\u0000\u0000{\u0001\u0000\u0000\u0002\u0000\u0000\u0000~\u0001\u0000\u0000\u0001\u0000\u0000K(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CodeEditor.h:380:2)\\Upp::CodeEditor::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CodeEditor.h:380:2)PUpp::CodeEditor::(unnamed at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CodeEditor.)\u0004enum\u0003UppK(UNNAMED ENUM AT C:\\USERS\\SBLO\\AI-UPP\\UPPSRC\\CODEEDITOR\\CODEEDITOR.H:380:2)\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000|\u0001\u0000\u0000\u0002\u0000\u0000\u0000|\u0001\u0000\u0000&\u0000\u0000\u0000|\u0001\u0000\u0000\u0001\u0000\u0000\u000FTIMEID_PERIODIC\\Upp::CodeEditor::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CodeEditor.h:380:2) Upp::CodeEditor::TIMEID_PERIODIC\u000FTIMEID_PERIODIC\u0003Upp\u000FTIMEID_PERIODIC\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000}\u0001\u0000\u0000\u0002\u0000\u0000\u0000}\u0001\u0000\u0000\u000E\u0000\u0000\u0000}\u0001\u0000\u0000\u0001\u0000\u0000\fTIMEID_COUNT\\Upp::CodeEditor::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CodeEditor.h:380:2)\u001DUpp::CodeEditor::TIMEID_COUNT\fTIMEID_COUNT\u0003Upp\fTIMEID_COUNT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000Ä\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ä\u0001\u0000\u0000\u0012\u0000\u0000\u0000Ä\u0001\u0000\u0000\u0000\u0000\u0000\bPeriodic\avoid ()\u001BUpp::CodeEditor::Periodic()\u000Fvoid Periodic()\u0003Upp\bPERIODIC\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000Ç\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ç\u0001\u0000\u0000-\u0000\u0000\u0000Ç\u0001\u0000\u0000\u0000\u0000\u0000\u0013StartSearchProgress\u0013void (int64, int64)1Upp::CodeEditor::StartSearchProgress(int64,int64)*void StartSearchProgress(int64 l, int64 h)\u0003Upp\u0013STARTSEARCHPROGRESS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000É\u0001\u0000\u0000\u0001\u0000\u0000\u0000É\u0001\u0000\u0000 \u0000\u0000\u0000É\u0001\u0000\u0000\u0000\u0000\u0000\u000ESearchProgress\nbool (int)$Upp::CodeEditor::SearchProgress(int)\u001Dbool SearchProgress(int line)\u0003Upp\u000ESEARCHPROGRESS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000Ñ\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ñ\u0001\u0000\u0000\u0018\u0000\u0000\u0000Ñ\u0001\u0000\u0000\u0000\u0000\u0000\u000ESearchCanceled\abool ()!Upp::CodeEditor::SearchCanceled()\u0015bool SearchCanceled()\u0003Upp\u000ESEARCHCANCELED\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000Ö\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ö\u0001\u0000\u0000\u001B\u0000\u0000\u0000Ö\u0001\u0000\u0000\u0000\u0000\u0000\u0011EndSearchProgress\avoid ()$Upp::CodeEditor::EndSearchProgress()\u0018void EndSearchProgress()\u0003Upp\u0011ENDSEARCHPROGRESS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000Ü\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ü\u0001\u0000\u0000\u0016\u0000\u0000\u0000Ü\u0001\u0000\u0000\u0000\u0000\u0000\fSyncCloseTip\abool ()\u001FUpp::CodeEditor::SyncCloseTip()\u0013bool SyncCloseTip()\u0003Upp\fSYNCCLOSETIP\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000à\u0001\u0000\u0000\u0001\u0000\u0000\u0000à\u0001\u0000\u0000\u001F\u0000\u0000\u0000à\u0001\u0000\u0000\u0000\u0000\u0000\u000EGetRefreshInfo\fString (int)$Upp::CodeEditor::GetRefreshInfo(int)\u001EString GetRefreshInfo(int pos)\u0003Upp\u000EGETREFRESHINFO\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000ã\u0001\u0000\u0000\u0001\u0000\u0000\u0000ã\u0001\u0000\u0000!\u0000\u0000\u0000ã\u0001\u0000\u0000\u0001\u0000\u0000\rWhenSelection\u0003int\u001EUpp::CodeEditor::WhenSelection\u0011int WhenSelection\u0003Upp\rWHENSELECTION\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000å\u0001\u0000\u0000\u0001\u0000\u0000\u0000å\u0001\u0000\u0000\u001B\u0000\u0000\u0000å\u0001\u0000\u0000\u0001\u0000\u0000\aWhenTip\u0003int\u0018Upp::CodeEditor::WhenTip\vint WhenTip\u0003Upp\aWHENTIP\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000ç\u0001\u0000\u0000\u0001\u0000\u0000\u0000ç\u0001\u0000\u0000 \u0000\u0000\u0000ç\u0001\u0000\u0000\u0001\u0000\u0000\fWhenLeftDown\u0003int\u001DUpp::CodeEditor::WhenLeftDown\u0010int WhenLeftDown\u0003Upp\fWHENLEFTDOWN\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000é\u0001\u0000\u0000\u0001\u0000\u0000\u0000é\u0001\u0000\u0000!\u0000\u0000\u0000é\u0001\u0000\u0000\u0001\u0000\u0000\rWhenCtrlClick\u0003int\u001EUpp::CodeEditor::WhenCtrlClick\u0011int WhenCtrlClick\u0003Upp\rWHENCTRLCLICK\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000è\u0001\u0000\u0000\u0001\u0000\u0000\u0000è\u0001\u0000\u0000&\u0000\u0000\u0000è\u0001\u0000\u0000\u0001\u0000\u0000\u0012WhenAnnotationMove\u0003int#Upp::CodeEditor::WhenAnnotationMove\u0016int WhenAnnotationMove\u0003Upp\u0012WHENANNOTATIONMOVE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000ê\u0001\u0000\u0000\u0001\u0000\u0000\u0000ê\u0001\u0000\u0000'\u0000\u0000\u0000ê\u0001\u0000\u0000\u0001\u0000\u0000\u0013WhenAnnotationClick\u0003int$Upp::CodeEditor::WhenAnnotationClick\u0017int WhenAnnotationClick\u0003Upp\u0013WHENANNOTATIONCLICK\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000ë\u0001\u0000\u0000\u0001\u0000\u0000\u0000ë\u0001\u0000\u0000,\u0000\u0000\u0000ë\u0001\u0000\u0000\u0001\u0000\u0000\u0018WhenAnnotationRightClick\u0003int)Upp::CodeEditor::WhenAnnotationRightClick\u001Cint WhenAnnotationRightClick\u0003Upp\u0018WHENANNOTATIONRIGHTCLICK\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000í\u0001\u0000\u0000\u0001\u0000\u0000\u0000í\u0001\u0000\u0000'\u0000\u0000\u0000í\u0001\u0000\u0000\u0001\u0000\u0000\u0013WhenOpenFindReplace\u0003int$Upp::CodeEditor::WhenOpenFindReplace\u0017int WhenOpenFindReplace\u0003Upp\u0013WHENOPENFINDREPLACE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000ì\u0001\u0000\u0000\u0001\u0000\u0000\u0000ì\u0001\u0000\u0000\u001D\u0000\u0000\u0000ì\u0001\u0000\u0000\u0001\u0000\u0000\tWhenPaste\u0003int\u001AUpp::CodeEditor::WhenPaste\rint WhenPaste\u0003Upp\tWHENPASTE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000î\u0001\u0000\u0000\u0001\u0000\u0000\u0000î\u0001\u0000\u0000\u001E\u0000\u0000\u0000î\u0001\u0000\u0000\u0001\u0000\u0000\nWhenUpdate\u0003int\u001BUpp::CodeEditor::WhenUpdate\u000Eint WhenUpdate\u0003Upp\nWHENUPDATE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000ï\u0001\u0000\u0000\u0001\u0000\u0000\u0000ï\u0001\u0000\u0000\"\u0000\u0000\u0000ï\u0001\u0000\u0000\u0001\u0000\u0000\u000EWhenBreakpoint\u0003int\u001FUpp::CodeEditor::WhenBreakpoint\u0012int WhenBreakpoint\u0003Upp\u000EWHENBREAKPOINT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000)\u0000\u0000\u0000ó\u0001\u0000\u0000\u0001\u0000\u0000\u0000ó\u0001\u0000\u00004\u0000\u0000\u0000ó\u0001\u0000\u0000\u0001\u0000\u0000\vWhenFindAll\u0003int\u001CUpp::CodeEditor::WhenFindAll\u000Fint WhenFindAll\u0003Upp\vWHENFINDALL\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\u0015\u0000\u0000\u0000ô\u0001\u0000\u0000\u0001\u0000\u0000\u0000ô\u0001\u0000\u0000 \u0000\u0000\u0000ô\u0001\u0000\u0000\u0001\u0000\u0000\vtopsbbutton\u0010FrameTop<Button>\u001CUpp::CodeEditor::topsbbutton\u001CFrameTop<Button> topsbbutton\u0003Upp\vTOPSBBUTTON\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0006\u0000\u0000\u0000\u0015\u0000\u0000\u0000ö\u0001\u0000\u0000\u0001\u0000\u0000\u0000ö\u0001\u0000\u0000!\u0000\u0000\u0000ö\u0001\u0000\u0000\u0001\u0000\u0000\ftopsbbutton1\u0010FrameTop<Button>\u001DUpp::CodeEditor::topsbbutton1\u001DFrameTop<Button> topsbbutton1\u0003Upp\fTOPSBBUTTON1\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000ú\u0001\u0000\u0000\u0001\u0000\u0000\u0000ú\u0001\u0000\u0000'\u0000\u0000\u0000ú\u0001\u0000\u0000\u0000\u0001\u0000\nDelayedTip\u0011bool (MouseTip &)&Upp::CodeEditor::DelayedTip(MouseTip&)\u001Ebool DelayedTip(MouseTip& tip)\u0003Upp\nDELAYEDTIP\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\t\u0000\u0000\u0000\u000E\u0000\u0000\u0000û\u0001\u0000\u0000\u0001\u0000\u0000\u0000û\u0001\u0000\u0000\u001B\u0000\u0000\u0000û\u0001\u0000\u0000\u0000\u0000\u0001\rfind_next_key\u0005dword\u001EUpp::CodeEditor::find_next_key\u001Astatic dword find_next_key\u0003Upp\rFIND_NEXT_KEY\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\t\u0000\u0000\u0000\u000E\u0000\u0000\u0000ü\u0001\u0000\u0000\u0001\u0000\u0000\u0000ü\u0001\u0000\u0000\u001B\u0000\u0000\u0000ü\u0001\u0000\u0000\u0000\u0000\u0001\rfind_prev_key\u0005dword\u001EUpp::CodeEditor::find_prev_key\u001Astatic dword find_prev_key\u0003Upp\rFIND_PREV_KEY\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\t\u0000\u0000\u0000\u000E\u0000\u0000\u0000†\u0001\u0000\u0000\u0001\u0000\u0000\u0000†\u0001\u0000\u0000\u0019\u0000\u0000\u0000†\u0001\u0000\u0000\u0000\u0000\u0001\vreplace_key\u0005dword\u001CUpp::CodeEditor::replace_key\u0018static dword replace_key\u0003Upp\vREPLACE_KEY\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000¢\u0001\u0000\u0000\u0001\u0000\u0000\u0000¢\u0001\u0000\u0000\u000F\u0000\u0000\u0000¢\u0001\u0000\u0000\u0000\u0000\u0000\u0005Clear\avoid ()\u0018Upp::CodeEditor::Clear()\fvoid Clear()\u0003Upp\u0005CLEAR\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000§\u0001\u0000\u0000\u0001\u0000\u0000\u0000§\u0001\u0000\u0000\"\u0000\u0000\u0000§\u0001\u0000\u0000\u0000\u0000\u0000\tHighlight\u000Fvoid (String &)#Upp::CodeEditor::Highlight(String&)\u0019void Highlight(String& h)\u0003Upp\tHIGHLIGHT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000•\u0001\u0000\u0000\u0001\u0000\u0000\u0000•\u0001\u0000\u00008\u0000\u0000\u0000•\u0001\u0000\u0000\u0001\u0000\u0000\fGetHighlight\tString ()\u001FUpp::CodeEditor::GetHighlight()\u0015String GetHighlight()\u0003Upp\fGETHIGHLIGHT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000ß\u0001\u0000\u0000\u0001\u0000\u0000\u0000ß\u0001\u0000\u0000\u001B\u0000\u0000\u0000ß\u0001\u0000\u0000\u0000\u0000\u0000\u0011EscapeFindReplace\avoid ()$Upp::CodeEditor::EscapeFindReplace()\u0018void EscapeFindReplace()\u0003Upp\u0011ESCAPEFINDREPLACE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000®\u0001\u0000\u0000\u0001\u0000\u0000\u0000®\u0001\u0000\u0000\u001A\u0000\u0000\u0000®\u0001\u0000\u0000\u0000\u0000\u0000\u0010CloseFindReplace\avoid ()#Upp::CodeEditor::CloseFindReplace()\u0017void CloseFindReplace()\u0003Upp\u0010CLOSEFINDREPLACE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000©\u0001\u0000\u0000\u0001\u0000\u0000\u0000©\u0001\u0000\u0000F\u0000\u0000\u0000©\u0001\u0000\u0000\u0000\u0000\u0000\vFindReplace\u0017void (bool, bool, bool),Upp::CodeEditor::FindReplace(bool,bool,bool)Cvoid FindReplace(bool pick_selection, bool pick_text, bool replace)\u0003Upp\vFINDREPLACE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000™\u0001\u0000\u0000\u0001\u0000\u0000\u0000™\u0001\u0000\u0000\u0011\u0000\u0000\u0000™\u0001\u0000\u0000\u0000\u0000\u0000\aFindAll\avoid ()\u001AUpp::CodeEditor::FindAll()\u000Evoid FindAll()\u0003Upp\aFINDALL\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000´\u0001\u0000\u0000\u0001\u0000\u0000\u0000´\u0001\u0000\u00002\u0000\u0000\u0000´\u0001\u0000\u0000\u0000\u0000\u0000\bFindFrom\u0018bool (int64, bool, bool)*Upp::CodeEditor::FindFrom(int64,bool,bool)/bool FindFrom(int64 pos, bool back, bool block)\u0003Upp\bFINDFROM\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000¨\u0001\u0000\u0000\u0001\u0000\u0000\u0000¨\u0001\u0000\u0000)\u0000\u0000\u0000¨\u0001\u0000\u0000\u0000\u0000\u0000\nRegExpFind\u0012bool (int64, bool)'Upp::CodeEditor::RegExpFind(int64,bool)&bool RegExpFind(int64 pos, bool block)\u0003Upp\nREGEXPFIND\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000≠\u0001\u0000\u0000\u0001\u0000\u0000\u0000≠\u0001\u0000\u0000#\u0000\u0000\u0000≠\u0001\u0000\u0000\u0000\u0000\u0000\u0004Find\u0011bool (bool, bool) Upp::CodeEditor::Find(bool,bool) bool Find(bool back, bool block)\u0003Upp\u0004FIND\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000Æ\u0001\u0000\u0000\u0001\u0000\u0000\u0000Æ\u0001\u0000\u00008\u0000\u0000\u0000Æ\u0001\u0000\u0000\u0000\u0000\u0000\u0004Find\u0017bool (bool, bool, bool)%Upp::CodeEditor::Find(bool,bool,bool)5bool Find(bool back, bool blockreplace, bool replace)\u0003Upp\u0004FIND\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000Ø\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ø\u0001\u0000\u0000\u0012\u0000\u0000\u0000Ø\u0001\u0000\u0000\u0000\u0000\u0000\bFindNext\avoid ()\u001BUpp::CodeEditor::FindNext()\u000Fvoid FindNext()\u0003Upp\bFINDNEXT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000∞\u0001\u0000\u0000\u0001\u0000\u0000\u0000∞\u0001\u0000\u0000\u0012\u0000\u0000\u0000∞\u0001\u0000\u0000\u0000\u0000\u0000\bFindPrev\avoid ()\u001BUpp::CodeEditor::FindPrev()\u000Fvoid FindPrev()\u0003Upp\bFINDPREV\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000±\u0001\u0000\u0000\u0001\u0000\u0000\u0000±\u0001\u0000\u00008\u0000\u0000\u0000±\u0001\u0000\u0000\u0000\u0000\u0000\u000EGetStringRange\u001Ebool (int64, int64 &, int64 &)4Upp::CodeEditor::GetStringRange(int64,int64&,int64&)5bool GetStringRange(int64 cursor, int64& b, int64& e)\u0003Upp\u000EGETSTRINGRANGE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000≤\u0001\u0000\u0000\u0001\u0000\u0000\u0000≤\u0001\u0000\u0000`\u0000\u0000\u0000≤\u0001\u0000\u0000\u0001\u0000\u0000\u000EGetStringRange\u0017bool (int64 &, int64 &).Upp::CodeEditor::GetStringRange(int64&,int64&)'bool GetStringRange(int64& b, int64& e)\u0003Upp\u000EGETSTRINGRANGE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000≥\u0001\u0000\u0000\u0001\u0000\u0000\u0000≥\u0001\u0000\u0000\u001D\u0000\u0000\u0000≥\u0001\u0000\u0000\u0000\u0000\u0000\nFindString\vbool (bool)!Upp::CodeEditor::FindString(bool)\u001Abool FindString(bool back)\u0003Upp\nFINDSTRING\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000¥\u0001\u0000\u0000\u0001\u0000\u0000\u0000¥\u0001\u0000\u0000!\u0000\u0000\u0000¥\u0001\u0000\u0000\u0000\u0000\u0000\u000EFindLangString\vbool (bool)%Upp::CodeEditor::FindLangString(bool)\u001Ebool FindLangString(bool back)\u0003Upp\u000EFINDLANGSTRING\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000µ\u0001\u0000\u0000\u0001\u0000\u0000\u0000µ\u0001\u0000\u0000\u0011\u0000\u0000\u0000µ\u0001\u0000\u0000\u0000\u0000\u0000\aReplace\avoid ()\u001AUpp::CodeEditor::Replace()\u000Evoid Replace()\u0003Upp\aREPLACE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000∂\u0001\u0000\u0000\u0001\u0000\u0000\u0000∂\u0001\u0000\u0000\u001D\u0000\u0000\u0000∂\u0001\u0000\u0000\u0000\u0000\u0000\nReplaceAll\vvoid (bool)!Upp::CodeEditor::ReplaceAll(bool)\u001Avoid ReplaceAll(bool rest)\u0003Upp\nREPLACEALL\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000∑\u0001\u0000\u0000\u0001\u0000\u0000\u0000∑\u0001\u0000\u0000\u0016\u0000\u0000\u0000∑\u0001\u0000\u0000\u0000\u0000\u0000\fBlockReplace\u0006int ()\u001FUpp::CodeEditor::BlockReplace()\u0012int BlockReplace()\u0003Upp\fBLOCKREPLACE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000π\u0001\u0000\u0000\u0001\u0000\u0000\u0000π\u0001\u0000\u0000#\u0000\u0000\u0000π\u0001\u0000\u0000\u0000\u0000\u0000\u0010MakeTabsOrSpaces\vvoid (bool)'Upp::CodeEditor::MakeTabsOrSpaces(bool) void MakeTabsOrSpaces(bool tabs)\u0003Upp\u0010MAKETABSORSPACES\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000∫\u0001\u0000\u0000\u0001\u0000\u0000\u0000∫\u0001\u0000\u0000\u0016\u0000\u0000\u0000∫\u0001\u0000\u0000\u0000\u0000\u0000\fMakeLineEnds\avoid ()\u001FUpp::CodeEditor::MakeLineEnds()\u0013void MakeLineEnds()\u0003Upp\fMAKELINEENDS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000º\u0001\u0000\u0000\u0001\u0000\u0000\u0000º\u0001\u0000\u0000\u0012\u0000\u0000\u0000º\u0001\u0000\u0000\u0000\u0000\u0000\bCopyWord\avoid ()\u001BUpp::CodeEditor::CopyWord()\u000Fvoid CopyWord()\u0003Upp\bCOPYWORD\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000Ω\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ω\u0001\u0000\u0000\u0013\u0000\u0000\u0000Ω\u0001\u0000\u0000\u0000\u0000\u0000\tSwapChars\avoid ()\u001CUpp::CodeEditor::SwapChars()\u0010void SwapChars()\u0003Upp\tSWAPCHARS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000æ\u0001\u0000\u0000\u0001\u0000\u0000\u0000æ\u0001\u0000\u0000\u0017\u0000\u0000\u0000æ\u0001\u0000\u0000\u0000\u0000\u0000\rDuplicateLine\avoid () Upp::CodeEditor::DuplicateLine()\u0014void DuplicateLine()\u0003Upp\rDUPLICATELINE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000ø\u0001\u0000\u0000\u0001\u0000\u0000\u0000ø\u0001\u0000\u0000\u0014\u0000\u0000\u0000ø\u0001\u0000\u0000\u0000\u0000\u0000\u0003Put\nvoid (int)\u0019Upp::CodeEditor::Put(int)\u0011void Put(int chr)\u0003Upp\u0003PUT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000¿\u0001\u0000\u0000\u0001\u0000\u0000\u0000¿\u0001\u0000\u0000\u0013\u0000\u0000\u0000¿\u0001\u0000\u0000\u0000\u0000\u0000\tFinishPut\avoid ()\u001CUpp::CodeEditor::FinishPut()\u0010void FinishPut()\u0003Upp\tFINISHPUT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000¬\u0001\u0000\u0000\u0001\u0000\u0000\u0000¬\u0001\u0000\u0000 \u0000\u0000\u0000¬\u0001\u0000\u0000\u0000\u0000\u0000\rSerializeFind\u000Fvoid (Stream &)'Upp::CodeEditor::SerializeFind(Stream&)\u001Dvoid SerializeFind(Stream& s)\u0003Upp\rSERIALIZEFIND\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000√\u0001\u0000\u0000\u0001\u0000\u0000\u0000√\u0001\u0000\u0000Q\u0000\u0000\u0000√\u0001\u0000\u0000\u0001\u0000\u0000\nIsFindOpen\abool ()\u001DUpp::CodeEditor::IsFindOpen()\u0011bool IsFindOpen()\u0003Upp\nISFINDOPEN\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000ƒ\u0001\u0000\u0000\u0001\u0000\u0000\u0000ƒ\u0001\u0000\u0000H\u0000\u0000\u0000ƒ\u0001\u0000\u0000\u0001\u0000\u0000\tFindClose\avoid ()\u001CUpp::CodeEditor::FindClose()\u0010void FindClose()\u0003Upp\tFINDCLOSE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000∆\u0001\u0000\u0000\u0001\u0000\u0000\u0000∆\u0001\u0000\u0000\u000E\u0000\u0000\u0000∆\u0001\u0000\u0000\u0000\u0000\u0000\u0004Goto\avoid ()\u0017Upp::CodeEditor::Goto()\vvoid Goto()\u0003Upp\u0004GOTO\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000»\u0001\u0000\u0000\u0001\u0000\u0000\u0000»\u0001\u0000\u0000\u0010\u0000\u0000\u0000»\u0001\u0000\u0000\u0000\u0000\u0000\u0006DoFind\avoid ()\u0019Upp::CodeEditor::DoFind()\rvoid DoFind()\u0003Upp\u0006DOFIND\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000…\u0001\u0000\u0000\u0001\u0000\u0000\u0000…\u0001\u0000\u0000\u0014\u0000\u0000\u0000…\u0001\u0000\u0000\u0000\u0000\u0000\nDoFindBack\avoid ()\u001DUpp::CodeEditor::DoFindBack()\u0011void DoFindBack()\u0003Upp\nDOFINDBACK\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\t\u0000\u0000\u0000Ã\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ã\u0001\u0000\u0000\u000F\u0000\u0000\u0000Ã\u0001\u0000\u0000\u0000\u0000\u0000\u0004GetI\nWString ()\u0017Upp::CodeEditor::GetI()\u000EWString GetI()\u0003Upp\u0004GETI\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\t\u0000\u0000\u0000Õ\u0001\u0000\u0000\u0001\u0000\u0000\u0000Õ\u0001\u0000\u0000\u0019\u0000\u0000\u0000Õ\u0001\u0000\u0000\u0000\u0000\u0000\u0004SetI\rvoid (Ctrl *)\u001CUpp::CodeEditor::SetI(Ctrl*)\u0015void SetI(Ctrl *edit)\u0003Upp\u0004SETI\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\t\u0000\u0000\u0000Œ\u0001\u0000\u0000\u0001\u0000\u0000\u0000Œ\u0001\u0000\u0000/\u0000\u0000\u0000Œ\u0001\u0000\u0000\u0000\u0000\u0000\u0004PutI#void (WithDropChoice<EditString> &)&Upp::CodeEditor::PutI(WithDropChoice&)+void PutI(WithDropChoice<EditString>& edit)\u0003Upp\u0004PUTI\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000–\u0001\u0000\u0000\u0001\u0000\u0000\u0000–\u0001\u0000\u0000\u001E\u0000\u0000\u0000–\u0001\u0000\u0000\u0000\u0000\u0000\fMoveNextWord\vvoid (bool)#Upp::CodeEditor::MoveNextWord(bool)\u001Bvoid MoveNextWord(bool sel)\u0003Upp\fMOVENEXTWORD\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000—\u0001\u0000\u0000\u0001\u0000\u0000\u0000—\u0001\u0000\u0000\u001E\u0000\u0000\u0000—\u0001\u0000\u0000\u0000\u0000\u0000\fMovePrevWord\vvoid (bool)#Upp::CodeEditor::MovePrevWord(bool)\u001Bvoid MovePrevWord(bool sel)\u0003Upp\fMOVEPREVWORD\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000“\u0001\u0000\u0000\u0001\u0000\u0000\u0000“\u0001\u0000\u0000\u001D\u0000\u0000\u0000“\u0001\u0000\u0000\u0000\u0000\u0000\vMoveNextBrk\vvoid (bool)\"Upp::CodeEditor::MoveNextBrk(bool)\u001Avoid MoveNextBrk(bool sel)\u0003Upp\vMOVENEXTBRK\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000”\u0001\u0000\u0000\u0001\u0000\u0000\u0000”\u0001\u0000\u0000\u001D\u0000\u0000\u0000”\u0001\u0000\u0000\u0000\u0000\u0000\vMovePrevBrk\vvoid (bool)\"Upp::CodeEditor::MovePrevBrk(bool)\u001Avoid MovePrevBrk(bool sel)\u0003Upp\vMOVEPREVBRK\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000’\u0001\u0000\u0000\u0001\u0000\u0000\u0000’\u0001\u0000\u0000\u001A\u0000\u0000\u0000’\u0001\u0000\u0000\u0000\u0000\u0000\aGetWord\u000EString (int64)\u001FUpp::CodeEditor::GetWord(int64)\u0019String GetWord(int64 pos)\u0003Upp\aGETWORD\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000÷\u0001\u0000\u0000\u0001\u0000\u0000\u0000÷\u0001\u0000\u0000\u0011\u0000\u0000\u0000÷\u0001\u0000\u0000\u0000\u0000\u0000\aGetWord\tString ()\u001AUpp::CodeEditor::GetWord()\u0010String GetWord()\u0003Upp\aGETWORD\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000ÿ\u0001\u0000\u0000\u0001\u0000\u0000\u0000ÿ\u0001\u0000\u00001\u0000\u0000\u0000ÿ\u0001\u0000\u0000\u0000\u0000\u0000\nGetWordPos\u001Ebool (int64, int64 &, int64 &)0Upp::CodeEditor::GetWordPos(int64,int64&,int64&).bool GetWordPos(int64 pos, int64& l, int64& h)\u0003Upp\nGETWORDPOS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000⁄\u0001\u0000\u0000\u0001\u0000\u0000\u0000⁄\u0001\u0000\u0000\u0014\u0000\u0000\u0000⁄\u0001\u0000\u0000\u0000\u0000\u0000\nDeleteWord\avoid ()\u001DUpp::CodeEditor::DeleteWord()\u0011void DeleteWord()\u0003Upp\nDELETEWORD\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000€\u0001\u0000\u0000\u0001\u0000\u0000\u0000€\u0001\u0000\u0000\u0018\u0000\u0000\u0000€\u0001\u0000\u0000\u0000\u0000\u0000\u000EDeleteWordBack\avoid ()!Upp::CodeEditor::DeleteWordBack()\u0015void DeleteWordBack()\u0003Upp\u000EDELETEWORDBACK\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000‹\u0001\u0000\u0000\u0001\u0000\u0000\u0000‹\u0001\u0000\u0000&\u0000\u0000\u0000‹\u0001\u0000\u0000\u0000\u0000\u0000\u0010SetLineSelection\u000Fvoid (int, int)*Upp::CodeEditor::SetLineSelection(int,int)#void SetLineSelection(int l, int h)\u0003Upp\u0010SETLINESELECTION\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000›\u0001\u0000\u0000\u0001\u0000\u0000\u0000›\u0001\u0000\u0000(\u0000\u0000\u0000›\u0001\u0000\u0000\u0000\u0000\u0000\u0010GetLineSelection\u0013bool (int &, int &),Upp::CodeEditor::GetLineSelection(int&,int&)%bool GetLineSelection(int& l, int& h)\u0003Upp\u0010GETLINESELECTION\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000ﬁ\u0001\u0000\u0000\u0001\u0000\u0000\u0000ﬁ\u0001\u0000\u0000\u0012\u0000\u0000\u0000ﬁ\u0001\u0000\u0000\u0000\u0000\u0000\bTabRight\avoid ()\u001BUpp::CodeEditor::TabRight()\u000Fvoid TabRight()\u0003Upp\bTABRIGHT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000ﬂ\u0001\u0000\u0000\u0001\u0000\u0000\u0000ﬂ\u0001\u0000\u0000\u0011\u0000\u0000\u0000ﬂ\u0001\u0000\u0000\u0000\u0000\u0000\aTabLeft\avoid ()\u001AUpp::CodeEditor::TabLeft()\u000Evoid TabLeft()\u0003Upp\aTABLEFT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000‡\u0001\u0000\u0000\u0001\u0000\u0000\u0000‡\u0001\u0000\u0000\u001B\u0000\u0000\u0000‡\u0001\u0000\u0000\u0000\u0000\u0000\nSwapUpDown\vvoid (bool)!Upp::CodeEditor::SwapUpDown(bool)\u0018void SwapUpDown(bool up)\u0003Upp\nSWAPUPDOWN\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\t\u0000\u0000\u0000‚\u0001\u0000\u0000\u0001\u0000\u0000\u0000‚\u0001\u0000\u0000H\u0000\u0000\u0000‚\u0001\u0000\u0000\u0001\u0000\u0000\vCheckEdited\vvoid (bool)\"Upp::CodeEditor::CheckEdited(bool)\u001Fvoid CheckEdited(bool e = true)\u0003Upp\vCHECKEDITED\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\t\u0000\u0000\u0000„\u0001\u0000\u0000\u0001\u0000\u0000\u0000„\u0001\u0000\u0000K\u0000\u0000\u0000„\u0001\u0000\u0000\u0001\u0000\u0000\u000EGetCheckEdited\abool ()!Upp::CodeEditor::GetCheckEdited()\u0015bool GetCheckEdited()\u0003Upp\u000EGETCHECKEDITED\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\t\u0000\u0000\u0000Â\u0001\u0000\u0000\u0001\u0000\u0000\u0000Â\u0001\u0000\u0000F\u0000\u0000\u0000Â\u0001\u0000\u0000\u0001\u0000\u0000\u000FEditorBarLayout\avoid ()\"Upp::CodeEditor::EditorBarLayout()\u0016void EditorBarLayout()\u0003Upp\u000FEDITORBARLAYOUT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000Á\u0001\u0000\u0000\u0001\u0000\u0000\u0000Á\u0001\u0000\u0000P\u0000\u0000\u0000Á\u0001\u0000\u0000\u0001\u0000\u0000\vGetLineInfo\vLineInfo ()\u001EUpp::CodeEditor::GetLineInfo()\u0016LineInfo GetLineInfo()\u0003Upp\vGETLINEINFO\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000Ë\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ë\u0001\u0000\u0000)\u0000\u0000\u0000Ë\u0001\u0000\u0000\u0000\u0000\u0000\vSetLineInfo\u0011void (LineInfo &)'Upp::CodeEditor::SetLineInfo(LineInfo&)\u001Evoid SetLineInfo(LineInfo& lf)\u0003Upp\vSETLINEINFO\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000È\u0001\u0000\u0000\u0001\u0000\u0000\u0000È\u0001\u0000\u0000c\u0000\u0000\u0000È\u0001\u0000\u0000\u0001\u0000\u0000\u000EGetLineInfoRem\u000ELineInfoRem ()!Upp::CodeEditor::GetLineInfoRem()\u001CLineInfoRem GetLineInfoRem()\u0003Upp\u000EGETLINEINFOREM\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000Í\u0001\u0000\u0000\u0001\u0000\u0000\u0000Í\u0001\u0000\u0000^\u0000\u0000\u0000Í\u0001\u0000\u0000\u0001\u0000\u0000\u000ESetLineInfoRem\u0012void (LineInfoRem),Upp::CodeEditor::SetLineInfoRem(LineInfoRem)#void SetLineInfoRem(LineInfoRem lf)\u0003Upp\u000ESETLINEINFOREM\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000Î\u0001\u0000\u0000\u0001\u0000\u0000\u0000Î\u0001\u0000\u0000M\u0000\u0000\u0000Î\u0001\u0000\u0000\u0001\u0000\u0000\u000FGetStatEditTime\tdouble ()\"Upp::CodeEditor::GetStatEditTime()\u0018double GetStatEditTime()\u0003Upp\u000FGETSTATEDITTIME\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000Ï\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ï\u0001\u0000\u0000T\u0000\u0000\u0000Ï\u0001\u0000\u0000\u0001\u0000\u0000\bRenumber\avoid ()\u001BUpp::CodeEditor::Renumber()\u000Fvoid Renumber()\u0003Upp\bRENUMBER\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000Ì\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ì\u0001\u0000\u0000N\u0000\u0000\u0000Ì\u0001\u0000\u0000\u0001\u0000\u0000\u0010ClearBreakpoints\avoid ()#Upp::CodeEditor::ClearBreakpoints()\u0017void ClearBreakpoints()\u0003Upp\u0010CLEARBREAKPOINTS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000Ó\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ó\u0001\u0000\u0000Q\u0000\u0000\u0000Ó\u0001\u0000\u0000\u0001\u0000\u0000\u0013ValidateBreakpoints\avoid ()&Upp::CodeEditor::ValidateBreakpoints()\u001Avoid ValidateBreakpoints()\u0003Upp\u0013VALIDATEBREAKPOINTS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000Ô\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ô\u0001\u0000\u0000R\u0000\u0000\u0000Ô\u0001\u0000\u0000\u0001\u0000\u0000\tGetLineNo\tint (int)\u001FUpp::CodeEditor::GetLineNo(int)\u0017int GetLineNo(int line)\u0003Upp\tGETLINENO\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000R\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\tGetNoLine\tint (int)\u001FUpp::CodeEditor::GetNoLine(int)\u0017int GetNoLine(int line)\u0003Upp\tGETNOLINE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000Ò\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ò\u0001\u0000\u0000P\u0000\u0000\u0000Ò\u0001\u0000\u0000\u0001\u0000\u0000\u0006SetPtr\u0018void (int, Image &, int)'Upp::CodeEditor::SetPtr(int,Image&,int)(void SetPtr(int line, Image& img, int i)\u0003Upp\u0006SETPTR\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000Ú\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ú\u0001\u0000\u0000E\u0000\u0000\u0000Ú\u0001\u0000\u0000\u0001\u0000\u0000\aHidePtr\avoid ()\u001AUpp::CodeEditor::HidePtr()\u000Evoid HidePtr()\u0003Upp\aHIDEPTR\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000Û\u0001\u0000\u0000\u0001\u0000\u0000\u0000Û\u0001\u0000\u0000V\u0000\u0000\u0000Û\u0001\u0000\u0000\u0001\u0000\u0000\rGetBreakpoint\fString (int)#Upp::CodeEditor::GetBreakpoint(int)\u001EString GetBreakpoint(int line)\u0003Upp\rGETBREAKPOINT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000Ù\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ù\u0001\u0000\u0000R\u0000\u0000\u0000Ù\u0001\u0000\u0000\u0001\u0000\u0000\rSetBreakpoint\u0014void (int, String &)+Upp::CodeEditor::SetBreakpoint(int,String&)'void SetBreakpoint(int line, String& b)\u0003Upp\rSETBREAKPOINT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000ı\u0001\u0000\u0000\u0001\u0000\u0000\u0000ı\u0001\u0000\u0000I\u0000\u0000\u0000ı\u0001\u0000\u0000\u0001\u0000\u0000\vClearEdited\avoid ()\u001EUpp::CodeEditor::ClearEdited()\u0012void ClearEdited()\u0003Upp\vCLEAREDITED\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\a\u0000\u0000\u0000ˆ\u0001\u0000\u0000\u0001\u0000\u0000\u0000ˆ\u0001\u0000\u0000K\u0000\u0000\u0000ˆ\u0001\u0000\u0000\u0001\u0000\u0000\fGetUndoCount\u0006int ()\u001FUpp::CodeEditor::GetUndoCount()\u0012int GetUndoCount()\u0003Upp\fGETUNDOCOUNT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000˜\u0001\u0000\u0000\u0001\u0000\u0000\u0000˜\u0001\u0000\u0000\u001C\u0000\u0000\u0000˜\u0001\u0000\u0000\u0000\u0000\u0000\bGotoLine\nvoid (int)\u001EUpp::CodeEditor::GotoLine(int)\u0017void GotoLine(int line)\u0003Upp\bGOTOLINE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000¯\u0001\u0000\u0000\u0001\u0000\u0000\u0000¯\u0001\u0000\u0000U\u0000\u0000\u0000¯\u0001\u0000\u0000\u0001\u0000\u0000\u0013EnableBreakpointing\avoid ()&Upp::CodeEditor::EnableBreakpointing()\u001Avoid EnableBreakpointing()\u0003Upp\u0013ENABLEBREAKPOINTING\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000˘\u0001\u0000\u0000\u0001\u0000\u0000\u0000˘\u0001\u0000\u0000V\u0000\u0000\u0000˘\u0001\u0000\u0000\u0001\u0000\u0000\u0014DisableBreakpointing\avoid ()'Upp::CodeEditor::DisableBreakpointing()\u001Bvoid DisableBreakpointing()\u0003Upp\u0014DISABLEBREAKPOINTING\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000˙\u0001\u0000\u0000\u0001\u0000\u0000\u0000˙\u0001\u0000\u0000\u0015\u0000\u0000\u0000˙\u0001\u0000\u0000\u0000\u0000\u0000\tRenumber2\avoid ()\u001CUpp::CodeEditor::Renumber2()\u0010void Renumber2()\u0003Upp\tRENUMBER2\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000˚\u0001\u0000\u0000\u0001\u0000\u0000\u0000˚\u0001\u0000\u0000\u0019\u0000\u0000\u0000˚\u0001\u0000\u0000\u0000\u0000\u0000\bGetLine2\tint (int)\u001EUpp::CodeEditor::GetLine2(int)\u0013int GetLine2(int i)\u0003Upp\bGETLINE2\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000¸\u0001\u0000\u0000\u0001\u0000\u0000\u0000¸\u0001\u0000\u0000\u001B\u0000\u0000\u0000¸\u0001\u0000\u0000\u0000\u0000\u0000\u000FReformatComment\avoid ()\"Upp::CodeEditor::ReformatComment()\u0016void ReformatComment()\u0003Upp\u000FREFORMATCOMMENT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000ˇ\u0001\u0000\u0000\u0001\u0000\u0000\u0000ˇ\u0001\u0000\u0000a\u0000\u0000\u0000ˇ\u0001\u0000\u0000\u0001\u0000\u0000\vHiliteScope\vvoid (byte)\"Upp::CodeEditor::HiliteScope(byte)\u0018void HiliteScope(byte b)\u0003Upp\vHILITESCOPE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0002\u0000\u0000c\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\rHiliteBracket\vvoid (byte)$Upp::CodeEditor::HiliteBracket(byte)\u001Avoid HiliteBracket(byte b)\u0003Upp\rHILITEBRACKET\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0002\u0000\u0000a\u0000\u0000\u0000\u0001\u0002\u0000\u0000\u0001\u0000\u0000\vHiliteIfDef\vvoid (byte)\"Upp::CodeEditor::HiliteIfDef(byte)\u0018void HiliteIfDef(byte b)\u0003Upp\vHILITEIFDEF\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\u0002\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0002\u0000\u0000L\u0000\u0000\u0000\u0002\u0002\u0000\u0000\u0001\u0000\u0000\rHiliteIfEndif\vvoid (bool)$Upp::CodeEditor::HiliteIfEndif(bool)\u001Avoid HiliteIfEndif(bool b)\u0003Upp\rHILITEIFENDIF\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\u0004\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0002\u0000\u0000Z\u0000\u0000\u0000\u0004\u0002\u0000\u0000\u0001\u0000\u0000\u0012ThousandsSeparator\vvoid (bool))Upp::CodeEditor::ThousandsSeparator(bool)\u001Fvoid ThousandsSeparator(bool b)\u0003Upp\u0012THOUSANDSSEPARATOR\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\u0005\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0005\u0002\u0000\u0000J\u0000\u0000\u0000\u0005\u0002\u0000\u0000\u0001\u0000\u0000\fIndentSpaces\vvoid (bool)#Upp::CodeEditor::IndentSpaces(bool)\u001Avoid IndentSpaces(bool is)\u0003Upp\fINDENTSPACES\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\u0006\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0002\u0000\u0000J\u0000\u0000\u0000\u0006\u0002\u0000\u0000\u0001\u0000\u0000\fIndentAmount\nvoid (int)\"Upp::CodeEditor::IndentAmount(int)\u0019void IndentAmount(int ia)\u0003Upp\fINDENTAMOUNT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\a\u0002\u0000\u0000\u0001\u0000\u0000\u0000\a\u0002\u0000\u0000Q\u0000\u0000\u0000\a\u0002\u0000\u0000\u0001\u0000\u0000\u0013NoParenthesisIndent\vvoid (bool)*Upp::CodeEditor::NoParenthesisIndent(bool) void NoParenthesisIndent(bool b)\u0003Upp\u0013NOPARENTHESISINDENT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\t\u0002\u0000\u0000\u0001\u0000\u0000\u0000\t\u0002\u0000\u0000]\u0000\u0000\u0000\t\u0002\u0000\u0000\u0001\u0000\u0000\u0012SpellcheckComments\nvoid (int)(Upp::CodeEditor::SpellcheckComments(int)!void SpellcheckComments(int lang)\u0003Upp\u0012SPELLCHECKCOMMENTS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\n\u0002\u0000\u0000\u0001\u0000\u0000\u0000\n\u0002\u0000\u0000R\u0000\u0000\u0000\n\u0002\u0000\u0000\u0001\u0000\u0000\u0015GetSpellcheckComments\u0006int ()(Upp::CodeEditor::GetSpellcheckComments()\u001Bint GetSpellcheckComments()\u0003Upp\u0015GETSPELLCHECKCOMMENTS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\v\u0002\u0000\u0000\u0001\u0000\u0000\u0000\v\u0002\u0000\u0000M\u0000\u0000\u0000\v\u0002\u0000\u0000\u0001\u0000\u0000\u0010WordwrapComments\vvoid (bool)'Upp::CodeEditor::WordwrapComments(bool)\u001Dvoid WordwrapComments(bool b)\u0003Upp\u0010WORDWRAPCOMMENTS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\f\u0002\u0000\u0000\u0001\u0000\u0000\u0000\f\u0002\u0000\u0000P\u0000\u0000\u0000\f\u0002\u0000\u0000\u0001\u0000\u0000\u0012IsWordwrapComments\abool ()%Upp::CodeEditor::IsWordwrapComments()\u0019bool IsWordwrapComments()\u0003Upp\u0012ISWORDWRAPCOMMENTS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\u000E\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u000E\u0002\u0000\u0000O\u0000\u0000\u0000\u000E\u0002\u0000\u0000\u0001\u0000\u0000\rNoFindReplace\avoid () Upp::CodeEditor::NoFindReplace()\u0014void NoFindReplace()\u0003Upp\rNOFINDREPLACE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\u0010\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0010\u0002\u0000\u0000J\u0000\u0000\u0000\u0010\u0002\u0000\u0000\u0001\u0000\u0000\vLineNumbers\vvoid (bool)\"Upp::CodeEditor::LineNumbers(bool)\u0018void LineNumbers(bool b)\u0003Upp\vLINENUMBERS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\u0011\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0011\u0002\u0000\u0000F\u0000\u0000\u0000\u0011\u0002\u0000\u0000\u0001\u0000\u0000\tMarkLines\vvoid (bool) Upp::CodeEditor::MarkLines(bool)\u0016void MarkLines(bool b)\u0003Upp\tMARKLINES\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\u0012\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0012\u0002\u0000\u0000I\u0000\u0000\u0000\u0012\u0002\u0000\u0000\u0001\u0000\u0000\fGetMarkLines\abool ()\u001FUpp::CodeEditor::GetMarkLines()\u0013bool GetMarkLines()\u0003Upp\fGETMARKLINES\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\u0013\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0013\u0002\u0000\u0000H\u0000\u0000\u0000\u0013\u0002\u0000\u0000\u0001\u0000\u0000\vAutoEnclose\vvoid (bool)\"Upp::CodeEditor::AutoEnclose(bool)\u0018void AutoEnclose(bool b)\u0003Upp\vAUTOENCLOSE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\u0014\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0014\u0002\u0000\u0000C\u0000\u0000\u0000\u0014\u0002\u0000\u0000\u0001\u0000\u0000\aBarLine\vvoid (bool)\u001EUpp::CodeEditor::BarLine(bool)\u0014void BarLine(bool b)\u0003Upp\aBARLINE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\u0015\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0015\u0002\u0000\u0000D\u0000\u0000\u0000\u0015\u0002\u0000\u0000\u0001\u0000\u0000\bWordWrap\vvoid (bool)\u001FUpp::CodeEditor::WordWrap(bool)\u0015void WordWrap(bool b)\u0003Upp\bWORDWRAP\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\u0016\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0016\u0002\u0000\u0000R\u0000\u0000\u0000\u0016\u0002\u0000\u0000\u0001\u0000\u0000\nBlk0Header\vvoid (bool)!Upp::CodeEditor::Blk0Header(bool)\u0017void Blk0Header(bool b)\u0003Upp\nBLK0HEADER\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\u0018\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0018\u0002\u0000\u0000S\u0000\u0000\u0000\u0018\u0002\u0000\u0000\u0001\u0000\u0000\u0015PersistentFindReplace\vvoid (bool),Upp::CodeEditor::PersistentFindReplace(bool))void PersistentFindReplace(bool b = true)\u0003Upp\u0015PERSISTENTFINDREPLACE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\u0019\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0019\u0002\u0000\u0000V\u0000\u0000\u0000\u0019\u0002\u0000\u0000\u0001\u0000\u0000\u0017IsPersistentFindReplace\abool ()*Upp::CodeEditor::IsPersistentFindReplace()\u001Ebool IsPersistentFindReplace()\u0003Upp\u0017ISPERSISTENTFINDREPLACE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\u001B\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u001B\u0002\u0000\u0000M\u0000\u0000\u0000\u001B\u0002\u0000\u0000\u0001\u0000\u0000\u0015FindReplaceRestorePos\vvoid (bool),Upp::CodeEditor::FindReplaceRestorePos(bool))void FindReplaceRestorePos(bool b = true)\u0003Upp\u0015FINDREPLACERESTOREPOS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\u001C\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u001C\u0002\u0000\u0000P\u0000\u0000\u0000\u001C\u0002\u0000\u0000\u0001\u0000\u0000\u0017IsFindReplaceRestorePos\abool ()*Upp::CodeEditor::IsFindReplaceRestorePos()\u001Ebool IsFindReplaceRestorePos()\u0003Upp\u0017ISFINDREPLACERESTOREPOS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\u001E\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u001E\u0002\u0000\u0000N\u0000\u0000\u0000\u001E\u0002\u0000\u0000\u0001\u0000\u0000\vAnnotations\nvoid (int)!Upp::CodeEditor::Annotations(int)\u001Bvoid Annotations(int width)\u0003Upp\vANNOTATIONS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\u001F\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u001F\u0002\u0000\u0000N\u0000\u0000\u0000\u001F\u0002\u0000\u0000\u0001\u0000\u0000\u0010ClearAnnotations\avoid ()#Upp::CodeEditor::ClearAnnotations()\u0017void ClearAnnotations()\u0003Upp\u0010CLEARANNOTATIONS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000 \u0002\u0000\u0000\u0001\u0000\u0000\u0000 \u0002\u0000\u0000e\u0000\u0000\u0000 \u0002\u0000\u0000\u0001\u0000\u0000\rSetAnnotation\u001Dvoid (int, Image &, String &)2Upp::CodeEditor::SetAnnotation(int,Image&,String&)1void SetAnnotation(int i, Image& icon, String& a)\u0003Upp\rSETANNOTATION\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000!\u0002\u0000\u0000\u0001\u0000\u0000\u0000!\u0002\u0000\u0000S\u0000\u0000\u0000!\u0002\u0000\u0000\u0001\u0000\u0000\rGetAnnotation\fString (int)#Upp::CodeEditor::GetAnnotation(int)\u001BString GetAnnotation(int i)\u0003Upp\rGETANNOTATION\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\"\u0002\u0000\u0000\u0001\u0000\u0000\u0000\"\u0002\u0000\u0000\\\u0000\u0000\u0000\"\u0002\u0000\u0000\u0001\u0000\u0000\u0017GetActiveAnnotationLine\u0006int ()*Upp::CodeEditor::GetActiveAnnotationLine()\u001Dint GetActiveAnnotationLine()\u0003Upp\u0017GETACTIVEANNOTATIONLINE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000#\u0002\u0000\u0000\u0001\u0000\u0000\u0000#\u0002\u0000\u0000L\u0000\u0000\u0000#\u0002\u0000\u0000\u0001\u0000\u0000\nGetBarSize\aSize ()\u001DUpp::CodeEditor::GetBarSize()\u0011Size GetBarSize()\u0003Upp\nGETBARSIZE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000$\u0002\u0000\u0000\u0001\u0000\u0000\u0000$\u0002\u0000\u0000B\u0000\u0000\u0000$\u0002\u0000\u0000\u0001\u0000\u0000\aHideBar\avoid ()\u001AUpp::CodeEditor::HideBar()\u000Evoid HideBar()\u0003Upp\aHIDEBAR\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000%\u0002\u0000\u0000\u0001\u0000\u0000\u0000%\u0002\u0000\u0000I\u0000\u0000\u0000%\u0002\u0000\u0000\u0001\u0000\u0000\nAnimateBar\u0016void (Vector<Color> &)$Upp::CodeEditor::AnimateBar(Vector&)!void AnimateBar(Vector<Color>& a)\u0003Upp\nANIMATEBAR\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000&\u0002\u0000\u0000\u0001\u0000\u0000\u0000&\u0002\u0000\u0000I\u0000\u0000\u0000&\u0002\u0000\u0000\u0001\u0000\u0000\bBarColor\fvoid (Color) Upp::CodeEditor::BarColor(Color)\u0016void BarColor(Color c)\u0003Upp\bBARCOLOR\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000'\u0002\u0000\u0000\u0001\u0000\u0000\u0000'\u0002\u0000\u0000I\u0000\u0000\u0000'\u0002\u0000\u0000\u0001\u0000\u0000\aBarText\u0016void (String &, Color)'Upp::CodeEditor::BarText(String&,Color)#void BarText(String& text, Color c)\u0003Upp\aBARTEXT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000)\u0002\u0000\u0000\u0001\u0000\u0000\u0000)\u0002\u0000\u0000&\u0000\u0000\u0000)\u0002\u0000\u0000\u0000\u0000\u0000\u0006Errors\u0017void (Vector<Point> &&)!Upp::CodeEditor::Errors(Vector&&)!void Errors(Vector<Point>&& errs)\u0003Upp\u0006ERRORS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000+\u0002\u0000\u0000\u0001\u0000\u0000\u0000+\u0002\u0000\u0000)\u0000\u0000\u0000+\u0002\u0000\u0000\u0000\u0000\u0000\nIlluminate\u0010void (WString &)%Upp::CodeEditor::Illuminate(WString&)\u001Evoid Illuminate(WString& text)\u0003Upp\nILLUMINATE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000,\u0002\u0000\u0000\u0001\u0000\u0000\u0000,\u0002\u0000\u0000J\u0000\u0000\u0000,\u0002\u0000\u0000\u0001\u0000\u0000\u000EGetIlluminated\nWString ()!Upp::CodeEditor::GetIlluminated()\u0018WString GetIlluminated()\u0003Upp\u000EGETILLUMINATED\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000.\u0002\u0000\u0000\u0001\u0000\u0000\u0000.\u0002\u0000\u0000\u0015\u0000\u0000\u0000.\u0002\u0000\u0000\u0000\u0000\u0000\u0004Zoom\nvoid (int)\u001AUpp::CodeEditor::Zoom(int)\u0010void Zoom(int d)\u0003Upp\u0004ZOOM\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u00000\u0002\u0000\u0000\u0001\u0000\u0000\u00000\u0002\u0000\u0000J\u0000\u0000\u00000\u0002\u0000\u0000\u0001\u0000\u0000\vStatusImage\u000Evoid (Image &)$Upp::CodeEditor::StatusImage(Image&)\u001Avoid StatusImage(Image& m)\u0003Upp\vSTATUSIMAGE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u00002\u0002\u0000\u0000\u0001\u0000\u0000\u00002\u0002\u0000\u0000&\u0000\u0000\u00002\u0002\u0000\u0000\u0000\u0000\u0000\tGetSyntax\u0017One<EditorSyntax> (int)\u001FUpp::CodeEditor::GetSyntax(int)%One<EditorSyntax> GetSyntax(int line)\u0003Upp\tGETSYNTAX\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u00003\u0002\u0000\u0000\u0001\u0000\u0000\u00003\u0002\u0000\u0000 \u0000\u0000\u00003\u0002\u0000\u0000\u0000\u0000\u0000\u000FIsCursorBracket\fbool (int64)'Upp::CodeEditor::IsCursorBracket(int64)\u001Fbool IsCursorBracket(int64 pos)\u0003Upp\u000FISCURSORBRACKET\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u00004\u0002\u0000\u0000\u0001\u0000\u0000\u00004\u0002\u0000\u0000\"\u0000\u0000\u00004\u0002\u0000\u0000\u0000\u0000\u0000\u0011IsMatchingBracket\fbool (int64))Upp::CodeEditor::IsMatchingBracket(int64)!bool IsMatchingBracket(int64 pos)\u0003Upp\u0011ISMATCHINGBRACKET\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u00007\u0002\u0000\u0000\u0001\u0000\u0000\u00007\u0002\u0000\u0000]\u0000\u0000\u00007\u0002\u0000\u0000\u0001\u0000\u0000\nGetIfStack\u0015Vector<IfState> (int) Upp::CodeEditor::GetIfStack(int)$Vector<IfState> GetIfStack(int line)\u0003Upp\nGETIFSTACK\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u00009\u0002\u0000\u0000\u0001\u0000\u0000\u00009\u0002\u0000\u0000\u0002\u0000\u0000\u0000=\u0002\u0000\u0000\u0001\u0000\u0000\u000FFindReplaceData Upp::CodeEditor::FindReplaceData Upp::CodeEditor::FindReplaceData\u000FFindReplaceData\u0003Upp\u000FFINDREPLACEDATA Upp::CodeEditor::FindReplaceData UPP::CODEEDITOR::FINDREPLACEDATA\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000:\u0002\u0000\u0000\u0002\u0000\u0000\u0000:\u0002\u0000\u0000\r\u0000\u0000\u0000:\u0002\u0000\u0000\u0001\u0000\u0000\u0004find\u0006String&Upp::CodeEditor::FindReplaceData::find\vString find\u0003Upp\u0004FIND Upp::CodeEditor::FindReplaceData UPP::CODEEDITOR::FINDREPLACEDATA\u0000\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000:\u0002\u0000\u0000\u0002\u0000\u0000\u0000:\u0002\u0000\u0000\u0016\u0000\u0000\u0000:\u0002\u0000\u0000\u0001\u0000\u0000\areplace\u0006String)Upp::CodeEditor::FindReplaceData::replace\u000EString replace\u0003Upp\aREPLACE Upp::CodeEditor::FindReplaceData UPP::CODEEDITOR::FINDREPLACEDATA\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000;\u0002\u0000\u0000\u0002\u0000\u0000\u0000;\u0002\u0000\u0000\u0012\u0000\u0000\u0000;\u0002\u0000\u0000\u0001\u0000\u0000\tfind_list\u0006String+Upp::CodeEditor::FindReplaceData::find_list\u0010String find_list\u0003Upp\tFIND_LIST Upp::CodeEditor::FindReplaceData UPP::CODEEDITOR::FINDREPLACEDATA\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000;\u0002\u0000\u0000\u0002\u0000\u0000\u0000;\u0002\u0000\u0000 \u0000\u0000\u0000;\u0002\u0000\u0000\u0001\u0000\u0000\freplace_list\u0006String.Upp::CodeEditor::FindReplaceData::replace_list\u0013String replace_list\u0003Upp\fREPLACE_LIST Upp::CodeEditor::FindReplaceData UPP::CODEEDITOR::FINDREPLACEDATA\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000<\u0002\u0000\u0000\u0002\u0000\u0000\u0000<\u0002\u0000\u0000\u0012\u0000\u0000\u0000<\u0002\u0000\u0000\u0001\u0000\u0000\twholeword\u0004bool+Upp::CodeEditor::FindReplaceData::wholeword\u000Ebool wholeword\u0003Upp\tWHOLEWORD Upp::CodeEditor::FindReplaceData UPP::CODEEDITOR::FINDREPLACEDATA\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000<\u0002\u0000\u0000\u0002\u0000\u0000\u0000<\u0002\u0000\u0000\u001D\u0000\u0000\u0000<\u0002\u0000\u0000\u0001\u0000\u0000\twildcards\u0004bool+Upp::CodeEditor::FindReplaceData::wildcards\u000Ebool wildcards\u0003Upp\tWILDCARDS Upp::CodeEditor::FindReplaceData UPP::CODEEDITOR::FINDREPLACEDATA\u0000\u0000\u0006\u0000\u0000\u0000\u001F\u0000\u0000\u0000<\u0002\u0000\u0000\u0002\u0000\u0000\u0000<\u0002\u0000\u0000)\u0000\u0000\u0000<\u0002\u0000\u0000\u0001\u0000\u0000\nignorecase\u0004bool,Upp::CodeEditor::FindReplaceData::ignorecase\u000Fbool ignorecase\u0003Upp\nIGNORECASE Upp::CodeEditor::FindReplaceData UPP::CODEEDITOR::FINDREPLACEDATA\u0000\u0000\u0006\u0000\u0000\u0000+\u0000\u0000\u0000<\u0002\u0000\u0000\u0002\u0000\u0000\u0000<\u0002\u0000\u00003\u0000\u0000\u0000<\u0002\u0000\u0000\u0001\u0000\u0000\bsamecase\u0004bool*Upp::CodeEditor::FindReplaceData::samecase\rbool samecase\u0003Upp\bSAMECASE Upp::CodeEditor::FindReplaceData UPP::CODEEDITOR::FINDREPLACEDATA\u0000\u0000\u0006\u0000\u0000\u00005\u0000\u0000\u0000<\u0002\u0000\u0000\u0002\u0000\u0000\u0000<\u0002\u0000\u0000;\u0000\u0000\u0000<\u0002\u0000\u0000\u0001\u0000\u0000\u0006regexp\u0004bool(Upp::CodeEditor::FindReplaceData::regexp\vbool regexp\u0003Upp\u0006REGEXP Upp::CodeEditor::FindReplaceData UPP::CODEEDITOR::FINDREPLACEDATA\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000?\u0002\u0000\u0000\u0001\u0000\u0000\u0000?\u0002\u0000\u0000%\u0000\u0000\u0000?\u0002\u0000\u0000\u0000\u0000\u0000\u0012GetFindReplaceData\u0012FindReplaceData ()%Upp::CodeEditor::GetFindReplaceData()$FindReplaceData GetFindReplaceData()\u0003Upp\u0012GETFINDREPLACEDATA\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000@\u0002\u0000\u0000\u0001\u0000\u0000\u0000@\u0002\u0000\u0000=\u0000\u0000\u0000@\u0002\u0000\u0000\u0000\u0000\u0000\u0012SetFindReplaceData\u0018void (FindReplaceData &)5Upp::CodeEditor::SetFindReplaceData(FindReplaceData&)+void SetFindReplaceData(FindReplaceData& d)\u0003Upp\u0012SETFINDREPLACEDATA\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000B\u0002\u0000\u0000\u0001\u0000\u0000\u0000B\u0002\u0000\u0000\u0013\u0000\u0000\u0000B\u0002\u0000\u0000\u0000\u0000\u0000\aSyncTip\avoid ()\u001AUpp::CodeEditor::SyncTip()\u000Evoid SyncTip()\u0003Upp\aSYNCTIP\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000C\u0002\u0000\u0000\u0001\u0000\u0000\u0000C\u0002\u0000\u0000c\u0000\u0000\u0000C\u0002\u0000\u0000\u0001\u0000\u0000\bCloseTip\avoid ()\u001BUpp::CodeEditor::CloseTip()\u000Fvoid CloseTip()\u0003Upp\bCLOSETIP\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0014\u0000\u0000\u0000\u0014\u0000\u0000\u0000E\u0002\u0000\u0000\u0001\u0000\u0000\u0000E\u0002\u0000\u0000\u001D\u0000\u0000\u0000E\u0002\u0000\u0000\u0001\u0000\u0000\tCLASSNAME\u001AUpp::CodeEditor::CLASSNAME\u001AUpp::CodeEditor::CLASSNAME\u001Ctypedef CodeEditor CLASSNAME\u0003Upp\tCLASSNAME\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u000FUpp::CodeEditor\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000G\u0002\u0000\u0000\u0001\u0000\u0000\u0000G\u0002\u0000\u0000\r\u0000\u0000\u0000G\u0002\u0000\u0000\u0000\u0000\u0000\nCodeEditor\avoid ()\u001DUpp::CodeEditor::CodeEditor()\fCodeEditor()\u0003Upp\nCODEEDITOR\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0019\u0000\u0000\u0000\t\u0000\u0000\u0000H\u0002\u0000\u0000\u0001\u0000\u0000\u0000H\u0002\u0000\u0000\u0016\u0000\u0000\u0000H\u0002\u0000\u0000\u0000\u0000\u0000\v~CodeEditor\avoid ()\u0014Upp::CodeEditor::~()\r~CodeEditor()\u0003Upp\v~CODEEDITOR\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000J\u0002\u0000\u0000\u0001\u0000\u0000\u0000J\u0002\u0000\u0000\u001B\u0000\u0000\u0000J\u0002\u0000\u0000\u0000\u0000\u0001\fInitKeywords\avoid ()\u001FUpp::CodeEditor::InitKeywords()\u001Astatic void InitKeywords()\u0003Upp\fINITKEYWORDS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000M\u0002\u0000\u0000\u0000\u0000\u0000\u0000M\u0002\u0000\u0000.\u0000\u0000\u0000M\u0002\u0000\u0000\u0000\u0000\u0000\bReadList%String (WithDropChoice<EditString> &)\u001EUpp::ReadList(WithDropChoice&).String ReadList(WithDropChoice<EditString>& e)\u0003Upp\bREADLIST\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000N\u0002\u0000\u0000\u0000\u0000\u0000\u0000N\u0002\u0000\u0000C\u0000\u0000\u0000N\u0002\u0000\u0000\u0000\u0000\u0000\tWriteList-void (WithDropChoice<EditString> &, String &)'Upp::WriteList(WithDropChoice&,String&);void WriteList(WithDropChoice<EditString>& e, String& data)\u0003Upp\tWRITELIST\u0003Upp\u0003UPP\u0000\u0000end\u0000Ï\u0012\u0001\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\FindReplace.cpp","value":"data0\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u000FInitFindReplace\avoid ()\"Upp::CodeEditor::InitFindReplace()\u0016void InitFindReplace()\u0003Upp\u000FINITFINDREPLACE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0018\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\u0000+\u0000\u0000\u0000\u0001\u0000\u0000\u000EFindReplaceDlg\avoid ()%Upp::FindReplaceDlg::FindReplaceDlg()\u0010FindReplaceDlg()\u0003Upp\u000EFINDREPLACEDLG\u0013Upp::FindReplaceDlg\u0013UPP::FINDREPLACEDLG\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000-\u0000\u0000\u0000\u0000\u0000\u0000\u0000-\u0000\u0000\u0000\u0001\u0000\u0000\u00008\u0000\u0000\u0000\u0001\u0000\u0000\u0004Sync\avoid ()\u001BUpp::FindReplaceDlg::Sync()\vvoid Sync()\u0003Upp\u0004SYNC\u0013Upp::FindReplaceDlg\u0013UPP::FINDREPLACEDLG\u0000\u0000\t\u0000\u0000\u0000\u0012\u0000\u0000\u0000:\u0000\u0000\u0000\u0000\u0000\u0000\u0000:\u0000\u0000\u0000&\u0000\u0000\u0000:\u0000\u0000\u0000\u0001\u0000\u0000\rfind_next_key\u0005dword\u001EUpp::CodeEditor::find_next_key\u0013dword find_next_key\u0003Upp\rFIND_NEXT_KEY\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\t\u0000\u0000\u0000\u0012\u0000\u0000\u0000;\u0000\u0000\u0000\u0000\u0000\u0000\u0000;\u0000\u0000\u0000,\u0000\u0000\u0000;\u0000\u0000\u0000\u0001\u0000\u0000\rfind_prev_key\u0005dword\u001EUpp::CodeEditor::find_prev_key\u0013dword find_prev_key\u0003Upp\rFIND_PREV_KEY\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\t\u0000\u0000\u0000\u0012\u0000\u0000\u0000<\u0000\u0000\u0000\u0000\u0000\u0000\u0000<\u0000\u0000\u0000(\u0000\u0000\u0000<\u0000\u0000\u0000\u0001\u0000\u0000\vreplace_key\u0005dword\u001CUpp::CodeEditor::replace_key\u0011dword replace_key\u0003Upp\vREPLACE_KEY\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000>\u0000\u0000\u0000\u0000\u0000\u0000\u0000>\u0000\u0000\u0000\u0001\u0000\u0000\u0000Y\u0000\u0000\u0000\u0001\u0001\u0000\u0003Key\u0011bool (dword, int)#Upp::FindReplaceDlg::Key(dword,int)\u001Cbool Key(dword key, int cnt)\u0003Upp\u0003KEY\u0013Upp::FindReplaceDlg\u0013UPP::FINDREPLACEDLG\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000[\u0000\u0000\u0000\u0000\u0000\u0000\u0000[\u0000\u0000\u0000\u0001\u0000\u0000\u0000s\u0000\u0000\u0000\u0001\u0000\u0000\u0005Setup\vvoid (bool) Upp::FindReplaceDlg::Setup(bool)\u001Avoid Setup(bool doreplace)\u0003Upp\u0005SETUP\u0013Upp::FindReplaceDlg\u0013UPP::FINDREPLACEDLG\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000u\u0000\u0000\u0000\u0000\u0000\u0000\u0000u\u0000\u0000\u0000\u0001\u0000\u0000\u0000z\u0000\u0000\u0000\u0001\u0000\u0000\bSetFound\u001Avoid (int, int, WString &)+Upp::CodeEditor::SetFound(int,int,WString&).void SetFound(int fi, int type, WString& text)\u0003Upp\bSETFOUND\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000|\u0000\u0000\u0000\u0000\u0000\u0000\u0000|\u0000\u0000\u0000\u0001\u0000\u0000\u0000æ\u0000\u0000\u0000\u0001\u0000\u0000\u0005Match,int (wchar *, wchar *, int, bool, bool, int)7Upp::CodeEditor::Match(wchar*,wchar*,int,bool,bool,int)Mint Match(wchar *f, wchar *s, int line, bool we, bool ignorecase, int fi = 0)\u0003Upp\u0005MATCH\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000¿\u0000\u0000\u0000\u0000\u0000\u0000\u0000¿\u0000\u0000\u0000\u0001\u0000\u0000\u0000œ\u0000\u0000\u0000\u0001\u0000\u0000\u0004Find\u0011bool (bool, bool) Upp::CodeEditor::Find(bool,bool) bool Find(bool back, bool block)\u0003Upp\u0004FIND\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000—\u0000\u0000\u0000\u0000\u0000\u0000\u0000—\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ù\u0000\u0000\u0000\u0001\u0000\u0000\nRegExpFind\u0012bool (int64, bool)'Upp::CodeEditor::RegExpFind(int64,bool)&bool RegExpFind(int64 pos, bool block)\u0003Upp\nREGEXPFIND\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000ˆ\u0000\u0000\u0000\u0000\u0000\u0000\u0000ˆ\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0001\u0000\u0000\aFindAll\avoid ()\u001AUpp::CodeEditor::FindAll()\u000Evoid FindAll()\u0003Upp\aFINDALL\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0001\u0000\u0000\u0000k\u0001\u0000\u0000\u0001\u0000\u0000\bFindFrom\u0018bool (int64, bool, bool)*Upp::CodeEditor::FindFrom(int64,bool,bool)/bool FindFrom(int64 pos, bool back, bool block)\u0003Upp\bFINDFROM\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000m\u0001\u0000\u0000\u0000\u0000\u0000\u0000m\u0001\u0000\u0000\u0001\u0000\u0000\u0000s\u0001\u0000\u0000\u0001\u0000\u0000\u0015FindReplaceAddHistory\avoid ()(Upp::CodeEditor::FindReplaceAddHistory()\u001Cvoid FindReplaceAddHistory()\u0003Upp\u0015FINDREPLACEADDHISTORY\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000u\u0001\u0000\u0000\u0000\u0000\u0000\u0000u\u0001\u0000\u0000\u0001\u0000\u0000\u0000x\u0001\u0000\u0000\u0001\u0000\u0000\vNoFindError\avoid ()\u001EUpp::CodeEditor::NoFindError()\u0012void NoFindError()\u0003Upp\vNOFINDERROR\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000z\u0001\u0000\u0000\u0000\u0000\u0000\u0000z\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ä\u0001\u0000\u0000\u0001\u0000\u0000\bNotFound\avoid ()\u001BUpp::CodeEditor::NotFound()\u000Fvoid NotFound()\u0003Upp\bNOTFOUND\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000Ç\u0001\u0000\u0000\u0000\u0000\u0000\u0000Ç\u0001\u0000\u0000\u0001\u0000\u0000\u0000í\u0001\u0000\u0000\u0001\u0000\u0000\u0004Find\u0017bool (bool, bool, bool)%Upp::CodeEditor::Find(bool,bool,bool)5bool Find(bool back, bool blockreplace, bool replace)\u0003Upp\u0004FIND\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000î\u0001\u0000\u0000\u0000\u0000\u0000\u0000î\u0001\u0000\u0000\u0001\u0000\u0000\u0000†\u0001\u0000\u0000\u0001\u0000\u0000\aGetWild\u0014WString (int, int &)\"Upp::CodeEditor::GetWild(int,int&)!WString GetWild(int type, int& i)\u0003Upp\aGETWILD\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000¢\u0001\u0000\u0000\u0000\u0000\u0000\u0000¢\u0001\u0000\u0000\u0001\u0000\u0000\u0000\v\u0002\u0000\u0000\u0001\u0000\u0000\u000EGetReplaceText\nWString ()!Upp::CodeEditor::GetReplaceText()\u0018WString GetReplaceText()\u0003Upp\u000EGETREPLACETEXT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\r\u0002\u0000\u0000\u0000\u0000\u0000\u0000\r\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u001B\u0002\u0000\u0000\u0001\u0000\u0000\aReplace\avoid ()\u001AUpp::CodeEditor::Replace()\u000Evoid Replace()\u0003Upp\aREPLACE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u001D\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u001D\u0002\u0000\u0000\u0001\u0000\u0000\u0000V\u0002\u0000\u0000\u0001\u0000\u0000\fBlockReplace\u0006int ()\u001FUpp::CodeEditor::BlockReplace()\u0012int BlockReplace()\u0003Upp\fBLOCKREPLACE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000X\u0002\u0000\u0000\u0000\u0000\u0000\u0000X\u0002\u0000\u0000\u0001\u0000\u0000\u0000e\u0002\u0000\u0000\u0001\u0000\u0000\u0016OpenNormalFindReplace0\vvoid (bool)-Upp::CodeEditor::OpenNormalFindReplace0(bool))void OpenNormalFindReplace0(bool replace)\u0003Upp\u0016OPENNORMALFINDREPLACE0\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000g\u0002\u0000\u0000\u0000\u0000\u0000\u0000g\u0002\u0000\u0000\u0001\u0000\u0000\u0000l\u0002\u0000\u0000\u0001\u0000\u0000\u0015OpenNormalFindReplace\vvoid (bool),Upp::CodeEditor::OpenNormalFindReplace(bool)(void OpenNormalFindReplace(bool replace)\u0003Upp\u0015OPENNORMALFINDREPLACE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000n\u0002\u0000\u0000\u0000\u0000\u0000\u0000n\u0002\u0000\u0000\u0001\u0000\u0000\u0000¥\u0002\u0000\u0000\u0001\u0000\u0000\vFindReplace\u0017void (bool, bool, bool),Upp::CodeEditor::FindReplace(bool,bool,bool)Cvoid FindReplace(bool pick_selection, bool pick_text, bool replace)\u0003Upp\vFINDREPLACE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000∂\u0002\u0000\u0000\u0000\u0000\u0000\u0000∂\u0002\u0000\u0000\u0001\u0000\u0000\u0000ø\u0002\u0000\u0000\u0001\u0000\u0000\nReplaceAll\vvoid (bool)!Upp::CodeEditor::ReplaceAll(bool)\u001Avoid ReplaceAll(bool rest)\u0003Upp\nREPLACEALL\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000¡\u0002\u0000\u0000\u0000\u0000\u0000\u0000¡\u0002\u0000\u0000\u0001\u0000\u0000\u0000ƒ\u0002\u0000\u0000\u0001\u0000\u0000\u000EInsertWildcard\rvoid (char *)&Upp::CodeEditor::InsertWildcard(char*)\u001Cvoid InsertWildcard(char *s)\u0003Upp\u000EINSERTWILDCARD\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000∆\u0002\u0000\u0000\u0000\u0000\u0000\u0000∆\u0002\u0000\u0000\u0001\u0000\u0000\u0000·\u0002\u0000\u0000\u0001\u0000\u0000\u0010FindWildcardMenu%void (int, Point, bool, Ctrl *, bool)0Upp::FindWildcardMenu(int,Point,bool,Ctrl*,bool)Lvoid FindWildcardMenu(int cb, Point p, bool tablf, Ctrl *owner, bool regexp)\u0003Upp\u0010FINDWILDCARDMENU\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000„\u0002\u0000\u0000\u0000\u0000\u0000\u0000„\u0002\u0000\u0000\u0001\u0000\u0000\u0000Ú\u0002\u0000\u0000\u0001\u0000\u0000\fFindWildcard\avoid ()\u001FUpp::CodeEditor::FindWildcard()\u0013void FindWildcard()\u0003Upp\fFINDWILDCARD\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000Ù\u0002\u0000\u0000\u0000\u0000\u0000\u0000Ù\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u001A\u0003\u0000\u0000\u0001\u0000\u0000\u000FReplaceWildcard\avoid ()\"Upp::CodeEditor::ReplaceWildcard()\u0016void ReplaceWildcard()\u0003Upp\u000FREPLACEWILDCARD\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u001C\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u001C\u0003\u0000\u0000\u0001\u0000\u0000\u0000\"\u0003\u0000\u0000\u0001\u0000\u0000\u0010CloseFindReplace\avoid ()#Upp::CodeEditor::CloseFindReplace()\u0017void CloseFindReplace()\u0003Upp\u0010CLOSEFINDREPLACE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000$\u0003\u0000\u0000\u0000\u0000\u0000\u0000$\u0003\u0000\u0000\u0001\u0000\u0000\u0000+\u0003\u0000\u0000\u0001\u0000\u0000\u0011EscapeFindReplace\avoid ()$Upp::CodeEditor::EscapeFindReplace()\u0018void EscapeFindReplace()\u0003Upp\u0011ESCAPEFINDREPLACE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000-\u0003\u0000\u0000\u0000\u0000\u0000\u0000-\u0003\u0000\u0000\u0001\u0000\u0000\u00008\u0003\u0000\u0000\u0001\u0000\u0000\u000FIncrementalFind\avoid ()\"Upp::CodeEditor::IncrementalFind()\u0016void IncrementalFind()\u0003Upp\u000FINCREMENTALFIND\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000:\u0003\u0000\u0000\u0000\u0000\u0000\u0000:\u0003\u0000\u0000\u0001\u0000\u0000\u0000=\u0003\u0000\u0000\u0001\u0000\u0000\u0006DoFind\avoid ()\u0019Upp::CodeEditor::DoFind()\rvoid DoFind()\u0003Upp\u0006DOFIND\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000?\u0003\u0000\u0000\u0000\u0000\u0000\u0000?\u0003\u0000\u0000\u0001\u0000\u0000\u0000B\u0003\u0000\u0000\u0001\u0000\u0000\nDoFindBack\avoid ()\u001DUpp::CodeEditor::DoFindBack()\u0011void DoFindBack()\u0003Upp\nDOFINDBACK\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000D\u0003\u0000\u0000\u0000\u0000\u0000\u0000D\u0003\u0000\u0000\u0001\u0000\u0000\u0000S\u0003\u0000\u0000\u0001\u0000\u0000\rSerializeFind\u000Fvoid (Stream &)'Upp::CodeEditor::SerializeFind(Stream&)\u001Dvoid SerializeFind(Stream& s)\u0003Upp\rSERIALIZEFIND\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000U\u0003\u0000\u0000\u0000\u0000\u0000\u0000U\u0003\u0000\u0000\u0001\u0000\u0000\u0000Z\u0003\u0000\u0000\u0001\u0000\u0000\bReadList%String (WithDropChoice<EditString> &)\u001EUpp::ReadList(WithDropChoice&).String ReadList(WithDropChoice<EditString>& e)\u0003Upp\bREADLIST\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000\\\u0003\u0000\u0000\u0000\u0000\u0000\u0000\\\u0003\u0000\u0000\u0001\u0000\u0000\u0000`\u0003\u0000\u0000\u0001\u0000\u0000\tWriteList-void (WithDropChoice<EditString> &, String &)'Upp::WriteList(WithDropChoice&,String&);void WriteList(WithDropChoice<EditString>& e, String& data)\u0003Upp\tWRITELIST\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000(\u0000\u0000\u0000b\u0003\u0000\u0000\u0000\u0000\u0000\u0000b\u0003\u0000\u0000\u0001\u0000\u0000\u0000o\u0003\u0000\u0000\u0001\u0000\u0000\u0012GetFindReplaceData\u001ECodeEditor::FindReplaceData ()%Upp::CodeEditor::GetFindReplaceData()0CodeEditor::FindReplaceData GetFindReplaceData()\u0003Upp\u0012GETFINDREPLACEDATA\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000q\u0003\u0000\u0000\u0000\u0000\u0000\u0000q\u0003\u0000\u0000\u0001\u0000\u0000\u0000}\u0003\u0000\u0000\u0001\u0000\u0000\u0012SetFindReplaceData\u0018void (FindReplaceData &)5Upp::CodeEditor::SetFindReplaceData(FindReplaceData&)+void SetFindReplaceData(FindReplaceData& r)\u0003Upp\u0012SETFINDREPLACEDATA\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u007F\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u007F\u0003\u0000\u0000\u0001\u0000\u0000\u0000ñ\u0003\u0000\u0000\u0001\u0000\u0000\fFindPrevNext\vvoid (bool)#Upp::CodeEditor::FindPrevNext(bool)\u001Cvoid FindPrevNext(bool prev)\u0003Upp\fFINDPREVNEXT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000ò\u0003\u0000\u0000\u0000\u0000\u0000\u0000ò\u0003\u0000\u0000\u0001\u0000\u0000\u0000õ\u0003\u0000\u0000\u0001\u0000\u0000\bFindNext\avoid ()\u001BUpp::CodeEditor::FindNext()\u000Fvoid FindNext()\u0003Upp\bFINDNEXT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000ù\u0003\u0000\u0000\u0000\u0000\u0000\u0000ù\u0003\u0000\u0000\u0001\u0000\u0000\u0000†\u0003\u0000\u0000\u0001\u0000\u0000\bFindPrev\avoid ()\u001BUpp::CodeEditor::FindPrev()\u000Fvoid FindPrev()\u0003Upp\bFINDPREV\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000¢\u0003\u0000\u0000\u0000\u0000\u0000\u0000¢\u0003\u0000\u0000\u0001\u0000\u0000\u0000®\u0003\u0000\u0000\u0001\u0000\u0000\u0013StartSearchProgress\u0013void (int64, int64)1Upp::CodeEditor::StartSearchProgress(int64,int64)&void StartSearchProgress(int64, int64)\u0003Upp\u0013STARTSEARCHPROGRESS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000™\u0003\u0000\u0000\u0000\u0000\u0000\u0000™\u0003\u0000\u0000\u0001\u0000\u0000\u0000µ\u0003\u0000\u0000\u0001\u0000\u0000\u000ESearchProgress\nbool (int)$Upp::CodeEditor::SearchProgress(int)\u001Dbool SearchProgress(int line)\u0003Upp\u000ESEARCHPROGRESS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000∑\u0003\u0000\u0000\u0000\u0000\u0000\u0000∑\u0003\u0000\u0000\u0001\u0000\u0000\u0000∫\u0003\u0000\u0000\u0001\u0000\u0000\u000ESearchCanceled\abool ()!Upp::CodeEditor::SearchCanceled()\u0015bool SearchCanceled()\u0003Upp\u000ESEARCHCANCELED\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000º\u0003\u0000\u0000\u0000\u0000\u0000\u0000º\u0003\u0000\u0000\u0001\u0000\u0000\u0000¿\u0003\u0000\u0000\u0001\u0000\u0000\u0011EndSearchProgress\avoid ()$Upp::CodeEditor::EndSearchProgress()\u0018void EndSearchProgress()\u0003Upp\u0011ENDSEARCHPROGRESS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000end\u0000g \u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Lang.cpp","value":"data\u0006\b\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000&\u0000\u0000\u0000\u0001\u0000\u0000\fGetLineIdent\u0018Array<IdentPos> (char *)\u0018Upp::GetLineIdent(char*)(Array<IdentPos> GetLineIdent(char *line)\u0003Upp\fGETLINEIDENT\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u000E\u0000\u0000\u0000(\u0000\u0000\u0000\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0001\u0000\u0000\u0000M\u0000\u0000\u0000\u0001\u0000\u0000\rGetLineString'Vector<Point> (wchar *, bool &, bool &)&Upp::GetLineString(wchar*,bool&,bool&)GVector<Point> GetLineString(wchar *wline, bool& is_begin, bool& is_end)\u0003Upp\rGETLINESTRING\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000O\u0000\u0000\u0000\u0000\u0000\u0000\u0000O\u0000\u0000\u0000\u0001\u0000\u0000\u0000o\u0000\u0000\u0000\u0001\u0000\u0000\u000EGetStringRange\u001Ebool (int64, int64 &, int64 &)4Upp::CodeEditor::GetStringRange(int64,int64&,int64&)5bool GetStringRange(int64 cursor, int64& b, int64& e)\u0003Upp\u000EGETSTRINGRANGE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000q\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000\u0000\u0000\u0001\u0000\u0000\u0000ù\u0000\u0000\u0000\u0001\u0000\u0000\nFindString\vbool (bool)!Upp::CodeEditor::FindString(bool)\u001Abool FindString(bool back)\u0003Upp\nFINDSTRING\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000ü\u0000\u0000\u0000\u0000\u0000\u0000\u0000ü\u0000\u0000\u0000\u0001\u0000\u0000\u0000Õ\u0000\u0000\u0000\u0001\u0000\u0000\u000EFindLangString\vbool (bool)%Upp::CodeEditor::FindLangString(bool)\u001Ebool FindLangString(bool back)\u0003Upp\u000EFINDLANGSTRING\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000end\u0000–\u0003\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CodeEditor.lay","value":"data,\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u001BIDEFindReplaceLayout__layid Upp::IDEFindReplaceLayout__layid Upp::IDEFindReplaceLayout__layid\u001BIDEFindReplaceLayout__layid\u0003Upp\u001BIDEFINDREPLACELAYOUT__LAYID Upp::IDEFindReplaceLayout__layid UPP::IDEFINDREPLACELAYOUT__LAYID\u0000\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001ESetLayout_IDEFindReplaceLayout\u0016void (T &, bool, bool)1Upp::SetLayout_IDEFindReplaceLayout(T&,bool,bool)ftemplate <class T> void SetLayout_IDEFindReplaceLayout(T& parent, bool add = false, bool show = false)\u0003Upp\u001ESETLAYOUT_IDEFINDREPLACELAYOUT\u0003Upp\u0003UPP\u0000\u0000\u001F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0001\u0000\u0000\u0018WithIDEFindReplaceLayout\u0000\u001DUpp::WithIDEFindReplaceLayoutZtemplate <class T> WithIDEFindReplaceLayout : public T, public IDEFindReplaceLayout__layid\u0003Upp\u0018WITHIDEFINDREPLACELAYOUT\u001DUpp::WithIDEFindReplaceLayout\u001DUPP::WITHIDEFINDREPLACELAYOUT Upp::IDEFindReplaceLayout__layid\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\rGetLayoutSize\fUpp::Size ().Upp::WithIDEFindReplaceLayout::GetLayoutSize() static Upp::Size GetLayoutSize()\u0003Upp\rGETLAYOUTSIZE\u001DUpp::WithIDEFindReplaceLayout\u001DUPP::WITHIDEFINDREPLACELAYOUT\u0000\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\nInitLayout;void (Upp::Ctrl &, L &, D &, IDEFindReplaceLayout__layid &)>Upp::InitLayout(Upp::Ctrl&,L&,D&,IDEFindReplaceLayout__layid&)otemplate <class L, class D> void InitLayout(Upp::Ctrl& parent, L& layout, D& uts, IDEFindReplaceLayout__layid&)\u0003Upp\nINITLAYOUT\u0003Upp\u0003UPP\u0000\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001ESetLayout_IDEFindReplaceLayout\u001Bvoid (T &, D &, bool, bool)4Upp::SetLayout_IDEFindReplaceLayout(T&,D&,bool,bool)xtemplate <class T, class D> void SetLayout_IDEFindReplaceLayout(T& ctrl, D& parent, bool add = false, bool show = false)\u0003Upp\u001ESETLAYOUT_IDEFINDREPLACELAYOUT\u0003Upp\u0003UPP\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0004find$Upp::WithDropChoice<Upp::EditString>#Upp::WithIDEFindReplaceLayout::find)Upp::WithDropChoice<Upp::EditString> find\u0003Upp\u0004FIND\u001DUpp::WithIDEFindReplaceLayout\u001DUPP::WITHIDEFINDREPLACELAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0004prev\vUpp::Button#Upp::WithIDEFindReplaceLayout::prev\u0010Upp::Button prev\u0003Upp\u0004PREV\u001DUpp::WithIDEFindReplaceLayout\u001DUPP::WITHIDEFINDREPLACELAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0001\u0000\u0000\u0004next\vUpp::Button#Upp::WithIDEFindReplaceLayout::next\u0010Upp::Button next\u0003Upp\u0004NEXT\u001DUpp::WithIDEFindReplaceLayout\u001DUPP::WITHIDEFINDREPLACELAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\twholeword\vUpp::Option(Upp::WithIDEFindReplaceLayout::wholeword\u0015Upp::Option wholeword\u0003Upp\tWHOLEWORD\u001DUpp::WithIDEFindReplaceLayout\u001DUPP::WITHIDEFINDREPLACELAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0001\u0000\u0000\twildcards\vUpp::Option(Upp::WithIDEFindReplaceLayout::wildcards\u0015Upp::Option wildcards\u0003Upp\tWILDCARDS\u001DUpp::WithIDEFindReplaceLayout\u001DUPP::WITHIDEFINDREPLACELAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\nignorecase\vUpp::Option)Upp::WithIDEFindReplaceLayout::ignorecase\u0016Upp::Option ignorecase\u0003Upp\nIGNORECASE\u001DUpp::WithIDEFindReplaceLayout\u001DUPP::WITHIDEFINDREPLACELAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0006regexp\vUpp::Option%Upp::WithIDEFindReplaceLayout::regexp\u0012Upp::Option regexp\u0003Upp\u0006REGEXP\u001DUpp::WithIDEFindReplaceLayout\u001DUPP::WITHIDEFINDREPLACELAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\vincremental\vUpp::Option*Upp::WithIDEFindReplaceLayout::incremental\u0017Upp::Option incremental\u0003Upp\vINCREMENTAL\u001DUpp::WithIDEFindReplaceLayout\u001DUPP::WITHIDEFINDREPLACELAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\t\u0000\u0000\u0000\u0001\u0000\u0000\u0000\t\u0000\u0000\u0000\u0001\u0000\u0000\u0000\t\u0000\u0000\u0000\u0001\u0000\u0000\u0017incremental_from_cursor\vUpp::Option6Upp::WithIDEFindReplaceLayout::incremental_from_cursor#Upp::Option incremental_from_cursor\u0003Upp\u0017INCREMENTAL_FROM_CURSOR\u001DUpp::WithIDEFindReplaceLayout\u001DUPP::WITHIDEFINDREPLACELAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0000\u0000\u0005close\vUpp::Button$Upp::WithIDEFindReplaceLayout::close\u0011Upp::Button close\u0003Upp\u0005CLOSE\u001DUpp::WithIDEFindReplaceLayout\u001DUPP::WITHIDEFINDREPLACELAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\v\u0000\u0000\u0000\u0001\u0000\u0000\u0000\v\u0000\u0000\u0000\u0001\u0000\u0000\u0000\v\u0000\u0000\u0000\u0001\u0000\u0000\areplace$Upp::WithDropChoice<Upp::EditString>&Upp::WithIDEFindReplaceLayout::replace,Upp::WithDropChoice<Upp::EditString> replace\u0003Upp\aREPLACE\u001DUpp::WithIDEFindReplaceLayout\u001DUPP::WITHIDEFINDREPLACELAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\f\u0000\u0000\u0000\u0001\u0000\u0000\u0000\f\u0000\u0000\u0000\u0001\u0000\u0000\u0000\f\u0000\u0000\u0000\u0001\u0000\u0000\u0005amend\vUpp::Button$Upp::WithIDEFindReplaceLayout::amend\u0011Upp::Button amend\u0003Upp\u0005AMEND\u001DUpp::WithIDEFindReplaceLayout\u001DUPP::WITHIDEFINDREPLACELAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\tamend_all\vUpp::Button(Upp::WithIDEFindReplaceLayout::amend_all\u0015Upp::Button amend_all\u0003Upp\tAMEND_ALL\u001DUpp::WithIDEFindReplaceLayout\u001DUPP::WITHIDEFINDREPLACELAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0001\u0000\u0000\bfind_all\vUpp::Button'Upp::WithIDEFindReplaceLayout::find_all\u0014Upp::Button find_all\u0003Upp\bFIND_ALL\u001DUpp::WithIDEFindReplaceLayout\u001DUPP::WITHIDEFINDREPLACELAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\namend_rest\vUpp::Button)Upp::WithIDEFindReplaceLayout::amend_rest\u0016Upp::Button amend_rest\u0003Upp\nAMEND_REST\u001DUpp::WithIDEFindReplaceLayout\u001DUPP::WITHIDEFINDREPLACELAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\bsamecase\vUpp::Option'Upp::WithIDEFindReplaceLayout::samecase\u0014Upp::Option samecase\u0003Upp\bSAMECASE\u001DUpp::WithIDEFindReplaceLayout\u001DUPP::WITHIDEFINDREPLACELAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0004mode\vUpp::Switch#Upp::WithIDEFindReplaceLayout::mode\u0010Upp::Switch mode\u0003Upp\u0004MODE\u001DUpp::WithIDEFindReplaceLayout\u001DUPP::WITHIDEFINDREPLACELAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0000\bfind_lbl\nUpp::Label'Upp::WithIDEFindReplaceLayout::find_lbl\u0013Upp::Label find_lbl\u0003Upp\bFIND_LBL\u001DUpp::WithIDEFindReplaceLayout\u001DUPP::WITHIDEFINDREPLACELAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0000\u0000\vreplace_lbl\nUpp::Label*Upp::WithIDEFindReplaceLayout::replace_lbl\u0016Upp::Label replace_lbl\u0003Upp\vREPLACE_LBL\u001DUpp::WithIDEFindReplaceLayout\u001DUPP::WITHIDEFINDREPLACELAYOUT\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0000\u0000\u0000$\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0001\rGetLayoutSize\fUpp::Size (),Upp::WithBlockReplaceLayout::GetLayoutSize() static Upp::Size GetLayoutSize()\u0003Upp\rGETLAYOUTSIZE\u001BUpp::WithBlockReplaceLayout\u001BUPP::WITHBLOCKREPLACELAYOUT\u0000\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0000\u0000\u0000$\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0000\nInitLayout9void (Upp::Ctrl &, L &, D &, BlockReplaceLayout__layid &)<Upp::InitLayout(Upp::Ctrl&,L&,D&,BlockReplaceLayout__layid&)mtemplate <class L, class D> void InitLayout(Upp::Ctrl& parent, L& layout, D& uts, BlockReplaceLayout__layid&)\u0003Upp\nINITLAYOUT\u0003Upp\u0003UPP\u0000\u0000\u001F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0000\u0000\u0000\n\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\u0016WithBlockReplaceLayout\u0000\u001BUpp::WithBlockReplaceLayoutVtemplate <class T> WithBlockReplaceLayout : public T, public BlockReplaceLayout__layid\u0003Upp\u0016WITHBLOCKREPLACELAYOUT\u001BUpp::WithBlockReplaceLayout\u001BUPP::WITHBLOCKREPLACELAYOUT\u001EUpp::BlockReplaceLayout__layid\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0000\u0000\u0000$\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u001CSetLayout_BlockReplaceLayout\u0016void (T &, bool, bool)/Upp::SetLayout_BlockReplaceLayout(T&,bool,bool)dtemplate <class T> void SetLayout_BlockReplaceLayout(T& parent, bool add = false, bool show = false)\u0003Upp\u001CSETLAYOUT_BLOCKREPLACELAYOUT\u0003Upp\u0003UPP\u0000\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0000\u0000\u0000$\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u001CSetLayout_BlockReplaceLayout\u001Bvoid (T &, D &, bool, bool)2Upp::SetLayout_BlockReplaceLayout(T&,D&,bool,bool)vtemplate <class T, class D> void SetLayout_BlockReplaceLayout(T& ctrl, D& parent, bool add = false, bool show = false)\u0003Upp\u001CSETLAYOUT_BLOCKREPLACELAYOUT\u0003Upp\u0003UPP\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0000\u0000\u0000$\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0000\u0019BlockReplaceLayout__layid\u001EUpp::BlockReplaceLayout__layid\u001EUpp::BlockReplaceLayout__layid\u0019BlockReplaceLayout__layid\u0003Upp\u0019BLOCKREPLACELAYOUT__LAYID\u001EUpp::BlockReplaceLayout__layid\u001EUPP::BLOCKREPLACELAYOUT__LAYID\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0004find$Upp::WithDropChoice<Upp::EditString>!Upp::WithBlockReplaceLayout::find)Upp::WithDropChoice<Upp::EditString> find\u0003Upp\u0004FIND\u001BUpp::WithBlockReplaceLayout\u001BUPP::WITHBLOCKREPLACELAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\areplace$Upp::WithDropChoice<Upp::EditString>$Upp::WithBlockReplaceLayout::replace,Upp::WithDropChoice<Upp::EditString> replace\u0003Upp\aREPLACE\u001BUpp::WithBlockReplaceLayout\u001BUPP::WITHBLOCKREPLACELAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0000\twholeword\vUpp::Option&Upp::WithBlockReplaceLayout::wholeword\u0015Upp::Option wholeword\u0003Upp\tWHOLEWORD\u001BUpp::WithBlockReplaceLayout\u001BUPP::WITHBLOCKREPLACELAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\twildcards\vUpp::Option&Upp::WithBlockReplaceLayout::wildcards\u0015Upp::Option wildcards\u0003Upp\tWILDCARDS\u001BUpp::WithBlockReplaceLayout\u001BUPP::WITHBLOCKREPLACELAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0001\u0000\u0000\nignorecase\vUpp::Option'Upp::WithBlockReplaceLayout::ignorecase\u0016Upp::Option ignorecase\u0003Upp\nIGNORECASE\u001BUpp::WithBlockReplaceLayout\u001BUPP::WITHBLOCKREPLACELAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0001\u0000\u0000\bsamecase\vUpp::Option%Upp::WithBlockReplaceLayout::samecase\u0014Upp::Option samecase\u0003Upp\bSAMECASE\u001BUpp::WithBlockReplaceLayout\u001BUPP::WITHBLOCKREPLACELAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0000\u0000\u0006regexp\vUpp::Option#Upp::WithBlockReplaceLayout::regexp\u0012Upp::Option regexp\u0003Upp\u0006REGEXP\u001BUpp::WithBlockReplaceLayout\u001BUPP::WITHBLOCKREPLACELAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0000\u0004next\vUpp::Button!Upp::WithBlockReplaceLayout::next\u0010Upp::Button next\u0003Upp\u0004NEXT\u001BUpp::WithBlockReplaceLayout\u001BUPP::WITHBLOCKREPLACELAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0001\u0000\u0000\u0005close\vUpp::Button\"Upp::WithBlockReplaceLayout::close\u0011Upp::Button close\u0003Upp\u0005CLOSE\u001BUpp::WithBlockReplaceLayout\u001BUPP::WITHBLOCKREPLACELAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\u0004mode\vUpp::Switch!Upp::WithBlockReplaceLayout::mode\u0010Upp::Switch mode\u0003Upp\u0004MODE\u001BUpp::WithBlockReplaceLayout\u001BUPP::WITHBLOCKREPLACELAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000!\u0000\u0000\u0000\u0001\u0000\u0000\u0000!\u0000\u0000\u0000\u0001\u0000\u0000\u0000!\u0000\u0000\u0000\u0001\u0000\u0000\bfind_lbl\nUpp::Label%Upp::WithBlockReplaceLayout::find_lbl\u0013Upp::Label find_lbl\u0003Upp\bFIND_LBL\u001BUpp::WithBlockReplaceLayout\u001BUPP::WITHBLOCKREPLACELAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\"\u0000\u0000\u0000\u0001\u0000\u0000\u0000\"\u0000\u0000\u0000\u0001\u0000\u0000\u0000\"\u0000\u0000\u0000\u0001\u0000\u0000\vreplace_lbl\nUpp::Label(Upp::WithBlockReplaceLayout::replace_lbl\u0016Upp::Label replace_lbl\u0003Upp\vREPLACE_LBL\u001BUpp::WithBlockReplaceLayout\u001BUPP::WITHBLOCKREPLACELAYOUT\u0000\u0000end\u0000Ô#\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CodeEditor.iml","value":"data\u0019\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0001\aHdrSep0\rUpp::Image ()\u001DUpp::CodeEditorImg::HdrSep0()\u001Bstatic Upp::Image HdrSep0()\u0003Upp\aHDRSEP0\u0012Upp::CodeEditorImg\u0012UPP::CODEEDITORIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0001\u0000\u0001\fHdrSep0__UHD\rUpp::Image ()\"Upp::CodeEditorImg::HdrSep0__UHD() static Upp::Image HdrSep0__UHD()\u0003Upp\fHDRSEP0__UHD\u0012Upp::CodeEditorImg\u0012UPP::CODEEDITORIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0001\u0000\u0001\u0006HdrSep\rUpp::Image ()\u001CUpp::CodeEditorImg::HdrSep()\u001Astatic Upp::Image HdrSep()\u0003Upp\u0006HDRSEP\u0012Upp::CodeEditorImg\u0012UPP::CODEEDITORIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0001\vHdrSep__UHD\rUpp::Image ()!Upp::CodeEditorImg::HdrSep__UHD()\u001Fstatic Upp::Image HdrSep__UHD()\u0003Upp\vHDRSEP__UHD\u0012Upp::CodeEditorImg\u0012UPP::CODEEDITORIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0001\u0000\u0001\u0006Cancel\rUpp::Image ()\u001CUpp::CodeEditorImg::Cancel()\u001Astatic Upp::Image Cancel()\u0003Upp\u0006CANCEL\u0012Upp::CodeEditorImg\u0012UPP::CODEEDITORIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0001\vCancel__UHD\rUpp::Image ()!Upp::CodeEditorImg::Cancel__UHD()\u001Fstatic Upp::Image Cancel__UHD()\u0003Upp\vCANCEL__UHD\u0012Upp::CodeEditorImg\u0012UPP::CODEEDITORIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0015\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0001\vReplaceRest\rUpp::Image ()!Upp::CodeEditorImg::ReplaceRest()\u001Fstatic Upp::Image ReplaceRest()\u0003Upp\vREPLACEREST\u0012Upp::CodeEditorImg\u0012UPP::CODEEDITORIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u001A\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0001\u0010ReplaceRest__UHD\rUpp::Image ()&Upp::CodeEditorImg::ReplaceRest__UHD()$static Upp::Image ReplaceRest__UHD()\u0003Upp\u0010REPLACEREST__UHD\u0012Upp::CodeEditorImg\u0012UPP::CODEEDITORIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0011\u0000\u0000\u0000\t\u0000\u0000\u0000\u0001\u0000\u0001\aFindAll\rUpp::Image ()\u001DUpp::CodeEditorImg::FindAll()\u001Bstatic Upp::Image FindAll()\u0003Upp\aFINDALL\u0012Upp::CodeEditorImg\u0012UPP::CODEEDITORIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n\u0000\u0000\u0000\u0016\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0000\u0001\fFindAll__UHD\rUpp::Image ()\"Upp::CodeEditorImg::FindAll__UHD() static Upp::Image FindAll__UHD()\u0003Upp\fFINDALL__UHD\u0012Upp::CodeEditorImg\u0012UPP::CODEEDITORIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\v\u0000\u0000\u0000\u0000\u0000\u0000\u0000\v\u0000\u0000\u0000\u0014\u0000\u0000\u0000\v\u0000\u0000\u0000\u0001\u0000\u0001\nReplaceAll\rUpp::Image () Upp::CodeEditorImg::ReplaceAll()\u001Estatic Upp::Image ReplaceAll()\u0003Upp\nREPLACEALL\u0012Upp::CodeEditorImg\u0012UPP::CODEEDITORIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0019\u0000\u0000\u0000\f\u0000\u0000\u0000\u0001\u0000\u0001\u000FReplaceAll__UHD\rUpp::Image ()%Upp::CodeEditorImg::ReplaceAll__UHD()#static Upp::Image ReplaceAll__UHD()\u0003Upp\u000FREPLACEALL__UHD\u0012Upp::CodeEditorImg\u0012UPP::CODEEDITORIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0011\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0001\aReplace\rUpp::Image ()\u001DUpp::CodeEditorImg::Replace()\u001Bstatic Upp::Image Replace()\u0003Upp\aREPLACE\u0012Upp::CodeEditorImg\u0012UPP::CODEEDITORIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0001\u0000\u0001\fReplace__UHD\rUpp::Image ()\"Upp::CodeEditorImg::Replace__UHD() static Upp::Image Replace__UHD()\u0003Upp\fREPLACE__UHD\u0012Upp::CodeEditorImg\u0012UPP::CODEEDITORIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0001\nBreakpoint\rUpp::Image () Upp::CodeEditorImg::Breakpoint()\u001Estatic Upp::Image Breakpoint()\u0003Upp\nBREAKPOINT\u0012Upp::CodeEditorImg\u0012UPP::CODEEDITORIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0001\u000FBreakpoint__UHD\rUpp::Image ()%Upp::CodeEditorImg::Breakpoint__UHD()#static Upp::Image Breakpoint__UHD()\u0003Upp\u000FBREAKPOINT__UHD\u0012Upp::CodeEditorImg\u0012UPP::CODEEDITORIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0001\u0010Breakpoint__DARK\rUpp::Image ()&Upp::CodeEditorImg::Breakpoint__DARK()$static Upp::Image Breakpoint__DARK()\u0003Upp\u0010BREAKPOINT__DARK\u0012Upp::CodeEditorImg\u0012UPP::CODEEDITORIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0001\u0011InvalidBreakpoint\rUpp::Image ()'Upp::CodeEditorImg::InvalidBreakpoint()%static Upp::Image InvalidBreakpoint()\u0003Upp\u0011INVALIDBREAKPOINT\u0012Upp::CodeEditorImg\u0012UPP::CODEEDITORIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0013\u0000\u0000\u0000 \u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0000\u0001\u0016InvalidBreakpoint__UHD\rUpp::Image (),Upp::CodeEditorImg::InvalidBreakpoint__UHD()*static Upp::Image InvalidBreakpoint__UHD()\u0003Upp\u0016INVALIDBREAKPOINT__UHD\u0012Upp::CodeEditorImg\u0012UPP::CODEEDITORIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000!\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0001\u0000\u0001\u0017InvalidBreakpoint__DARK\rUpp::Image ()-Upp::CodeEditorImg::InvalidBreakpoint__DARK()+static Upp::Image InvalidBreakpoint__DARK()\u0003Upp\u0017INVALIDBREAKPOINT__DARK\u0012Upp::CodeEditorImg\u0012UPP::CODEEDITORIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0001\u0000\u0001\u000ECondBreakpoint\rUpp::Image ()$Upp::CodeEditorImg::CondBreakpoint()\"static Upp::Image CondBreakpoint()\u0003Upp\u000ECONDBREAKPOINT\u0012Upp::CodeEditorImg\u0012UPP::CODEEDITORIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0000\u0000\u0000\v\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0001\u0001I\rUpp::Image ()\u0017Upp::CodeEditorImg::I()\u0015static Upp::Image I()\u0003Upp\u0001I\u0012Upp::CodeEditorImg\u0012UPP::CODEEDITORIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0000\u0000\u0000\r\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0001\u0003dot\rUpp::Image ()\u0019Upp::CodeEditorImg::dot()\u0017static Upp::Image dot()\u0003Upp\u0003DOT\u0012Upp::CodeEditorImg\u0012UPP::CODEEDITORIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0001\bdot__UHD\rUpp::Image ()\u001EUpp::CodeEditorImg::dot__UHD()\u001Cstatic Upp::Image dot__UHD()\u0003Upp\bDOT__UHD\u0012Upp::CodeEditorImg\u0012UPP::CODEEDITORIMG\u0000\u0000end\u0000Ò\u0010\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CodeEditor.cpp","value":"datafı\u0001\u0000\u0000\b\u0000\u0000\u0000\u0004\u0000\u0000\u0000\b\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0004LLOG\u0000\u0004LLOG\u0004LLOG\u0000\u0004LLOG\u0000\u0000\u0000\u0000ı\u0001\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\aLTIMING\u0000\aLTIMING\aLTIMING\u0000\aLTIMING\u0000\u0000\u0000\u0000ı\u0001\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000\u001A\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\vIMAGEVECTOR\u0000\vIMAGEVECTOR\vIMAGEVECTOR\u0000\vIMAGEVECTOR\u0000\u0000\u0000\u0000ı\u0001\u0000\u0000\b\u0000\u0000\u0000\b\u0000\u0000\u0000\b\u0000\u0000\u0000\b\u0000\u0000\u0000!\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\nIMAGECLASS\u0000\nIMAGECLASS\nIMAGECLASS\u0000\nIMAGECLASS\u0000\u0000\u0000\u0000ı\u0001\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000\u0000/\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\tIMAGEFILE\u0000\tIMAGEFILE\tIMAGEFILE\u0000\tIMAGEFILE\u0000\u0000\u0000\u0000ı\u0001\u0000\u0000\t\u0000\u0000\u0000\f\u0000\u0000\u0000\t\u0000\u0000\u0000\f\u0000\u0000\u0000(\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0005TFILE\u0000\u0005TFILE\u0005TFILE\u0000\u0005TFILE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0000\u0000\u0000\u0015RegisterSyntaxModules\avoid ()\u001CUpp::RegisterSyntaxModules()\u001Cvoid RegisterSyntaxModules()\u0003Upp\u0015REGISTERSYNTAXMODULES\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0000\u0000\u0000\t\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0000\u0000\u0001\rs__sF16_18_fn\avoid ()\u0014Upp::s__sF16_18_fn()\u001Bstatic void s__sF16_18_fn()\u0003Upp\rS__SF16_18_FN\u0003Upp\u0003UPP\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0000\u0000\u0000\t\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0001\ns__sF16_18\rUpp::Callinit\u000FUpp::s__sF16_18qstatic Upp::Callinit s__sF16_18(s__sF16_18_fn, \"C:\\\\Users\\\\sblo\\\\ai-upp\\\\uppsrc\\\\CodeEditor\\\\CodeEditor.cpp\", 18)\u0003Upp\nS__SF16_18\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0000\u0001\rs__sF16_18_fn\avoid ()\u0014Upp::s__sF16_18_fn()\u001Bstatic void s__sF16_18_fn()\u0003Upp\rS__SF16_18_FN\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0001\u0000\u0000\u00006\u0000\u0000\u0000\u0001\u0000\u0000\tGetSyntax\u0017One<EditorSyntax> (int)\u001FUpp::CodeEditor::GetSyntax(int)%One<EditorSyntax> GetSyntax(int line)\u0003Upp\tGETSYNTAX\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u00008\u0000\u0000\u0000\u0000\u0000\u0000\u00008\u0000\u0000\u0000\u0001\u0000\u0000\u0000E\u0000\u0000\u0000\u0001\u0000\u0000\tHighlight\u000Fvoid (String &)#Upp::CodeEditor::Highlight(String&)\u0019void Highlight(String& h)\u0003Upp\tHIGHLIGHT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000G\u0000\u0000\u0000\u0000\u0000\u0000\u0000G\u0000\u0000\u0000\u0001\u0000\u0000\u0000f\u0000\u0000\u0000\u0001\u0001\u0000\rHighlightLine0void (int, Vector<LineEdit::Highlight> &, int64)1Upp::CodeEditor::HighlightLine(int,Vector&,int64)Hvoid HighlightLine(int line, Vector<LineEdit::Highlight>& hl, int64 pos)\u0003Upp\rHIGHLIGHTLINE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000h\u0000\u0000\u0000\u0000\u0000\u0000\u0000h\u0000\u0000\u0000\u0001\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0001\u0000\u0005Paint\rvoid (Draw &)\u001DUpp::CodeEditor::Paint(Draw&)\u0013void Paint(Draw& w)\u0003Upp\u0005PAINT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000Ã\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ã\u0000\u0000\u0000\u0001\u0000\u0000\u0000–\u0000\u0000\u0000\u0001\u0000\u0000\u0010RefreshBlkHeader\avoid ()#Upp::CodeEditor::RefreshBlkHeader()\u0017void RefreshBlkHeader()\u0003Upp\u0010REFRESHBLKHEADER\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000“\u0000\u0000\u0000\u0000\u0000\u0000\u0000“\u0000\u0000\u0000\u0001\u0000\u0000\u0000’\u0000\u0000\u0000\u0001\u0001\u0000\fNewScrollPos\avoid ()\u001FUpp::CodeEditor::NewScrollPos()\u0013void NewScrollPos()\u0003Upp\fNEWSCROLLPOS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000◊\u0000\u0000\u0000\u0000\u0000\u0000\u0000◊\u0000\u0000\u0000\u0001\u0000\u0000\u0000ﬁ\u0000\u0000\u0000\u0001\u0001\u0000\tDirtyFrom\nvoid (int)\u001FUpp::CodeEditor::DirtyFrom(int)\u0018void DirtyFrom(int line)\u0003Upp\tDIRTYFROM\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u0000‡\u0000\u0000\u0000\u0000\u0000\u0000\u0000‡\u0000\u0000\u0000\u0001\u0000\u0000\u0000‚\u0000\u0000\u0000\u0001\u0000\u0000\tIsComment\u000Fbool (int, int)\u0017Upp::IsComment(int,int)\u001Cbool IsComment(int a, int b)\u0003Upp\tISCOMMENT\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u0000‰\u0000\u0000\u0000\u0000\u0000\u0000\u0000‰\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ê\u0000\u0000\u0000\u0001\u0000\u0000\u0003RBR\nbool (int)\rUpp::RBR(int)\u000Fbool RBR(int c)\u0003Upp\u0003RBR\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000Ë\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ë\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ï\u0000\u0000\u0000\u0001\u0000\u0000\u000EGetRefreshInfo\fString (int)$Upp::CodeEditor::GetRefreshInfo(int)\u001EString GetRefreshInfo(int pos)\u0003Upp\u000EGETREFRESHINFO\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000Ó\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ó\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ò\u0000\u0000\u0000\u0001\u0000\u0000\u0012CheckSyntaxRefresh\u0017void (int64, WString &)3Upp::CodeEditor::CheckSyntaxRefresh(int64,WString&)1void CheckSyntaxRefresh(int64 pos, WString& text)\u0003Upp\u0012CHECKSYNTAXREFRESH\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000Û\u0000\u0000\u0000\u0000\u0000\u0000\u0000Û\u0000\u0000\u0000\u0001\u0000\u0000\u0000ˆ\u0000\u0000\u0000\u0001\u0001\u0000\tPreInsert\u0015void (int, WString &)(Upp::CodeEditor::PreInsert(int,WString&)&void PreInsert(int pos, WString& text)\u0003Upp\tPREINSERT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000¯\u0000\u0000\u0000\u0000\u0000\u0000\u0000¯\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0001\u0001\u0000\nPostInsert\u0015void (int, WString &))Upp::CodeEditor::PostInsert(int,WString&)'void PostInsert(int pos, WString& text)\u0003Upp\nPOSTINSERT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0001\u0001\u0000\tPreRemove\u000Fvoid (int, int)#Upp::CodeEditor::PreRemove(int,int)!void PreRemove(int pos, int size)\u0003Upp\tPREREMOVE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u001D\u0001\u0000\u0000\u0001\u0001\u0000\nPostRemove\u000Fvoid (int, int)$Upp::CodeEditor::PostRemove(int,int)\"void PostRemove(int pos, int size)\u0003Upp\nPOSTREMOVE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u001F\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u001F\u0001\u0000\u0000\u0001\u0000\u0000\u0000\"\u0001\u0000\u0000\u0001\u0001\u0000\nClearLines\avoid ()\u001DUpp::CodeEditor::ClearLines()\u0011void ClearLines()\u0003Upp\nCLEARLINES\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000$\u0001\u0000\u0000\u0000\u0000\u0000\u0000$\u0001\u0000\u0000\u0001\u0000\u0000\u0000+\u0001\u0000\u0000\u0001\u0001\u0000\vInsertLines\u000Fvoid (int, int)%Upp::CodeEditor::InsertLines(int,int)%void InsertLines(int line, int count)\u0003Upp\vINSERTLINES\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000\u0000\u0000-\u0001\u0000\u0000\u0001\u0000\u0000\u00002\u0001\u0000\u0000\u0001\u0001\u0000\vRemoveLines\u000Fvoid (int, int)%Upp::CodeEditor::RemoveLines(int,int)%void RemoveLines(int line, int count)\u0003Upp\vREMOVELINES\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u00004\u0001\u0000\u0000\u0000\u0000\u0000\u00004\u0001\u0000\u0000\u0001\u0000\u0000\u0000;\u0001\u0000\u0000\u0001\u0000\u0000\tRenumber2\avoid ()\u001CUpp::CodeEditor::Renumber2()\u0010void Renumber2()\u0003Upp\tRENUMBER2\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000=\u0001\u0000\u0000\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0001\u0000\u0000\u0000@\u0001\u0000\u0000\u0001\u0000\u0000\bGetLine2\tint (int)\u001EUpp::CodeEditor::GetLine2(int)\u0013int GetLine2(int i)\u0003Upp\bGETLINE2\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000B\u0001\u0000\u0000\u0000\u0000\u0000\u0000B\u0001\u0000\u0000\u0001\u0000\u0000\u0000G\u0001\u0000\u0000\u0001\u0001\u0000\fGetPasteText\tString ()\u001FUpp::CodeEditor::GetPasteText()\u0015String GetPasteText()\u0003Upp\fGETPASTETEXT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000I\u0001\u0000\u0000\u0000\u0000\u0000\u0000I\u0001\u0000\u0000\u0001\u0000\u0000\u0000L\u0001\u0000\u0000\u0001\u0000\u0000\u000FIsCursorBracket\fbool (int64)'Upp::CodeEditor::IsCursorBracket(int64)\u001Fbool IsCursorBracket(int64 pos)\u0003Upp\u000FISCURSORBRACKET\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000N\u0001\u0000\u0000\u0000\u0000\u0000\u0000N\u0001\u0000\u0000\u0001\u0000\u0000\u0000Q\u0001\u0000\u0000\u0001\u0000\u0000\u0011IsMatchingBracket\fbool (int64))Upp::CodeEditor::IsMatchingBracket(int64)!bool IsMatchingBracket(int64 pos)\u0003Upp\u0011ISMATCHINGBRACKET\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000S\u0001\u0000\u0000\u0000\u0000\u0000\u0000S\u0001\u0000\u0000\u0001\u0000\u0000\u0000_\u0001\u0000\u0000\u0001\u0000\u0000\rCheckBrackets\avoid () Upp::CodeEditor::CheckBrackets()\u0014void CheckBrackets()\u0003Upp\rCHECKBRACKETS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000a\u0001\u0000\u0000\u0000\u0000\u0000\u0000a\u0001\u0000\u0000\u0001\u0000\u0000\u0000m\u0001\u0000\u0000\u0001\u0000\u0000\bCopyWord\avoid ()\u001BUpp::CodeEditor::CopyWord()\u000Fvoid CopyWord()\u0003Upp\bCOPYWORD\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000o\u0001\u0000\u0000\u0000\u0000\u0000\u0000o\u0001\u0000\u0000\u0001\u0000\u0000\u0000v\u0001\u0000\u0000\u0001\u0000\u0000\rDuplicateLine\avoid () Upp::CodeEditor::DuplicateLine()\u0014void DuplicateLine()\u0003Upp\rDUPLICATELINE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000x\u0001\u0000\u0000\u0000\u0000\u0000\u0000x\u0001\u0000\u0000\u0001\u0000\u0000\u0000É\u0001\u0000\u0000\u0001\u0000\u0000\tSwapChars\avoid ()\u001CUpp::CodeEditor::SwapChars()\u0010void SwapChars()\u0003Upp\tSWAPCHARS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000Ö\u0001\u0000\u0000\u0000\u0000\u0000\u0000Ö\u0001\u0000\u0000\u0001\u0000\u0000\u0000à\u0001\u0000\u0000\u0001\u0000\u0000\u0003Put\nvoid (int)\u0019Upp::CodeEditor::Put(int)\u0011void Put(int chr)\u0003Upp\u0003PUT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000ä\u0001\u0000\u0000\u0000\u0000\u0000\u0000ä\u0001\u0000\u0000\u0001\u0000\u0000\u0000é\u0001\u0000\u0000\u0001\u0000\u0000\tFinishPut\avoid ()\u001CUpp::CodeEditor::FinishPut()\u0010void FinishPut()\u0003Upp\tFINISHPUT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000ê\u0001\u0000\u0000\u0000\u0000\u0000\u0000ê\u0001\u0000\u0000\u0001\u0000\u0000\u0000ï\u0001\u0000\u0000\u0001\u0000\u0000\u000FReformatComment\avoid ()\"Upp::CodeEditor::ReformatComment()\u0016void ReformatComment()\u0003Upp\u000FREFORMATCOMMENT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000ó\u0001\u0000\u0000\u0000\u0000\u0000\u0000ó\u0001\u0000\u0000\u0001\u0000\u0000\u0000ù\u0001\u0000\u0000\u0001\u0000\u0000\u0016CancelBracketHighlight\u000Evoid (int64 &)/Upp::CodeEditor::CancelBracketHighlight(int64&)'void CancelBracketHighlight(int64& pos)\u0003Upp\u0016CANCELBRACKETHIGHLIGHT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000ü\u0001\u0000\u0000\u0000\u0000\u0000\u0000ü\u0001\u0000\u0000\u0001\u0000\u0000\u0000©\u0001\u0000\u0000\u0001\u0000\u0000\bPeriodic\avoid ()\u001BUpp::CodeEditor::Periodic()\u000Fvoid Periodic()\u0003Upp\bPERIODIC\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000´\u0001\u0000\u0000\u0000\u0000\u0000\u0000´\u0001\u0000\u0000\u0001\u0000\u0000\u0000Õ\u0001\u0000\u0000\u0001\u0001\u0000\u0010SelectionChanged\avoid ()#Upp::CodeEditor::SelectionChanged()\u0017void SelectionChanged()\u0003Upp\u0010SELECTIONCHANGED\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000œ\u0001\u0000\u0000\u0000\u0000\u0000\u0000œ\u0001\u0000\u0000\u0001\u0000\u0000\u0000’\u0001\u0000\u0000\u0001\u0000\u0000\nIlluminate\u0010void (WString &)%Upp::CodeEditor::Illuminate(WString&)\u001Evoid Illuminate(WString& text)\u0003Upp\nILLUMINATE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000◊\u0001\u0000\u0000\u0000\u0000\u0000\u0000◊\u0001\u0000\u0000\u0001\u0000\u0000\u0000ﬁ\u0001\u0000\u0000\u0001\u0000\u0000\bInsertRS\u000Fbool (int, int)\"Upp::CodeEditor::InsertRS(int,int)%bool InsertRS(int chr, int count = 1)\u0003Upp\bINSERTRS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000‡\u0001\u0000\u0000\u0000\u0000\u0000\u0000‡\u0001\u0000\u0000\u0001\u0000\u0000\u0000Á\u0001\u0000\u0000\u0001\u0000\u0000\fIndentInsert\u000Fvoid (int, int)&Upp::CodeEditor::IndentInsert(int,int)%void IndentInsert(int chr, int count)\u0003Upp\fINDENTINSERT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000È\u0001\u0000\u0000\u0000\u0000\u0000\u0000È\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0002\u0000\u0000\u0001\u0000\u0000\u0004Make\nvoid (int)\u001AUpp::CodeEditor::Make(int)\u0011void Make(int op)\u0003Upp\u0004MAKE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\b\u0002\u0000\u0000\u0000\u0000\u0000\u0000\b\u0002\u0000\u0000\u0001\u0000\u0000\u00003\u0002\u0000\u0000\u0001\u0000\u0000\fTabsOrSpaces\u0015void (String &, bool)+Upp::CodeEditor::TabsOrSpaces(String&,bool)-void TabsOrSpaces(String& out, bool maketabs)\u0003Upp\fTABSORSPACES\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u00005\u0002\u0000\u0000\u0000\u0000\u0000\u00005\u0002\u0000\u0000\u0001\u0000\u0000\u00008\u0002\u0000\u0000\u0001\u0000\u0000\u0010MakeTabsOrSpaces\vvoid (bool)'Upp::CodeEditor::MakeTabsOrSpaces(bool)$void MakeTabsOrSpaces(bool maketabs)\u0003Upp\u0010MAKETABSORSPACES\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000:\u0002\u0000\u0000\u0000\u0000\u0000\u0000:\u0002\u0000\u0000\u0001\u0000\u0000\u0000L\u0002\u0000\u0000\u0001\u0000\u0000\bLineEnds\u000Fvoid (String &)\"Upp::CodeEditor::LineEnds(String&)\u001Avoid LineEnds(String& out)\u0003Upp\bLINEENDS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000N\u0002\u0000\u0000\u0000\u0000\u0000\u0000N\u0002\u0000\u0000\u0001\u0000\u0000\u0000Q\u0002\u0000\u0000\u0001\u0000\u0000\fMakeLineEnds\avoid ()\u001FUpp::CodeEditor::MakeLineEnds()\u0013void MakeLineEnds()\u0003Upp\fMAKELINEENDS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000S\u0002\u0000\u0000\u0000\u0000\u0000\u0000S\u0002\u0000\u0000\u0001\u0000\u0000\u0000[\u0002\u0000\u0000\u0001\u0000\u0000\fMoveNextWord\vvoid (bool)#Upp::CodeEditor::MoveNextWord(bool)\u001Bvoid MoveNextWord(bool sel)\u0003Upp\fMOVENEXTWORD\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000]\u0002\u0000\u0000\u0000\u0000\u0000\u0000]\u0002\u0000\u0000\u0001\u0000\u0000\u0000e\u0002\u0000\u0000\u0001\u0000\u0000\fMovePrevWord\vvoid (bool)#Upp::CodeEditor::MovePrevWord(bool)\u001Bvoid MovePrevWord(bool sel)\u0003Upp\fMOVEPREVWORD\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000g\u0002\u0000\u0000\u0000\u0000\u0000\u0000g\u0002\u0000\u0000\u0001\u0000\u0000\u0000w\u0002\u0000\u0000\u0001\u0000\u0000\vMoveNextBrk\vvoid (bool)\"Upp::CodeEditor::MoveNextBrk(bool)\u001Avoid MoveNextBrk(bool sel)\u0003Upp\vMOVENEXTBRK\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000y\u0002\u0000\u0000\u0000\u0000\u0000\u0000y\u0002\u0000\u0000\u0001\u0000\u0000\u0000è\u0002\u0000\u0000\u0001\u0000\u0000\vMovePrevBrk\vvoid (bool)\"Upp::CodeEditor::MovePrevBrk(bool)\u001Avoid MovePrevBrk(bool sel)\u0003Upp\vMOVEPREVBRK\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000ë\u0002\u0000\u0000\u0000\u0000\u0000\u0000ë\u0002\u0000\u0000\u0001\u0000\u0000\u0000ì\u0002\u0000\u0000\u0001\u0000\u0000\bisspctab\nbool (int)\u0012Upp::isspctab(int)\u0014bool isspctab(int c)\u0003Upp\bISSPCTAB\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000ï\u0002\u0000\u0000\u0000\u0000\u0000\u0000ï\u0002\u0000\u0000\u0001\u0000\u0000\u0000§\u0002\u0000\u0000\u0001\u0000\u0000\nDeleteWord\avoid ()\u001DUpp::CodeEditor::DeleteWord()\u0011void DeleteWord()\u0003Upp\nDELETEWORD\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000¶\u0002\u0000\u0000\u0000\u0000\u0000\u0000¶\u0002\u0000\u0000\u0001\u0000\u0000\u0000∂\u0002\u0000\u0000\u0001\u0000\u0000\u000EDeleteWordBack\avoid ()!Upp::CodeEditor::DeleteWordBack()\u0015void DeleteWordBack()\u0003Upp\u000EDELETEWORDBACK\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000∏\u0002\u0000\u0000\u0000\u0000\u0000\u0000∏\u0002\u0000\u0000\u0001\u0000\u0000\u0000∫\u0002\u0000\u0000\u0001\u0000\u0000\u0010SetLineSelection\u000Fvoid (int, int)*Upp::CodeEditor::SetLineSelection(int,int)#void SetLineSelection(int l, int h)\u0003Upp\u0010SETLINESELECTION\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000º\u0002\u0000\u0000\u0000\u0000\u0000\u0000º\u0002\u0000\u0000\u0001\u0000\u0000\u0000ƒ\u0002\u0000\u0000\u0001\u0000\u0000\u0010GetLineSelection\u0013bool (int &, int &),Upp::CodeEditor::GetLineSelection(int&,int&)%bool GetLineSelection(int& l, int& h)\u0003Upp\u0010GETLINESELECTION\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000∆\u0002\u0000\u0000\u0000\u0000\u0000\u0000∆\u0002\u0000\u0000\u0001\u0000\u0000\u0000‚\u0002\u0000\u0000\u0001\u0000\u0000\nSwapUpDown\vvoid (bool)!Upp::CodeEditor::SwapUpDown(bool)\u0018void SwapUpDown(bool up)\u0003Upp\nSWAPUPDOWN\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000‰\u0002\u0000\u0000\u0000\u0000\u0000\u0000‰\u0002\u0000\u0000\u0001\u0000\u0000\u0000Ì\u0002\u0000\u0000\u0001\u0000\u0000\bTabRight\avoid ()\u001BUpp::CodeEditor::TabRight()\u000Fvoid TabRight()\u0003Upp\bTABRIGHT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000Ô\u0002\u0000\u0000\u0000\u0000\u0000\u0000Ô\u0002\u0000\u0000\u0001\u0000\u0000\u0000¸\u0002\u0000\u0000\u0001\u0000\u0000\aTabLeft\avoid ()\u001AUpp::CodeEditor::TabLeft()\u000Evoid TabLeft()\u0003Upp\aTABLEFT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000˛\u0002\u0000\u0000\u0000\u0000\u0000\u0000˛\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0003\u0000\u0000\u0001\u0000\u0000\nGetWordPos\u001Ebool (int64, int64 &, int64 &)0Upp::CodeEditor::GetWordPos(int64,int64&,int64&).bool GetWordPos(int64 pos, int64& l, int64& h)\u0003Upp\nGETWORDPOS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0006\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0003\u0000\u0000\u0001\u0000\u0000\u0000\v\u0003\u0000\u0000\u0001\u0000\u0000\aGetWord\u000EString (int64)\u001FUpp::CodeEditor::GetWord(int64)\u0019String GetWord(int64 pos)\u0003Upp\aGETWORD\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000\r\u0003\u0000\u0000\u0000\u0000\u0000\u0000\r\u0003\u0000\u0000\u0001\u0000\u0000\u0000\u0010\u0003\u0000\u0000\u0001\u0000\u0000\aGetWord\tString ()\u001AUpp::CodeEditor::GetWord()\u0010String GetWord()\u0003Upp\aGETWORD\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0012\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0003\u0000\u0000\u0001\u0000\u0000\u0000\u001C\u0003\u0000\u0000\u0001\u0001\u0000\nLeftDouble\u0013void (Point, dword)(Upp::CodeEditor::LeftDouble(Point,dword)(void LeftDouble(Point p, dword keyflags)\u0003Upp\nLEFTDOUBLE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u001E\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0003\u0000\u0000\u0001\u0000\u0000\u0000$\u0003\u0000\u0000\u0001\u0001\u0000\nLeftTriple\u0013void (Point, dword)(Upp::CodeEditor::LeftTriple(Point,dword)(void LeftTriple(Point p, dword keyflags)\u0003Upp\nLEFTTRIPLE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000&\u0003\u0000\u0000\u0000\u0000\u0000\u0000&\u0003\u0000\u0000\u0001\u0000\u0000\u0000/\u0003\u0000\u0000\u0001\u0001\u0000\bLeftDown\u0013void (Point, dword)&Upp::CodeEditor::LeftDown(Point,dword)&void LeftDown(Point p, dword keyflags)\u0003Upp\bLEFTDOWN\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0016\u0000\u0000\u00001\u0003\u0000\u0000\u0000\u0000\u0000\u00001\u0003\u0000\u0000\u0001\u0000\u0000\u00008\u0003\u0000\u0000\u0001\u0001\u0000\u0005Paint\rvoid (Draw &)\"Upp::CodeEditor::Tip::Paint(Draw&)\u0013void Paint(Draw& w)\u0003Upp\u0005PAINT\u0014Upp::CodeEditor::Tip\u0014UPP::CODEEDITOR::TIP\u0000\u0000\u0018\u0000\u0000\u0000\u0011\u0000\u0000\u0000:\u0003\u0000\u0000\u0000\u0000\u0000\u0000:\u0003\u0000\u0000\u0001\u0000\u0000\u0000>\u0003\u0000\u0000\u0001\u0000\u0000\u0003Tip\avoid ()\u001BUpp::CodeEditor::Tip::Tip()\u0005Tip()\u0003Upp\u0003TIP\u0014Upp::CodeEditor::Tip\u0014UPP::CODEEDITOR::TIP\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000@\u0003\u0000\u0000\u0000\u0000\u0000\u0000@\u0003\u0000\u0000\u0001\u0000\u0000\u0000F\u0003\u0000\u0000\u0001\u0000\u0000\fSyncCloseTip\abool ()\u001FUpp::CodeEditor::SyncCloseTip()\u0013bool SyncCloseTip()\u0003Upp\fSYNCCLOSETIP\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000H\u0003\u0000\u0000\u0000\u0000\u0000\u0000H\u0003\u0000\u0000\u0001\u0000\u0000\u0000f\u0003\u0000\u0000\u0001\u0000\u0000\aSyncTip\avoid ()\u001AUpp::CodeEditor::SyncTip()\u000Evoid SyncTip()\u0003Upp\aSYNCTIP\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000h\u0003\u0000\u0000\u0000\u0000\u0000\u0000h\u0003\u0000\u0000\u0001\u0000\u0000\u0000z\u0003\u0000\u0000\u0001\u0000\u0000\u000FMouseSelSpecial\u0013bool (Point, dword)-Upp::CodeEditor::MouseSelSpecial(Point,dword)*bool MouseSelSpecial(Point p, dword flags)\u0003Upp\u000FMOUSESELSPECIAL\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000|\u0003\u0000\u0000\u0000\u0000\u0000\u0000|\u0003\u0000\u0000\u0001\u0000\u0000\u0000Ä\u0003\u0000\u0000\u0001\u0001\u0000\nLeftRepeat\u0013void (Point, dword)(Upp::CodeEditor::LeftRepeat(Point,dword)%void LeftRepeat(Point p, dword flags)\u0003Upp\nLEFTREPEAT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000Ç\u0003\u0000\u0000\u0000\u0000\u0000\u0000Ç\u0003\u0000\u0000\u0001\u0000\u0000\u0000ò\u0003\u0000\u0000\u0001\u0001\u0000\tMouseMove\u0013void (Point, dword)'Upp::CodeEditor::MouseMove(Point,dword)$void MouseMove(Point p, dword flags)\u0003Upp\tMOUSEMOVE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000ö\u0003\u0000\u0000\u0000\u0000\u0000\u0000ö\u0003\u0000\u0000<\u0000\u0000\u0000ö\u0003\u0000\u0000\u0001\u0001\u0000\nDelayedTip\u0011bool (MouseTip &)&Upp::CodeEditor::DelayedTip(MouseTip&)\u001Ebool DelayedTip(MouseTip& tip)\u0003Upp\nDELAYEDTIP\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000ú\u0003\u0000\u0000\u0000\u0000\u0000\u0000ú\u0003\u0000\u0000\u0001\u0000\u0000\u0000£\u0003\u0000\u0000\u0001\u0001\u0000\vCursorImage\u0014Image (Point, dword))Upp::CodeEditor::CursorImage(Point,dword)*Image CursorImage(Point p, dword keyflags)\u0003Upp\vCURSORIMAGE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000•\u0003\u0000\u0000\u0000\u0000\u0000\u0000•\u0003\u0000\u0000\u0001\u0000\u0000\u0000≠\u0003\u0000\u0000\u0001\u0001\u0000\nMouseLeave\avoid ()\u001DUpp::CodeEditor::MouseLeave()\u0011void MouseLeave()\u0003Upp\nMOUSELEAVE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000Ø\u0003\u0000\u0000\u0000\u0000\u0000\u0000Ø\u0003\u0000\u0000\u0001\u0000\u0000\u0000ª\u0003\u0000\u0000\u0001\u0000\u0000\u0004GetI\nWString ()\u0017Upp::CodeEditor::GetI()\u000EWString GetI()\u0003Upp\u0004GETI\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000Ω\u0003\u0000\u0000\u0000\u0000\u0000\u0000Ω\u0003\u0000\u0000\u0001\u0000\u0000\u0000¿\u0003\u0000\u0000\u0001\u0000\u0000\u0004SetI\rvoid (Ctrl *)\u001CUpp::CodeEditor::SetI(Ctrl*)\u0015void SetI(Ctrl *edit)\u0003Upp\u0004SETI\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000¬\u0003\u0000\u0000\u0000\u0000\u0000\u0000¬\u0003\u0000\u0000\u0001\u0000\u0000\u0000∆\u0003\u0000\u0000\u0001\u0000\u0000\u0004Goto\avoid ()\u0017Upp::CodeEditor::Goto()\vvoid Goto()\u0003Upp\u0004GOTO\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000»\u0003\u0000\u0000\u0000\u0000\u0000\u0000»\u0003\u0000\u0000\u0001\u0000\u0000\u0000›\u0003\u0000\u0000\u0001\u0000\u0000\u0013ToggleSimpleComment\u0019bool (int &, int &, bool)4Upp::CodeEditor::ToggleSimpleComment(int&,int&,bool)Nbool ToggleSimpleComment(int& start_line, int& end_line, bool usestars = true)\u0003Upp\u0013TOGGLESIMPLECOMMENT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000ﬂ\u0003\u0000\u0000\u0000\u0000\u0000\u0000ﬂ\u0003\u0000\u0000\u0001\u0000\u0000\u0000\u0010\u0004\u0000\u0000\u0001\u0000\u0000\u0012ToggleLineComments\vvoid (bool))Upp::CodeEditor::ToggleLineComments(bool).void ToggleLineComments(bool usestars = false)\u0003Upp\u0012TOGGLELINECOMMENTS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0012\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0004\u0000\u0000\u0001\u0000\u0000\u0000-\u0004\u0000\u0000\u0001\u0000\u0000\u0012ToggleStarComments\avoid ()%Upp::CodeEditor::ToggleStarComments()\u0019void ToggleStarComments()\u0003Upp\u0012TOGGLESTARCOMMENTS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000/\u0004\u0000\u0000\u0000\u0000\u0000\u0000/\u0004\u0000\u0000\u0001\u0000\u0000\u00009\u0004\u0000\u0000\u0001\u0000\u0000\aEnclose\u001Fvoid (char *, char *, int, int)-Upp::CodeEditor::Enclose(char*,char*,int,int)8void Enclose(char *c1, char *c2, int l = -1, int h = -1)\u0003Upp\aENCLOSE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000;\u0004\u0000\u0000\u0000\u0000\u0000\u0000;\u0004\u0000\u0000\u0001\u0000\u0000\u0000˙\u0004\u0000\u0000\u0001\u0001\u0000\u0003Key\u0011bool (dword, int)\u001FUpp::CodeEditor::Key(dword,int)\u001Fbool Key(dword code, int count)\u0003Upp\u0003KEY\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000¸\u0004\u0000\u0000\u0000\u0000\u0000\u0000¸\u0004\u0000\u0000\u0001\u0000\u0000\u0000˛\u0004\u0000\u0000\u0001\u0000\u0000\u0015ForwardWhenBreakpoint\nvoid (int)+Upp::CodeEditor::ForwardWhenBreakpoint(int)!void ForwardWhenBreakpoint(int i)\u0003Upp\u0015FORWARDWHENBREAKPOINT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0005\u0000\u0000\u0001\u0000\u0000\bGotoLine\nvoid (int)\u001EUpp::CodeEditor::GotoLine(int)\u0017void GotoLine(int line)\u0003Upp\bGOTOLINE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0005\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0005\u0000\u0000\u0001\u0000\u0000\u0000\t\u0005\u0000\u0000\u0001\u0001\u0000\tSerialize\u000Fvoid (Stream &)#Upp::CodeEditor::Serialize(Stream&)\u0019void Serialize(Stream& s)\u0003Upp\tSERIALIZE\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\v\u0005\u0000\u0000\u0000\u0000\u0000\u0000\v\u0005\u0000\u0000\u0001\u0000\u0000\u0000\u000E\u0005\u0000\u0000\u0001\u0000\u0000\vSetLineInfo\u0011void (LineInfo &)'Upp::CodeEditor::SetLineInfo(LineInfo&)\u001Evoid SetLineInfo(LineInfo& lf)\u0003Upp\vSETLINEINFO\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0010\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0005\u0000\u0000\u0001\u0000\u0000\u0000\u0014\u0005\u0000\u0000\u0001\u0000\u0000\u0004PutI#void (WithDropChoice<EditString> &)&Upp::CodeEditor::PutI(WithDropChoice&)+void PutI(WithDropChoice<EditString>& edit)\u0003Upp\u0004PUTI\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0016\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0005\u0000\u0000\u0001\u0000\u0000\u0000\u001F\u0005\u0000\u0000\u0001\u0000\u0000\u0004Zoom\nvoid (int)\u001AUpp::CodeEditor::Zoom(int)\u0010void Zoom(int d)\u0003Upp\u0004ZOOM\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000!\u0005\u0000\u0000\u0000\u0000\u0000\u0000!\u0005\u0000\u0000\u0001\u0000\u0000\u0000'\u0005\u0000\u0000\u0001\u0001\u0000\nMouseWheel\u0018void (Point, int, dword),Upp::CodeEditor::MouseWheel(Point,int,dword)4void MouseWheel(Point p, int zdelta, dword keyFlags)\u0003Upp\nMOUSEWHEEL\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000)\u0005\u0000\u0000\u0000\u0000\u0000\u0000)\u0005\u0000\u0000\u0001\u0000\u0000\u0000/\u0005\u0000\u0000\u0001\u0000\u0000\u0005Clear\avoid ()\u0018Upp::CodeEditor::Clear()\fvoid Clear()\u0003Upp\u0005CLEAR\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000!\u0000\u0000\u00001\u0005\u0000\u0000\u0000\u0000\u0000\u00001\u0005\u0000\u0000\u0001\u0000\u0000\u0000R\u0005\u0000\u0000\u0001\u0001\u0000\u0005Paint\rvoid (Draw &)-Upp::CodeEditor::ScrollBarItems::Paint(Draw&)\u0013void Paint(Draw& w)\u0003Upp\u0005PAINT\u001FUpp::CodeEditor::ScrollBarItems\u001FUPP::CODEEDITOR::SCROLLBARITEMS\u0000\u0000\u0018\u0000\u0000\u0000\u001C\u0000\u0000\u0000T\u0005\u0000\u0000\u0000\u0000\u0000\u0000T\u0005\u0000\u0000\u0001\u0000\u0000\u0000Y\u0005\u0000\u0000\u0001\u0000\u0000\u000EScrollBarItems void (ScrollBar &, CodeEditor &)GUpp::CodeEditor::ScrollBarItems::ScrollBarItems(ScrollBar&,CodeEditor&),ScrollBarItems(ScrollBar& sb, CodeEditor& e)\u0003Upp\u000ESCROLLBARITEMS\u001FUpp::CodeEditor::ScrollBarItems\u001FUPP::CODEEDITOR::SCROLLBARITEMS\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000[\u0005\u0000\u0000\u0000\u0000\u0000\u0000[\u0005\u0000\u0000\u0001\u0000\u0000\u0000c\u0005\u0000\u0000\u0001\u0000\u0000\u0006Errors\u0017void (Vector<Point> &&)!Upp::CodeEditor::Errors(Vector&&)!void Errors(Vector<Point>&& errs)\u0003Upp\u0006ERRORS\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000e\u0005\u0000\u0000\u0000\u0000\u0000\u0000e\u0005\u0000\u0000\u0001\u0000\u0000\u0000i\u0005\u0000\u0000\u0001\u0001\u0000\u0006Layout\avoid ()\u0019Upp::CodeEditor::Layout()\rvoid Layout()\u0003Upp\u0006LAYOUT\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0018\u0000\u0000\u0000\f\u0000\u0000\u0000k\u0005\u0000\u0000\u0000\u0000\u0000\u0000k\u0005\u0000\u0000\u0001\u0000\u0000\u0000è\u0005\u0000\u0000\u0001\u0000\u0000\nCodeEditor\avoid ()\u001DUpp::CodeEditor::CodeEditor()\fCodeEditor()\u0003Upp\nCODEEDITOR\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000\u0019\u0000\u0000\u0000\f\u0000\u0000\u0000ë\u0005\u0000\u0000\u0000\u0000\u0000\u0000ë\u0005\u0000\u0000\u001C\u0000\u0000\u0000ë\u0005\u0000\u0000\u0001\u0000\u0000\v~CodeEditor\u0010void () noexcept\u0014Upp::CodeEditor::~()\r~CodeEditor()\u0003Upp\v~CODEEDITOR\u000FUpp::CodeEditor\u000FUPP::CODEEDITOR\u0000\u0000end\u0000“@\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h","value":"dataiı\u0001\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0001\u0018_CodeEditor_Highlight_h_\u0000\u0018_CodeEditor_Highlight_h_\u0018_CodeEditor_Highlight_h_\u0000\u0018_CODEEDITOR_HIGHLIGHT_H_\u0000\u0000\u0000\u0000ı\u0001\u0000\u0000\b\u0000\u0000\u0000\u0003\u0000\u0000\u0000\b\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\aCTIMING\u0000\aCTIMING\aCTIMING\u0000\aCTIMING\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0001\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0000\u0000\aHlStyle\fUpp::HlStyle\fUpp::HlStyle\aHlStyle\u0003Upp\aHLSTYLE\fUpp::HlStyle\fUPP::HLSTYLE\u0000\u0000\u0006\u0000\u0000\u0000\a\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0005color\u0005Color\u0013Upp::HlStyle::color\vColor color\u0003Upp\u0005COLOR\fUpp::HlStyle\fUPP::HLSTYLE\u0000\u0000\u0006\u0000\u0000\u0000\a\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000\a\u0000\u0000\u0000\v\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0004bold\u0004bool\u0012Upp::HlStyle::bold\tbool bold\u0003Upp\u0004BOLD\fUpp::HlStyle\fUPP::HLSTYLE\u0000\u0000\u0006\u0000\u0000\u0000\a\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\b\u0000\u0000\u0000\r\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0006italic\u0004bool\u0014Upp::HlStyle::italic\vbool italic\u0003Upp\u0006ITALIC\fUpp::HlStyle\fUPP::HLSTYLE\u0000\u0000\u0006\u0000\u0000\u0000\a\u0000\u0000\u0000\t\u0000\u0000\u0000\u0001\u0000\u0000\u0000\t\u0000\u0000\u0000\u0010\u0000\u0000\u0000\t\u0000\u0000\u0000\u0001\u0000\u0000\tunderline\u0004bool\u0017Upp::HlStyle::underline\u000Ebool underline\u0003Upp\tUNDERLINE\fUpp::HlStyle\fUPP::HLSTYLE\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0001\u0000\u0000\u0003Isx\bUpp::Isx\bUpp::Isx\u0003Isx\u0003Upp\u0003ISX\bUpp::Isx\bUPP::ISX\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0000\r\u0000\u0000\u0000\f\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0004line\u0003int\u000EUpp::Isx::line\bint line\u0003Upp\u0004LINE\bUpp::Isx\bUPP::ISX\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000E\u0000\u0000\u0000\v\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0001\u0000\u0000\u0003pos\u0003int\rUpp::Isx::pos\aint pos\u0003Upp\u0003POS\bUpp::Isx\bUPP::ISX\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u00001\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\tSerialize\u000Fvoid (Stream &)\u001CUpp::Isx::Serialize(Stream&)\u0019void Serialize(Stream& s)\u0003Upp\tSERIALIZE\bUpp::Isx\bUPP::ISX\u0000\u0000\b\u0000\u0000\u0000\r\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0012\u0000\u0000\u0000T\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0000\noperator==\u000Fbool (Isx, Isx)\u0018Upp::operator==(Isx,Isx)\rbool operator\u0003Upp\nOPERATOR==\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\r\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0013\u0000\u0000\u0000;\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0000\u0000\noperator!=\u000Fbool (Isx, Isx)\u0018Upp::operator!=(Isx,Isx)\u000Ebool operator!\u0003Upp\nOPERATOR!=\u0003Upp\u0003UPP\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0000\u0000$\u0000\u0000\u0000\u0001\u0000\u0000\aIfState\fUpp::IfState\fUpp::IfState\aIfState\u0003Upp\aIFSTATE\fUpp::IfState\fUPP::IFSTATE\u0000\u0000\u0005\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0017\u0000\u0000\u0000>\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000F(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:24:2)TUpp::IfState::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:24:2)IUpp::IfState::(unnamed at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.)\u0004enum\u0003UppF(UNNAMED ENUM AT C:\\USERS\\SBLO\\AI-UPP\\UPPSRC\\CODEEDITOR\\SYNTAX.H:24:2)\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0002IFTUpp::IfState::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:24:2)\u0010Upp::IfState::IF\u0002IF\u0003Upp\u0002IF\fUpp::IfState\fUPP::IFSTATE\u0000\u0000\a\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0004ELIFTUpp::IfState::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:24:2)\u0012Upp::IfState::ELIF\u0004ELIF\u0003Upp\u0004ELIF\fUpp::IfState\fUPP::IFSTATE\u0000\u0000\a\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0017\u0000\u0000\u0000#\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0004ELSETUpp::IfState::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:24:2)\u0012Upp::IfState::ELSE\u0004ELSE\u0003Upp\u0004ELSE\fUpp::IfState\fUPP::IFSTATE\u0000\u0000\a\u0000\u0000\u0000%\u0000\u0000\u0000\u0017\u0000\u0000\u0000%\u0000\u0000\u0000\u0017\u0000\u0000\u0000/\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\nELSE_ERRORTUpp::IfState::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:24:2)\u0018Upp::IfState::ELSE_ERROR\nELSE_ERROR\u0003Upp\nELSE_ERROR\fUpp::IfState\fUPP::IFSTATE\u0000\u0000\a\u0000\u0000\u00001\u0000\u0000\u0000\u0017\u0000\u0000\u00001\u0000\u0000\u0000\u0017\u0000\u0000\u0000<\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\vENDIF_ERRORTUpp::IfState::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:24:2)\u0019Upp::IfState::ENDIF_ERROR\vENDIF_ERROR\u0003Upp\vENDIF_ERROR\fUpp::IfState\fUPP::IFSTATE\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0006iftext\aWString\u0014Upp::IfState::iftext\u000EWString iftext\u0003Upp\u0006IFTEXT\fUpp::IfState\fUPP::IFSTATE\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\u0006ifline\u0005short\u0014Upp::IfState::ifline\fshort ifline\u0003Upp\u0006IFLINE\fUpp::IfState\fUPP::IFSTATE\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0001\u0000\u0000\u0005state\u0004char\u0013Upp::IfState::state\nchar state\u0003Upp\u0005STATE\fUpp::IfState\fUPP::IFSTATE\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001D\u0000\u0000\u0000C\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0000\u0000\tSerialize\u000Fvoid (Stream &) Upp::IfState::Serialize(Stream&)\u0019void Serialize(Stream& s)\u0003Upp\tSERIALIZE\fUpp::IfState\fUPP::IFSTATE\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0002\u0000\u0000\u0000!\u0000\u0000\u0000\u0001\u0000\u0000\noperator==\u0010bool (IfState &)\"Upp::IfState::operator==(IfState&)\rbool operator\u0003Upp\nOPERATOR==\fUpp::IfState\fUPP::IFSTATE\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\u0000#\u0000\u0000\u0000:\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\aIfState\avoid ()\u0017Upp::IfState::IfState()\tIfState()\u0003Upp\aIFSTATE\fUpp::IfState\fUPP::IFSTATE\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000&\u0000\u0000\u0000\u0000\u0000\u0000\u0000&\u0000\u0000\u0000\u0001\u0000\u0000\u0000D\u0000\u0000\u0000\u0001\u0000\u0000\u000EHighlightSetup\u0013Upp::HighlightSetup\u0013Upp::HighlightSetup\u000EHighlightSetup\u0003Upp\u000EHIGHLIGHTSETUP\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000ı\u0001\u0000\u0000\b\u0000\u0000\u0000(\u0000\u0000\u0000\b\u0000\u0000\u0000(\u0000\u0000\u0000!\u0000\u0000\u0000(\u0000\u0000\u0000\u0000\u0000\u0001\bHL_COLOR\u0000\bHL_COLOR\bHL_COLOR\u0000\bHL_COLOR\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0001\u0000\u0000\u0000)\u0000\u0000\u0000\u0001\u0000\u0000\u0000)\u0000\u0000\u0000\u0002\u0000\u0000\u0000,\u0000\u0000\u0000\u0001\u0000\u0000F(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)PUpp::HighlightSetup::(unnamed at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.)\u0004enum\u0003UppF(UNNAMED ENUM AT C:\\USERS\\SBLO\\AI-UPP\\UPPSRC\\CODEEDITOR\\SYNTAX.H:42:2)\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000+\u0000\u0000\u0000\u0002\u0000\u0000\u0000+\u0000\u0000\u0000\n\u0000\u0000\u0000+\u0000\u0000\u0000\u0001\u0000\u0000\bHL_COUNT[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)\u001DUpp::HighlightSetup::HL_COUNT\bHL_COUNT\u0003Upp\bHL_COUNT\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\t\u0000\u0000\u0000\u0010\u0000\u0000\u0000/\u0000\u0000\u0000\u0001\u0000\u0000\u0000/\u0000\u0000\u0000\"\u0000\u0000\u0000/\u0000\u0000\u0000\u0000\u0000\u0001\bhl_style\vHlStyle[55]\u001DUpp::HighlightSetup::hl_style\u001Bstatic HlStyle hl_style[55]\u0003Upp\bHL_STYLE\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\t\u0000\u0000\u0000\u0010\u0000\u0000\u00000\u0000\u0000\u0000\u0001\u0000\u0000\u00000\u0000\u0000\u0000\u001C\u0000\u0000\u00000\u0000\u0000\u0000\u0000\u0000\u0001\fhilite_scope\u0004byte!Upp::HighlightSetup::hilite_scope\u0018static byte hilite_scope\u0003Upp\fHILITE_SCOPE\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\t\u0000\u0000\u0000\u0010\u0000\u0000\u00001\u0000\u0000\u0000\u0001\u0000\u0000\u00001\u0000\u0000\u0000\u001C\u0000\u0000\u00001\u0000\u0000\u0000\u0000\u0000\u0001\fhilite_ifdef\u0004byte!Upp::HighlightSetup::hilite_ifdef\u0018static byte hilite_ifdef\u0003Upp\fHILITE_IFDEF\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\t\u0000\u0000\u0000\u0010\u0000\u0000\u00002\u0000\u0000\u0000\u0001\u0000\u0000\u00002\u0000\u0000\u0000\u001E\u0000\u0000\u00002\u0000\u0000\u0000\u0000\u0000\u0001\u000Ehilite_bracket\u0004byte#Upp::HighlightSetup::hilite_bracket\u001Astatic byte hilite_bracket\u0003Upp\u000EHILITE_BRACKET\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\t\u0000\u0000\u0000\u0010\u0000\u0000\u00003\u0000\u0000\u0000\u0001\u0000\u0000\u00003\u0000\u0000\u0000#\u0000\u0000\u00003\u0000\u0000\u0000\u0000\u0000\u0001\u0013thousands_separator\u0004bool(Upp::HighlightSetup::thousands_separator\u001Fstatic bool thousands_separator\u0003Upp\u0013THOUSANDS_SEPARATOR\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\t\u0000\u0000\u0000\u0010\u0000\u0000\u00004\u0000\u0000\u0000\u0001\u0000\u0000\u00004\u0000\u0000\u0000\u001D\u0000\u0000\u00004\u0000\u0000\u0000\u0000\u0000\u0001\rindent_spaces\u0004bool\"Upp::HighlightSetup::indent_spaces\u0019static bool indent_spaces\u0003Upp\rINDENT_SPACES\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\t\u0000\u0000\u0000\u0010\u0000\u0000\u00005\u0000\u0000\u0000\u0001\u0000\u0000\u00005\u0000\u0000\u0000\u001D\u0000\u0000\u00005\u0000\u0000\u0000\u0000\u0000\u0001\rindent_amount\u0003int\"Upp::HighlightSetup::indent_amount\u0018static int indent_amount\u0003Upp\rINDENT_AMOUNT\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\t\u0000\u0000\u0000\u0010\u0000\u0000\u00006\u0000\u0000\u0000\u0001\u0000\u0000\u00006\u0000\u0000\u0000%\u0000\u0000\u00006\u0000\u0000\u0000\u0000\u0000\u0001\u0015no_parenthesis_indent\u0004bool*Upp::HighlightSetup::no_parenthesis_indent!static bool no_parenthesis_indent\u0003Upp\u0015NO_PARENTHESIS_INDENT\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u00008\u0000\u0000\u0000\u0001\u0000\u0000\u00008\u0000\u0000\u0000(\u0000\u0000\u00008\u0000\u0000\u0000\u0000\u0000\u0001\nGetHlStyle\u000EHlStyle &(int)$Upp::HighlightSetup::GetHlStyle(int)!static HlStyle& GetHlStyle(int i)\u0003Upp\nGETHLSTYLE\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u00009\u0000\u0000\u0000\u0001\u0000\u0000\u00009\u0000\u0000\u0000q\u0000\u0000\u00009\u0000\u0000\u0000\u0000\u0000\u0001\nSetHlStyle#void (int, Color, bool, bool, bool)9Upp::HighlightSetup::SetHlStyle(int,Color,bool,bool,bool)fstatic void SetHlStyle(int i, Color c, bool bold = false, bool italic = false, bool underline = false)\u0003Upp\nSETHLSTYLE\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000:\u0000\u0000\u0000\u0001\u0000\u0000\u0000:\u0000\u0000\u00002\u0000\u0000\u0000:\u0000\u0000\u0000\u0000\u0000\u0001\fLoadHlStyles\rvoid (char *)(Upp::HighlightSetup::LoadHlStyles(char*)!static void LoadHlStyles(char *s)\u0003Upp\fLOADHLSTYLES\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000;\u0000\u0000\u0000\u0001\u0000\u0000\u0000;\u0000\u0000\u0000&\u0000\u0000\u0000;\u0000\u0000\u0000\u0000\u0000\u0001\rStoreHlStyles\tString ()$Upp::HighlightSetup::StoreHlStyles()\u001Dstatic String StoreHlStyles()\u0003Upp\rSTOREHLSTYLES\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000<\u0000\u0000\u0000\u0001\u0000\u0000\u0000<\u0000\u0000\u0000#\u0000\u0000\u0000<\u0000\u0000\u0000\u0000\u0000\u0001\nHostColors\avoid ()!Upp::HighlightSetup::HostColors()\u0018static void HostColors()\u0003Upp\nHOSTCOLORS\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000=\u0000\u0000\u0000\u0001\u0000\u0000\u0000=\u0000\u0000\u00009\u0000\u0000\u0000=\u0000\u0000\u0000\u0000\u0000\u0001\tDarkTheme\vvoid (bool)$Upp::HighlightSetup::DarkTheme(bool).static void DarkTheme(bool host_colors = true)\u0003Upp\tDARKTHEME\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000>\u0000\u0000\u0000\u0001\u0000\u0000\u0000>\u0000\u0000\u0000:\u0000\u0000\u0000>\u0000\u0000\u0000\u0000\u0000\u0001\nWhiteTheme\vvoid (bool)%Upp::HighlightSetup::WhiteTheme(bool)/static void WhiteTheme(bool host_colors = true)\u0003Upp\nWHITETHEME\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000?\u0000\u0000\u0000\u0001\u0000\u0000\u0000?\u0000\u0000\u0000(\u0000\u0000\u0000?\u0000\u0000\u0000\u0000\u0000\u0001\u000FDefaultHlStyles\avoid ()&Upp::HighlightSetup::DefaultHlStyles()\u001Dstatic void DefaultHlStyles()\u0003Upp\u000FDEFAULTHLSTYLES\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000@\u0000\u0000\u0000\u0001\u0000\u0000\u0000@\u0000\u0000\u0000!\u0000\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0001\bInitOnce\avoid ()\u001FUpp::HighlightSetup::InitOnce()\u0016static void InitOnce()\u0003Upp\bINITONCE\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000B\u0000\u0000\u0000\u0001\u0000\u0000\u0000B\u0000\u0000\u0000'\u0000\u0000\u0000B\u0000\u0000\u0000\u0000\u0000\u0001\tGetHlName\vchar *(int)#Upp::HighlightSetup::GetHlName(int)\u001Dstatic char *GetHlName(int i)\u0003Upp\tGETHLNAME\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000C\u0000\u0000\u0000\u0001\u0000\u0000\u0000C\u0000\u0000\u0000'\u0000\u0000\u0000C\u0000\u0000\u0000\u0000\u0000\u0001\tHasHlFont\nbool (int)#Upp::HighlightSetup::HasHlFont(int)\u001Cstatic bool HasHlFont(int i)\u0003Upp\tHASHLFONT\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000F\u0000\u0000\u0000\u0000\u0000\u0000\u0000F\u0000\u0000\u0000\u0001\u0000\u0000\u0000_\u0000\u0000\u0000\u0001\u0000\u0000\u000FHighlightOutput\u0014Upp::HighlightOutput\u0014Upp::HighlightOutput HighlightOutput : HighlightSetup\u0003Upp\u000FHIGHLIGHTOUTPUT\u0014Upp::HighlightOutput\u0014UPP::HIGHLIGHTOUTPUT\u0013Upp::HighlightSetup\u0000\u0006\u0000\u0000\u0000\u001E\u0000\u0000\u0000G\u0000\u0000\u0000\u0001\u0000\u0000\u0000G\u0000\u0000\u0000\u001F\u0000\u0000\u0000G\u0000\u0000\u0000\u0001\u0000\u0000\u0001v\u001DVector<LineEdit::Highlight> &\u0017Upp::HighlightOutput::v\u001EVector<LineEdit::Highlight>& v\u0003Upp\u0001V\u0014Upp::HighlightOutput\u0014UPP::HIGHLIGHTOUTPUT\u0000\u0000\u0006\u0000\u0000\u0000\u001E\u0000\u0000\u0000H\u0000\u0000\u0000\u0001\u0000\u0000\u0000H\u0000\u0000\u0000!\u0000\u0000\u0000H\u0000\u0000\u0000\u0001\u0000\u0000\u0003def\u0013LineEdit::Highlight\u0019Upp::HighlightOutput::def\u0017LineEdit::Highlight def\u0003Upp\u0003DEF\u0014Upp::HighlightOutput\u0014UPP::HIGHLIGHTOUTPUT\u0000\u0000\u0006\u0000\u0000\u0000\u001E\u0000\u0000\u0000I\u0000\u0000\u0000\u0001\u0000\u0000\u0000I\u0000\u0000\u0000!\u0000\u0000\u0000I\u0000\u0000\u0000\u0001\u0000\u0000\u0003pos\u0003int\u0019Upp::HighlightOutput::pos\aint pos\u0003Upp\u0003POS\u0014Upp::HighlightOutput\u0014UPP::HIGHLIGHTOUTPUT\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000L\u0000\u0000\u0000\u0001\u0000\u0000\u0000L\u0000\u0000\u0000H\u0000\u0000\u0000L\u0000\u0000\u0000\u0001\u0000\u0000\aSetChar\u000Fvoid (int, int)&Upp::HighlightOutput::SetChar(int,int)\u001Evoid SetChar(int pos, int chr)\u0003Upp\aSETCHAR\u0014Upp::HighlightOutput\u0014UPP::HIGHLIGHTOUTPUT\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000M\u0000\u0000\u0000\u0001\u0000\u0000\u0000M\u0000\u0000\u00001\u0000\u0000\u0000M\u0000\u0000\u0000\u0000\u0000\u0000\u0003Set\u001Avoid (int, int, HlStyle &)+Upp::HighlightOutput::Set(int,int,HlStyle&)*void Set(int pos, int count, HlStyle& ink)\u0003Upp\u0003SET\u0014Upp::HighlightOutput\u0014UPP::HIGHLIGHTOUTPUT\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000N\u0000\u0000\u0000\u0001\u0000\u0000\u0000N\u0000\u0000\u0000.\u0000\u0000\u0000N\u0000\u0000\u0000\u0000\u0000\u0000\bSetFlags\u0015void (int, int, word),Upp::HighlightOutput::SetFlags(int,int,word)-void SetFlags(int pos, int count, word flags)\u0003Upp\bSETFLAGS\u0014Upp::HighlightOutput\u0014UPP::HIGHLIGHTOUTPUT\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000O\u0000\u0000\u0000\u0001\u0000\u0000\u0000O\u0000\u0000\u00003\u0000\u0000\u0000O\u0000\u0000\u0000\u0000\u0000\u0000\aSetFont\u001Avoid (int, int, HlStyle &)/Upp::HighlightOutput::SetFont(int,int,HlStyle&),void SetFont(int pos, int count, HlStyle& f)\u0003Upp\aSETFONT\u0014Upp::HighlightOutput\u0014UPP::HIGHLIGHTOUTPUT\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000P\u0000\u0000\u0000\u0001\u0000\u0000\u0000P\u0000\u0000\u0000/\u0000\u0000\u0000P\u0000\u0000\u0000\u0000\u0000\u0000\bSetPaper\u0016void (int, int, Color)-Upp::HighlightOutput::SetPaper(int,int,Color).void SetPaper(int pos, int count, Color paper)\u0003Upp\bSETPAPER\u0014Upp::HighlightOutput\u0014UPP::HIGHLIGHTOUTPUT\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000Q\u0000\u0000\u0000\u0001\u0000\u0000\u0000Q\u0000\u0000\u0000+\u0000\u0000\u0000Q\u0000\u0000\u0000\u0000\u0000\u0000\u0006SetInk\u0016void (int, int, Color)+Upp::HighlightOutput::SetInk(int,int,Color)*void SetInk(int pos, int count, Color ink)\u0003Upp\u0006SETINK\u0014Upp::HighlightOutput\u0014UPP::HIGHLIGHTOUTPUT\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000R\u0000\u0000\u0000\u0001\u0000\u0000\u0000R\u0000\u0000\u0000S\u0000\u0000\u0000R\u0000\u0000\u0000\u0001\u0000\u0000\bSetFlags\u0010void (int, word)(Upp::HighlightOutput::SetFlags(int,word)$void SetFlags(int count, word flags)\u0003Upp\bSETFLAGS\u0014Upp::HighlightOutput\u0014UPP::HIGHLIGHTOUTPUT\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000S\u0000\u0000\u0000\u0001\u0000\u0000\u0000S\u0000\u0000\u0000Z\u0000\u0000\u0000S\u0000\u0000\u0000\u0001\u0000\u0000\u0003Put\u0015void (int, HlStyle &)'Upp::HighlightOutput::Put(int,HlStyle&)!void Put(int count, HlStyle& ink)\u0003Upp\u0003PUT\u0014Upp::HighlightOutput\u0014UPP::HIGHLIGHTOUTPUT\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000T\u0000\u0000\u0000\u0001\u0000\u0000\u0000T\u0000\u0000\u00005\u0000\u0000\u0000T\u0000\u0000\u0000\u0000\u0000\u0000\u0003Put\u001Cvoid (int, HlStyle &, Color)-Upp::HighlightOutput::Put(int,HlStyle&,Color).void Put(int count, HlStyle& ink, Color paper)\u0003Upp\u0003PUT\u0014Upp::HighlightOutput\u0014UPP::HIGHLIGHTOUTPUT\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000U\u0000\u0000\u0000\u0001\u0000\u0000\u0000U\u0000\u0000\u0000>\u0000\u0000\u0000U\u0000\u0000\u0000\u0000\u0000\u0000\u0003Put void (int, HlStyle &, HlStyle &)0Upp::HighlightOutput::Put(int,HlStyle&,HlStyle&)1void Put(int count, HlStyle& ink, HlStyle& paper)\u0003Upp\u0003PUT\u0014Upp::HighlightOutput\u0014UPP::HIGHLIGHTOUTPUT\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000V\u0000\u0000\u0000\u0001\u0000\u0000\u0000V\u0000\u0000\u0000C\u0000\u0000\u0000V\u0000\u0000\u0000\u0001\u0000\u0000\u0003Put\u0010void (HlStyle &)#Upp::HighlightOutput::Put(HlStyle&)\u0016void Put(HlStyle& ink)\u0003Upp\u0003PUT\u0014Upp::HighlightOutput\u0014UPP::HIGHLIGHTOUTPUT\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000W\u0000\u0000\u0000\u0001\u0000\u0000\u0000W\u0000\u0000\u0000]\u0000\u0000\u0000W\u0000\u0000\u0000\u0001\u0000\u0000\u0003Put\u0016void (HlStyle &, word)(Upp::HighlightOutput::Put(HlStyle&,word)\"void Put(HlStyle& ink, word flags)\u0003Upp\u0003PUT\u0014Upp::HighlightOutput\u0014UPP::HIGHLIGHTOUTPUT\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000X\u0000\u0000\u0000\u0001\u0000\u0000\u0000X\u0000\u0000\u0000P\u0000\u0000\u0000X\u0000\u0000\u0000\u0001\u0000\u0000\u0005Flags\vvoid (word)!Upp::HighlightOutput::Flags(word)\u0016void Flags(word flags)\u0003Upp\u0005FLAGS\u0014Upp::HighlightOutput\u0014UPP::HIGHLIGHTOUTPUT\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000Y\u0000\u0000\u0000\u0001\u0000\u0000\u0000Y\u0000\u0000\u0000K\u0000\u0000\u0000Y\u0000\u0000\u0000\u0001\u0000\u0000\bGetCount\u0006int () Upp::HighlightOutput::GetCount()\u000Eint GetCount()\u0003Upp\bGETCOUNT\u0014Upp::HighlightOutput\u0014UPP::HIGHLIGHTOUTPUT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000[\u0000\u0000\u0000\a\u0000\u0000\u0000[\u0000\u0000\u0000%\u0000\u0000\u0000[\u0000\u0000\u0000\u0000\u0000\u0000\aCString\u0010wchar *(wchar *)%Upp::HighlightOutput::CString(wchar*)\u0018wchar *CString(wchar *p)\u0003Upp\aCSTRING\u0014Upp::HighlightOutput\u0014UPP::HIGHLIGHTOUTPUT\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000]\u0000\u0000\u0000\u0001\u0000\u0000\u0000]\u0000\u0000\u00000\u0000\u0000\u0000]\u0000\u0000\u0000\u0000\u0000\u0000\u000FHighlightOutput$void (Vector<LineEdit::Highlight> &).Upp::HighlightOutput::HighlightOutput(Vector&)/HighlightOutput(Vector<LineEdit::Highlight>& v)\u0003Upp\u000FHIGHLIGHTOUTPUT\u0014Upp::HighlightOutput\u0014UPP::HIGHLIGHTOUTPUT\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000^\u0000\u0000\u0000\u0001\u0000\u0000\u0000^\u0000\u0000\u0000\u0013\u0000\u0000\u0000^\u0000\u0000\u0000\u0000\u0000\u0000\u0010~HighlightOutput\avoid ()\u0019Upp::HighlightOutput::~()\u0012~HighlightOutput()\u0003Upp\u0010~HIGHLIGHTOUTPUT\u0014Upp::HighlightOutput\u0014UPP::HIGHLIGHTOUTPUT\u0000\u0000\u0004\u0000\u0000\u0000\u0006\u0000\u0000\u0000a\u0000\u0000\u0000\u0000\u0000\u0000\u0000a\u0000\u0000\u0000\u0001\u0000\u0000\u0000ê\u0000\u0000\u0000\u0001\u0000\u0000\fEditorSyntax\u0011Upp::EditorSyntax\u0011Upp::EditorSyntax$EditorSyntax : public HighlightSetup\u0003Upp\fEDITORSYNTAX\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0013Upp::HighlightSetup\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000b\u0000\u0000\u0000\u0001\u0000\u0000\u0000b\u0000\u0000\u0000\u0002\u0000\u0000\u0000f\u0000\u0000\u0000\u0001\u0000\u0000\tSyntaxDef\u001CUpp::EditorSyntax::SyntaxDef\u001CUpp::EditorSyntax::SyntaxDef\tSyntaxDef\u0003Upp\tSYNTAXDEF\u001CUpp::EditorSyntax::SyntaxDef\u001CUPP::EDITORSYNTAX::SYNTAXDEF\u0000\u0000\u0006\u0000\u0000\u0000\u001C\u0000\u0000\u0000c\u0000\u0000\u0000\u0002\u0000\u0000\u0000c\u0000\u0000\u0000#\u0000\u0000\u0000c\u0000\u0000\u0000\u0001\u0000\u0000\afactory\u0003int%Upp::EditorSyntax::SyntaxDef::factory\vint factory\u0003Upp\aFACTORY\u001CUpp::EditorSyntax::SyntaxDef\u001CUPP::EDITORSYNTAX::SYNTAXDEF\u0000\u0000\u0006\u0000\u0000\u0000\u001C\u0000\u0000\u0000d\u0000\u0000\u0000\u0002\u0000\u0000\u0000d\u0000\u0000\u0000$\u0000\u0000\u0000d\u0000\u0000\u0000\u0001\u0000\u0000\bpatterns\u0006String&Upp::EditorSyntax::SyntaxDef::patterns\u000FString patterns\u0003Upp\bPATTERNS\u001CUpp::EditorSyntax::SyntaxDef\u001CUPP::EDITORSYNTAX::SYNTAXDEF\u0000\u0000\u0006\u0000\u0000\u0000\u001C\u0000\u0000\u0000e\u0000\u0000\u0000\u0002\u0000\u0000\u0000e\u0000\u0000\u0000'\u0000\u0000\u0000e\u0000\u0000\u0000\u0001\u0000\u0000\vdescription\u0006String)Upp::EditorSyntax::SyntaxDef::description\u0012String description\u0003Upp\vDESCRIPTION\u001CUpp::EditorSyntax::SyntaxDef\u001CUPP::EDITORSYNTAX::SYNTAXDEF\u0000\u0000\u0015\u0000\u0000\u0000%\u0000\u0000\u0000h\u0000\u0000\u0000\u0001\u0000\u0000\u0000h\u0000\u0000\u0000+\u0000\u0000\u0000h\u0000\u0000\u0000\u0000\u0000\u0001\u0004defs\u001FArrayMap<String, SyntaxDef> &()\u0019Upp::EditorSyntax::defs()*static ArrayMap<String, SyntaxDef>& defs()\u0003Upp\u0004DEFS\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\u0019\u0000\u0000\u0000k\u0000\u0000\u0000\u0001\u0000\u0000\u0000k\u0000\u0000\u0000&\u0000\u0000\u0000k\u0000\u0000\u0000\u0001\u0000\u0000\rignore_errors\u0004bool Upp::EditorSyntax::ignore_errors\u0012bool ignore_errors\u0003Upp\rIGNORE_ERRORS\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\u0019\u0000\u0000\u0000l\u0000\u0000\u0000\u0001\u0000\u0000\u0000l\u0000\u0000\u0000&\u0000\u0000\u0000l\u0000\u0000\u0000\u0001\u0000\u0000\rcomments_lang\u0003int Upp::EditorSyntax::comments_lang\u0011int comments_lang\u0003Upp\rCOMMENTS_LANG\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000o\u0000\u0000\u0000\u0001\u0000\u0000\u0000o\u0000\u0000\u0000 \u0000\u0000\u0000o\u0000\u0000\u0000\u0000\u0001\u0000\u0005Clear\avoid ()\u001AUpp::EditorSyntax::Clear()\fvoid Clear()\u0003Upp\u0005CLEAR\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000p\u0000\u0000\u0000\u0001\u0000\u0000\u0000p\u0000\u0000\u0000\\\u0000\u0000\u0000p\u0000\u0000\u0000\u0000\u0001\u0000\nScanSyntax!void (wchar *, wchar *, int, int)4Upp::EditorSyntax::ScanSyntax(wchar*,wchar*,int,int)<void ScanSyntax(wchar *ln, wchar *e, int line, int tab_size)\u0003Upp\nSCANSYNTAX\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000q\u0000\u0000\u0000\u0001\u0000\u0000\u0000q\u0000\u0000\u0000-\u0000\u0000\u0000q\u0000\u0000\u0000\u0000\u0001\u0000\tSerialize\u000Fvoid (Stream &)%Upp::EditorSyntax::Serialize(Stream&)\u0019void Serialize(Stream& s)\u0003Upp\tSERIALIZE\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000r\u0000\u0000\u0000\u0001\u0000\u0000\u0000r\u0000\u0000\u0000M\u0000\u0000\u0000r\u0000\u0000\u0000\u0000\u0001\u0000\fIndentInsert\u001Dvoid (CodeEditor &, int, int)4Upp::EditorSyntax::IndentInsert(CodeEditor&,int,int)9void IndentInsert(CodeEditor& editor, int chr, int count)\u0003Upp\fINDENTINSERT\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000s\u0000\u0000\u0000\u0001\u0000\u0000\u0000s\u0000\u0000\u0000P\u0000\u0000\u0000s\u0000\u0000\u0000\u0000\u0001\u0000\rCheckBrackets%bool (CodeEditor &, int64 &, int64 &);Upp::EditorSyntax::CheckBrackets(CodeEditor&,int64&,int64&)<bool CheckBrackets(CodeEditor& e, int64& bpos0, int64& bpos)\u0003Upp\rCHECKBRACKETS\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000t\u0000\u0000\u0000\u0001\u0000\u0000\u0000t\u0000\u0000\u0000Z\u0000\u0000\u0000t\u0000\u0000\u0000\u0000\u0001\u0000\u0012CheckSyntaxRefresh%void (CodeEditor &, int64, WString &)AUpp::EditorSyntax::CheckSyntaxRefresh(CodeEditor&,int64,WString&)@void CheckSyntaxRefresh(CodeEditor& e, int64 pos, WString& text)\u0003Upp\u0012CHECKSYNTAXREFRESH\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000u\u0000\u0000\u0000\u0001\u0000\u0000\u0000u\u0000\u0000\u0000$\u0000\u0000\u0000u\u0000\u0000\u0000\u0000\u0001\u0000\tCanAssist\abool ()\u001EUpp::EditorSyntax::CanAssist()\u0010bool CanAssist()\u0003Upp\tCANASSIST\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000v\u0000\u0000\u0000\u0001\u0000\u0000\u0000v\u0000\u0000\u0000K\u0000\u0000\u0000w\u0000\u0000\u0000\u0000\u0001\u0000\tHighlightDvoid (wchar *, wchar *, HighlightOutput &, CodeEditor *, int, int64)RUpp::EditorSyntax::Highlight(wchar*,wchar*,HighlightOutput&,CodeEditor*,int,int64)cvoid Highlight(wchar *s, wchar *end, HighlightOutput& hls, CodeEditor *editor, int line, int64 pos)\u0003Upp\tHIGHLIGHT\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000x\u0000\u0000\u0000\u0001\u0000\u0000\u0000x\u0000\u0000\u0000&\u0000\u0000\u0000x\u0000\u0000\u0000\u0000\u0001\u0000\vPickIfStack\u0012Vector<IfState> () Upp::EditorSyntax::PickIfStack()\u001DVector<IfState> PickIfStack()\u0003Upp\vPICKIFSTACK\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000y\u0000\u0000\u0000\u0001\u0000\u0000\u0000y\u0000\u0000\u00007\u0000\u0000\u0000y\u0000\u0000\u0000\u0000\u0001\u0000\u000FReformatComment\u0013void (CodeEditor &)/Upp::EditorSyntax::ReformatComment(CodeEditor&)#void ReformatComment(CodeEditor& e)\u0003Upp\u000FREFORMATCOMMENT\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000z\u0000\u0000\u0000\u0001\u0000\u0000\u0000z\u0000\u0000\u0000I\u0000\u0000\u0000z\u0000\u0000\u0000\u0000\u0001\u0000\u000EGetBlockHeader\u0017bool (Point &, Point &)0Upp::EditorSyntax::GetBlockHeader(Point&,Point&)5bool GetBlockHeader(Point& blk_start, Point& blk_end)\u0003Upp\u000EGETBLOCKHEADER\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000{\u0000\u0000\u0000\u0001\u0000\u0000\u0000{\u0000\u0000\u0000(\u0000\u0000\u0000{\u0000\u0000\u0000\u0000\u0001\u0000\rGetBlockLevel\u0006int ()\"Upp::EditorSyntax::GetBlockLevel()\u0013int GetBlockLevel()\u0003Upp\rGETBLOCKLEVEL\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0019\u0000\u0000\u0000\t\u0000\u0000\u0000|\u0000\u0000\u0000\u0001\u0000\u0000\u0000|\u0000\u0000\u0000\u0018\u0000\u0000\u0000|\u0000\u0000\u0000\u0000\u0000\u0000\r~EditorSyntax\u0010void () noexcept\u0016Upp::EditorSyntax::~()\u000F~EditorSyntax()\u0003Upp\r~EDITORSYNTAX\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000~\u0000\u0000\u0000\u0001\u0000\u0000\u0000~\u0000\u0000\u0000#\u0000\u0000\u0000~\u0000\u0000\u0000\u0000\u0000\u0001\aIfColor\fColor (char) Upp::EditorSyntax::IfColor(char)\"static Color IfColor(char ifstate)\u0003Upp\aIFCOLOR\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\t\u0000\u0000\u0000Ä\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ä\u0000\u0000\u0000y\u0000\u0000\u0000Ä\u0000\u0000\u0000\u0001\u0000\u0000\u0003Set\u000Fvoid (String &)\u001FUpp::EditorSyntax::Set(String&)\u0013void Set(String& s)\u0003Upp\u0003SET\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\t\u0000\u0000\u0000Å\u0000\u0000\u0000\u0001\u0000\u0000\u0000Å\u0000\u0000\u0000X\u0000\u0000\u0000Å\u0000\u0000\u0000\u0001\u0000\u0000\u0003Get\tString ()\u0018Upp::EditorSyntax::Get()\fString Get()\u0003Upp\u0003GET\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\t\u0000\u0000\u0000É\u0000\u0000\u0000\u0001\u0000\u0000\u0000É\u0000\u0000\u0000A\u0000\u0000\u0000É\u0000\u0000\u0000\u0001\u0000\u0000\fIgnoreErrors\avoid ()!Upp::EditorSyntax::IgnoreErrors()\u0013void IgnoreErrors()\u0003Upp\fIGNOREERRORS\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\t\u0000\u0000\u0000Ñ\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ñ\u0000\u0000\u0000A\u0000\u0000\u0000Ñ\u0000\u0000\u0000\u0001\u0000\u0000\u0012SpellCheckComments\nvoid (int)*Upp::EditorSyntax::SpellCheckComments(int)!void SpellCheckComments(int lang)\u0003Upp\u0012SPELLCHECKCOMMENTS\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ü\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ü\u0000\u0000\u0000K\u0000\u0000\u0000Ü\u0000\u0000\u0000\u0001\u0000\u0000\fEditorSyntax\avoid ()!Upp::EditorSyntax::EditorSyntax()\u000EEditorSyntax()\u0003Upp\fEDITORSYNTAX\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000à\u0000\u0000\u0000\u0001\u0000\u0000\u0000à\u0000\u0000\u0000@\u0000\u0000\u0000â\u0000\u0000\u0000\u0000\u0000\u0001\bRegister\"void (char *, int, char *, char *)2Upp::EditorSyntax::Register(char*,int,char*,char*)Jstatic void Register(char *id, int factory, char *exts, char *description)\u0003Upp\bREGISTER\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u001A\u0000\u0000\u0000ä\u0000\u0000\u0000\u0001\u0000\u0000\u0000ä\u0000\u0000\u00000\u0000\u0000\u0000ä\u0000\u0000\u0000\u0000\u0000\u0001\u0006Create\u001AOne<EditorSyntax> (char *) Upp::EditorSyntax::Create(char*))static One<EditorSyntax> Create(char *id)\u0003Upp\u0006CREATE\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u001A\u0000\u0000\u0000ã\u0000\u0000\u0000\u0001\u0000\u0000\u0000ã\u0000\u0000\u0000>\u0000\u0000\u0000ã\u0000\u0000\u0000\u0000\u0000\u0001\u0014GetSyntaxForFilename\u000FString (char *).Upp::EditorSyntax::GetSyntaxForFilename(char*),static String GetSyntaxForFilename(char *fn)\u0003Upp\u0014GETSYNTAXFORFILENAME\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u001A\u0000\u0000\u0000å\u0000\u0000\u0000\u0001\u0000\u0000\u0000å\u0000\u0000\u0000T\u0000\u0000\u0000å\u0000\u0000\u0000\u0001\u0000\u0001\u000EGetSyntaxCount\u0006int ()#Upp::EditorSyntax::GetSyntaxCount()\u001Bstatic int GetSyntaxCount()\u0003Upp\u000EGETSYNTAXCOUNT\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u001A\u0000\u0000\u0000ç\u0000\u0000\u0000\u0001\u0000\u0000\u0000ç\u0000\u0000\u0000S\u0000\u0000\u0000ç\u0000\u0000\u0000\u0001\u0000\u0001\tGetSyntax\fString (int)!Upp::EditorSyntax::GetSyntax(int)\u001Estatic String GetSyntax(int i)\u0003Upp\tGETSYNTAX\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u001A\u0000\u0000\u0000é\u0000\u0000\u0000\u0001\u0000\u0000\u0000é\u0000\u0000\u00005\u0000\u0000\u0000é\u0000\u0000\u0000\u0000\u0000\u0001\u0014GetSyntaxDescription\fString (int),Upp::EditorSyntax::GetSyntaxDescription(int))static String GetSyntaxDescription(int i)\u0003Upp\u0014GETSYNTAXDESCRIPTION\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u001A\u0000\u0000\u0000è\u0000\u0000\u0000\u0001\u0000\u0000\u0000è\u0000\u0000\u0000U\u0000\u0000\u0000è\u0000\u0000\u0000\u0001\u0000\u0001\u0011GetSyntaxPatterns\fString (int))Upp::EditorSyntax::GetSyntaxPatterns(int)&static String GetSyntaxPatterns(int i)\u0003Upp\u0011GETSYNTAXPATTERNS\u0011Upp::EditorSyntax\u0011UPP::EDITORSYNTAX\u0000\u0000end\u0000\u0013H\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\hl_color.i","value":"data8\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0001\u0000\u0000\nINK_NORMAL[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)\u001FUpp::HighlightSetup::INK_NORMAL\nINK_NORMAL\u0003Upp\nINK_NORMAL\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0001\u0000\u0000\fPAPER_NORMAL[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)!Upp::HighlightSetup::PAPER_NORMAL\fPAPER_NORMAL\u0003Upp\fPAPER_NORMAL\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\fINK_SELECTED[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)!Upp::HighlightSetup::INK_SELECTED\fINK_SELECTED\u0003Upp\fINK_SELECTED\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0001\u0000\u0000\u000EPAPER_SELECTED[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)#Upp::HighlightSetup::PAPER_SELECTED\u000EPAPER_SELECTED\u0003Upp\u000EPAPER_SELECTED\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\fINK_DISABLED[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)!Upp::HighlightSetup::INK_DISABLED\fINK_DISABLED\u0003Upp\fINK_DISABLED\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u000EPAPER_READONLY[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)#Upp::HighlightSetup::PAPER_READONLY\u000EPAPER_READONLY\u0003Upp\u000EPAPER_READONLY\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0001\u0000\u0000\vINK_COMMENT[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2) Upp::HighlightSetup::INK_COMMENT\vINK_COMMENT\u0003Upp\vINK_COMMENT\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0000\u0000\u0010INK_COMMENT_WORD[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)%Upp::HighlightSetup::INK_COMMENT_WORD\u0010INK_COMMENT_WORD\u0003Upp\u0010INK_COMMENT_WORD\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\v\u0000\u0000\u0000\u0000\u0000\u0000\u0000\v\u0000\u0000\u0000\u0000\u0000\u0000\u0000\v\u0000\u0000\u0000\u0001\u0000\u0000\u0012PAPER_COMMENT_WORD[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)'Upp::HighlightSetup::PAPER_COMMENT_WORD\u0012PAPER_COMMENT_WORD\u0003Upp\u0012PAPER_COMMENT_WORD\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0001\u0000\u0000\u0010INK_CONST_STRING[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)%Upp::HighlightSetup::INK_CONST_STRING\u0010INK_CONST_STRING\u0003Upp\u0010INK_CONST_STRING\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0012INK_CONST_STRINGOP[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)'Upp::HighlightSetup::INK_CONST_STRINGOP\u0012INK_CONST_STRINGOP\u0003Upp\u0012INK_CONST_STRINGOP\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0001\u0000\u0000\u000EINK_RAW_STRING[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)#Upp::HighlightSetup::INK_RAW_STRING\u000EINK_RAW_STRING\u0003Upp\u000EINK_RAW_STRING\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\fINK_OPERATOR[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)!Upp::HighlightSetup::INK_OPERATOR\fINK_OPERATOR\u0003Upp\fINK_OPERATOR\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\vINK_KEYWORD[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2) Upp::HighlightSetup::INK_KEYWORD\vINK_KEYWORD\u0003Upp\vINK_KEYWORD\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0011INK_BREAK_KEYWORD[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)&Upp::HighlightSetup::INK_BREAK_KEYWORD\u0011INK_BREAK_KEYWORD\u0003Upp\u0011INK_BREAK_KEYWORD\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0000\aINK_UPP[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)\u001CUpp::HighlightSetup::INK_UPP\aINK_UPP\u0003Upp\aINK_UPP\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0000\u0000\tPAPER_LNG[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)\u001EUpp::HighlightSetup::PAPER_LNG\tPAPER_LNG\u0003Upp\tPAPER_LNG\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0001\u0000\u0000\tINK_ERROR[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)\u001EUpp::HighlightSetup::INK_ERROR\tINK_ERROR\u0003Upp\tINK_ERROR\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0001\u0000\u0000\bINK_PAR0[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)\u001DUpp::HighlightSetup::INK_PAR0\bINK_PAR0\u0003Upp\bINK_PAR0\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0000\bINK_PAR1[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)\u001DUpp::HighlightSetup::INK_PAR1\bINK_PAR1\u0003Upp\bINK_PAR1\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\bINK_PAR2[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)\u001DUpp::HighlightSetup::INK_PAR2\bINK_PAR2\u0003Upp\bINK_PAR2\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\bINK_PAR3[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)\u001DUpp::HighlightSetup::INK_PAR3\bINK_PAR3\u0003Upp\bINK_PAR3\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0000\rINK_CONST_INT[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)\"Upp::HighlightSetup::INK_CONST_INT\rINK_CONST_INT\u0003Upp\rINK_CONST_INT\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0001\u0000\u0000\u000FINK_CONST_FLOAT[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)$Upp::HighlightSetup::INK_CONST_FLOAT\u000FINK_CONST_FLOAT\u0003Upp\u000FINK_CONST_FLOAT\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0000\u0000\rINK_CONST_HEX[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)\"Upp::HighlightSetup::INK_CONST_HEX\rINK_CONST_HEX\u0003Upp\rINK_CONST_HEX\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0000\rINK_CONST_OCT[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)\"Upp::HighlightSetup::INK_CONST_OCT\rINK_CONST_OCT\u0003Upp\rINK_CONST_OCT\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0001\u0000\u0000\u000EPAPER_BRACKET0[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)#Upp::HighlightSetup::PAPER_BRACKET0\u000EPAPER_BRACKET0\u0003Upp\u000EPAPER_BRACKET0\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\rPAPER_BRACKET[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)\"Upp::HighlightSetup::PAPER_BRACKET\rPAPER_BRACKET\u0003Upp\rPAPER_BRACKET\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\"\u0000\u0000\u0000\u0001\u0000\u0000\fPAPER_BLOCK1[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)!Upp::HighlightSetup::PAPER_BLOCK1\fPAPER_BLOCK1\u0003Upp\fPAPER_BLOCK1\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000#\u0000\u0000\u0000\u0000\u0000\u0000\u0000#\u0000\u0000\u0000\u0000\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\fPAPER_BLOCK2[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)!Upp::HighlightSetup::PAPER_BLOCK2\fPAPER_BLOCK2\u0003Upp\fPAPER_BLOCK2\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000$\u0000\u0000\u0000\u0000\u0000\u0000\u0000$\u0000\u0000\u0000\u0000\u0000\u0000\u0000$\u0000\u0000\u0000\u0001\u0000\u0000\fPAPER_BLOCK3[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)!Upp::HighlightSetup::PAPER_BLOCK3\fPAPER_BLOCK3\u0003Upp\fPAPER_BLOCK3\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0000%\u0000\u0000\u0000\u0001\u0000\u0000\fPAPER_BLOCK4[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)!Upp::HighlightSetup::PAPER_BLOCK4\fPAPER_BLOCK4\u0003Upp\fPAPER_BLOCK4\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000'\u0000\u0000\u0000\u0000\u0000\u0000\u0000'\u0000\u0000\u0000\u0000\u0000\u0000\u0000'\u0000\u0000\u0000\u0001\u0000\u0000\tINK_MACRO[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)\u001EUpp::HighlightSetup::INK_MACRO\tINK_MACRO\u0003Upp\tINK_MACRO\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0001\u0000\u0000\vPAPER_MACRO[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2) Upp::HighlightSetup::PAPER_MACRO\vPAPER_MACRO\u0003Upp\vPAPER_MACRO\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000)\u0000\u0000\u0000\u0000\u0000\u0000\u0000)\u0000\u0000\u0000\u0000\u0000\u0000\u0000)\u0000\u0000\u0000\u0001\u0000\u0000\vPAPER_IFDEF[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2) Upp::HighlightSetup::PAPER_IFDEF\vPAPER_IFDEF\u0003Upp\vPAPER_IFDEF\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000*\u0000\u0000\u0000\u0000\u0000\u0000\u0000*\u0000\u0000\u0000\u0000\u0000\u0000\u0000*\u0000\u0000\u0000\u0001\u0000\u0000\tINK_IFDEF[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)\u001EUpp::HighlightSetup::INK_IFDEF\tINK_IFDEF\u0003Upp\tINK_IFDEF\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000,\u0000\u0000\u0000\u0000\u0000\u0000\u0000,\u0000\u0000\u0000\u0000\u0000\u0000\u0000,\u0000\u0000\u0000\u0001\u0000\u0000\tINK_UPPER[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)\u001EUpp::HighlightSetup::INK_UPPER\tINK_UPPER\u0003Upp\tINK_UPPER\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000-\u0000\u0000\u0000\u0000\u0000\u0000\u0000-\u0000\u0000\u0000\u0000\u0000\u0000\u0000-\u0000\u0000\u0000\u0001\u0000\u0000\vINK_SQLBASE[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2) Upp::HighlightSetup::INK_SQLBASE\vINK_SQLBASE\u0003Upp\vINK_SQLBASE\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000.\u0000\u0000\u0000\u0000\u0000\u0000\u0000.\u0000\u0000\u0000\u0000\u0000\u0000\u0000.\u0000\u0000\u0000\u0001\u0000\u0000\vINK_SQLFUNC[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2) Upp::HighlightSetup::INK_SQLFUNC\vINK_SQLFUNC\u0003Upp\vINK_SQLFUNC\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000/\u0000\u0000\u0000\u0000\u0000\u0000\u0000/\u0000\u0000\u0000\u0000\u0000\u0000\u0000/\u0000\u0000\u0000\u0001\u0000\u0000\vINK_SQLBOOL[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2) Upp::HighlightSetup::INK_SQLBOOL\vINK_SQLBOOL\u0003Upp\vINK_SQLBOOL\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u00000\u0000\u0000\u0000\u0000\u0000\u0000\u00000\u0000\u0000\u0000\u0000\u0000\u0000\u00000\u0000\u0000\u0000\u0001\u0000\u0000\rINK_UPPMACROS[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)\"Upp::HighlightSetup::INK_UPPMACROS\rINK_UPPMACROS\u0003Upp\rINK_UPPMACROS\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u00001\u0000\u0000\u0000\u0000\u0000\u0000\u00001\u0000\u0000\u0000\u0000\u0000\u0000\u00001\u0000\u0000\u0000\u0001\u0000\u0000\vINK_UPPLOGS[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2) Upp::HighlightSetup::INK_UPPLOGS\vINK_UPPLOGS\u0003Upp\vINK_UPPLOGS\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u00003\u0000\u0000\u0000\u0000\u0000\u0000\u00003\u0000\u0000\u0000\u0000\u0000\u0000\u00003\u0000\u0000\u0000\u0001\u0000\u0000\u0012INK_DIFF_FILE_INFO[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)'Upp::HighlightSetup::INK_DIFF_FILE_INFO\u0012INK_DIFF_FILE_INFO\u0003Upp\u0012INK_DIFF_FILE_INFO\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u00004\u0000\u0000\u0000\u0000\u0000\u0000\u00004\u0000\u0000\u0000\u0000\u0000\u0000\u00004\u0000\u0000\u0000\u0001\u0000\u0000\u000FINK_DIFF_HEADER[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)$Upp::HighlightSetup::INK_DIFF_HEADER\u000FINK_DIFF_HEADER\u0003Upp\u000FINK_DIFF_HEADER\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u00005\u0000\u0000\u0000\u0000\u0000\u0000\u00005\u0000\u0000\u0000\u0000\u0000\u0000\u00005\u0000\u0000\u0000\u0001\u0000\u0000\u000EINK_DIFF_ADDED[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)#Upp::HighlightSetup::INK_DIFF_ADDED\u000EINK_DIFF_ADDED\u0003Upp\u000EINK_DIFF_ADDED\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u00006\u0000\u0000\u0000\u0000\u0000\u0000\u00006\u0000\u0000\u0000\u0000\u0000\u0000\u00006\u0000\u0000\u0000\u0001\u0000\u0000\u0010INK_DIFF_REMOVED[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)%Upp::HighlightSetup::INK_DIFF_REMOVED\u0010INK_DIFF_REMOVED\u0003Upp\u0010INK_DIFF_REMOVED\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u00007\u0000\u0000\u0000\u0000\u0000\u0000\u00007\u0000\u0000\u0000\u0000\u0000\u0000\u00007\u0000\u0000\u0000\u0001\u0000\u0000\u0010INK_DIFF_COMMENT[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)%Upp::HighlightSetup::INK_DIFF_COMMENT\u0010INK_DIFF_COMMENT\u0003Upp\u0010INK_DIFF_COMMENT\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u00009\u0000\u0000\u0000\u0000\u0000\u0000\u00009\u0000\u0000\u0000\u0000\u0000\u0000\u00009\u0000\u0000\u0000\u0001\u0000\u0000\rPAPER_SELWORD[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)\"Upp::HighlightSetup::PAPER_SELWORD\rPAPER_SELWORD\u0003Upp\rPAPER_SELWORD\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000;\u0000\u0000\u0000\u0000\u0000\u0000\u0000;\u0000\u0000\u0000\u0000\u0000\u0000\u0000;\u0000\u0000\u0000\u0001\u0000\u0000\vPAPER_ERROR[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2) Upp::HighlightSetup::PAPER_ERROR\vPAPER_ERROR\u0003Upp\vPAPER_ERROR\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000<\u0000\u0000\u0000\u0000\u0000\u0000\u0000<\u0000\u0000\u0000\u0000\u0000\u0000\u0000<\u0000\u0000\u0000\u0001\u0000\u0000\u0010PAPER_ERROR_FILE[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)%Upp::HighlightSetup::PAPER_ERROR_FILE\u0010PAPER_ERROR_FILE\u0003Upp\u0010PAPER_ERROR_FILE\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000=\u0000\u0000\u0000\u0000\u0000\u0000\u0000=\u0000\u0000\u0000\u0000\u0000\u0000\u0000=\u0000\u0000\u0000\u0001\u0000\u0000\rPAPER_WARNING[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)\"Upp::HighlightSetup::PAPER_WARNING\rPAPER_WARNING\u0003Upp\rPAPER_WARNING\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000>\u0000\u0000\u0000\u0000\u0000\u0000\u0000>\u0000\u0000\u0000\u0000\u0000\u0000\u0000>\u0000\u0000\u0000\u0001\u0000\u0000\tSHOW_LINE[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)\u001EUpp::HighlightSetup::SHOW_LINE\tSHOW_LINE\u0003Upp\tSHOW_LINE\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000?\u0000\u0000\u0000\u0000\u0000\u0000\u0000?\u0000\u0000\u0000\u0000\u0000\u0000\u0000?\u0000\u0000\u0000\u0001\u0000\u0000\vSHOW_COLUMN[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2) Upp::HighlightSetup::SHOW_COLUMN\vSHOW_COLUMN\u0003Upp\vSHOW_COLUMN\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000A\u0000\u0000\u0000\u0000\u0000\u0000\u0000A\u0000\u0000\u0000\u0000\u0000\u0000\u0000A\u0000\u0000\u0000\u0001\u0000\u0000\nWHITESPACE[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)\u001FUpp::HighlightSetup::WHITESPACE\nWHITESPACE\u0003Upp\nWHITESPACE\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000B\u0000\u0000\u0000\u0000\u0000\u0000\u0000B\u0000\u0000\u0000\u0000\u0000\u0000\u0000B\u0000\u0000\u0000\u0001\u0000\u0000\u000FWARN_WHITESPACE[Upp::HighlightSetup::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\Syntax.h:42:2)$Upp::HighlightSetup::WARN_WHITESPACE\u000FWARN_WHITESPACE\u0003Upp\u000FWARN_WHITESPACE\u0013Upp::HighlightSetup\u0013UPP::HIGHLIGHTSETUP\u0000\u0000end\u0000G4\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CSyntax.h","value":"dataR\u0004\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000Y\u0000\u0000\u0000\u0001\u0000\u0000\aCSyntax\fUpp::CSyntax\fUpp::CSyntax\u001DCSyntax : public EditorSyntax\u0003Upp\aCSYNTAX\fUpp::CSyntax\fUPP::CSYNTAX\u0011Upp::EditorSyntax\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000 \u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0001\u0000\u0005Clear\avoid ()\u0015Upp::CSyntax::Clear()\fvoid Clear()\u0003Upp\u0005CLEAR\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000\\\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0001\u0000\nScanSyntax!void (wchar *, wchar *, int, int)/Upp::CSyntax::ScanSyntax(wchar*,wchar*,int,int)<void ScanSyntax(wchar *ln, wchar *e, int line, int tab_size)\u0003Upp\nSCANSYNTAX\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000-\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0001\u0000\tSerialize\u000Fvoid (Stream &) Upp::CSyntax::Serialize(Stream&)\u0019void Serialize(Stream& s)\u0003Upp\tSERIALIZE\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0005\u0000\u0000\u0000M\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0001\u0000\fIndentInsert\u001Dvoid (CodeEditor &, int, int)/Upp::CSyntax::IndentInsert(CodeEditor&,int,int)9void IndentInsert(CodeEditor& editor, int chr, int count)\u0003Upp\fINDENTINSERT\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000P\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0001\u0000\rCheckBrackets%bool (CodeEditor &, int64 &, int64 &)6Upp::CSyntax::CheckBrackets(CodeEditor&,int64&,int64&)<bool CheckBrackets(CodeEditor& e, int64& bpos0, int64& bpos)\u0003Upp\rCHECKBRACKETS\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000\a\u0000\u0000\u0000$\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0001\u0000\tCanAssist\abool ()\u0019Upp::CSyntax::CanAssist()\u0010bool CanAssist()\u0003Upp\tCANASSIST\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\b\u0000\u0000\u0000K\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0001\u0000\tHighlightDvoid (wchar *, wchar *, HighlightOutput &, CodeEditor *, int, int64)MUpp::CSyntax::Highlight(wchar*,wchar*,HighlightOutput&,CodeEditor*,int,int64)cvoid Highlight(wchar *s, wchar *end, HighlightOutput& hls, CodeEditor *editor, int line, int64 pos)\u0003Upp\tHIGHLIGHT\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0000\u0000\u0000\n\u0000\u0000\u0000Z\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0001\u0000\u0012CheckSyntaxRefresh%void (CodeEditor &, int64, WString &)<Upp::CSyntax::CheckSyntaxRefresh(CodeEditor&,int64,WString&)@void CheckSyntaxRefresh(CodeEditor& e, int64 pos, WString& text)\u0003Upp\u0012CHECKSYNTAXREFRESH\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000\v\u0000\u0000\u0000\u0001\u0000\u0000\u0000\v\u0000\u0000\u0000&\u0000\u0000\u0000\v\u0000\u0000\u0000\u0000\u0001\u0000\vPickIfStack\u0012Vector<IfState> ()\u001BUpp::CSyntax::PickIfStack()\u001DVector<IfState> PickIfStack()\u0003Upp\vPICKIFSTACK\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000\f\u0000\u0000\u0000\u0001\u0000\u0000\u0000\f\u0000\u0000\u00007\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0001\u0000\u000FReformatComment\u0013void (CodeEditor &)*Upp::CSyntax::ReformatComment(CodeEditor&)#void ReformatComment(CodeEditor& e)\u0003Upp\u000FREFORMATCOMMENT\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0000\r\u0000\u0000\u0000I\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0001\u0000\u000EGetBlockHeader\u0017bool (Point &, Point &)+Upp::CSyntax::GetBlockHeader(Point&,Point&)5bool GetBlockHeader(Point& blk_start, Point& blk_end)\u0003Upp\u000EGETBLOCKHEADER\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\acomment\u0004bool\u0015Upp::CSyntax::comment\fbool comment\u0003Upp\aCOMMENT\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\vlinecomment\u0004bool\u0019Upp::CSyntax::linecomment\u0010bool linecomment\u0003Upp\vLINECOMMENT\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0000\u0006string\u0004bool\u0014Upp::CSyntax::string\vbool string\u0003Upp\u0006STRING\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0000\u0000\blinecont\u0004bool\u0016Upp::CSyntax::linecont\rbool linecont\u0003Upp\bLINECONT\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0001\u0000\u0000\rwas_namespace\u0004bool\u001BUpp::CSyntax::was_namespace\u0012bool was_namespace\u0003Upp\rWAS_NAMESPACE\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0001\u0000\u0000\nraw_string\aWString\u0018Upp::CSyntax::raw_string\u0012WString raw_string\u0003Upp\nRAW_STRING\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0000\u0005macro\u0004char\u0013Upp::CSyntax::macro\nchar macro\u0003Upp\u0005MACRO\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0005\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0001\u0000\u0000G(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CSyntax.h:24:2)UUpp::CSyntax::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CSyntax.h:24:2)JUpp::CSyntax::(unnamed at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CSyntax.)\u0004enum\u0003UppG(UNNAMED ENUM AT C:\\USERS\\SBLO\\AI-UPP\\UPPSRC\\CODEEDITOR\\CSYNTAX.H:24:2)\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\tMACRO_OFFUUpp::CSyntax::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CSyntax.h:24:2)\u0017Upp::CSyntax::MACRO_OFF\tMACRO_OFF\u0003Upp\tMACRO_OFF\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\a\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0000\nMACRO_CONTUUpp::CSyntax::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CSyntax.h:24:2)\u0018Upp::CSyntax::MACRO_CONT\nMACRO_CONT\u0003Upp\nMACRO_CONT\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\a\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\tMACRO_ENDUUpp::CSyntax::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\CSyntax.h:24:2)\u0017Upp::CSyntax::MACRO_END\tMACRO_END\u0003Upp\tMACRO_END\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0000\u0000\u0002cl\u0003int\u0010Upp::CSyntax::cl\u0006int cl\u0003Upp\u0002CL\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0000\u0000\u0002bl\u0003int\u0010Upp::CSyntax::bl\u0006int bl\u0003Upp\u0002BL\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0000\u0000\u0002pl\u0003int\u0010Upp::CSyntax::pl\u0006int pl\u0003Upp\u0002PL\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0001\u0000\u0000\u0003brk\vVector<int>\u0011Upp::CSyntax::brk\u000FVector<int> brk\u0003Upp\u0003BRK\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\u0011\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\u0000 \u0000\u0000\u0000\u0014\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\u0003blk\vVector<int>\u0011Upp::CSyntax::blk\u000FVector<int> blk\u0003Upp\u0003BLK\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\u0011\u0000\u0000\u0000!\u0000\u0000\u0000\u0001\u0000\u0000\u0000!\u0000\u0000\u0000\u0014\u0000\u0000\u0000!\u0000\u0000\u0000\u0001\u0000\u0000\u0003bid\vVector<int>\u0011Upp::CSyntax::bid\u000FVector<int> bid\u0003Upp\u0003BID\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\u0011\u0000\u0000\u0000\"\u0000\u0000\u0000\u0001\u0000\u0000\u0000\"\u0000\u0000\u0000\u0014\u0000\u0000\u0000\"\u0000\u0000\u0000\u0001\u0000\u0000\u0003par\vVector<Isx>\u0011Upp::CSyntax::par\u000FVector<Isx> par\u0003Upp\u0003PAR\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\u0011\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\u0000#\u0000\u0000\u0000\u0018\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\aifstack\u000FVector<IfState>\u0015Upp::CSyntax::ifstack\u0017Vector<IfState> ifstack\u0003Upp\aIFSTACK\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000%\u0000\u0000\u0000\u0001\u0000\u0000\u0000%\u0000\u0000\u0000\u0016\u0000\u0000\u0000%\u0000\u0000\u0000\u0001\u0000\u0000\tblk_start\u0005Point\u0017Upp::CSyntax::blk_start\u000FPoint blk_start\u0003Upp\tBLK_START\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000&\u0000\u0000\u0000\u0001\u0000\u0000\u0000&\u0000\u0000\u0000\u0014\u0000\u0000\u0000&\u0000\u0000\u0000\u0001\u0000\u0000\ablk_end\u0005Point\u0015Upp::CSyntax::blk_end\rPoint blk_end\u0003Upp\aBLK_END\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000(\u0000\u0000\u0000\u0001\u0000\u0000\u0000(\u0000\u0000\u0000\u0015\u0000\u0000\u0000(\u0000\u0000\u0000\u0001\u0000\u0000\bstmtline\u0003int\u0016Upp::CSyntax::stmtline\fint stmtline\u0003Upp\bSTMTLINE\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000)\u0000\u0000\u0000\u0001\u0000\u0000\u0000)\u0000\u0000\u0000\u0018\u0000\u0000\u0000)\u0000\u0000\u0000\u0001\u0000\u0000\vendstmtline\u0003int\u0019Upp::CSyntax::endstmtline\u000Fint endstmtline\u0003Upp\vENDSTMTLINE\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000*\u0000\u0000\u0000\u0001\u0000\u0000\u0000*\u0000\u0000\u0000\u0013\u0000\u0000\u0000*\u0000\u0000\u0000\u0001\u0000\u0000\u0006seline\u0003int\u0014Upp::CSyntax::seline\nint seline\u0003Upp\u0006SELINE\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000+\u0000\u0000\u0000\u0001\u0000\u0000\u0000+\u0000\u0000\u0000\u0011\u0000\u0000\u0000+\u0000\u0000\u0000\u0001\u0000\u0000\u0004spar\u0003int\u0012Upp::CSyntax::spar\bint spar\u0003Upp\u0004SPAR\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000-\u0000\u0000\u0000\u0001\u0000\u0000\u0000-\u0000\u0000\u0000\u0016\u0000\u0000\u0000-\u0000\u0000\u0000\u0001\u0000\u0000\thighlight\u0003int\u0017Upp::CSyntax::highlight\rint highlight\u0003Upp\tHIGHLIGHT\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000/\u0000\u0000\u0000\u0001\u0000\u0000\u0000/\u0000\u0000\u0000$\u0000\u0000\u0000/\u0000\u0000\u0000\u0000\u0000\u0001\aInitUpp\rint (char **)\u001DUpp::CSyntax::InitUpp(char**)\u001Cstatic int InitUpp(char **q)\u0003Upp\aINITUPP\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u00000\u0000\u0000\u0000\u0001\u0000\u0000\u00000\u0000\u0000\u0000\u001B\u0000\u0000\u00000\u0000\u0000\u0000\u0000\u0000\u0001\fInitKeywords\avoid ()\u001CUpp::CSyntax::InitKeywords()\u001Astatic void InitKeywords()\u0003Upp\fINITKEYWORDS\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u00001\u0000\u0000\u0000\a\u0000\u0000\u00001\u0000\u0000\u0000M\u0000\u0000\u00001\u0000\u0000\u0000\u0000\u0000\u0000\tDoComment,wchar *(HighlightOutput &, wchar *, wchar *)7Upp::CSyntax::DoComment(HighlightOutput&,wchar*,wchar*):wchar *DoComment(HighlightOutput& hls, wchar *p, wchar *e)\u0003Upp\tDOCOMMENT\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\t\u0000\u0000\u0000\u001E\u0000\u0000\u00003\u0000\u0000\u0000\u0001\u0000\u0000\u00003\u0000\u0000\u0000%\u0000\u0000\u00003\u0000\u0000\u0000\u0000\u0000\u0001\akeyword\u0015Vector<Index<String>>\u0015Upp::CSyntax::keyword$static Vector<Index<String>> keyword\u0003Upp\aKEYWORD\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\t\u0000\u0000\u0000\u0014\u0000\u0000\u00004\u0000\u0000\u0000\u0001\u0000\u0000\u00004\u0000\u0000\u0000\u001C\u0000\u0000\u00004\u0000\u0000\u0000\u0000\u0000\u0001\bbreakers\vVector<int>\u0016Upp::CSyntax::breakers\u001Bstatic Vector<int> breakers\u0003Upp\bBREAKERS\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\t\u0000\u0000\u0000\u001E\u0000\u0000\u00005\u0000\u0000\u0000\u0001\u0000\u0000\u00005\u0000\u0000\u0000\"\u0000\u0000\u00005\u0000\u0000\u0000\u0000\u0000\u0001\u0004name\u0015Vector<Index<String>>\u0012Upp::CSyntax::name!static Vector<Index<String>> name\u0003Upp\u0004NAME\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\t\u0000\u0000\u0000\u0016\u0000\u0000\u00006\u0000\u0000\u0000\u0001\u0000\u0000\u00006\u0000\u0000\u0000\u001C\u0000\u0000\u00006\u0000\u0000\u0000\u0000\u0000\u0001\u0006kw_upp\rIndex<String>\u0014Upp::CSyntax::kw_upp\u001Bstatic Index<String> kw_upp\u0003Upp\u0006KW_UPP\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\t\u0000\u0000\u0000\f\u0000\u0000\u00007\u0000\u0000\u0000\u0001\u0000\u0000\u00007\u0000\u0000\u0000\u0015\u0000\u0000\u00007\u0000\u0000\u0000\u0000\u0000\u0001\tkw_macros\u0003int\u0017Upp::CSyntax::kw_macros\u0014static int kw_macros\u0003Upp\tKW_MACROS\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\t\u0000\u0000\u0000\u0017\u0000\u0000\u00007\u0000\u0000\u0000\u0001\u0000\u0000\u00007\u0000\u0000\u0000\u001E\u0000\u0000\u00007\u0000\u0000\u0000\u0000\u0000\u0001\akw_logs\u0003int\u0015Upp::CSyntax::kw_logs\u0012static int kw_logs\u0003Upp\aKW_LOGS\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\t\u0000\u0000\u0000 \u0000\u0000\u00007\u0000\u0000\u0000\u0001\u0000\u0000\u00007\u0000\u0000\u0000+\u0000\u0000\u00007\u0000\u0000\u0000\u0000\u0000\u0001\vkw_sql_base\u0003int\u0019Upp::CSyntax::kw_sql_base\u0016static int kw_sql_base\u0003Upp\vKW_SQL_BASE\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\t\u0000\u0000\u0000-\u0000\u0000\u00007\u0000\u0000\u0000\u0001\u0000\u0000\u00007\u0000\u0000\u00008\u0000\u0000\u00007\u0000\u0000\u0000\u0000\u0000\u0001\vkw_sql_func\u0003int\u0019Upp::CSyntax::kw_sql_func\u0016static int kw_sql_func\u0003Upp\vKW_SQL_FUNC\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000:\u0000\u0000\u0000\u0001\u0000\u0000\u0000:\u0000\u0000\u0000#\u0000\u0000\u0000:\u0000\u0000\u0000\u0000\u0000\u0001\nBlockColor\vColor (int)\u001DUpp::CSyntax::BlockColor(int)\"static Color BlockColor(int level)\u0003Upp\nBLOCKCOLOR\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\t\u0000\u0000\u0000<\u0000\u0000\u0000\u0001\u0000\u0000\u0000<\u0000\u0000\u00009\u0000\u0000\u0000<\u0000\u0000\u0000\u0000\u0000\u0000\rGetCommentPos\"int (CodeEditor &, int, WString &)5Upp::CSyntax::GetCommentPos(CodeEditor&,int,WString&)4int GetCommentPos(CodeEditor& e, int l, WString& ch)\u0003Upp\rGETCOMMENTPOS\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\t\u0000\u0000\u0000=\u0000\u0000\u0000\u0001\u0000\u0000\u0000=\u0000\u0000\u0000c\u0000\u0000\u0000=\u0000\u0000\u0000\u0001\u0000\u0000\rGetCommentHdr\u001BWString (CodeEditor &, int),Upp::CSyntax::GetCommentHdr(CodeEditor&,int)+WString GetCommentHdr(CodeEditor& e, int l)\u0003Upp\rGETCOMMENTHDR\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\t\u0000\u0000\u0000>\u0000\u0000\u0000\u0001\u0000\u0000\u0000>\u0000\u0000\u0000H\u0000\u0000\u0000>\u0000\u0000\u0000\u0000\u0000\u0000\rIndentInsert0#void (CodeEditor &, int, int, bool)5Upp::CSyntax::IndentInsert0(CodeEditor&,int,int,bool)Dvoid IndentInsert0(CodeEditor& e, int chr, int count, bool reformat)\u0003Upp\rINDENTINSERT0\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000@\u0000\u0000\u0000\u0001\u0000\u0000\u0000@\u0000\u0000\u0000B\u0000\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\aBracket-void (int64, HighlightOutput &, CodeEditor *)9Upp::CSyntax::Bracket(int64,HighlightOutput&,CodeEditor*)Avoid Bracket(int64 pos, HighlightOutput& hls, CodeEditor *editor)\u0003Upp\aBRACKET\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\a\u0000\u0000\u0000B\u0000\u0000\u0000\u0001\u0000\u0000\u0000B\u0000\u0000\u0000\u0014\u0000\u0000\u0000B\u0000\u0000\u0000\u0000\u0000\u0000\vClearBraces\avoid ()\u001BUpp::CSyntax::ClearBraces()\u0012void ClearBraces()\u0003Upp\vCLEARBRACES\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\a\u0000\u0000\u0000D\u0000\u0000\u0000\u0001\u0000\u0000\u0000D\u0000\u0000\u00001\u0000\u0000\u0000D\u0000\u0000\u0000\u0000\u0000\u0000\tGrounding\u0017void (wchar *, wchar *)&Upp::CSyntax::Grounding(wchar*,wchar*)#void Grounding(wchar *ln, wchar *e)\u0003Upp\tGROUNDING\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000F\u0000\u0000\u0000\u0001\u0000\u0000\u0000F\u0000\u0000\u0000Ö\u0000\u0000\u0000F\u0000\u0000\u0000\u0000\u0000\u0000\fCheckBracketRbool (CodeEditor &, int, int64, int64, int64, WString, int, int, int64 &, int64 &)[Upp::CSyntax::CheckBracket(CodeEditor&,int,int64,int64,int64,WString,int,int,int64&,int64&)ˇÑ\u0000\u0000\u0000bool CheckBracket(CodeEditor& e, int li, int64 pos, int64 ppos, int64 pos0, WString ln, int d, int limit, int64& bpos0, int64& bpos)\u0003Upp\fCHECKBRACKET\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000G\u0000\u0000\u0000\u0001\u0000\u0000\u0000G\u0000\u0000\u0000K\u0000\u0000\u0000G\u0000\u0000\u0000\u0000\u0000\u0000\u0010CheckLeftBracket,bool (CodeEditor &, int64, int64 &, int64 &)?Upp::CSyntax::CheckLeftBracket(CodeEditor&,int64,int64&,int64&)Jbool CheckLeftBracket(CodeEditor& e, int64 pos, int64& bpos0, int64& bpos)\u0003Upp\u0010CHECKLEFTBRACKET\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000H\u0000\u0000\u0000\u0001\u0000\u0000\u0000H\u0000\u0000\u0000L\u0000\u0000\u0000H\u0000\u0000\u0000\u0000\u0000\u0000\u0011CheckRightBracket,bool (CodeEditor &, int64, int64 &, int64 &)@Upp::CSyntax::CheckRightBracket(CodeEditor&,int64,int64&,int64&)Kbool CheckRightBracket(CodeEditor& e, int64 pos, int64& bpos0, int64& bpos)\u0003Upp\u0011CHECKRIGHTBRACKET\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000J\u0000\u0000\u0000\u0001\u0000\u0000\u0000J\u0000\u0000\u0000'\u0000\u0000\u0000J\u0000\u0000\u0000\u0000\u0000\u0000\tRawString\u0015bool (wchar *, int &)$Upp::CSyntax::RawString(wchar*,int&) bool RawString(wchar *p, int& n)\u0003Upp\tRAWSTRING\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000M\u0000\u0000\u0000\u0001\u0000\u0000\u0000M\u0000\u0000\u0000D\u0000\u0000\u0000M\u0000\u0000\u0000\u0000\u0000\u0001\nLoadSyntax\u0016int (char **, char **))Upp::CSyntax::LoadSyntax(char*[],char*[])6static int LoadSyntax(char *keywords[], char *names[])\u0003Upp\nLOADSYNTAX\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0005\u0000\u0000\u0000\u0006\u0000\u0000\u0000O\u0000\u0000\u0000\u0001\u0000\u0000\u0000O\u0000\u0000\u0000\u0002\u0000\u0000\u0000T\u0000\u0000\u0000\u0001\u0000\u0000\rHighlightType\u001BUpp::CSyntax::HighlightType\u001BUpp::CSyntax::HighlightType\u0012enum HighlightType\u0003Upp\rHIGHLIGHTTYPE\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000P\u0000\u0000\u0000\u0002\u0000\u0000\u0000P\u0000\u0000\u0000\u0015\u0000\u0000\u0000P\u0000\u0000\u0000\u0001\u0000\u0000\u000EHIGHLIGHT_NONE\u001BUpp::CSyntax::HighlightType\u001CUpp::CSyntax::HIGHLIGHT_NONE\u000EHIGHLIGHT_NONE\u0003Upp\u000EHIGHLIGHT_NONE\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\a\u0000\u0000\u0000\u0017\u0000\u0000\u0000P\u0000\u0000\u0000\u0017\u0000\u0000\u0000P\u0000\u0000\u0000(\u0000\u0000\u0000P\u0000\u0000\u0000\u0001\u0000\u0000\rHIGHLIGHT_CPP\u001BUpp::CSyntax::HighlightType\u001BUpp::CSyntax::HIGHLIGHT_CPP\rHIGHLIGHT_CPP\u0003Upp\rHIGHLIGHT_CPP\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\a\u0000\u0000\u0000*\u0000\u0000\u0000P\u0000\u0000\u0000*\u0000\u0000\u0000P\u0000\u0000\u00007\u0000\u0000\u0000P\u0000\u0000\u0000\u0001\u0000\u0000\rHIGHLIGHT_USC\u001BUpp::CSyntax::HighlightType\u001BUpp::CSyntax::HIGHLIGHT_USC\rHIGHLIGHT_USC\u0003Upp\rHIGHLIGHT_USC\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\a\u0000\u0000\u00009\u0000\u0000\u0000P\u0000\u0000\u00009\u0000\u0000\u0000P\u0000\u0000\u0000G\u0000\u0000\u0000P\u0000\u0000\u0000\u0001\u0000\u0000\u000EHIGHLIGHT_JAVA\u001BUpp::CSyntax::HighlightType\u001CUpp::CSyntax::HIGHLIGHT_JAVA\u000EHIGHLIGHT_JAVA\u0003Upp\u000EHIGHLIGHT_JAVA\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\a\u0000\u0000\u0000I\u0000\u0000\u0000P\u0000\u0000\u0000I\u0000\u0000\u0000P\u0000\u0000\u0000T\u0000\u0000\u0000P\u0000\u0000\u0000\u0001\u0000\u0000\vHIGHLIGHT_T\u001BUpp::CSyntax::HighlightType\u0019Upp::CSyntax::HIGHLIGHT_T\vHIGHLIGHT_T\u0003Upp\vHIGHLIGHT_T\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000Q\u0000\u0000\u0000\u0002\u0000\u0000\u0000Q\u0000\u0000\u0000\u0010\u0000\u0000\u0000Q\u0000\u0000\u0000\u0001\u0000\u0000\u000EHIGHLIGHT_CALC\u001BUpp::CSyntax::HighlightType\u001CUpp::CSyntax::HIGHLIGHT_CALC\u000EHIGHLIGHT_CALC\u0003Upp\u000EHIGHLIGHT_CALC\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\a\u0000\u0000\u0000\u0012\u0000\u0000\u0000Q\u0000\u0000\u0000\u0012\u0000\u0000\u0000Q\u0000\u0000\u0000\u001F\u0000\u0000\u0000Q\u0000\u0000\u0000\u0001\u0000\u0000\rHIGHLIGHT_LAY\u001BUpp::CSyntax::HighlightType\u001BUpp::CSyntax::HIGHLIGHT_LAY\rHIGHLIGHT_LAY\u0003Upp\rHIGHLIGHT_LAY\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\a\u0000\u0000\u0000!\u0000\u0000\u0000Q\u0000\u0000\u0000!\u0000\u0000\u0000Q\u0000\u0000\u0000.\u0000\u0000\u0000Q\u0000\u0000\u0000\u0001\u0000\u0000\rHIGHLIGHT_SCH\u001BUpp::CSyntax::HighlightType\u001BUpp::CSyntax::HIGHLIGHT_SCH\rHIGHLIGHT_SCH\u0003Upp\rHIGHLIGHT_SCH\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\a\u0000\u0000\u00000\u0000\u0000\u0000Q\u0000\u0000\u00000\u0000\u0000\u0000Q\u0000\u0000\u0000=\u0000\u0000\u0000Q\u0000\u0000\u0000\u0001\u0000\u0000\rHIGHLIGHT_SQL\u001BUpp::CSyntax::HighlightType\u001BUpp::CSyntax::HIGHLIGHT_SQL\rHIGHLIGHT_SQL\u0003Upp\rHIGHLIGHT_SQL\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\a\u0000\u0000\u0000?\u0000\u0000\u0000Q\u0000\u0000\u0000?\u0000\u0000\u0000Q\u0000\u0000\u0000K\u0000\u0000\u0000Q\u0000\u0000\u0000\u0001\u0000\u0000\fHIGHLIGHT_CS\u001BUpp::CSyntax::HighlightType\u001AUpp::CSyntax::HIGHLIGHT_CS\fHIGHLIGHT_CS\u0003Upp\fHIGHLIGHT_CS\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000R\u0000\u0000\u0000\u0002\u0000\u0000\u0000R\u0000\u0000\u0000\u0016\u0000\u0000\u0000R\u0000\u0000\u0000\u0001\u0000\u0000\u0014HIGHLIGHT_JAVASCRIPT\u001BUpp::CSyntax::HighlightType\"Upp::CSyntax::HIGHLIGHT_JAVASCRIPT\u0014HIGHLIGHT_JAVASCRIPT\u0003Upp\u0014HIGHLIGHT_JAVASCRIPT\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\a\u0000\u0000\u0000\u0018\u0000\u0000\u0000R\u0000\u0000\u0000\u0018\u0000\u0000\u0000R\u0000\u0000\u0000%\u0000\u0000\u0000R\u0000\u0000\u0000\u0001\u0000\u0000\rHIGHLIGHT_CSS\u001BUpp::CSyntax::HighlightType\u001BUpp::CSyntax::HIGHLIGHT_CSS\rHIGHLIGHT_CSS\u0003Upp\rHIGHLIGHT_CSS\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\a\u0000\u0000\u0000'\u0000\u0000\u0000R\u0000\u0000\u0000'\u0000\u0000\u0000R\u0000\u0000\u00005\u0000\u0000\u0000R\u0000\u0000\u0000\u0001\u0000\u0000\u000EHIGHLIGHT_JSON\u001BUpp::CSyntax::HighlightType\u001CUpp::CSyntax::HIGHLIGHT_JSON\u000EHIGHLIGHT_JSON\u0003Upp\u000EHIGHLIGHT_JSON\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\a\u0000\u0000\u00007\u0000\u0000\u0000R\u0000\u0000\u00007\u0000\u0000\u0000R\u0000\u0000\u0000D\u0000\u0000\u0000R\u0000\u0000\u0000\u0001\u0000\u0000\rHIGHLIGHT_PHP\u001BUpp::CSyntax::HighlightType\u001BUpp::CSyntax::HIGHLIGHT_PHP\rHIGHLIGHT_PHP\u0003Upp\rHIGHLIGHT_PHP\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000S\u0000\u0000\u0000\u0002\u0000\u0000\u0000S\u0000\u0000\u0000\u0011\u0000\u0000\u0000S\u0000\u0000\u0000\u0001\u0000\u0000\u000FHIGHLIGHT_COUNT\u001BUpp::CSyntax::HighlightType\u001DUpp::CSyntax::HIGHLIGHT_COUNT\u000FHIGHLIGHT_COUNT\u0003Upp\u000FHIGHLIGHT_COUNT\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\t\u0000\u0000\u0000V\u0000\u0000\u0000\u0001\u0000\u0000\u0000V\u0000\u0000\u00009\u0000\u0000\u0000V\u0000\u0000\u0000\u0001\u0000\u0000\fSetHighlight\nvoid (int)\u001FUpp::CSyntax::SetHighlight(int)\u0018void SetHighlight(int h)\u0003Upp\fSETHIGHLIGHT\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000X\u0000\u0000\u0000\u0001\u0000\u0000\u0000X\u0000\u0000\u00003\u0000\u0000\u0000X\u0000\u0000\u0000\u0001\u0000\u0000\aCSyntax\avoid ()\u0017Upp::CSyntax::CSyntax()\tCSyntax()\u0003Upp\aCSYNTAX\fUpp::CSyntax\fUPP::CSYNTAX\u0000\u0000\b\u0000\u0000\u0000\r\u0000\u0000\u0000[\u0000\u0000\u0000\u0006\u0000\u0000\u0000[\u0000\u0000\u0000a\u0000\u0000\u0000[\u0000\u0000\u0000\u0000\u0000\u0000\u000FHighlightNumber5wchar *(HighlightOutput &, wchar *, bool, bool, bool)<Upp::HighlightNumber(HighlightOutput&,wchar*,bool,bool,bool)Uwchar *HighlightNumber(HighlightOutput& hls, wchar *p, bool ts, bool octal, bool css)\u0003Upp\u000FHIGHLIGHTNUMBER\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\r\u0000\u0000\u0000\\\u0000\u0000\u0000\u0006\u0000\u0000\u0000\\\u0000\u0000\u0000f\u0000\u0000\u0000\\\u0000\u0000\u0000\u0000\u0000\u0000\u000FHighlightHexBin.wchar *(HighlightOutput &, wchar *, int, bool)6Upp::HighlightHexBin(HighlightOutput&,wchar*,int,bool)Zwchar *HighlightHexBin(HighlightOutput& hls, wchar *p, int plen, bool thousands_separator)\u0003Upp\u000FHIGHLIGHTHEXBIN\u0003Upp\u0003UPP\u0000\u0000end\u0000e6\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\DiffSyntax.h","value":"data\t\u0004\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\nDiffSyntax\u000FUpp::DiffSyntax\u000FUpp::DiffSyntax DiffSyntax : public EditorSyntax\u0003Upp\nDIFFSYNTAX\u000FUpp::DiffSyntax\u000FUPP::DIFFSYNTAX\u0011Upp::EditorSyntax\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\r\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\nDiffSyntax\avoid ()\u001DUpp::DiffSyntax::DiffSyntax()\fDiffSyntax()\u0003Upp\nDIFFSYNTAX\u000FUpp::DiffSyntax\u000FUPP::DIFFSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000@\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0001\u0000\tHighlightDvoid (wchar *, wchar *, HighlightOutput &, CodeEditor *, int, int64)PUpp::DiffSyntax::Highlight(wchar*,wchar*,HighlightOutput&,CodeEditor*,int,int64)gvoid Highlight(wchar *start, wchar *end, HighlightOutput& hls, CodeEditor *editor, int line, int64 pos)\u0003Upp\tHIGHLIGHT\u000FUpp::DiffSyntax\u000FUPP::DIFFSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\b\u0000\u0000\u00007\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0003Put\u0014void (int, int, int)!Upp::DiffSyntax::Put(int,int,int)6void Put(int ink, int n = 1, int paper = PAPER_NORMAL)\u0003Upp\u0003PUT\u000FUpp::DiffSyntax\u000FUPP::DIFFSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u0001\u0000\u0000\u0000\t\u0000\u0000\u0000`\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0002Do6void (wchar *, wchar *, CodeEditor *, int, int, int64)<Upp::DiffSyntax::Do(wchar*,wchar*,CodeEditor*,int,int,int64)Svoid Do(wchar *s, wchar *end, CodeEditor *editor, int line, int tabsize, int64 pos)\u0003Upp\u0002DO\u000FUpp::DiffSyntax\u000FUPP::DIFFSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000\v\u0000\u0000\u0000\u0001\u0000\u0000\u0000\v\u0000\u0000\u0000K\u0000\u0000\u0000\v\u0000\u0000\u0000\u0000\u0000\u0000\u001DFindTheNumberOfCharsToLineEnd\u0016int (wchar *, wchar *)=Upp::DiffSyntax::FindTheNumberOfCharsToLineEnd(wchar*,wchar*)=int FindTheNumberOfCharsToLineEnd(wchar *current, wchar *end)\u0003Upp\u001DFINDTHENUMBEROFCHARSTOLINEEND\u000FUpp::DiffSyntax\u000FUPP::DIFFSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000\u0001\u0000\u0000\u0000\f\u0000\u0000\u0000G\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\tIsPattern\u001Fbool (wchar *, wchar *, String)0Upp::DiffSyntax::IsPattern(wchar*,wchar*,String):bool IsPattern(wchar *current, wchar *end, String pattern)\u0003Upp\tISPATTERN\u000FUpp::DiffSyntax\u000FUPP::DIFFSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\u0004hout\u0011HighlightOutput *\u0015Upp::DiffSyntax::hout\u0015HighlightOutput *hout\u0003Upp\u0004HOUT\u000FUpp::DiffSyntax\u000FUPP::DIFFSYNTAX\u0000\u0000end\u0000Ô\u0006\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\TagSyntax.h","value":"data*\u0004\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000+\u0000\u0000\u0000\u0001\u0000\u0000\tTagSyntax\u000EUpp::TagSyntax\u000EUpp::TagSyntax\u001FTagSyntax : public EditorSyntax\u0003Upp\tTAGSYNTAX\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0011Upp::EditorSyntax\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000 \u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0001\u0000\u0005Clear\avoid ()\u0017Upp::TagSyntax::Clear()\fvoid Clear()\u0003Upp\u0005CLEAR\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000\\\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0001\u0000\nScanSyntax!void (wchar *, wchar *, int, int)1Upp::TagSyntax::ScanSyntax(wchar*,wchar*,int,int)<void ScanSyntax(wchar *ln, wchar *e, int line, int tab_size)\u0003Upp\nSCANSYNTAX\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000-\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0001\u0000\tSerialize\u000Fvoid (Stream &)\"Upp::TagSyntax::Serialize(Stream&)\u0019void Serialize(Stream& s)\u0003Upp\tSERIALIZE\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0005\u0000\u0000\u0000K\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0001\u0000\tHighlightDvoid (wchar *, wchar *, HighlightOutput &, CodeEditor *, int, int64)OUpp::TagSyntax::Highlight(wchar*,wchar*,HighlightOutput&,CodeEditor*,int,int64)cvoid Highlight(wchar *s, wchar *end, HighlightOutput& hls, CodeEditor *editor, int line, int64 pos)\u0003Upp\tHIGHLIGHT\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000\a\u0000\u0000\u0000Z\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0001\u0000\u0012CheckSyntaxRefresh%void (CodeEditor &, int64, WString &)>Upp::TagSyntax::CheckSyntaxRefresh(CodeEditor&,int64,WString&)@void CheckSyntaxRefresh(CodeEditor& e, int64 pos, WString& text)\u0003Upp\u0012CHECKSYNTAXREFRESH\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\b\u0000\u0000\u0000M\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0001\u0000\fIndentInsert\u001Dvoid (CodeEditor &, int, int)1Upp::TagSyntax::IndentInsert(CodeEditor&,int,int)9void IndentInsert(CodeEditor& editor, int chr, int count)\u0003Upp\fINDENTINSERT\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000\t\u0000\u0000\u0000\u0001\u0000\u0000\u0000\t\u0000\u0000\u0000P\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0001\u0000\rCheckBrackets%bool (CodeEditor &, int64 &, int64 &)8Upp::TagSyntax::CheckBrackets(CodeEditor&,int64&,int64&)<bool CheckBrackets(CodeEditor& e, int64& bpos0, int64& bpos)\u0003Upp\rCHECKBRACKETS\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0005\u0000\u0000\u0000\u0001\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0000\r\u0000\u0000\u0000B\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000I(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\TagSyntax.h:14:2)YUpp::TagSyntax::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\TagSyntax.h:14:2)NUpp::TagSyntax::(unnamed at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\TagSyntax.)\u0004enum\u0003UppI(UNNAMED ENUM AT C:\\USERS\\SBLO\\AI-UPP\\UPPSRC\\CODEEDITOR\\TAGSYNTAX.H:14:2)\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\b\u0000\u0000\u0000\r\u0000\u0000\u0000\b\u0000\u0000\u0000\r\u0000\u0000\u0000\f\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0004TEXTYUpp::TagSyntax::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\TagSyntax.h:14:2)\u0014Upp::TagSyntax::TEXT\u0004TEXT\u0003Upp\u0004TEXT\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\a\u0000\u0000\u0000\u000E\u0000\u0000\u0000\r\u0000\u0000\u0000\u000E\u0000\u0000\u0000\r\u0000\u0000\u0000\u0012\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0004TAG0YUpp::TagSyntax::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\TagSyntax.h:14:2)\u0014Upp::TagSyntax::TAG0\u0004TAG0\u0003Upp\u0004TAG0\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\a\u0000\u0000\u0000\u0014\u0000\u0000\u0000\r\u0000\u0000\u0000\u0014\u0000\u0000\u0000\r\u0000\u0000\u0000\u0017\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0003TAGYUpp::TagSyntax::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\TagSyntax.h:14:2)\u0013Upp::TagSyntax::TAG\u0003TAG\u0003Upp\u0003TAG\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\a\u0000\u0000\u0000\u0019\u0000\u0000\u0000\r\u0000\u0000\u0000\u0019\u0000\u0000\u0000\r\u0000\u0000\u0000\u001F\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0006ENDTAGYUpp::TagSyntax::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\TagSyntax.h:14:2)\u0016Upp::TagSyntax::ENDTAG\u0006ENDTAG\u0003Upp\u0006ENDTAG\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\a\u0000\u0000\u0000!\u0000\u0000\u0000\r\u0000\u0000\u0000!\u0000\u0000\u0000\r\u0000\u0000\u0000%\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0004ATTRYUpp::TagSyntax::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\TagSyntax.h:14:2)\u0014Upp::TagSyntax::ATTR\u0004ATTR\u0003Upp\u0004ATTR\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\a\u0000\u0000\u0000'\u0000\u0000\u0000\r\u0000\u0000\u0000'\u0000\u0000\u0000\r\u0000\u0000\u0000.\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\aCOMMENTYUpp::TagSyntax::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\TagSyntax.h:14:2)\u0017Upp::TagSyntax::COMMENT\aCOMMENT\u0003Upp\aCOMMENT\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\a\u0000\u0000\u00000\u0000\u0000\u0000\r\u0000\u0000\u00000\u0000\u0000\u0000\r\u0000\u0000\u00004\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0004DECLYUpp::TagSyntax::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\TagSyntax.h:14:2)\u0014Upp::TagSyntax::DECL\u0004DECL\u0003Upp\u0004DECL\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\a\u0000\u0000\u00006\u0000\u0000\u0000\r\u0000\u0000\u00006\u0000\u0000\u0000\r\u0000\u0000\u00008\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0002PIYUpp::TagSyntax::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\TagSyntax.h:14:2)\u0012Upp::TagSyntax::PI\u0002PI\u0003Upp\u0002PI\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\a\u0000\u0000\u0000:\u0000\u0000\u0000\r\u0000\u0000\u0000:\u0000\u0000\u0000\r\u0000\u0000\u0000@\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0006SCRIPTYUpp::TagSyntax::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\TagSyntax.h:14:2)\u0016Upp::TagSyntax::SCRIPT\u0006SCRIPT\u0003Upp\u0006SCRIPT\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000F\u0000\u0000\u0000\r\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\u0004html\u0004bool\u0014Upp::TagSyntax::html\tbool html\u0003Upp\u0004HTML\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0000\r\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0004witz\u0004bool\u0014Upp::TagSyntax::witz\tbool witz\u0003Upp\u0004WITZ\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0006status\u0003int\u0016Upp::TagSyntax::status\nint status\u0003Upp\u0006STATUS\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0000\u0006hl_ink\u0003int\u0016Upp::TagSyntax::hl_ink\nint hl_ink\u0003Upp\u0006HL_INK\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0000\u0000\bhl_paper\u0003int\u0018Upp::TagSyntax::hl_paper\fint hl_paper\u0003Upp\bHL_PAPER\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0001\u0000\u0000\atagname\u0006String\u0017Upp::TagSyntax::tagname\u000EString tagname\u0003Upp\aTAGNAME\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0000\u0006script\aCSyntax\u0016Upp::TagSyntax::script\u000ECSyntax script\u0003Upp\u0006SCRIPT\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0005\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000I(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\TagSyntax.h:24:2)YUpp::TagSyntax::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\TagSyntax.h:24:2)NUpp::TagSyntax::(unnamed at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\TagSyntax.)\u0004enum\u0003UppI(UNNAMED ENUM AT C:\\USERS\\SBLO\\AI-UPP\\UPPSRC\\CODEEDITOR\\TAGSYNTAX.H:24:2)\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\b\u0000\u0000\u0000\u0017\u0000\u0000\u0000\b\u0000\u0000\u0000\u0017\u0000\u0000\u0000\v\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0003CSSYUpp::TagSyntax::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\TagSyntax.h:24:2)\u0013Upp::TagSyntax::CSS\u0003CSS\u0003Upp\u0003CSS\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\a\u0000\u0000\u0000\r\u0000\u0000\u0000\u0017\u0000\u0000\u0000\r\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0002JSYUpp::TagSyntax::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\TagSyntax.h:24:2)\u0012Upp::TagSyntax::JS\u0002JS\u0003Upp\u0002JS\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\vscript_type\u0003int\u001BUpp::TagSyntax::script_type\u000Fint script_type\u0003Upp\vSCRIPT_TYPE\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\u0004hout\u0011HighlightOutput *\u0014Upp::TagSyntax::hout\u0015HighlightOutput *hout\u0003Upp\u0004HOUT\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u001C\u0000\u0000\u0000\a\u0000\u0000\u0000\u001C\u0000\u0000\u00004\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0000\u0000\u0000\u0006Spaces\u0019wchar *(wchar *, wchar *)%Upp::TagSyntax::Spaces(wchar*,wchar*)!wchar *Spaces(wchar *s, wchar *e)\u0003Upp\u0006SPACES\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001D\u0000\u0000\u0000d\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0000\u0000\u0000\bDoScript6void (wchar *, wchar *, CodeEditor *, int, int, int64)AUpp::TagSyntax::DoScript(wchar*,wchar*,CodeEditor*,int,int,int64)Wvoid DoScript(wchar *s, wchar *e, CodeEditor *editor, int line, int tabsize, int64 pos)\u0003Upp\bDOSCRIPT\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001E\u0000\u0000\u0000^\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\u0002Do6void (wchar *, wchar *, CodeEditor *, int, int, int64);Upp::TagSyntax::Do(wchar*,wchar*,CodeEditor*,int,int,int64)Qvoid Do(wchar *s, wchar *e, CodeEditor *editor, int line, int tabsize, int64 pos)\u0003Upp\u0002DO\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001F\u0000\u0000\u00008\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0000\u0000\u0000\u0004Put0\u0014void (int, int, int)!Upp::TagSyntax::Put0(int,int,int)7void Put0(int ink, int n = 1, int paper = PAPER_NORMAL)\u0003Upp\u0004PUT0\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000!\u0000\u0000\u0000\u0001\u0000\u0000\u0000!\u0000\u0000\u0000`\u0000\u0000\u0000!\u0000\u0000\u0000\u0001\u0000\u0000\u0003Set\u000Fvoid (int, int)\u001CUpp::TagSyntax::Set(int,int)+void Set(int ink, int paper = PAPER_NORMAL)\u0003Upp\u0003SET\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000\"\u0000\u0000\u0000\u0001\u0000\u0000\u0000\"\u0000\u0000\u0000[\u0000\u0000\u0000\"\u0000\u0000\u0000\u0001\u0000\u0000\u0003Put\nvoid (int)\u0018Upp::TagSyntax::Put(int)\u0013void Put(int n = 1)\u0003Upp\u0003PUT\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\u0000#\u0000\u0000\u0000Y\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\u0006SetPut\u0014void (int, int, int)#Upp::TagSyntax::SetPut(int,int,int)9void SetPut(int ink, int n = 1, int paper = PAPER_NORMAL)\u0003Upp\u0006SETPUT\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000&\u0000\u0000\u0000\u0001\u0000\u0000\u0000&\u0000\u0000\u0000X\u0000\u0000\u0000&\u0000\u0000\u0000\u0001\u0000\u0000\u0004Html\u0011TagSyntax &(bool)\u001AUpp::TagSyntax::Html(bool)\u0017TagSyntax& Html(bool b)\u0003Upp\u0004HTML\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000'\u0000\u0000\u0000\u0001\u0000\u0000\u0000'\u0000\u0000\u0000X\u0000\u0000\u0000'\u0000\u0000\u0000\u0001\u0000\u0000\u0004Witz\u0011TagSyntax &(bool)\u001AUpp::TagSyntax::Witz(bool)\u0017TagSyntax& Witz(bool b)\u0003Upp\u0004WITZ\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000(\u0000\u0000\u0000\u0001\u0000\u0000\u0000(\u0000\u0000\u0000j\u0000\u0000\u0000(\u0000\u0000\u0000\u0001\u0000\u0000\tGetScript\vCSyntax *()\u001BUpp::TagSyntax::GetScript()\u0014CSyntax *GetScript()\u0003Upp\tGETSCRIPT\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000*\u0000\u0000\u0000\u0001\u0000\u0000\u0000*\u0000\u0000\u0000\f\u0000\u0000\u0000*\u0000\u0000\u0000\u0000\u0000\u0000\tTagSyntax\avoid ()\u001BUpp::TagSyntax::TagSyntax()\vTagSyntax()\u0003Upp\tTAGSYNTAX\u000EUpp::TagSyntax\u000EUPP::TAGSYNTAX\u0000\u0000end\u0000L\u001E\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\LogSyntax.h","value":"data\u0003\u0004\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\tLogSyntax\u000EUpp::LogSyntax\u000EUpp::LogSyntax\u001FLogSyntax : public EditorSyntax\u0003Upp\tLOGSYNTAX\u000EUpp::LogSyntax\u000EUPP::LOGSYNTAX\u0011Upp::EditorSyntax\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000K\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0001\u0000\tHighlightDvoid (wchar *, wchar *, HighlightOutput &, CodeEditor *, int, int64)OUpp::LogSyntax::Highlight(wchar*,wchar*,HighlightOutput&,CodeEditor*,int,int64)cvoid Highlight(wchar *s, wchar *end, HighlightOutput& hls, CodeEditor *editor, int line, int64 pos)\u0003Upp\tHIGHLIGHT\u000EUpp::LogSyntax\u000EUPP::LOGSYNTAX\u0000\u0000end\u0000ˇ\u0001\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\CodeEditor\\PythonSyntax.h","value":"data\u000E\u0004\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0001\u0000\u0000\fPythonSyntax\u0011Upp::PythonSyntax\u0011Upp::PythonSyntax\"PythonSyntax : public EditorSyntax\u0003Upp\fPYTHONSYNTAX\u0011Upp::PythonSyntax\u0011UPP::PYTHONSYNTAX\u0011Upp::EditorSyntax\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000@\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0001\u0000\tHighlightDvoid (wchar *, wchar *, HighlightOutput &, CodeEditor *, int, int64)RUpp::PythonSyntax::Highlight(wchar*,wchar*,HighlightOutput&,CodeEditor*,int,int64)gvoid Highlight(wchar *start, wchar *end, HighlightOutput& hls, CodeEditor *editor, int line, int64 pos)\u0003Upp\tHIGHLIGHT\u0011Upp::PythonSyntax\u0011UPP::PYTHONSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000=\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0001\u0000\fIndentInsert\u001Dvoid (CodeEditor &, int, int)4Upp::PythonSyntax::IndentInsert(CodeEditor&,int,int)4void IndentInsert(CodeEditor& e, int chr, int count)\u0003Upp\fINDENTINSERT\u0011Upp::PythonSyntax\u0011UPP::PYTHONSYNTAX\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\nIdentation\u001DUpp::PythonSyntax::Identation\u001DUpp::PythonSyntax::Identation\nIdentation\u0003Upp\nIDENTATION\u001DUpp::PythonSyntax::Identation\u001DUPP::PYTHONSYNTAX::IDENTATION\u0000\u0000\u0005\u0000\u0000\u0000\a\u0000\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000\u0003\u0000\u0000\u0000\f\u0000\u0000\u0000\u0001\u0000\u0000\u0004Type#Upp::PythonSyntax::Identation::Type#Upp::PythonSyntax::Identation::Type\tenum Type\u0003Upp\u0004TYPE\u001DUpp::PythonSyntax::Identation\u001DUPP::PYTHONSYNTAX::IDENTATION\u0000\u0000\a\u0000\u0000\u0000\u0003\u0000\u0000\u0000\t\u0000\u0000\u0000\u0003\u0000\u0000\u0000\t\u0000\u0000\u0000\n\u0000\u0000\u0000\t\u0000\u0000\u0000\u0001\u0000\u0000\u0003Tab#Upp::PythonSyntax::Identation::Type\"Upp::PythonSyntax::Identation::Tab\u0003Tab\u0003Upp\u0003TAB\u001DUpp::PythonSyntax::Identation\u001DUPP::PYTHONSYNTAX::IDENTATION\u0000\u0000\a\u0000\u0000\u0000\u0003\u0000\u0000\u0000\n\u0000\u0000\u0000\u0003\u0000\u0000\u0000\n\u0000\u0000\u0000\b\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0000\u0000\u0005Space#Upp::PythonSyntax::Identation::Type$Upp::PythonSyntax::Identation::Space\u0005Space\u0003Upp\u0005SPACE\u001DUpp::PythonSyntax::Identation\u001DUPP::PYTHONSYNTAX::IDENTATION\u0000\u0000\a\u0000\u0000\u0000\u0003\u0000\u0000\u0000\v\u0000\u0000\u0000\u0003\u0000\u0000\u0000\v\u0000\u0000\u0000\n\u0000\u0000\u0000\v\u0000\u0000\u0000\u0001\u0000\u0000\aUnknown#Upp::PythonSyntax::Identation::Type&Upp::PythonSyntax::Identation::Unknown\aUnknown\u0003Upp\aUNKNOWN\u001DUpp::PythonSyntax::Identation\u001DUPP::PYTHONSYNTAX::IDENTATION\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000F\u0000\u0000\u00003\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0000\u0000\u0000\fLineHasColon\u0010bool (WString &))Upp::PythonSyntax::LineHasColon(WString&) bool LineHasColon(WString& line)\u0003Upp\fLINEHASCOLON\u0011Upp::PythonSyntax\u0011UPP::PYTHONSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0000V\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0018CalculateLineIndetations!int (WString &, Identation::Type)FUpp::PythonSyntax::CalculateLineIndetations(WString&,Identation::Type)Bint CalculateLineIndetations(WString& line, Identation::Type type)\u0003Upp\u0018CALCULATELINEINDETATIONS\u0011Upp::PythonSyntax\u0011UPP::PYTHONSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0011\u0000\u0000\u0000B\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u001CCalculateSpaceIndetationSize\u0012int (CodeEditor &)<Upp::PythonSyntax::CalculateSpaceIndetationSize(CodeEditor&)4int CalculateSpaceIndetationSize(CodeEditor& editor)\u0003Upp\u001CCALCULATESPACEINDETATIONSIZE\u0011Upp::PythonSyntax\u0011UPP::PYTHONSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0012\u0000\u0000\u0000M\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0012FindIdentationType*Identation::Type (CodeEditor &, WString &);Upp::PythonSyntax::FindIdentationType(CodeEditor&,WString&)FIdentation::Type FindIdentationType(CodeEditor& editor, WString& line)\u0003Upp\u0012FINDIDENTATIONTYPE\u0011Upp::PythonSyntax\u0011UPP::PYTHONSYNTAX\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0013\u0000\u0000\u0000<\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0013GetIdentationByType\u0017char (Identation::Type)8Upp::PythonSyntax::GetIdentationByType(Identation::Type)/char GetIdentationByType(Identation::Type type)\u0003Upp\u0013GETIDENTATIONBYTYPE\u0011Upp::PythonSyntax\u0011UPP::PYTHONSYNTAX\u0000\u0000end\u0000∏\v\u0000\u0000"}]}