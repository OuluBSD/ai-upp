{"source_files":[{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\RichText.h","value":"dataÿ`\u0001\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\nRICHTEXT_H\u0000\nRICHTEXT_H\nRICHTEXT_H\u0000\nRICHTEXT_H\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000\u0000\u001E\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\nIMAGECLASS\u0000\nIMAGECLASS\nIMAGECLASS\u0000\nIMAGECLASS\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\n\u0000\u0000\u0000\b\u0000\u0000\u0000\n\u0000\u0000\u0000)\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\tIMAGEFILE\u0000\tIMAGEFILE\tIMAGEFILE\u0000\tIMAGEFILE\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u001CRichImage__initialize_struct\avoid ()AUpp::RichImage__initialize_struct::RichImage__initialize_struct()\u001ERichImage__initialize_struct()\u0003Upp\u001CRICHIMAGE__INITIALIZE_STRUCT!Upp::RichImage__initialize_struct!UPP::RICHIMAGE__INITIALIZE_STRUCT\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u001CRichImage__initialize_struct!Upp::RichImage__initialize_struct!Upp::RichImage__initialize_struct\u001CRichImage__initialize_struct\u0003Upp\u001CRICHIMAGE__INITIALIZE_STRUCT!Upp::RichImage__initialize_struct!UPP::RICHIMAGE__INITIALIZE_STRUCT\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u001CRichImage__initialize_struct\avoid ()AUpp::RichImage__initialize_struct::RichImage__initialize_struct()\u001ERichImage__initialize_struct()\u0003Upp\u001CRICHIMAGE__INITIALIZE_STRUCT!Upp::RichImage__initialize_struct!UPP::RICHIMAGE__INITIALIZE_STRUCT\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0001\u001BRichImage__initialize_dummy#struct RichImage__initialize_struct Upp::RichImage__initialize_dummy?static RichImage__initialize_struct RichImage__initialize_dummy\u0003Upp\u001BRICHIMAGE__INITIALIZE_DUMMY\u0003Upp\u0003UPP\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u001CRichImage__initialize_struct!Upp::RichImage__initialize_struct!Upp::RichImage__initialize_struct\u001CRichImage__initialize_struct\u0003Upp\u001CRICHIMAGE__INITIALIZE_STRUCT!Upp::RichImage__initialize_struct!UPP::RICHIMAGE__INITIALIZE_STRUCT\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0016RichImage__initializer\avoid ()\u001DUpp::RichImage__initializer()\u001Dvoid RichImage__initializer()\u0003Upp\u0016RICHIMAGE__INITIALIZER\u0003Upp\u0003UPP\u0000\u0000\u0004\u0000\u0000\u0000\a\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0000\u0000\u0000\tPasteClip\u000EUpp::PasteClip\u000EUpp::PasteClip\tPasteClip\u0003Upp\tPASTECLIP\u000EUpp::PasteClip\u000EUPP::PASTECLIP\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\bRichPara\rUpp::RichPara\rUpp::RichPara\bRichPara\u0003Upp\bRICHPARA\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0004\u0000\u0000\u0000\a\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0000\u0000\u0000\tRichTable\u000EUpp::RichTable\u000EUpp::RichTable\tRichTable\u0003Upp\tRICHTABLE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0004\u0000\u0000\u0000\a\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\aRichTxt\fUpp::RichTxt\fUpp::RichTxt\aRichTxt\u0003Upp\aRICHTXT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\b\u0000\u0000\u0000\r\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u00008\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0001\u0000\u0000\tVoidColor\bColor ()\u0010Upp::VoidColor()\u0011Color VoidColor()\u0003Upp\tVOIDCOLOR\u0003Upp\u0003UPP\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0000\u0000+\u0000\u0000\u0000\u0001\u0000\u0000\u0004Zoom\tUpp::Zoom\tUpp::Zoom\u0004Zoom\u0003Upp\u0004ZOOM\tUpp::Zoom\tUPP::ZOOM\u0000\u0000\u0006\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0001m\u0003int\fUpp::Zoom::m\u0005int m\u0003Upp\u0001M\tUpp::Zoom\tUPP::ZOOM\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0017\u0000\u0000\u0000\t\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0001d\u0003int\fUpp::Zoom::d\u0005int d\u0003Upp\u0001D\tUpp::Zoom\tUPP::ZOOM\u0000\u0000\u0015\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0019\u0000\u0000\u0000A\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0000\toperator*\u000Fint (int) const\u001EUpp::Zoom::operator*(int)const\u001Aint operator*(int x) const\u0003Upp\tOPERATOR*\tUpp::Zoom\tUPP::ZOOM\u0000\u0000\u0015\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001A\u0000\u0000\u0000`\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\toperator&\u000Fint (int) const\u001EUpp::Zoom::operator&(int)const\u001Aint operator&(int x) const\u0003Upp\tOPERATOR&\tUpp::Zoom\tUPP::ZOOM\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001C\u0000\u0000\u00007\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0001\u0000\u0000\bAsDouble\u000Fdouble () const\u001AUpp::Zoom::AsDouble()const\u0017double AsDouble() const\u0003Upp\bASDOUBLE\tUpp::Zoom\tUPP::ZOOM\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001D\u0000\u0000\u00004\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0000\u0000\nReciprocal\rZoom () const\u001CUpp::Zoom::Reciprocal()const\u0017Zoom Reciprocal() const\u0003Upp\nRECIPROCAL\tUpp::Zoom\tUPP::ZOOM\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001F\u0000\u0000\u0000,\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0001\u0000\u0000\u0004Zoom\avoid ()\u0011Upp::Zoom::Zoom()\u0006Zoom()\u0003Upp\u0004ZOOM\tUpp::Zoom\tUPP::ZOOM\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\u0000 \u0000\u0000\u0000,\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\u0004Zoom\u0015void (const Nuller &)\u001EUpp::Zoom::Zoom(const Nuller&)\u0013Zoom(const Nuller&)\u0003Upp\u0004ZOOM\tUpp::Zoom\tUPP::ZOOM\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000!\u0000\u0000\u0000\u0001\u0000\u0000\u0000!\u0000\u0000\u00001\u0000\u0000\u0000!\u0000\u0000\u0000\u0001\u0000\u0000\u0004Zoom\u000Fvoid (int, int)\u0018Upp::Zoom::Zoom(int,int)\u0014Zoom(int _m, int _d)\u0003Upp\u0004ZOOM\tUpp::Zoom\tUPP::ZOOM\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\u0000#\u0000\u0000\u0000,\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\tSerialize\u000Fvoid (Stream &)\u001DUpp::Zoom::Serialize(Stream&)\u0019void Serialize(Stream& s)\u0003Upp\tSERIALIZE\tUpp::Zoom\tUPP::ZOOM\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000%\u0000\u0000\u0000\u0001\u0000\u0000\u0000%\u0000\u0000\u0000>\u0000\u0000\u0000%\u0000\u0000\u0000\u0001\u0000\u0000\noperator==\vbool (Zoom)\u001BUpp::Zoom::operator==(Zoom)\rbool operator\u0003Upp\nOPERATOR==\tUpp::Zoom\tUPP::ZOOM\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000&\u0000\u0000\u0000\u0001\u0000\u0000\u0000&\u0000\u0000\u0000>\u0000\u0000\u0000&\u0000\u0000\u0000\u0001\u0000\u0000\noperator!=\vbool (Zoom)\u001BUpp::Zoom::operator!=(Zoom)\u000Ebool operator!\u0003Upp\nOPERATOR!=\tUpp::Zoom\tUPP::ZOOM\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000(\u0000\u0000\u0000\u0001\u0000\u0000\u0000(\u0000\u0000\u0000C\u0000\u0000\u0000(\u0000\u0000\u0000\u0001\u0000\u0000\bToString\u000FString () const\u001AUpp::Zoom::ToString()const\u0017String ToString() const\u0003Upp\bTOSTRING\tUpp::Zoom\tUPP::ZOOM\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u0000*\u0000\u0000\u0000\u0001\u0000\u0000\u0000*\u0000\u0000\u0000O\u0000\u0000\u0000*\u0000\u0000\u0000\u0001\u0000\u0000\toperator/\u000Fint (int, Zoom)\u0018Upp::operator/(int,Zoom)\u001Cint operator/(int x, Zoom z)\u0003Upp\tOPERATOR/\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u0000-\u0000\u0000\u0000\u0000\u0000\u0000\u0000-\u0000\u0000\u00007\u0000\u0000\u0000-\u0000\u0000\u0000\u0001\u0000\u0000\u0006IsNull\vbool (Zoom)\u0011Upp::IsNull(Zoom)\u0013bool IsNull(Zoom z)\u0003Upp\u0006ISNULL\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\v\u0000\u0000\u0000/\u0000\u0000\u0000\u0000\u0000\u0000\u0000/\u0000\u0000\u0000\u0001\u0000\u0000\u00002\u0000\u0000\u0000\u0001\u0000\u0000\toperator*\u000Fint (int, Zoom)\u0018Upp::operator*(int,Zoom)\u001Cint operator*(int x, Zoom m)\u0003Upp\tOPERATOR*\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u00004\u0000\u0000\u0000\u0000\u0000\u0000\u00004\u0000\u0000\u0000\u0001\u0000\u0000\u00007\u0000\u0000\u0000\u0001\u0000\u0000\noperator*=\u0012void (int &, Zoom)\u001AUpp::operator*=(int&,Zoom)\u000Evoid operator*\u0003Upp\nOPERATOR*=\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u00009\u0000\u0000\u0000\u0000\u0000\u0000\u00009\u0000\u0000\u0000\u0001\u0000\u0000\u0000?\u0000\u0000\u0000\u0001\u0000\u0000\noperator*=\u0013void (Rect &, Zoom)\u001BUpp::operator*=(Rect&,Zoom)\u000Evoid operator*\u0003Upp\nOPERATOR*=\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u0000A\u0000\u0000\u0000\u0000\u0000\u0000\u0000A\u0000\u0000\u0000\u0001\u0000\u0000\u0000D\u0000\u0000\u0000\u0001\u0000\u0000\toperator*\u0011Size (Zoom, Size)\u0019Upp::operator*(Zoom,Size)\u001FSize operator*(Zoom m, Size sz)\u0003Upp\tOPERATOR*\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u0000F\u0000\u0000\u0000\u0000\u0000\u0000\u0000F\u0000\u0000\u0000\u0001\u0000\u0000\u0000I\u0000\u0000\u0000\u0001\u0000\u0000\toperator/\u0011Size (Size, Zoom)\u0019Upp::operator/(Size,Zoom)\u001FSize operator/(Size sz, Zoom m)\u0003Upp\tOPERATOR/\u0003Upp\u0003UPP\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000K\u0000\u0000\u0000\u0000\u0000\u0000\u0000K\u0000\u0000\u0000\u0001\u0000\u0000\u0000U\u0000\u0000\u0000\u0001\u0000\u0000\u0005PageY\nUpp::PageY\nUpp::PageY&PageY : Moveable<PageY>, RelOps<PageY>\u0003Upp\u0005PAGEY\nUpp::PageY\nUPP::PAGEY\u0019Upp::Moveable;Upp::RelOps\u0000\u0006\u0000\u0000\u0000\u0005\u0000\u0000\u0000L\u0000\u0000\u0000\u0001\u0000\u0000\u0000L\u0000\u0000\u0000\t\u0000\u0000\u0000L\u0000\u0000\u0000\u0001\u0000\u0000\u0004page\u0003int\u0010Upp::PageY::page\bint page\u0003Upp\u0004PAGE\nUpp::PageY\nUPP::PAGEY\u0000\u0000\u0006\u0000\u0000\u0000\u0005\u0000\u0000\u0000M\u0000\u0000\u0000\u0001\u0000\u0000\u0000M\u0000\u0000\u0000\u0006\u0000\u0000\u0000M\u0000\u0000\u0000\u0001\u0000\u0000\u0001y\u0003int\rUpp::PageY::y\u0005int y\u0003Upp\u0001Y\nUpp::PageY\nUPP::PAGEY\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000O\u0000\u0000\u0000\u0001\u0000\u0000\u0000O\u0000\u0000\u0000-\u0000\u0000\u0000O\u0000\u0000\u0000\u0001\u0000\u0000\u0005PageY\u000Fvoid (int, int)\u001AUpp::PageY::PageY(int,int)\u0016PageY(int page, int y)\u0003Upp\u0005PAGEY\nUpp::PageY\nUPP::PAGEY\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000P\u0000\u0000\u0000\u0001\u0000\u0000\u0000P\u0000\u0000\u0000\u001A\u0000\u0000\u0000P\u0000\u0000\u0000\u0001\u0000\u0000\u0005PageY\avoid ()\u0013Upp::PageY::PageY()\aPageY()\u0003Upp\u0005PAGEY\nUpp::PageY\nUPP::PAGEY\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000S\u0000\u0000\u0000\u0001\u0000\u0000\u0000S\u0000\u0000\u0000J\u0000\u0000\u0000S\u0000\u0000\u0000\u0001\u0000\u0000\bToString\u000FString () const\u001BUpp::PageY::ToString()const\u0017String ToString() const\u0003Upp\bTOSTRING\nUpp::PageY\nUPP::PAGEY\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u0000W\u0000\u0000\u0000\u0000\u0000\u0000\u0000W\u0000\u0000\u0000\u0001\u0000\u0000\u0000Z\u0000\u0000\u0000\u0001\u0000\u0000\toperator<\u0013bool (PageY, PageY)\u001BUpp::operator<(PageY,PageY) bool operator<(PageY a, PageY b)\u0003Upp\tOPERATOR<\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u0000\\\u0000\u0000\u0000\u0000\u0000\u0000\u0000\\\u0000\u0000\u0000\u0001\u0000\u0000\u0000_\u0000\u0000\u0000\u0001\u0000\u0000\noperator==\u0013bool (PageY, PageY)\u001CUpp::operator==(PageY,PageY)\rbool operator\u0003Upp\nOPERATOR==\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\r\u0000\u0000\u0000a\u0000\u0000\u0000\u0000\u0000\u0000\u0000a\u0000\u0000\u0000\u0001\u0000\u0000\u0000d\u0000\u0000\u0000\u0001\u0000\u0000\toperator+\u0012PageY (PageY, int)\u0019Upp::operator+(PageY,int)\u001FPageY operator+(PageY a, int b)\u0003Upp\tOPERATOR+\u0003Upp\u0003UPP\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000f\u0000\u0000\u0000\u0001\u0000\u0000\u0000n\u0000\u0000\u0000\u0001\u0000\u0000\bPageRect\rUpp::PageRect\rUpp::PageRect\u0016PageRect : public Rect\u0003Upp\bPAGERECT\rUpp::PageRect\rUPP::PAGERECT\tUpp::Rect\u0000\u0006\u0000\u0000\u0000\u0006\u0000\u0000\u0000g\u0000\u0000\u0000\u0001\u0000\u0000\u0000g\u0000\u0000\u0000\n\u0000\u0000\u0000g\u0000\u0000\u0000\u0001\u0000\u0000\u0004page\u0003int\u0013Upp::PageRect::page\bint page\u0003Upp\u0004PAGE\rUpp::PageRect\rUPP::PAGERECT\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\u0000i\u0000\u0000\u0000\u0001\u0000\u0000\u0000i\u0000\u0000\u00006\u0000\u0000\u0000i\u0000\u0000\u0000\u0001\u0000\u0000\foperator int\fint () const\"Upp::PageRect::operator int()const\u0014operator int() const\u0003Upp\fOPERATOR INT\rUpp::PageRect\rUPP::PAGERECT\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\u0000j\u0000\u0000\u0000\u0001\u0000\u0000\u0000j\u0000\u0000\u0000B\u0000\u0000\u0000j\u0000\u0000\u0000\u0001\u0000\u0000\u000Eoperator PageY\u000EPageY () const$Upp::PageRect::operator PageY()const\u0016operator PageY() const\u0003Upp\u000EOPERATOR PAGEY\rUpp::PageRect\rUPP::PAGERECT\u0000\u0000\u0015\u0000\u0000\u0000\v\u0000\u0000\u0000k\u0000\u0000\u0000\u0001\u0000\u0000\u0000k\u0000\u0000\u0000U\u0000\u0000\u0000k\u0000\u0000\u0000\u0001\u0000\u0000\toperator=\u0018PageRect &(const Rect &)%Upp::PageRect::operator=(const Rect&)\u0012PageRect& operator\u0003Upp\tOPERATOR=\rUpp::PageRect\rUPP::PAGERECT\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000l\u0000\u0000\u0000\u0001\u0000\u0000\u0000l\u0000\u0000\u0000G\u0000\u0000\u0000l\u0000\u0000\u0000\u0001\u0000\u0000\bPageRect\u0013void (const Rect &)$Upp::PageRect::PageRect(const Rect&)\u0017PageRect(const Rect& r)\u0003Upp\bPAGERECT\rUpp::PageRect\rUPP::PAGERECT\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000m\u0000\u0000\u0000\u0001\u0000\u0000\u0000m\u0000\u0000\u0000<\u0000\u0000\u0000m\u0000\u0000\u0000\u0001\u0000\u0000\bPageRect\avoid ()\u0019Upp::PageRect::PageRect()\nPageRect()\u0003Upp\bPAGERECT\rUpp::PageRect\rUPP::PAGERECT\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000p\u0000\u0000\u0000\u0000\u0000\u0000\u0000p\u0000\u0000\u0000\u0001\u0000\u0000\u0000y\u0000\u0000\u0000\u0001\u0000\u0000\u0014RichTextLayoutTracer\u0019Upp::RichTextLayoutTracer\u0019Upp::RichTextLayoutTracer\u0014RichTextLayoutTracer\u0003Upp\u0014RICHTEXTLAYOUTTRACER\u0019Upp::RichTextLayoutTracer\u0019UPP::RICHTEXTLAYOUTTRACER\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000q\u0000\u0000\u0000\u0001\u0000\u0000\u0000q\u0000\u0000\u0000I\u0000\u0000\u0000q\u0000\u0000\u0000\u0000\u0001\u0000\tParagraph,void (const Rect &, PageY, const RichPara &)GUpp::RichTextLayoutTracer::Paragraph(const Rect&,PageY,const RichPara&)?void Paragraph(const Rect& page, PageY y, const RichPara& para)\u0003Upp\tPARAGRAPH\u0019Upp::RichTextLayoutTracer\u0019UPP::RICHTEXTLAYOUTTRACER\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000r\u0000\u0000\u0000\u0001\u0000\u0000\u0000r\u0000\u0000\u0000$\u0000\u0000\u0000r\u0000\u0000\u0000\u0000\u0001\u0000\fEndParagraph\fvoid (PageY).Upp::RichTextLayoutTracer::EndParagraph(PageY)\u001Avoid EndParagraph(PageY y)\u0003Upp\fENDPARAGRAPH\u0019Upp::RichTextLayoutTracer\u0019UPP::RICHTEXTLAYOUTTRACER\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000s\u0000\u0000\u0000\u0001\u0000\u0000\u0000s\u0000\u0000\u0000G\u0000\u0000\u0000s\u0000\u0000\u0000\u0000\u0001\u0000\u0005Table-void (const Rect &, PageY, const RichTable &)DUpp::RichTextLayoutTracer::Table(const Rect&,PageY,const RichTable&)=void Table(const Rect& page, PageY y, const RichTable& table)\u0003Upp\u0005TABLE\u0019Upp::RichTextLayoutTracer\u0019UPP::RICHTEXTLAYOUTTRACER\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000t\u0000\u0000\u0000\u0001\u0000\u0000\u0000t\u0000\u0000\u0000 \u0000\u0000\u0000t\u0000\u0000\u0000\u0000\u0001\u0000\bEndTable\fvoid (PageY)*Upp::RichTextLayoutTracer::EndTable(PageY)\u0016void EndTable(PageY y)\u0003Upp\bENDTABLE\u0019Upp::RichTextLayoutTracer\u0019UPP::RICHTEXTLAYOUTTRACER\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000u\u0000\u0000\u0000\u0001\u0000\u0000\u0000u\u0000\u0000\u0000Q\u0000\u0000\u0000u\u0000\u0000\u0000\u0000\u0001\u0000\bTableRow2void (const Rect &, PageY, int, const RichTable &)KUpp::RichTextLayoutTracer::TableRow(const Rect&,PageY,int,const RichTable&)Gvoid TableRow(const Rect& page, PageY y, int i, const RichTable& table)\u0003Upp\bTABLEROW\u0019Upp::RichTextLayoutTracer\u0019UPP::RICHTEXTLAYOUTTRACER\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000v\u0000\u0000\u0000\u0001\u0000\u0000\u0000v\u0000\u0000\u0000#\u0000\u0000\u0000v\u0000\u0000\u0000\u0000\u0001\u0000\vEndTableRow\fvoid (PageY)-Upp::RichTextLayoutTracer::EndTableRow(PageY)\u0019void EndTableRow(PageY y)\u0003Upp\vENDTABLEROW\u0019Upp::RichTextLayoutTracer\u0019UPP::RICHTEXTLAYOUTTRACER\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000w\u0000\u0000\u0000\u0001\u0000\u0000\u0000w\u0000\u0000\u0000c\u0000\u0000\u0000w\u0000\u0000\u0000\u0000\u0001\u0000\tTableCell>void (const Rect &, PageY, int, int, const RichTable &, PageY)VUpp::RichTextLayoutTracer::TableCell(const Rect&,PageY,int,int,const RichTable&,PageY)Yvoid TableCell(const Rect& page, PageY y, int i, int j, const RichTable& table, PageY ny)\u0003Upp\tTABLECELL\u0019Upp::RichTextLayoutTracer\u0019UPP::RICHTEXTLAYOUTTRACER\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000x\u0000\u0000\u0000\u0001\u0000\u0000\u0000x\u0000\u0000\u0000$\u0000\u0000\u0000x\u0000\u0000\u0000\u0000\u0001\u0000\fEndTableCell\fvoid (PageY).Upp::RichTextLayoutTracer::EndTableCell(PageY)\u001Avoid EndTableCell(PageY y)\u0003Upp\fENDTABLECELL\u0019Upp::RichTextLayoutTracer\u0019UPP::RICHTEXTLAYOUTTRACER\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000{\u0000\u0000\u0000\u0000\u0000\u0000\u0000{\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\bPageDraw\rUpp::PageDraw\rUpp::PageDraw\bPageDraw\u0003Upp\bPAGEDRAW\rUpp::PageDraw\rUPP::PAGEDRAW\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000|\u0000\u0000\u0000\u0001\u0000\u0000\u0000|\u0000\u0000\u0000\u001E\u0000\u0000\u0000|\u0000\u0000\u0000\u0000\u0001\u0000\u0004Page\vDraw &(int)\u0018Upp::PageDraw::Page(int)\u0011Draw& Page(int i)\u0003Upp\u0004PAGE\rUpp::PageDraw\rUPP::PAGEDRAW\u0000\u0000\u0006\u0000\u0000\u0000\u0017\u0000\u0000\u0000~\u0000\u0000\u0000\u0001\u0000\u0000\u0000~\u0000\u0000\u0000\u001D\u0000\u0000\u0000~\u0000\u0000\u0000\u0001\u0000\u0000\u0006tracer\u0016RichTextLayoutTracer *\u0015Upp::PageDraw::tracer\u001CRichTextLayoutTracer *tracer\u0003Upp\u0006TRACER\rUpp::PageDraw\rUPP::PAGEDRAW\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\bPageDraw\avoid ()\u0019Upp::PageDraw::PageDraw()\nPageDraw()\u0003Upp\bPAGEDRAW\rUpp::PageDraw\rUPP::PAGEDRAW\u0000\u0000\u0019\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\t~PageDraw\u0010void () noexcept\u0012Upp::PageDraw::~()\v~PageDraw()\u0003Upp\t~PAGEDRAW\rUpp::PageDraw\rUPP::PAGEDRAW\u0000\u0000\u0004\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\nRichObject\u000FUpp::RichObject\u000FUpp::RichObject\nRichObject\u0003Upp\nRICHOBJECT\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0004\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003Bar\bUpp::Bar\bUpp::Bar\u0003Bar\u0003Upp\u0003BAR\bUpp::Bar\bUPP::BAR\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000«\u0000\u0000\u0000\u0001\u0000\u0000\u000ERichObjectType\u0013Upp::RichObjectType\u0013Upp::RichObjectType\u000ERichObjectType\u0003Upp\u000ERICHOBJECTTYPE\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u00005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\vGetTypeName\u001CString (const Value &) const3Upp::RichObjectType::GetTypeName(const Value&)const(String GetTypeName(const Value& v) const\u0003Upp\vGETTYPENAME\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\rGetCreateName\u000FString () const)Upp::RichObjectType::GetCreateName()const\u001CString GetCreateName() const\u0003Upp\rGETCREATENAME\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000+\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0004Read\u001CValue (const String &) const-Upp::RichObjectType::Read(const String&)const!Value Read(const String& s) const\u0003Upp\u0004READ\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000+\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0005Write\u001CString (const Value &) const-Upp::RichObjectType::Write(const Value&)const\"String Write(const Value& v) const\u0003Upp\u0005WRITE\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0006IsText\rbool () const\"Upp::RichObjectType::IsText()const\u0013bool IsText() const\u0003Upp\u0006ISTEXT\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000'\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0006Accept\u0012bool (PasteClip &)'Upp::RichObjectType::Accept(PasteClip&)\u001Cbool Accept(PasteClip& clip)\u0003Upp\u0006ACCEPT\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0004Read\u0013Value (PasteClip &)%Upp::RichObjectType::Read(PasteClip&)\u001BValue Read(PasteClip& clip)\u0003Upp\u0004READ\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000#\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\vGetClipFmts\u000FString () const'Upp::RichObjectType::GetClipFmts()const\u001AString GetClipFmts() const\u0003Upp\vGETCLIPFMTS\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000C\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\aGetClip,String (const Value &, const String &) const=Upp::RichObjectType::GetClip(const Value&,const String&)const:String GetClip(const Value& data, const String& fmt) const\u0003Upp\aGETCLIP\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000T\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u000EGetDefaultSize(Size (const Value &, Size, void *) constAUpp::RichObjectType::GetDefaultSize(const Value&,Size,void*)constISize GetDefaultSize(const Value& data, Size maxsize, void *context) const\u0003Upp\u000EGETDEFAULTSIZE\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000G\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u000FGetPhysicalSize\"Size (const Value &, void *) const=Upp::RichObjectType::GetPhysicalSize(const Value&,void*)const<Size GetPhysicalSize(const Value& data, void *context) const\u0003Upp\u000FGETPHYSICALSIZE\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000D\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\fGetPixelSize\"Size (const Value &, void *) const:Upp::RichObjectType::GetPixelSize(const Value&,void*)const9Size GetPixelSize(const Value& data, void *context) const\u0003Upp\fGETPIXELSIZE\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000O\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0005Paint0void (const Value &, Draw &, Size, void *) const>Upp::RichObjectType::Paint(const Value&,Draw&,Size,void*)constDvoid Paint(const Value& data, Draw& w, Size sz, void *context) const\u0003Upp\u0005PAINT\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000Y\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\aToImage0Image (int64, const Value &, Size, void *) const@Upp::RichObjectType::ToImage(int64,const Value&,Size,void*)constOImage ToImage(int64 serial_id, const Value& data, Size sz, void *context) const\u0003Upp\aTOIMAGE\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000C\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0004Menu(void (Bar &, RichObject &, void *) const6Upp::RichObjectType::Menu(Bar&,RichObject&,void*)const8void Menu(Bar& bar, RichObject& ex, void *context) const\u0003Upp\u0004MENU\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000B\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\rDefaultAction!void (RichObject &, void *) const:Upp::RichObjectType::DefaultAction(RichObject&,void*)const7void DefaultAction(RichObject& ex, void *context) const\u0003Upp\rDEFAULTACTION\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000R\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\aGetLink1String (const Value &, Point, Size, void *) const@Upp::RichObjectType::GetLink(const Value&,Point,Size,void*)constIString GetLink(const Value& data, Point pt, Size sz, void *context) const\u0003Upp\aGETLINK\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000T\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000EStdDefaultSize(Size (const Value &, Size, void *) constAUpp::RichObjectType::StdDefaultSize(const Value&,Size,void*)constISize StdDefaultSize(const Value& data, Size maxsize, void *context) const\u0003Upp\u000ESTDDEFAULTSIZE\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000ERichObjectType\avoid ()%Upp::RichObjectType::RichObjectType()\u0010RichObjectType()\u0003Upp\u000ERICHOBJECTTYPE\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0019\u0000\u0000\u0000\t\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\u0000 \u0000\u0000\u0000\u001A\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u000F~RichObjectType\u0010void () noexcept\u0018Upp::RichObjectType::~()\u0011~RichObjectType()\u0003Upp\u000F~RICHOBJECTTYPE\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000£\u0000\u0000\u0000\u0001\u0000\u0000\u0000£\u0000\u0000\u0000E\u0000\u0000\u0000£\u0000\u0000\u0000\u0000\u0001\u0000\u000EGetDefaultSize Size (const Value &, Size) const;Upp::RichObjectType::GetDefaultSize(const Value&,Size)const:Size GetDefaultSize(const Value& data, Size maxsize) const\u0003Upp\u000EGETDEFAULTSIZE\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000¤\u0000\u0000\u0000\u0001\u0000\u0000\u0000¤\u0000\u0000\u00008\u0000\u0000\u0000¤\u0000\u0000\u0000\u0000\u0001\u0000\u000FGetPhysicalSize\u001ASize (const Value &) const7Upp::RichObjectType::GetPhysicalSize(const Value&)const-Size GetPhysicalSize(const Value& data) const\u0003Upp\u000FGETPHYSICALSIZE\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000¥\u0000\u0000\u0000\u0001\u0000\u0000\u0000¥\u0000\u0000\u00005\u0000\u0000\u0000¥\u0000\u0000\u0000\u0000\u0001\u0000\fGetPixelSize\u001ASize (const Value &) const4Upp::RichObjectType::GetPixelSize(const Value&)const*Size GetPixelSize(const Value& data) const\u0003Upp\fGETPIXELSIZE\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000¦\u0000\u0000\u0000\u0001\u0000\u0000\u0000¦\u0000\u0000\u0000@\u0000\u0000\u0000¦\u0000\u0000\u0000\u0000\u0001\u0000\u0005Paint(void (const Value &, Draw &, Size) const8Upp::RichObjectType::Paint(const Value&,Draw&,Size)const5void Paint(const Value& data, Draw& w, Size sz) const\u0003Upp\u0005PAINT\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000§\u0000\u0000\u0000\u0001\u0000\u0000\u0000§\u0000\u0000\u0000J\u0000\u0000\u0000§\u0000\u0000\u0000\u0000\u0001\u0000\aToImage(Image (int64, const Value &, Size) const:Upp::RichObjectType::ToImage(int64,const Value&,Size)const@Image ToImage(int64 serial_id, const Value& data, Size sz) const\u0003Upp\aTOIMAGE\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000¨\u0000\u0000\u0000\u0001\u0000\u0000\u0000¨\u0000\u0000\u00004\u0000\u0000\u0000¨\u0000\u0000\u0000\u0000\u0001\u0000\u0004Menu void (Bar &, RichObject &) const0Upp::RichObjectType::Menu(Bar&,RichObject&)const)void Menu(Bar& bar, RichObject& ex) const\u0003Upp\u0004MENU\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000©\u0000\u0000\u0000\u0001\u0000\u0000\u0000©\u0000\u0000\u00003\u0000\u0000\u0000©\u0000\u0000\u0000\u0000\u0001\u0000\rDefaultAction\u0019void (RichObject &) const4Upp::RichObjectType::DefaultAction(RichObject&)const(void DefaultAction(RichObject& ex) const\u0003Upp\rDEFAULTACTION\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000ª\u0000\u0000\u0000\u0001\u0000\u0000\u0000ª\u0000\u0000\u0000C\u0000\u0000\u0000ª\u0000\u0000\u0000\u0000\u0001\u0000\aGetLink)String (const Value &, Point, Size) const:Upp::RichObjectType::GetLink(const Value&,Point,Size)const:String GetLink(const Value& data, Point pt, Size sz) const\u0003Upp\aGETLINK\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0004\u0000\u0000\u0000\u0006\u0000\u0000\u0000­\u0000\u0000\u0000\u0000\u0000\u0000\u0000­\u0000\u0000\u0000\u0001\u0000\u0000\u0000ï\u0000\u0000\u0000\u0001\u0000\u0000\nRichObject\u000FUpp::RichObject\u000FUpp::RichObject!RichObject : Moveable<RichObject>\u0003Upp\nRICHOBJECT\u000FUpp::RichObject\u000FUPP::RICHOBJECT\rUpp::Moveable\u0000\u0006\u0000\u0000\u0000\u0017\u0000\u0000\u0000®\u0000\u0000\u0000\u0001\u0000\u0000\u0000®\u0000\u0000\u0000\u001B\u0000\u0000\u0000®\u0000\u0000\u0000\u0001\u0000\u0000\u0004data\u0005Value\u0015Upp::RichObject::data\nValue data\u0003Upp\u0004DATA\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0006\u0000\u0000\u0000\u0017\u0000\u0000\u0000¯\u0000\u0000\u0000\u0001\u0000\u0000\u0000¯\u0000\u0000\u0000\u001D\u0000\u0000\u0000¯\u0000\u0000\u0000\u0001\u0000\u0000\u0006ydelta\u0003int\u0017Upp::RichObject::ydelta\nint ydelta\u0003Upp\u0006YDELTA\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0006\u0000\u0000\u0000\u0017\u0000\u0000\u0000°\u0000\u0000\u0000\u0001\u0000\u0000\u0000°\u0000\u0000\u0000\u001B\u0000\u0000\u0000°\u0000\u0000\u0000\u0001\u0000\u0000\u0004size\u0004Size\u0015Upp::RichObject::size\tSize size\u0003Upp\u0004SIZE\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0006\u0000\u0000\u0000\u0017\u0000\u0000\u0000±\u0000\u0000\u0000\u0001\u0000\u0000\u0000±\u0000\u0000\u0000$\u0000\u0000\u0000±\u0000\u0000\u0000\u0001\u0000\u0000\rphysical_size\u0004Size\u001EUpp::RichObject::physical_size\u0012Size physical_size\u0003Upp\rPHYSICAL_SIZE\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0006\u0000\u0000\u0000\u0017\u0000\u0000\u0000²\u0000\u0000\u0000\u0001\u0000\u0000\u0000²\u0000\u0000\u0000!\u0000\u0000\u0000²\u0000\u0000\u0000\u0001\u0000\u0000\npixel_size\u0004Size\u001BUpp::RichObject::pixel_size\u000FSize pixel_size\u0003Upp\nPIXEL_SIZE\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0006\u0000\u0000\u0000\u0017\u0000\u0000\u0000³\u0000\u0000\u0000\u0001\u0000\u0000\u0000³\u0000\u0000\u0000 \u0000\u0000\u0000³\u0000\u0000\u0000\u0001\u0000\u0000\tkeepratio\u0004bool\u001AUpp::RichObject::keepratio\u000Ebool keepratio\u0003Upp\tKEEPRATIO\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0006\u0000\u0000\u0000\u0017\u0000\u0000\u0000´\u0000\u0000\u0000\u0001\u0000\u0000\u0000´\u0000\u0000\u0000\u001B\u0000\u0000\u0000´\u0000\u0000\u0000\u0001\u0000\u0000\u0004type\u0016const RichObjectType *\u0015Upp::RichObject::type\u001Aconst RichObjectType *type\u0003Upp\u0004TYPE\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0006\u0000\u0000\u0000\u0017\u0000\u0000\u0000µ\u0000\u0000\u0000\u0001\u0000\u0000\u0000µ\u0000\u0000\u0000\u001D\u0000\u0000\u0000µ\u0000\u0000\u0000\u0001\u0000\u0000\u0006serial\u0005int64\u0017Upp::RichObject::serial\fint64 serial\u0003Upp\u0006SERIAL\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0006\u0000\u0000\u0000\u0017\u0000\u0000\u0000¶\u0000\u0000\u0000\u0001\u0000\u0000\u0000¶\u0000\u0000\u0000 \u0000\u0000\u0000¶\u0000\u0000\u0000\u0001\u0000\u0000\ttype_name\u0006String\u001AUpp::RichObject::type_name\u0010String type_name\u0003Upp\tTYPE_NAME\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000-\u0000\u0000\u0000¸\u0000\u0000\u0000\u0001\u0000\u0000\u0000¸\u0000\u0000\u00002\u0000\u0000\u0000¸\u0000\u0000\u0000\u0000\u0000\u0001\u0003Map'VectorMap<String, RichObjectType *> &()\u0016Upp::RichObject::Map()1static VectorMap<String, RichObjectType *>& Map()\u0003Upp\u0003MAP\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000º\u0000\u0000\u0000\u0001\u0000\u0000\u0000º\u0000\u0000\u0000\"\u0000\u0000\u0000º\u0000\u0000\u0000\u0000\u0000\u0000\tNewSerial\avoid ()\u001CUpp::RichObject::NewSerial()\u0010void NewSerial()\u0003Upp\tNEWSERIAL\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000»\u0000\u0000\u0000\u0001\u0000\u0000\u0000»\u0000\u0000\u0000+\u0000\u0000\u0000»\u0000\u0000\u0000\u0000\u0000\u0000\u0012AdjustPhysicalSize\avoid ()%Upp::RichObject::AdjustPhysicalSize()\u0019void AdjustPhysicalSize()\u0003Upp\u0012ADJUSTPHYSICALSIZE\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000¾\u0000\u0000\u0000\u0001\u0000\u0000\u0000¾\u0000\u0000\u0000?\u0000\u0000\u0000¾\u0000\u0000\u0000\u0000\u0000\u0001\bRegister%void (const char *, RichObjectType *)6Upp::RichObject::Register(const char*,RichObjectType*)<static void Register(const char *name, RichObjectType *type)\u0003Upp\bREGISTER\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000¿\u0000\u0000\u0000\u0001\u0000\u0000\u0000¿\u0000\u0000\u0000J\u0000\u0000\u0000¿\u0000\u0000\u0000\u0001\u0000\u0001\fGetTypeCount\u0006int ()\u001FUpp::RichObject::GetTypeCount()\u0019static int GetTypeCount()\u0003Upp\fGETTYPECOUNT\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000À\u0000\u0000\u0000\u0001\u0000\u0000\u0000À\u0000\u0000\u0000J\u0000\u0000\u0000À\u0000\u0000\u0000\u0001\u0000\u0001\bFindType\u0014int (const String &)(Upp::RichObject::FindType(const String&)'static int FindType(const String& name)\u0003Upp\bFINDTYPE\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\u0018\u0000\u0000\u0000Á\u0000\u0000\u0000\u0001\u0000\u0000\u0000Á\u0000\u0000\u0000C\u0000\u0000\u0000Á\u0000\u0000\u0000\u0001\u0000\u0001\aGetType\u0015RichObjectType &(int)\u001DUpp::RichObject::GetType(int)%static RichObjectType& GetType(int i)\u0003Upp\aGETTYPE\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000Â\u0000\u0000\u0000\u0001\u0000\u0000\u0000Â\u0000\u0000\u0000I\u0000\u0000\u0000Â\u0000\u0000\u0000\u0001\u0000\u0001\vGetTypeName\fString (int)!Upp::RichObject::GetTypeName(int) static String GetTypeName(int i)\u0003Upp\vGETTYPENAME\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000Ä\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ä\u0000\u0000\u0000F\u0000\u0000\u0000Ä\u0000\u0000\u0000\u0001\u0000\u0000\aSetSize\u000Fvoid (int, int)!Upp::RichObject::SetSize(int,int)\u001Cvoid SetSize(int cx, int cy)\u0003Upp\aSETSIZE\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000Å\u0000\u0000\u0000\u0001\u0000\u0000\u0000Å\u0000\u0000\u0000H\u0000\u0000\u0000Å\u0000\u0000\u0000\u0001\u0000\u0000\aSetSize\vvoid (Size)\u001EUpp::RichObject::SetSize(Size)\u0015void SetSize(Size sz)\u0003Upp\aSETSIZE\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000Æ\u0000\u0000\u0000\u0001\u0000\u0000\u0000Æ\u0000\u0000\u0000>\u0000\u0000\u0000Æ\u0000\u0000\u0000\u0001\u0000\u0000\aGetSize\rSize () const\u001FUpp::RichObject::GetSize()const\u0014Size GetSize() const\u0003Upp\aGETSIZE\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000Ç\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ç\u0000\u0000\u0000;\u0000\u0000\u0000Ç\u0000\u0000\u0000\u0000\u0000\u0000\u0005Paint!void (Draw &, Size, void *) const-Upp::RichObject::Paint(Draw&,Size,void*)const5void Paint(Draw& w, Size sz, void *context = 0) const\u0003Upp\u0005PAINT\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000È\u0000\u0000\u0000\u0001\u0000\u0000\u0000È\u0000\u0000\u00004\u0000\u0000\u0000È\u0000\u0000\u0000\u0000\u0000\u0000\aToImage\u001AImage (Size, void *) const)Upp::RichObject::ToImage(Size,void*)const/Image ToImage(Size sz, void *context = 0) const\u0003Upp\aTOIMAGE\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000É\u0000\u0000\u0000\u0001\u0000\u0000\u0000É\u0000\u0000\u0000G\u0000\u0000\u0000É\u0000\u0000\u0000\u0001\u0000\u0000\u000FGetPhysicalSize\rSize () const'Upp::RichObject::GetPhysicalSize()const\u001CSize GetPhysicalSize() const\u0003Upp\u000FGETPHYSICALSIZE\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000Ê\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ê\u0000\u0000\u0000D\u0000\u0000\u0000Ê\u0000\u0000\u0000\u0001\u0000\u0000\fGetPixelSize\rSize () const$Upp::RichObject::GetPixelSize()const\u0019Size GetPixelSize() const\u0003Upp\fGETPIXELSIZE\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000Ë\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ë\u0000\u0000\u0000\u0000\u0000\u0000Ë\u0000\u0000\u0000\u0001\u0000\u0000\u000EGetDefaultSize\u0019Size (Size, void *) const0Upp::RichObject::GetDefaultSize(Size,void*)const:Size GetDefaultSize(Size maxsize, void *context = 0) const\u0003Upp\u000EGETDEFAULTSIZE\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000Í\u0000\u0000\u0000\u0001\u0000\u0000\u0000Í\u0000\u0000\u0000k\u0000\u0000\u0000Í\u0000\u0000\u0000\u0000\u0000\u0000\u0003Set4void (RichObjectType *, const Value &, Size, void *)=Upp::RichObject::Set(RichObjectType*,const Value&,Size,void*)evoid Set(RichObjectType *type, const Value& data, Size maxsize = Size(3967, 3967), void *context = 0)\u0003Upp\u0003SET\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000Î\u0000\u0000\u0000\u0001\u0000\u0000\u0000Î\u0000\u0000\u0000n\u0000\u0000\u0000Î\u0000\u0000\u0000\u0000\u0000\u0000\u0003Set2bool (const String &, const Value &, Size, void *);Upp::RichObject::Set(const String&,const Value&,Size,void*)hbool Set(const String& type_name, const Value& data, Size maxsize = Size(3967, 3967), void *context = 0)\u0003Upp\u0003SET\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000Ï\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ï\u0000\u0000\u0000\u001F\u0000\u0000\u0000Ï\u0000\u0000\u0000\u0000\u0000\u0000\aSetData\u0014void (const Value &)&Upp::RichObject::SetData(const Value&)\u001Cvoid SetData(const Value& v)\u0003Upp\aSETDATA\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000Ñ\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ñ\u0000\u0000\u0000\u001B\u0000\u0000\u0000Ñ\u0000\u0000\u0000\u0000\u0000\u0000\vGetTypeName\u000FString () const#Upp::RichObject::GetTypeName()const\u001AString GetTypeName() const\u0003Upp\vGETTYPENAME\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000Ò\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ò\u0000\u0000\u0000>\u0000\u0000\u0000Ò\u0000\u0000\u0000\u0001\u0000\u0000\aGetData\u000EValue () const\u001FUpp::RichObject::GetData()const\u0015Value GetData() const\u0003Upp\aGETDATA\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000Ó\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ó\u0000\u0000\u0000\u0000\u0000\u0000Ó\u0000\u0000\u0000\u0001\u0000\u0000\aGetLink\"String (Point, Size, void *) const/Upp::RichObject::GetLink(Point,Size,void*)const:String GetLink(Point pt, Size sz, void *context = 0) const\u0003Upp\aGETLINK\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000Õ\u0000\u0000\u0000\u0001\u0000\u0000\u0000Õ\u0000\u0000\u0000&\u0000\u0000\u0000Õ\u0000\u0000\u0000\u0000\u0000\u0000\aGetType\u001Econst RichObjectType &() const\u001FUpp::RichObject::GetType()const%const RichObjectType& GetType() const\u0003Upp\aGETTYPE\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000×\u0000\u0000\u0000\u0001\u0000\u0000\u0000×\u0000\u0000\u0000S\u0000\u0000\u0000×\u0000\u0000\u0000\u0000\u0000\u0000\u0004Read3bool (const String &, const String &, Size, void *)=Upp::RichObject::Read(const String&,const String&,Size,void*)Mbool Read(const String& type, const String& data, Size sz, void *context = 0)\u0003Upp\u0004READ\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000Ø\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ø\u0000\u0000\u0000a\u0000\u0000\u0000Ø\u0000\u0000\u0000\u0001\u0000\u0000\u0005Write\u000FString () const\u001DUpp::RichObject::Write()const\u0014String Write() const\u0003Upp\u0005WRITE\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000Ù\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ù\u0000\u0000\u0000W\u0000\u0000\u0000Ù\u0000\u0000\u0000\u0001\u0000\u0000\u0006IsText\rbool () const\u001EUpp::RichObject::IsText()const\u0013bool IsText() const\u0003Upp\u0006ISTEXT\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000Û\u0000\u0000\u0000\u0001\u0000\u0000\u0000Û\u0000\u0000\u0000@\u0000\u0000\u0000Û\u0000\u0000\u0000\u0001\u0000\u0000\tKeepRatio\vvoid (bool) Upp::RichObject::KeepRatio(bool)\u0016void KeepRatio(bool b)\u0003Upp\tKEEPRATIO\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000Ü\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ü\u0000\u0000\u0000C\u0000\u0000\u0000Ü\u0000\u0000\u0000\u0001\u0000\u0000\vIsKeepRatio\rbool () const#Upp::RichObject::IsKeepRatio()const\u0018bool IsKeepRatio() const\u0003Upp\vISKEEPRATIO\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000Þ\u0000\u0000\u0000\u0001\u0000\u0000\u0000Þ\u0000\u0000\u0000>\u0000\u0000\u0000Þ\u0000\u0000\u0000\u0001\u0000\u0000\tSetYDelta\nvoid (int)\u001FUpp::RichObject::SetYDelta(int)\u0016void SetYDelta(int yd)\u0003Upp\tSETYDELTA\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000ß\u0000\u0000\u0000\u0001\u0000\u0000\u0000ß\u0000\u0000\u0000@\u0000\u0000\u0000ß\u0000\u0000\u0000\u0001\u0000\u0000\tGetYDelta\fint () const!Upp::RichObject::GetYDelta()const\u0015int GetYDelta() const\u0003Upp\tGETYDELTA\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000á\u0000\u0000\u0000\u0001\u0000\u0000\u0000á\u0000\u0000\u0000[\u0000\u0000\u0000á\u0000\u0000\u0000\u0001\u0000\u0000\u0004Menu\u0014void (Bar &, void *)!Upp::RichObject::Menu(Bar&,void*)&void Menu(Bar& bar, void *context = 0)\u0003Upp\u0004MENU\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000â\u0000\u0000\u0000\u0001\u0000\u0000\u0000â\u0000\u0000\u0000_\u0000\u0000\u0000â\u0000\u0000\u0000\u0001\u0000\u0000\rDefaultAction\rvoid (void *)%Upp::RichObject::DefaultAction(void*)%void DefaultAction(void *context = 0)\u0003Upp\rDEFAULTACTION\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\u0000ä\u0000\u0000\u0000\u0001\u0000\u0000\u0000ä\u0000\u0000\u0000G\u0000\u0000\u0000ä\u0000\u0000\u0000\u0001\u0000\u0000\roperator bool\rbool () const%Upp::RichObject::operator bool()const\u0015operator bool() const\u0003Upp\rOPERATOR BOOL\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000æ\u0000\u0000\u0000\u0001\u0000\u0000\u0000æ\u0000\u0000\u0000\u000F\u0000\u0000\u0000æ\u0000\u0000\u0000\u0000\u0000\u0000\u0005Clear\avoid ()\u0018Upp::RichObject::Clear()\fvoid Clear()\u0003Upp\u0005CLEAR\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000è\u0000\u0000\u0000\u0001\u0000\u0000\u0000è\u0000\u0000\u0000@\u0000\u0000\u0000è\u0000\u0000\u0000\u0001\u0000\u0000\vGetSerialId\u000Eint64 () const#Upp::RichObject::GetSerialId()const\u0019int64 GetSerialId() const\u0003Upp\vGETSERIALID\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000ê\u0000\u0000\u0000\u0001\u0000\u0000\u0000ê\u0000\u0000\u00006\u0000\u0000\u0000ê\u0000\u0000\u0000\u0000\u0000\u0000\bInitSize\u0017void (int, int, void *)(Upp::RichObject::InitSize(int,int,void*)0void InitSize(int cx, int cy, void *context = 0)\u0003Upp\bINITSIZE\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000ì\u0000\u0000\u0000\u0001\u0000\u0000\u0000ì\u0000\u0000\u0000\r\u0000\u0000\u0000ì\u0000\u0000\u0000\u0000\u0000\u0000\nRichObject\avoid ()\u001DUpp::RichObject::RichObject()\fRichObject()\u0003Upp\nRICHOBJECT\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000í\u0000\u0000\u0000\u0001\u0000\u0000\u0000í\u0000\u0000\u0000U\u0000\u0000\u0000í\u0000\u0000\u0000\u0000\u0000\u0000\nRichObject,void (RichObjectType *, const Value &, Size)>Upp::RichObject::RichObject(RichObjectType*,const Value&,Size)TRichObject(RichObjectType *type, const Value& data, Size maxsize = Size(3967, 3967))\u0003Upp\nRICHOBJECT\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000î\u0000\u0000\u0000\u0001\u0000\u0000\u0000î\u0000\u0000\u0000S\u0000\u0000\u0000î\u0000\u0000\u0000\u0000\u0000\u0000\nRichObject*void (const String &, const Value &, Size)<Upp::RichObject::RichObject(const String&,const Value&,Size)RRichObject(const String& type, const Value& data, Size maxsize = Size(3967, 3967))\u0003Upp\nRICHOBJECT\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\b\u0000\u0000\u0000\v\u0000\u0000\u0000ñ\u0000\u0000\u0000\u0000\u0000\u0000\u0000ñ\u0000\u0000\u0000L\u0000\u0000\u0000ñ\u0000\u0000\u0000\u0000\u0000\u0000\u0013CreateDrawingObject(RichObject (const Drawing &, Size, Size)2Upp::CreateDrawingObject(const Drawing&,Size,Size)LRichObject CreateDrawingObject(const Drawing& dwg, Size dot_size, Size size)\u0003Upp\u0013CREATEDRAWINGOBJECT\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\v\u0000\u0000\u0000ò\u0000\u0000\u0000\u0000\u0000\u0000\u0000ò\u0000\u0000\u0000J\u0000\u0000\u0000ò\u0000\u0000\u0000\u0000\u0000\u0000\u0013CreateDrawingObject&RichObject (const Drawing &, int, int)0Upp::CreateDrawingObject(const Drawing&,int,int)JRichObject CreateDrawingObject(const Drawing& dwg, int cx = 0, int cy = 0)\u0003Upp\u0013CREATEDRAWINGOBJECT\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\v\u0000\u0000\u0000ó\u0000\u0000\u0000\u0000\u0000\u0000\u0000ó\u0000\u0000\u0000N\u0000\u0000\u0000ó\u0000\u0000\u0000\u0000\u0000\u0000\u0014CreatePaintingObject)RichObject (const Painting &, Size, Size)4Upp::CreatePaintingObject(const Painting&,Size,Size)NRichObject CreatePaintingObject(const Painting& dwg, Size dot_size, Size size)\u0003Upp\u0014CREATEPAINTINGOBJECT\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\v\u0000\u0000\u0000ô\u0000\u0000\u0000\u0000\u0000\u0000\u0000ô\u0000\u0000\u0000L\u0000\u0000\u0000ô\u0000\u0000\u0000\u0000\u0000\u0000\u0014CreatePaintingObject'RichObject (const Painting &, int, int)2Upp::CreatePaintingObject(const Painting&,int,int)LRichObject CreatePaintingObject(const Painting& dwg, int cx = 0, int cy = 0)\u0003Upp\u0014CREATEPAINTINGOBJECT\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\v\u0000\u0000\u0000õ\u0000\u0000\u0000\u0000\u0000\u0000\u0000õ\u0000\u0000\u0000F\u0000\u0000\u0000õ\u0000\u0000\u0000\u0000\u0000\u0000\u000FCreatePNGObject&RichObject (const Image &, Size, Size),Upp::CreatePNGObject(const Image&,Size,Size)FRichObject CreatePNGObject(const Image& img, Size dot_size, Size size)\u0003Upp\u000FCREATEPNGOBJECT\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\v\u0000\u0000\u0000ö\u0000\u0000\u0000\u0000\u0000\u0000\u0000ö\u0000\u0000\u0000D\u0000\u0000\u0000ö\u0000\u0000\u0000\u0000\u0000\u0000\u000FCreatePNGObject$RichObject (const Image &, int, int)*Upp::CreatePNGObject(const Image&,int,int)DRichObject CreatePNGObject(const Image& img, int cx = 0, int cy = 0)\u0003Upp\u000FCREATEPNGOBJECT\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\v\u0000\u0000\u0000÷\u0000\u0000\u0000\u0000\u0000\u0000\u0000÷\u0000\u0000\u0000H\u0000\u0000\u0000÷\u0000\u0000\u0000\u0000\u0000\u0000\u0014CreateRawImageObject%RichObject (const String &, int, int)0Upp::CreateRawImageObject(const String&,int,int)HRichObject CreateRawImageObject(const String& s, int cx = 0, int cy = 0)\u0003Upp\u0014CREATERAWIMAGEOBJECT\u0003Upp\u0003UPP\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000ù\u0000\u0000\u0000\u0000\u0000\u0000\u0000ù\u0000\u0000\u0000\u0001\u0000\u0000\u0000ü\u0000\u0000\u0000\u0001\u0000\u0000G(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\RichText.h:250:1)LUpp::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\RichText.h:250:1)@Upp::(unnamed at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\RichText.)\u0004enum\u0003UppG(UNNAMED ENUM AT C:\\USERS\\SBLO\\AI-UPP\\UPPSRC\\RICHTEXT\\RICHTEXT.H:250:1)\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000ú\u0000\u0000\u0000\u0001\u0000\u0000\u0000ú\u0000\u0000\u0000\u0010\u0000\u0000\u0000ú\u0000\u0000\u0000\u0001\u0000\u0000\nRICHHOT_LMLUpp::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\RichText.h:250:1)\u000FUpp::RICHHOT_LM\nRICHHOT_LM\u0003Upp\nRICHHOT_LM\u0003Upp\u0003UPP\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000û\u0000\u0000\u0000\u0001\u0000\u0000\u0000û\u0000\u0000\u0000\u0010\u0000\u0000\u0000û\u0000\u0000\u0000\u0001\u0000\u0000\nRICHHOT_RMLUpp::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\RichText.h:250:1)\u000FUpp::RICHHOT_RM\nRICHHOT_RM\u0003Upp\nRICHHOT_RM\u0003Upp\u0003UPP\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000þ\u0000\u0000\u0000\u0000\u0000\u0000\u0000þ\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0001\u0000\u0000\u0001\u0000\u0000\nRichHotPos\u000FUpp::RichHotPos\u000FUpp::RichHotPos\nRichHotPos\u0003Upp\nRICHHOTPOS\u000FUpp::RichHotPos\u000FUPP::RICHHOTPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0005\u0000\u0000\u0000ÿ\u0000\u0000\u0000\u0001\u0000\u0000\u0000ÿ\u0000\u0000\u0000\n\u0000\u0000\u0000ÿ\u0000\u0000\u0000\u0001\u0000\u0000\u0005table\u0003int\u0016Upp::RichHotPos::table\tint table\u0003Upp\u0005TABLE\u000FUpp::RichHotPos\u000FUPP::RICHHOTPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0001\u0000\u0000\v\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0006column\u0003int\u0017Upp::RichHotPos::column\nint column\u0003Upp\u0006COLUMN\u000FUpp::RichHotPos\u000FUPP::RICHHOTPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0001\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0001\u0000\u0000\n\u0000\u0000\u0000\u0001\u0001\u0000\u0000\u0001\u0000\u0000\u0005delta\u0003int\u0016Upp::RichHotPos::delta\tint delta\u0003Upp\u0005DELTA\u000FUpp::RichHotPos\u000FUPP::RICHHOTPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0002\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0001\u0000\u0000\t\u0000\u0000\u0000\u0002\u0001\u0000\u0000\u0001\u0000\u0000\u0004left\u0003int\u0015Upp::RichHotPos::left\bint left\u0003Upp\u0004LEFT\u000FUpp::RichHotPos\u000FUPP::RICHHOTPOS\u0000\u0000\u0006\u0000\u0000\u0000\v\u0000\u0000\u0000\u0002\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0001\u0000\u0000\r\u0000\u0000\u0000\u0002\u0001\u0000\u0000\u0001\u0000\u0000\u0002cx\u0003int\u0013Upp::RichHotPos::cx\u0006int cx\u0003Upp\u0002CX\u000FUpp::RichHotPos\u000FUPP::RICHHOTPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0001\u0000\u0000\r\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0001\u0000\u0000\btextleft\u0003int\u0019Upp::RichHotPos::textleft\fint textleft\u0003Upp\bTEXTLEFT\u000FUpp::RichHotPos\u000FUPP::RICHHOTPOS\u0000\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0015\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0001\u0000\u0000\u0006textcx\u0003int\u0017Upp::RichHotPos::textcx\nint textcx\u0003Upp\u0006TEXTCX\u000FUpp::RichHotPos\u000FUPP::RICHHOTPOS\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0005\u0001\u0000\u0000@\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0001\u0000\u0000\nRichHotPos\avoid ()\u001DUpp::RichHotPos::RichHotPos()\fRichHotPos()\u0003Upp\nRICHHOTPOS\u000FUpp::RichHotPos\u000FUPP::RICHHOTPOS\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000\b\u0001\u0000\u0000\u0000\u0000\u0000\u0000\b\u0001\u0000\u0000\u0001\u0000\u0000\u0000\f\u0001\u0000\u0000\u0001\u0000\u0000\nRichValPos\u000FUpp::RichValPos\u000FUpp::RichValPos!RichValPos : Moveable<RichValPos>\u0003Upp\nRICHVALPOS\u000FUpp::RichValPos\u000FUPP::RICHVALPOS\rUpp::Moveable\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\t\u0001\u0000\u0000\u0001\u0000\u0000\u0000\t\u0001\u0000\u0000\v\u0000\u0000\u0000\t\u0001\u0000\u0000\u0001\u0000\u0000\u0002py\u0005PageY\u0013Upp::RichValPos::py\bPageY py\u0003Upp\u0002PY\u000FUpp::RichValPos\u000FUPP::RICHVALPOS\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\n\u0001\u0000\u0000\u0001\u0000\u0000\u0000\n\u0001\u0000\u0000\f\u0000\u0000\u0000\n\u0001\u0000\u0000\u0001\u0000\u0000\u0003pos\u0003int\u0014Upp::RichValPos::pos\aint pos\u0003Upp\u0003POS\u000FUpp::RichValPos\u000FUPP::RICHVALPOS\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\v\u0001\u0000\u0000\u0001\u0000\u0000\u0000\v\u0001\u0000\u0000\r\u0000\u0000\u0000\v\u0001\u0000\u0000\u0001\u0000\u0000\u0004data\aWString\u0015Upp::RichValPos::data\fWString data\u0003Upp\u0004DATA\u000FUpp::RichValPos\u000FUPP::RICHVALPOS\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000\u000E\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u000E\u0001\u0000\u0000\u0001\u0000\u0000\u0000*\u0001\u0000\u0000\u0001\u0000\u0000\tPaintInfo\u000EUpp::PaintInfo\u000EUpp::PaintInfo\tPaintInfo\u0003Upp\tPAINTINFO\u000EUpp::PaintInfo\u000EUPP::PAINTINFO\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u000F\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u000F\u0001\u0000\u0000\r\u0000\u0000\u0000\u000F\u0001\u0000\u0000\u0001\u0000\u0000\u0004zoom\u0004Zoom\u0014Upp::PaintInfo::zoom\tZoom zoom\u0003Upp\u0004ZOOM\u000EUpp::PaintInfo\u000EUPP::PAINTINFO\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u0010\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0010\u0001\u0000\u0000\r\u0000\u0000\u0000\u0010\u0001\u0000\u0000\u0001\u0000\u0000\u0004sell\u0003int\u0014Upp::PaintInfo::sell\bint sell\u0003Upp\u0004SELL\u000EUpp::PaintInfo\u000EUPP::PAINTINFO\u0000\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0010\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0010\u0001\u0000\u0000\u0013\u0000\u0000\u0000\u0010\u0001\u0000\u0000\u0001\u0000\u0000\u0004selh\u0003int\u0014Upp::PaintInfo::selh\bint selh\u0003Upp\u0004SELH\u000EUpp::PaintInfo\u000EUPP::PAINTINFO\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0011\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0001\u0000\u0000\btablesel\u0003int\u0018Upp::PaintInfo::tablesel\fint tablesel\u0003Upp\bTABLESEL\u000EUpp::PaintInfo\u000EUPP::PAINTINFO\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u0012\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0012\u0001\u0000\u0000\u000E\u0000\u0000\u0000\u0012\u0001\u0000\u0000\u0001\u0000\u0000\u0005cells\u0004Rect\u0015Upp::PaintInfo::cells\nRect cells\u0003Upp\u0005CELLS\u000EUpp::PaintInfo\u000EUPP::PAINTINFO\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0013\u0001\u0000\u0000\f\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0001\u0000\u0000\u0003top\u0005PageY\u0013Upp::PaintInfo::top\tPageY top\u0003Upp\u0003TOP\u000EUpp::PaintInfo\u000EUPP::PAINTINFO\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u0014\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0014\u0001\u0000\u0000\u000F\u0000\u0000\u0000\u0014\u0001\u0000\u0000\u0001\u0000\u0000\u0006bottom\u0005PageY\u0016Upp::PaintInfo::bottom\fPageY bottom\u0003Upp\u0006BOTTOM\u000EUpp::PaintInfo\u000EUPP::PAINTINFO\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0001\u0000\u0000\thyperlink\u0005Color\u0019Upp::PaintInfo::hyperlink\u000FColor hyperlink\u0003Upp\tHYPERLINK\u000EUpp::PaintInfo\u000EUPP::PAINTINFO\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u0016\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0016\u0001\u0000\u0000\u0013\u0000\u0000\u0000\u0016\u0001\u0000\u0000\u0001\u0000\u0000\nindexentry\u0005Color\u001AUpp::PaintInfo::indexentry\u0010Color indexentry\u0003Upp\nINDEXENTRY\u000EUpp::PaintInfo\u000EUPP::PAINTINFO\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0001\u0000\u0000\ttextcolor\u0005Color\u0019Upp::PaintInfo::textcolor\u000FColor textcolor\u0003Upp\tTEXTCOLOR\u000EUpp::PaintInfo\u000EUPP::PAINTINFO\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u0018\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0018\u0001\u0000\u0000\u0015\u0000\u0000\u0000\u0018\u0001\u0000\u0000\u0001\u0000\u0000\findexentrybg\u0004bool\u001CUpp::PaintInfo::indexentrybg\u0011bool indexentrybg\u0003Upp\fINDEXENTRYBG\u000EUpp::PaintInfo\u000EUPP::PAINTINFO\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0011\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0001\u0000\u0000\busecache\u0004bool\u0018Upp::PaintInfo::usecache\rbool usecache\u0003Upp\bUSECACHE\u000EUpp::PaintInfo\u000EUPP::PAINTINFO\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u001A\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u001A\u0001\u0000\u0000\u0015\u0000\u0000\u0000\u001A\u0001\u0000\u0000\u0001\u0000\u0000\fsizetracking\u0004bool\u001CUpp::PaintInfo::sizetracking\u0011bool sizetracking\u0003Upp\fSIZETRACKING\u000EUpp::PaintInfo\u000EUPP::PAINTINFO\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u001B\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u001B\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u001B\u0001\u0000\u0000\u0001\u0000\u0000\tshowcodes\u0005Color\u0019Upp::PaintInfo::showcodes\u000FColor showcodes\u0003Upp\tSHOWCODES\u000EUpp::PaintInfo\u000EUPP::PAINTINFO\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u001C\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u001C\u0001\u0000\u0000/\u0000\u0000\u0000\u001C\u0001\u0000\u0000\u0001\u0000\u0000\u000Fspellingchecker\u001ABits (*)(const RichPara &)\u001FUpp::PaintInfo::spellingchecker(Bits (*spellingchecker)(const RichPara&)\u0003Upp\u000FSPELLINGCHECKER\u000EUpp::PaintInfo\u000EUPP::PAINTINFO\u0000\u0000\n\u0000\u0000\u0000*\u0000\u0000\u0000\u001C\u0001\u0000\u0000\u001A\u0000\u0000\u0000\u001C\u0001\u0000\u0000.\u0000\u0000\u0000\u001C\u0001\u0000\u0000\u0001\u0000\u0000\u0004para\u0010const RichPara &\u0004para\u0014const RichPara& para\u0000\u0004PARA\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u001D\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u001D\u0001\u0000\u0000\u0016\u0000\u0000\u0000\u001D\u0001\u0000\u0000\u0001\u0000\u0000\rhighlightpara\u0003int\u001DUpp::PaintInfo::highlightpara\u0011int highlightpara\u0003Upp\rHIGHLIGHTPARA\u000EUpp::PaintInfo\u000EUPP::PAINTINFO\u0000\u0000\u0006\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u001E\u0001\u0000\u0000\"\u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0001\u0000\u0000\rWhenHighlight\u0014Gate<const String &>\u001DUpp::PaintInfo::WhenHighlight!Gate<const String&> WhenHighlight\u0003Upp\rWHENHIGHLIGHT\u000EUpp::PaintInfo\u000EUPP::PAINTINFO\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u001F\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u001F\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u001F\u0001\u0000\u0000\u0001\u0000\u0000\thighlight\u0005Color\u0019Upp::PaintInfo::highlight\u000FColor highlight\u0003Upp\tHIGHLIGHT\u000EUpp::PaintInfo\u000EUPP::PAINTINFO\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000 \u0001\u0000\u0000\u0001\u0000\u0000\u0000 \u0001\u0000\u0000\u0012\u0000\u0000\u0000 \u0001\u0000\u0000\u0001\u0000\u0000\tdarktheme\u0004bool\u0019Upp::PaintInfo::darktheme\u000Ebool darktheme\u0003Upp\tDARKTHEME\u000EUpp::PaintInfo\u000EUPP::PAINTINFO\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000!\u0001\u0000\u0000\u0001\u0000\u0000\u0000!\u0001\u0000\u0000\u0010\u0000\u0000\u0000!\u0001\u0000\u0000\u0001\u0000\u0000\acontext\u0006void *\u0017Upp::PaintInfo::context\rvoid *context\u0003Upp\aCONTEXT\u000EUpp::PaintInfo\u000EUPP::PAINTINFO\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\"\u0001\u0000\u0000\u0001\u0000\u0000\u0000\"\u0001\u0000\u0000\u0013\u0000\u0000\u0000\"\u0001\u0000\u0000\u0001\u0000\u0000\nshowlabels\u0004bool\u001AUpp::PaintInfo::showlabels\u000Fbool showlabels\u0003Upp\nSHOWLABELS\u000EUpp::PaintInfo\u000EUPP::PAINTINFO\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000#\u0001\u0000\u0000\u0001\u0000\u0000\u0000#\u0001\u0000\u0000!\u0000\u0000\u0000#\u0001\u0000\u0000\u0001\u0000\u0000\u0018shrink_oversized_objects\u0004bool(Upp::PaintInfo::shrink_oversized_objects\u001Dbool shrink_oversized_objects\u0003Upp\u0018SHRINK_OVERSIZED_OBJECTS\u000EUpp::PaintInfo\u000EUPP::PAINTINFO\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000$\u0001\u0000\u0000\u0001\u0000\u0000\u0000$\u0001\u0000\u0000>\u0000\u0000\u0000$\u0001\u0000\u0000\u0001\u0000\u0000\rDrawSelection$void (*)(Draw &, int, int, int, int)\u001DUpp::PaintInfo::DrawSelection0void (*DrawSelection)(Draw&, int, int, int, int)\u0003Upp\rDRAWSELECTION\u000EUpp::PaintInfo\u000EUPP::PAINTINFO\u0000\u0000\n\u0000\u0000\u0000\u001E\u0000\u0000\u0000$\u0001\u0000\u0000\u0018\u0000\u0000\u0000$\u0001\u0000\u0000\u001F\u0000\u0000\u0000$\u0001\u0000\u0000\u0001\u0000\u0000\u0001w\u0006Draw &\u0001w\aDraw& w\u0000\u0001W\u0000\u0000\u0000\u0000\n\u0000\u0000\u0000%\u0000\u0000\u0000$\u0001\u0000\u0000!\u0000\u0000\u0000$\u0001\u0000\u0000&\u0000\u0000\u0000$\u0001\u0000\u0000\u0001\u0000\u0000\u0001x\u0003int\u0001x\u0005int x\u0000\u0001X\u0000\u0000\u0000\u0000\n\u0000\u0000\u0000,\u0000\u0000\u0000$\u0001\u0000\u0000(\u0000\u0000\u0000$\u0001\u0000\u0000-\u0000\u0000\u0000$\u0001\u0000\u0000\u0001\u0000\u0000\u0001y\u0003int\u0001y\u0005int y\u0000\u0001Y\u0000\u0000\u0000\u0000\n\u0000\u0000\u00003\u0000\u0000\u0000$\u0001\u0000\u0000/\u0000\u0000\u0000$\u0001\u0000\u00005\u0000\u0000\u0000$\u0001\u0000\u0000\u0001\u0000\u0000\u0002cx\u0003int\u0002cx\u0006int cx\u0000\u0002CX\u0000\u0000\u0000\u0000\n\u0000\u0000\u0000;\u0000\u0000\u0000$\u0001\u0000\u00007\u0000\u0000\u0000$\u0001\u0000\u0000=\u0000\u0000\u0000$\u0001\u0000\u0000\u0001\u0000\u0000\u0002cy\u0003int\u0002cy\u0006int cy\u0000\u0002CY\u0000\u0000\u0000\u0000\u0015\u0000\u0000\u0000\t\u0000\u0000\u0000&\u0001\u0000\u0000\u0001\u0000\u0000\u0000&\u0001\u0000\u0000$\u0000\u0000\u0000&\u0001\u0000\u0000\u0000\u0000\u0000\nResolveInk\u0013Color (Color) const&Upp::PaintInfo::ResolveInk(Color)const!Color ResolveInk(Color ink) const\u0003Upp\nRESOLVEINK\u000EUpp::PaintInfo\u000EUPP::PAINTINFO\u0000\u0000\u0015\u0000\u0000\u0000\t\u0000\u0000\u0000'\u0001\u0000\u0000\u0001\u0000\u0000\u0000'\u0001\u0000\u0000(\u0000\u0000\u0000'\u0001\u0000\u0000\u0000\u0000\u0000\fResolvePaper\u0013Color (Color) const(Upp::PaintInfo::ResolvePaper(Color)const%Color ResolvePaper(Color paper) const\u0003Upp\fRESOLVEPAPER\u000EUpp::PaintInfo\u000EUPP::PAINTINFO\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000)\u0001\u0000\u0000\u0001\u0000\u0000\u0000)\u0001\u0000\u0000\f\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000\u0000\tPaintInfo\avoid ()\u001BUpp::PaintInfo::PaintInfo()\vPaintInfo()\u0003Upp\tPAINTINFO\u000EUpp::PaintInfo\u000EUPP::PAINTINFO\u0000\u0000\b\u0000\u0000\u0000\u0004\u0000\u0000\u0000,\u0001\u0000\u0000\u0000\u0000\u0000\u0000,\u0001\u0000\u0000\u001B\u0000\u0000\u0000,\u0001\u0000\u0000\u0000\u0000\u0000\bLineZoom\u000Fint (Zoom, int)\u0017Upp::LineZoom(Zoom,int)\u001Bint LineZoom(Zoom z, int a)\u0003Upp\bLINEZOOM\u0003Upp\u0003UPP\u0000\u0000\u0004\u0000\u0000\u0000\u0006\u0000\u0000\u0000.\u0001\u0000\u0000\u0000\u0000\u0000\u0000.\u0001\u0000\u0000\u000F\u0000\u0000\u0000.\u0001\u0000\u0000\u0000\u0000\u0000\tRichTable\u000EUpp::RichTable\u000EUpp::RichTable\tRichTable\u0003Upp\tRICHTABLE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0004\u0000\u0000\u0000\u0006\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u000E\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u0000\u0000\bRichText\rUpp::RichText\rUpp::RichText\bRichText\u0003Upp\bRICHTEXT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u00000\u0001\u0000\u0000\u0000\u0000\u0000\u00000\u0001\u0000\u0000\u0010\u0000\u0000\u00000\u0001\u0000\u0000\u0000\u0000\u0000\tRichStyle\u000EUpp::RichStyle\u000EUpp::RichStyle\tRichStyle\u0003Upp\tRICHSTYLE\u000EUpp::RichStyle\u000EUPP::RICHSTYLE\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u0000\u0000\u00001\u0001\u0000\u0000\u0012\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u0000\u0000\vRichContext\u0010Upp::RichContext\u0010Upp::RichContext\vRichContext\u0003Upp\vRICHCONTEXT\u0010Upp::RichContext\u0010UPP::RICHCONTEXT\u0000\u0000\u0014\u0000\u0000\u0000\"\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u0000\u0000\u00003\u0001\u0000\u0000,\u0000\u0000\u00003\u0001\u0000\u0000\u0001\u0000\u0000\nRichStyles\u000FUpp::RichStyles\u000FUpp::RichStyles,typedef ArrayMap<Uuid, RichStyle> RichStyles\u0003Upp\nRICHSTYLES\u0003Upp\u0003UPP\rUpp::ArrayMap\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u00007\u0001\u0000\u0000\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0001\u0000\u0000\u0000H\u0001\u0000\u0000\u0001\u0000\u0000\vRichContext\u0010Upp::RichContext\u0010Upp::RichContext\vRichContext\u0003Upp\vRICHCONTEXT\u0010Upp::RichContext\u0010UPP::RICHCONTEXT\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u00008\u0001\u0000\u0000\u0001\u0000\u0000\u00008\u0001\u0000\u0000\u0017\u0000\u0000\u00008\u0001\u0000\u0000\u0001\u0000\u0000\u0004text\u0010const RichText *\u0016Upp::RichContext::text\u0014const RichText *text\u0003Upp\u0004TEXT\u0010Upp::RichContext\u0010UPP::RICHCONTEXT\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u00009\u0001\u0000\u0000\u0001\u0000\u0000\u00009\u0001\u0000\u0000\u0019\u0000\u0000\u00009\u0001\u0000\u0000\u0001\u0000\u0000\u0006styles\u0012const RichStyles *\u0018Upp::RichContext::styles\u0018const RichStyles *styles\u0003Upp\u0006STYLES\u0010Upp::RichContext\u0010UPP::RICHCONTEXT\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000:\u0001\u0000\u0000\u0001\u0000\u0000\u0000:\u0001\u0000\u0000\u0019\u0000\u0000\u0000:\u0001\u0000\u0000\u0001\u0000\u0000\u0006header\nRichText *\u0018Upp::RichContext::header\u0010RichText *header\u0003Upp\u0006HEADER\u0010Upp::RichContext\u0010UPP::RICHCONTEXT\u0000\u0000\u0006\u0000\u0000\u0000\u001C\u0000\u0000\u0000:\u0001\u0000\u0000\u0001\u0000\u0000\u0000:\u0001\u0000\u0000\"\u0000\u0000\u0000:\u0001\u0000\u0000\u0001\u0000\u0000\u0006footer\nRichText *\u0018Upp::RichContext::footer\u0010RichText *footer\u0003Upp\u0006FOOTER\u0010Upp::RichContext\u0010UPP::RICHCONTEXT\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000;\u0001\u0000\u0000\u0001\u0000\u0000\u0000;\u0001\u0000\u0000\u001C\u0000\u0000\u0000;\u0001\u0000\u0000\u0001\u0000\u0000\theader_cy\u0003int\u001BUpp::RichContext::header_cy\rint header_cy\u0003Upp\tHEADER_CY\u0010Upp::RichContext\u0010UPP::RICHCONTEXT\u0000\u0000\u0006\u0000\u0000\u0000\u001E\u0000\u0000\u0000;\u0001\u0000\u0000\u0001\u0000\u0000\u0000;\u0001\u0000\u0000'\u0000\u0000\u0000;\u0001\u0000\u0000\u0001\u0000\u0000\tfooter_cy\u0003int\u001BUpp::RichContext::footer_cy\rint footer_cy\u0003Upp\tFOOTER_CY\u0010Upp::RichContext\u0010UPP::RICHCONTEXT\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000<\u0001\u0000\u0000\u0001\u0000\u0000\u0000<\u0001\u0000\u0000$\u0000\u0000\u0000<\u0001\u0000\u0000\u0001\u0000\u0000\u0011current_header_cy\u0003int#Upp::RichContext::current_header_cy\u0015int current_header_cy\u0003Upp\u0011CURRENT_HEADER_CY\u0010Upp::RichContext\u0010UPP::RICHCONTEXT\u0000\u0000\u0006\u0000\u0000\u0000&\u0000\u0000\u0000<\u0001\u0000\u0000\u0001\u0000\u0000\u0000<\u0001\u0000\u00007\u0000\u0000\u0000<\u0001\u0000\u0000\u0001\u0000\u0000\u0011current_footer_cy\u0003int#Upp::RichContext::current_footer_cy\u0015int current_footer_cy\u0003Upp\u0011CURRENT_FOOTER_CY\u0010Upp::RichContext\u0010UPP::RICHCONTEXT\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000=\u0001\u0000\u0000\u0001\u0000\u0000\u0000=\u0001\u0000\u0000\u0017\u0000\u0000\u0000=\u0001\u0000\u0000\u0001\u0000\u0000\u0004page\u0004Rect\u0016Upp::RichContext::page\tRect page\u0003Upp\u0004PAGE\u0010Upp::RichContext\u0010UPP::RICHCONTEXT\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000>\u0001\u0000\u0000\u0001\u0000\u0000\u0000>\u0001\u0000\u0000\u0015\u0000\u0000\u0000>\u0001\u0000\u0000\u0001\u0000\u0000\u0002py\u0005PageY\u0014Upp::RichContext::py\bPageY py\u0003Upp\u0002PY\u0010Upp::RichContext\u0010UPP::RICHCONTEXT\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000?\u0001\u0000\u0000\u0001\u0000\u0000\u0000?\u0001\u0000\u0000\u0019\u0000\u0000\u0000?\u0001\u0000\u0000\u0001\u0000\u0000\u0006number\u0010RichPara::Number\u0018Upp::RichContext::number\u0017RichPara::Number number\u0003Upp\u0006NUMBER\u0010Upp::RichContext\u0010UPP::RICHCONTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000A\u0001\u0000\u0000\u0001\u0000\u0000\u0000A\u0001\u0000\u0000G\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0000\u0000\fHeaderFooter\u001Dvoid (RichText *, RichText *)3Upp::RichContext::HeaderFooter(RichText*,RichText*)9void HeaderFooter(RichText *header, RichText *footer_qtf)\u0003Upp\fHEADERFOOTER\u0010Upp::RichContext\u0010UPP::RICHCONTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000B\u0001\u0000\u0000\u0001\u0000\u0000\u0000B\u0001\u0000\u0000\u001F\u0000\u0000\u0000B\u0001\u0000\u0000\u0000\u0000\u0000\nAdjustPage\avoid ()\u001EUpp::RichContext::AdjustPage()\u0011void AdjustPage()\u0003Upp\nADJUSTPAGE\u0010Upp::RichContext\u0010UPP::RICHCONTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000C\u0001\u0000\u0000\u0001\u0000\u0000\u0000C\u0001\u0000\u0000\u0019\u0000\u0000\u0000C\u0001\u0000\u0000\u0000\u0000\u0000\u0004Page\avoid ()\u0018Upp::RichContext::Page()\vvoid Page()\u0003Upp\u0004PAGE\u0010Upp::RichContext\u0010UPP::RICHCONTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000D\u0001\u0000\u0000\u0001\u0000\u0000\u0000D\u0001\u0000\u0000X\u0000\u0000\u0000D\u0001\u0000\u0000\u0000\u0000\u0000\u0003Set/void (PageY, const Rect &, const Rect &, PageY):Upp::RichContext::Set(PageY,const Rect&,const Rect&,PageY)Jvoid Set(PageY p0, const Rect& first_page, const Rect& next_page, PageY p)\u0003Upp\u0003SET\u0010Upp::RichContext\u0010UPP::RICHCONTEXT\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000F\u0001\u0000\u0000\u0001\u0000\u0000\u0000F\u0001\u0000\u0000<\u0000\u0000\u0000F\u0001\u0000\u0000\u0000\u0000\u0000\vRichContext+void (const RichStyles &, const RichText *)@Upp::RichContext::RichContext(const RichStyles&,const RichText*);RichContext(const RichStyles& styles, const RichText *text)\u0003Upp\vRICHCONTEXT\u0010Upp::RichContext\u0010UPP::RICHCONTEXT\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000G\u0001\u0000\u0000\u0001\u0000\u0000\u0000G\u0001\u0000\u0000\u0011\u0000\u0000\u0000G\u0001\u0000\u0000\u0001\u0000\u0000\vRichContext\avoid ()\u001FUpp::RichContext::RichContext()\rRichContext()\u0003Upp\vRICHCONTEXT\u0010Upp::RichContext\u0010UPP::RICHCONTEXT\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000J\u0001\u0000\u0000\u0000\u0000\u0000\u0000J\u0001\u0000\u0000\u0001\u0000\u0000\u0000n\u0001\u0000\u0000\u0001\u0000\u0000\aRichPos\fUpp::RichPos\fUpp::RichPos\aRichPos\u0003Upp\aRICHPOS\fUpp::RichPos\fUPP::RICHPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000K\u0001\u0000\u0000\u0001\u0000\u0000\u0000K\u0001\u0000\u0000\u001E\u0000\u0000\u0000K\u0001\u0000\u0000\u0001\u0000\u0000\ftabtextparti\u0003int\u001AUpp::RichPos::tabtextparti\u0010int tabtextparti\u0003Upp\fTABTEXTPARTI\fUpp::RichPos\fUPP::RICHPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000L\u0001\u0000\u0000\u0001\u0000\u0000\u0000L\u0001\u0000\u0000\"\u0000\u0000\u0000L\u0001\u0000\u0000\u0001\u0000\u0000\u0010tabtextpartcount\u0003int\u001EUpp::RichPos::tabtextpartcount\u0014int tabtextpartcount\u0003Upp\u0010TABTEXTPARTCOUNT\fUpp::RichPos\fUPP::RICHPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000M\u0001\u0000\u0000\u0001\u0000\u0000\u0000M\u0001\u0000\u0000!\u0000\u0000\u0000M\u0001\u0000\u0000\u0001\u0000\u0000\u000Ftabposintabtext\u0003int\u001DUpp::RichPos::tabposintabtext\u0013int tabposintabtext\u0003Upp\u000FTABPOSINTABTEXT\fUpp::RichPos\fUPP::RICHPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000N\u0001\u0000\u0000\u0001\u0000\u0000\u0000N\u0001\u0000\u0000\u001C\u0000\u0000\u0000N\u0001\u0000\u0000\u0001\u0000\u0000\ntabtextlen\u0003int\u0018Upp::RichPos::tabtextlen\u000Eint tabtextlen\u0003Upp\nTABTEXTLEN\fUpp::RichPos\fUPP::RICHPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000P\u0001\u0000\u0000\u0001\u0000\u0000\u0000P\u0001\u0000\u0000\u0017\u0000\u0000\u0000P\u0001\u0000\u0000\u0001\u0000\u0000\u0005table\u0003int\u0013Upp::RichPos::table\tint table\u0003Upp\u0005TABLE\fUpp::RichPos\fUPP::RICHPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000Q\u0001\u0000\u0000\u0001\u0000\u0000\u0000Q\u0001\u0000\u0000\u0019\u0000\u0000\u0000Q\u0001\u0000\u0000\u0001\u0000\u0000\atabsize\u0004Size\u0015Upp::RichPos::tabsize\fSize tabsize\u0003Upp\aTABSIZE\fUpp::RichPos\fUPP::RICHPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000R\u0001\u0000\u0000\u0001\u0000\u0000\u0000R\u0001\u0000\u0000\u0016\u0000\u0000\u0000R\u0001\u0000\u0000\u0001\u0000\u0000\u0004cell\u0005Point\u0012Upp::RichPos::cell\nPoint cell\u0003Upp\u0004CELL\fUpp::RichPos\fUPP::RICHPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000T\u0001\u0000\u0000\u0001\u0000\u0000\u0000T\u0001\u0000\u0000\u0018\u0000\u0000\u0000T\u0001\u0000\u0000\u0001\u0000\u0000\u0006tablen\u0003int\u0014Upp::RichPos::tablen\nint tablen\u0003Upp\u0006TABLEN\fUpp::RichPos\fUPP::RICHPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000U\u0001\u0000\u0000\u0001\u0000\u0000\u0000U\u0001\u0000\u0000\u001A\u0000\u0000\u0000U\u0001\u0000\u0000\u0001\u0000\u0000\bposintab\u0003int\u0016Upp::RichPos::posintab\fint posintab\u0003Upp\bPOSINTAB\fUpp::RichPos\fUPP::RICHPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000W\u0001\u0000\u0000\u0001\u0000\u0000\u0000W\u0001\u0000\u0000\u0019\u0000\u0000\u0000W\u0001\u0000\u0000\u0001\u0000\u0000\acelllen\u0003int\u0015Upp::RichPos::celllen\vint celllen\u0003Upp\aCELLLEN\fUpp::RichPos\fUPP::RICHPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000X\u0001\u0000\u0000\u0001\u0000\u0000\u0000X\u0001\u0000\u0000\u001B\u0000\u0000\u0000X\u0001\u0000\u0000\u0001\u0000\u0000\tposincell\u0003int\u0017Upp::RichPos::posincell\rint posincell\u0003Upp\tPOSINCELL\fUpp::RichPos\fUPP::RICHPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000Z\u0001\u0000\u0000\u0001\u0000\u0000\u0000Z\u0001\u0000\u0000\u0017\u0000\u0000\u0000Z\u0001\u0000\u0000\u0001\u0000\u0000\u0005parai\u0003int\u0013Upp::RichPos::parai\tint parai\u0003Upp\u0005PARAI\fUpp::RichPos\fUPP::RICHPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000[\u0001\u0000\u0000\u0001\u0000\u0000\u0000[\u0001\u0000\u0000\u001B\u0000\u0000\u0000[\u0001\u0000\u0000\u0001\u0000\u0000\tpartcount\u0003int\u0017Upp::RichPos::partcount\rint partcount\u0003Upp\tPARTCOUNT\fUpp::RichPos\fUPP::RICHPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000\\\u0001\u0000\u0000\u0001\u0000\u0000\u0000\\\u0001\u0000\u0000\u001B\u0000\u0000\u0000\\\u0001\u0000\u0000\u0001\u0000\u0000\tposinpara\u0003int\u0017Upp::RichPos::posinpara\rint posinpara\u0003Upp\tPOSINPARA\fUpp::RichPos\fUPP::RICHPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000]\u0001\u0000\u0000\u0001\u0000\u0000\u0000]\u0001\u0000\u0000\u0019\u0000\u0000\u0000]\u0001\u0000\u0000\u0001\u0000\u0000\aparalen\u0003int\u0015Upp::RichPos::paralen\vint paralen\u0003Upp\aPARALEN\fUpp::RichPos\fUPP::RICHPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000_\u0001\u0000\u0000\u0001\u0000\u0000\u0000_\u0001\u0000\u0000\u0017\u0000\u0000\u0000_\u0001\u0000\u0000\u0001\u0000\u0000\u0005level\u0003int\u0013Upp::RichPos::level\tint level\u0003Upp\u0005LEVEL\fUpp::RichPos\fUPP::RICHPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000`\u0001\u0000\u0000\u0001\u0000\u0000\u0000`\u0001\u0000\u0000\u001B\u0000\u0000\u0000`\u0001\u0000\u0000\u0001\u0000\u0000\tparenttab\u0003int\u0017Upp::RichPos::parenttab\rint parenttab\u0003Upp\tPARENTTAB\fUpp::RichPos\fUPP::RICHPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000b\u0001\u0000\u0000\u0001\u0000\u0000\u0000b\u0001\u0000\u0000\u0018\u0000\u0000\u0000b\u0001\u0000\u0000\u0001\u0000\u0000\u0006format\u0010RichPara::Format\u0014Upp::RichPos::format\u0017RichPara::Format format\u0003Upp\u0006FORMAT\fUpp::RichPos\fUPP::RICHPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000c\u0001\u0000\u0000\u0001\u0000\u0000\u0000c\u0001\u0000\u0000\u0015\u0000\u0000\u0000c\u0001\u0000\u0000\u0001\u0000\u0000\u0003chr\u0003int\u0011Upp::RichPos::chr\aint chr\u0003Upp\u0003CHR\fUpp::RichPos\fUPP::RICHPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000d\u0001\u0000\u0000\u0001\u0000\u0000\u0000d\u0001\u0000\u0000\u0018\u0000\u0000\u0000d\u0001\u0000\u0000\u0001\u0000\u0000\u0006object\nRichObject\u0014Upp::RichPos::object\u0011RichObject object\u0003Upp\u0006OBJECT\fUpp::RichPos\fUPP::RICHPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000e\u0001\u0000\u0000\u0001\u0000\u0000\u0000e\u0001\u0000\u0000\u0017\u0000\u0000\u0000e\u0001\u0000\u0000\u0001\u0000\u0000\u0005field\u0002Id\u0013Upp::RichPos::field\bId field\u0003Upp\u0005FIELD\fUpp::RichPos\fUPP::RICHPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000f\u0001\u0000\u0000\u0001\u0000\u0000\u0000f\u0001\u0000\u0000\u001C\u0000\u0000\u0000f\u0001\u0000\u0000\u0001\u0000\u0000\nfieldparam\u0006String\u0018Upp::RichPos::fieldparam\u0011String fieldparam\u0003Upp\nFIELDPARAM\fUpp::RichPos\fUPP::RICHPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0016\u0000\u0000\u0000g\u0001\u0000\u0000\u0001\u0000\u0000\u0000g\u0001\u0000\u0000!\u0000\u0000\u0000g\u0001\u0000\u0000\u0001\u0000\u0000\vfieldformat\u0014RichPara::CharFormat\u0019Upp::RichPos::fieldformat RichPara::CharFormat fieldformat\u0003Upp\vFIELDFORMAT\fUpp::RichPos\fUPP::RICHPOS\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000j\u0001\u0000\u0000\u0001\u0000\u0000\u0000j\u0001\u0000\u0000\u0018\u0000\u0000\u0000j\u0001\u0000\u0000\u0000\u0000\u0000\bToString\u000FString () const\u001DUpp::RichPos::ToString()const\u0017String ToString() const\u0003Upp\bTOSTRING\fUpp::RichPos\fUPP::RICHPOS\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000m\u0001\u0000\u0000\u0001\u0000\u0000\u0000m\u0001\u0000\u0000\n\u0000\u0000\u0000m\u0001\u0000\u0000\u0000\u0000\u0000\aRichPos\avoid ()\u0017Upp::RichPos::RichPos()\tRichPos()\u0003Upp\aRICHPOS\fUpp::RichPos\fUPP::RICHPOS\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u0000p\u0001\u0000\u0000\u0000\u0000\u0000\u0000p\u0001\u0000\u0000\u0001\u0000\u0000\u0000s\u0001\u0000\u0000\u0001\u0000\u0000\tInSameTxt'bool (const RichPos &, const RichPos &)-Upp::InSameTxt(const RichPos&,const RichPos&)2bool InSameTxt(const RichPos& a, const RichPos& b)\u0003Upp\tINSAMETXT\u0003Upp\u0003UPP\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000u\u0001\u0000\u0000\u0000\u0000\u0000\u0000u\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u007F\u0001\u0000\u0000\u0001\u0000\u0000\tRichCaret\u000EUpp::RichCaret\u000EUpp::RichCaret\u0014RichCaret : PageRect\u0003Upp\tRICHCARET\u000EUpp::RichCaret\u000EUPP::RICHCARET\rUpp::PageRect\u0000\u0006\u0000\u0000\u0000\u0006\u0000\u0000\u0000v\u0001\u0000\u0000\u0001\u0000\u0000\u0000v\u0001\u0000\u0000\u0010\u0000\u0000\u0000v\u0001\u0000\u0000\u0001\u0000\u0000\nlineascent\u0003int\u001AUpp::RichCaret::lineascent\u000Eint lineascent\u0003Upp\nLINEASCENT\u000EUpp::RichCaret\u000EUPP::RICHCARET\u0000\u0000\u0006\u0000\u0000\u0000\u0006\u0000\u0000\u0000w\u0001\u0000\u0000\u0001\u0000\u0000\u0000w\u0001\u0000\u0000\u0011\u0000\u0000\u0000w\u0001\u0000\u0000\u0001\u0000\u0000\vcaretascent\u0003int\u001BUpp::RichCaret::caretascent\u000Fint caretascent\u0003Upp\vCARETASCENT\u000EUpp::RichCaret\u000EUPP::RICHCARET\u0000\u0000\u0006\u0000\u0000\u0000\u0006\u0000\u0000\u0000x\u0001\u0000\u0000\u0001\u0000\u0000\u0000x\u0001\u0000\u0000\u0012\u0000\u0000\u0000x\u0001\u0000\u0000\u0001\u0000\u0000\fcaretdescent\u0003int\u001CUpp::RichCaret::caretdescent\u0010int caretdescent\u0003Upp\fCARETDESCENT\u000EUpp::RichCaret\u000EUPP::RICHCARET\u0000\u0000\u0006\u0000\u0000\u0000\u0006\u0000\u0000\u0000y\u0001\u0000\u0000\u0001\u0000\u0000\u0000y\u0001\u0000\u0000\u000E\u0000\u0000\u0000y\u0001\u0000\u0000\u0001\u0000\u0000\bobjectcy\u0003int\u0018Upp::RichCaret::objectcy\fint objectcy\u0003Upp\bOBJECTCY\u000EUpp::RichCaret\u000EUPP::RICHCARET\u0000\u0000\u0006\u0000\u0000\u0000\u0006\u0000\u0000\u0000z\u0001\u0000\u0000\u0001\u0000\u0000\u0000z\u0001\u0000\u0000\u000E\u0000\u0000\u0000z\u0001\u0000\u0000\u0001\u0000\u0000\bobjectyd\u0003int\u0018Upp::RichCaret::objectyd\fint objectyd\u0003Upp\bOBJECTYD\u000EUpp::RichCaret\u000EUPP::RICHCARET\u0000\u0000\u0006\u0000\u0000\u0000\u0006\u0000\u0000\u0000{\u0001\u0000\u0000\u0001\u0000\u0000\u0000{\u0001\u0000\u0000\n\u0000\u0000\u0000{\u0001\u0000\u0000\u0001\u0000\u0000\u0004line\u0003int\u0014Upp::RichCaret::line\bint line\u0003Upp\u0004LINE\u000EUpp::RichCaret\u000EUPP::RICHCARET\u0000\u0000\u0006\u0000\u0000\u0000\u0006\u0000\u0000\u0000|\u0001\u0000\u0000\u0001\u0000\u0000\u0000|\u0001\u0000\u0000\u000E\u0000\u0000\u0000|\u0001\u0000\u0000\u0001\u0000\u0000\btextpage\u0004Rect\u0018Upp::RichCaret::textpage\rRect textpage\u0003Upp\bTEXTPAGE\u000EUpp::RichCaret\u000EUPP::RICHCARET\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000~\u0001\u0000\u0000\u0001\u0000\u0000\u0000~\u0001\u0000\u0000E\u0000\u0000\u0000~\u0001\u0000\u0000\u0001\u0000\u0000\tRichCaret\avoid ()\u001BUpp::RichCaret::RichCaret()\vRichCaret()\u0003Upp\tRICHCARET\u000EUpp::RichCaret\u000EUPP::RICHCARET\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\tRichStyle\u000EUpp::RichStyle\u000EUpp::RichStyle\tRichStyle\u0003Upp\tRICHSTYLE\u000EUpp::RichStyle\u000EUPP::RICHSTYLE\u0000\u0000\u0006\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u001C\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0006format\u0010RichPara::Format\u0016Upp::RichStyle::format\u0017RichPara::Format format\u0003Upp\u0006FORMAT\u000EUpp::RichStyle\u000EUPP::RICHSTYLE\u0000\u0000\u0006\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0004name\u0006String\u0014Upp::RichStyle::name\vString name\u0003Upp\u0004NAME\u000EUpp::RichStyle\u000EUPP::RICHSTYLE\u0000\u0000\u0006\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0004next\u0004Uuid\u0014Upp::RichStyle::next\tUuid next\u0003Upp\u0004NEXT\u000EUpp::RichStyle\u000EUPP::RICHSTYLE\u0000\u0000\u0015\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000(\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0001\fGetDefaultId\aUuid ()\u001EUpp::RichStyle::GetDefaultId()\u001Astatic Uuid GetDefaultId()\u0003Upp\fGETDEFAULTID\u000EUpp::RichStyle\u000EUPP::RICHSTYLE\u0000\u0000\u0015\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000&\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0001\nGetDefault\u0013const RichStyle &()\u001CUpp::RichStyle::GetDefault()$static const RichStyle& GetDefault()\u0003Upp\nGETDEFAULT\u000EUpp::RichStyle\u000EUPP::RICHSTYLE\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u00000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\tRichStyle\avoid ()\u001BUpp::RichStyle::RichStyle()\vRichStyle()\u0003Upp\tRICHSTYLE\u000EUpp::RichStyle\u000EUPP::RICHSTYLE\u0000\u0000\b\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000>\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\bGetStyle3const RichStyle &(const RichStyles &, const Uuid &),Upp::GetStyle(const RichStyles&,const Uuid&)>const RichStyle& GetStyle(const RichStyles& s, const Uuid& id)\u0003Upp\bGETSTYLE\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000D\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0011FindStyleWithName(int (const RichStyles &, const String &)7Upp::FindStyleWithName(const RichStyles&,const String&)Bint FindStyleWithName(const RichStyles& style, const String& name)\u0003Upp\u0011FINDSTYLEWITHNAME\u0003Upp\u0003UPP\u0000\u0000\u0004\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u000E\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\bRichText\rUpp::RichText\rUpp::RichText\bRichText\u0003Upp\bRICHTEXT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\vRichCellPos\u0010Upp::RichCellPos\u0010Upp::RichCellPos\vRichCellPos\u0003Upp\vRICHCELLPOS\u0010Upp::RichCellPos\u0010UPP::RICHCELLPOS\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000G(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\RichText.h:404:1)LUpp::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\RichText.h:404:1)@Upp::(unnamed at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\RichText.)\u0004enum\u0003UppG(UNNAMED ENUM AT C:\\USERS\\SBLO\\AI-UPP\\UPPSRC\\RICHTEXT\\RICHTEXT.H:404:1)\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\bQTF_BODYLUpp::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\RichText.h:404:1)\rUpp::QTF_BODY\bQTF_BODY\u0003Upp\bQTF_BODY\u0003Upp\u0003UPP\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u000EQTF_ALL_STYLESLUpp::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\RichText.h:404:1)\u0013Upp::QTF_ALL_STYLES\u000EQTF_ALL_STYLES\u0003Upp\u000EQTF_ALL_STYLES\u0003Upp\u0003UPP\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\fQTF_NOSTYLESLUpp::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\RichText.h:404:1)\u0011Upp::QTF_NOSTYLES\fQTF_NOSTYLES\u0003Upp\fQTF_NOSTYLES\u0003Upp\u0003UPP\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\bQTF_CRLFLUpp::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\RichText.h:404:1)\rUpp::QTF_CRLF\bQTF_CRLF\u0003Upp\bQTF_CRLF\u0003Upp\u0003UPP\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\rQTF_NOCHARSETLUpp::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\RichText.h:404:1)\u0012Upp::QTF_NOCHARSET\rQTF_NOCHARSET\u0003Upp\rQTF_NOCHARSET\u0003Upp\u0003UPP\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\nQTF_NOLANGLUpp::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\RichText.h:404:1)\u000FUpp::QTF_NOLANG\nQTF_NOLANG\u0003Upp\nQTF_NOLANG\u0003Upp\u0003UPP\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0015\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\aQTF_ALLLUpp::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\RichText.h:404:1)\fUpp::QTF_ALL\aQTF_ALL\u0003Upp\aQTF_ALL\u0003Upp\u0003UPP\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000¢\u0001\u0000\u0000\u0000\u0000\u0000\u0000¢\u0001\u0000\u0000\u0001\u0000\u0000\u0000³\u0001\u0000\u0000\u0001\u0000\u0000\vRichCellPos\u0010Upp::RichCellPos\u0010Upp::RichCellPos\vRichCellPos\u0003Upp\vRICHCELLPOS\u0010Upp::RichCellPos\u0010UPP::RICHCELLPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000£\u0001\u0000\u0000\u0001\u0000\u0000\u0000£\u0001\u0000\u0000\u0016\u0000\u0000\u0000£\u0001\u0000\u0000\u0001\u0000\u0000\u0003pos\u0003int\u0015Upp::RichCellPos::pos\aint pos\u0003Upp\u0003POS\u0010Upp::RichCellPos\u0010UPP::RICHCELLPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000¥\u0001\u0000\u0000\u0001\u0000\u0000\u0000¥\u0001\u0000\u0000\u001A\u0000\u0000\u0000¥\u0001\u0000\u0000\u0001\u0000\u0000\atextlen\u0003int\u0019Upp::RichCellPos::textlen\vint textlen\u0003Upp\aTEXTLEN\u0010Upp::RichCellPos\u0010UPP::RICHCELLPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000§\u0001\u0000\u0000\u0001\u0000\u0000\u0000§\u0001\u0000\u0000\u001A\u0000\u0000\u0000§\u0001\u0000\u0000\u0001\u0000\u0000\atabsize\u0004Size\u0019Upp::RichCellPos::tabsize\fSize tabsize\u0003Upp\aTABSIZE\u0010Upp::RichCellPos\u0010UPP::RICHCELLPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000¨\u0001\u0000\u0000\u0001\u0000\u0000\u0000¨\u0001\u0000\u0000\u0019\u0000\u0000\u0000¨\u0001\u0000\u0000\u0001\u0000\u0000\u0006tabpos\u0003int\u0018Upp::RichCellPos::tabpos\nint tabpos\u0003Upp\u0006TABPOS\u0010Upp::RichCellPos\u0010UPP::RICHCELLPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000©\u0001\u0000\u0000\u0001\u0000\u0000\u0000©\u0001\u0000\u0000\u0019\u0000\u0000\u0000©\u0001\u0000\u0000\u0001\u0000\u0000\u0006tablen\u0003int\u0018Upp::RichCellPos::tablen\nint tablen\u0003Upp\u0006TABLEN\u0010Upp::RichCellPos\u0010UPP::RICHCELLPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000ª\u0001\u0000\u0000\u0001\u0000\u0000\u0000ª\u0001\u0000\u0000\u001A\u0000\u0000\u0000ª\u0001\u0000\u0000\u0001\u0000\u0000\acellpos\u0003int\u0019Upp::RichCellPos::cellpos\vint cellpos\u0003Upp\aCELLPOS\u0010Upp::RichCellPos\u0010UPP::RICHCELLPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000«\u0001\u0000\u0000\u0001\u0000\u0000\u0000«\u0001\u0000\u0000\u001A\u0000\u0000\u0000«\u0001\u0000\u0000\u0001\u0000\u0000\acelllen\u0003int\u0019Upp::RichCellPos::celllen\vint celllen\u0003Upp\aCELLLEN\u0010Upp::RichCellPos\u0010UPP::RICHCELLPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000¬\u0001\u0000\u0000\u0001\u0000\u0000\u0000¬\u0001\u0000\u0000\u0018\u0000\u0000\u0000¬\u0001\u0000\u0000\u0001\u0000\u0000\u0005level\u0003int\u0017Upp::RichCellPos::level\tint level\u0003Upp\u0005LEVEL\u0010Upp::RichCellPos\u0010UPP::RICHCELLPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000­\u0001\u0000\u0000\u0001\u0000\u0000\u0000­\u0001\u0000\u0000\u0019\u0000\u0000\u0000­\u0001\u0000\u0000\u0001\u0000\u0000\u0006format\u0010RichCell::Format\u0018Upp::RichCellPos::format\u0017RichCell::Format format\u0003Upp\u0006FORMAT\u0010Upp::RichCellPos\u0010UPP::RICHCELLPOS\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000®\u0001\u0000\u0000\u0001\u0000\u0000\u0000®\u0001\u0000\u0000\u001E\u0000\u0000\u0000®\u0001\u0000\u0000\u0001\u0000\u0000\vtableformat\u0011RichTable::Format\u001DUpp::RichCellPos::tableformat\u001DRichTable::Format tableformat\u0003Upp\vTABLEFORMAT\u0010Upp::RichCellPos\u0010UPP::RICHCELLPOS\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000±\u0001\u0000\u0000\u0001\u0000\u0000\u0000±\u0001\u0000\u0000\u0018\u0000\u0000\u0000±\u0001\u0000\u0000\u0000\u0000\u0000\bToString\u000FString () const!Upp::RichCellPos::ToString()const\u0017String ToString() const\u0003Upp\bTOSTRING\u0010Upp::RichCellPos\u0010UPP::RICHCELLPOS\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000µ\u0001\u0000\u0000\u0000\u0000\u0000\u0000µ\u0001\u0000\u0000\u001B\u0000\u0000\u0000µ\u0001\u0000\u0000\u0000\u0000\u0000\u0005DeQtf\u0015String (const char *)\u0017Upp::DeQtf(const char*)\u001BString DeQtf(const char *s)\u0003Upp\u0005DEQTF\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000¶\u0001\u0000\u0000\u0000\u0000\u0000\u0000¶\u0001\u0000\u0000\u001D\u0000\u0000\u0000¶\u0001\u0000\u0000\u0000\u0000\u0000\aDeQtfLf\u0015String (const char *)\u0019Upp::DeQtfLf(const char*)\u001DString DeQtfLf(const char *s)\u0003Upp\aDEQTFLF\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000¸\u0001\u0000\u0000\u0000\u0000\u0000\u0000¸\u0001\u0000\u0000\u0019\u0000\u0000\u0000¸\u0001\u0000\u0000\u0000\u0000\u0000\tQtfFormat\u000EString (Color)\u0015Upp::QtfFormat(Color)\u0019String QtfFormat(Color c)\u0003Upp\tQTFFORMAT\u0003Upp\u0003UPP\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000º\u0001\u0000\u0000\u0000\u0000\u0000\u0000º\u0001\u0000\u0000\u0001\u0000\u0000\u0000Â\u0001\u0000\u0000\u0001\u0000\u0000\rQtfRichObject\u0012Upp::QtfRichObject\u0012Upp::QtfRichObject\rQtfRichObject\u0003Upp\rQTFRICHOBJECT\u0012Upp::QtfRichObject\u0012UPP::QTFRICHOBJECT\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000»\u0001\u0000\u0000\u0001\u0000\u0000\u0000»\u0001\u0000\u0000\u000F\u0000\u0000\u0000»\u0001\u0000\u0000\u0001\u0000\u0000\u0003obj\nRichObject\u0017Upp::QtfRichObject::obj\u000ERichObject obj\u0003Upp\u0003OBJ\u0012Upp::QtfRichObject\u0012UPP::QTFRICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000¾\u0001\u0000\u0000\u0001\u0000\u0000\u0000¾\u0001\u0000\u0000\u0018\u0000\u0000\u0000¾\u0001\u0000\u0000\u0000\u0000\u0000\bToString\u000FString () const#Upp::QtfRichObject::ToString()const\u0017String ToString() const\u0003Upp\bTOSTRING\u0012Upp::QtfRichObject\u0012UPP::QTFRICHOBJECT\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000À\u0001\u0000\u0000\u0001\u0000\u0000\u0000À\u0001\u0000\u0000\u0013\u0000\u0000\u0000À\u0001\u0000\u0000\u0001\u0000\u0000\rQtfRichObject\avoid ()#Upp::QtfRichObject::QtfRichObject()\u000FQtfRichObject()\u0003Upp\rQTFRICHOBJECT\u0012Upp::QtfRichObject\u0012UPP::QTFRICHOBJECT\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000Á\u0001\u0000\u0000\u0001\u0000\u0000\u0000Á\u0001\u0000\u0000#\u0000\u0000\u0000Á\u0001\u0000\u0000\u0000\u0000\u0000\rQtfRichObject\u0019void (const RichObject &)4Upp::QtfRichObject::QtfRichObject(const RichObject&)\"QtfRichObject(const RichObject& o)\u0003Upp\rQTFRICHOBJECT\u0012Upp::QtfRichObject\u0012UPP::QTFRICHOBJECT\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000\u0000Ä\u0001\u0000\u0000\u0000\u0000\u0000\u0000Ä\u0001\u0000\u0000*\u0000\u0000\u0000Ä\u0001\u0000\u0000\u0000\u0000\u0000\nAsRichText\u001DRichText (const RichObject &)\"Upp::AsRichText(const RichObject&)*RichText AsRichText(const RichObject& obj)\u0003Upp\nASRICHTEXT\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000\u0000Å\u0001\u0000\u0000\u0000\u0000\u0000\u0000Å\u0001\u0000\u0000%\u0000\u0000\u0000Å\u0001\u0000\u0000\u0000\u0000\u0000\u0005AsQTF\u001BString (const RichObject &)\u001DUpp::AsQTF(const RichObject&)#String AsQTF(const RichObject& obj)\u0003Upp\u0005ASQTF\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000Ç\u0001\u0000\u0000\u0000\u0000\u0000\u0000Ç\u0001\u0000\u0000V\u0000\u0000\u0000Ç\u0001\u0000\u0000\u0000\u0000\u0000\bParseQTF,bool (RichText &, const char *, int, void *).Upp::ParseQTF(RichText&,const char*,int,void*)Sbool ParseQTF(RichText& txt, const char *qtf, int accesskey = 0, void *context = 0)\u0003Upp\bPARSEQTF\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000\u0000É\u0001\u0000\u0000\u0000\u0000\u0000\u0000É\u0001\u0000\u0000K\u0000\u0000\u0000É\u0001\u0000\u0000\u0000\u0000\u0000\bParseQTF$RichText (const char *, int, void *)$Upp::ParseQTF(const char*,int,void*)HRichText ParseQTF(const char *qtf, int accesskey = 0, void *context = 0)\u0003Upp\bPARSEQTF\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000\u0000Ë\u0001\u0000\u0000\u0000\u0000\u0000\u0000Ë\u0001\u0000\u0000S\u0000\u0000\u0000Ë\u0001\u0000\u0000\u0000\u0000\u0000\nAsRichText2RichText (const wchar *, const RichPara::Format &)5Upp::AsRichText(const wchar*,const RichPara::Format&)SRichText AsRichText(const wchar *s, const RichPara::Format& f = RichPara::Format())\u0003Upp\nASRICHTEXT\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000\u0000Í\u0001\u0000\u0000\u0000\u0000\u0000\u0000Í\u0001\u0000\u0000@\u0000\u0000\u0000Î\u0001\u0000\u0000\u0000\u0000\u0000\u0005AsQTF&String (const RichText &, byte, dword)&Upp::AsQTF(const RichText&,byte,dword)kString AsQTF(const RichText& doc, byte charset = 255, dword options = QTF_BODY | QTF_ALL_STYLES | QTF_CRLF)\u0003Upp\u0005ASQTF\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u000E\u0000\u0000\u0000Ð\u0001\u0000\u0000\u0000\u0000\u0000\u0000Ð\u0001\u0000\u00008\u0000\u0000\u0000Ñ\u0001\u0000\u0000\u0001\u0000\u0000\vStylesAsQTF\u001FString (const RichText &, byte)&Upp::StylesAsQTF(const RichText&,byte);String StylesAsQTF(const RichText& doc, byte charset = 255)\u0003Upp\vSTYLESASQTF\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u000E\u0000\u0000\u0000Ó\u0001\u0000\u0000\u0000\u0000\u0000\u0000Ó\u0001\u0000\u00002\u0000\u0000\u0000Ô\u0001\u0000\u0000\u0001\u0000\u0000\tBodyAsQTF\u001FString (const RichText &, byte)$Upp::BodyAsQTF(const RichText&,byte)9String BodyAsQTF(const RichText& doc, byte charset = 255)\u0003Upp\tBODYASQTF\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000×\u0001\u0000\u0000\u0000\u0000\u0000\u0000×\u0001\u0000\u00002\u0000\u0000\u0000×\u0001\u0000\u0000\u0000\u0000\u0000\u0006SetQTF&void (One<RichText> &, const String &)\u001FUpp::SetQTF(One&,const String&)2void SetQTF(One<RichText>& txt, const String& qtf)\u0003Upp\u0006SETQTF\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0004\u0000\u0000\u0000Ù\u0001\u0000\u0000\u0000\u0000\u0000\u0000Ù\u0001\u0000\u0000$\u0000\u0000\u0000Ù\u0001\u0000\u0000\u0000\u0000\u0000\u001EGetRichTextScreenStdFontHeight\u0006int ()%Upp::GetRichTextScreenStdFontHeight()$int GetRichTextScreenStdFontHeight()\u0003Upp\u001EGETRICHTEXTSCREENSTDFONTHEIGHT\u0003Upp\u0003UPP\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000Û\u0001\u0000\u0000\u0000\u0000\u0000\u0000Û\u0001\u0000\u0000\u0001\u0000\u0000\u0000â\u0001\u0000\u0000\u0001\u0000\u0000G(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\RichText.h:476:1)LUpp::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\RichText.h:476:1)@Upp::(unnamed at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\RichText.)\u0004enum\u0003UppG(UNNAMED ENUM AT C:\\USERS\\SBLO\\AI-UPP\\UPPSRC\\RICHTEXT\\RICHTEXT.H:476:1)\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ý\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ý\u0001\u0000\u0000\u001C\u0000\u0000\u0000Ý\u0001\u0000\u0000\u0001\u0000\u0000\bROUNDOFFLUpp::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\RichText.h:476:1)\rUpp::ROUNDOFF\bROUNDOFF\u0003Upp\bROUNDOFF\u0003Upp\u0003UPP\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000Þ\u0001\u0000\u0000\u0001\u0000\u0000\u0000Þ\u0001\u0000\u0000\u001A\u0000\u0000\u0000Þ\u0001\u0000\u0000\u0001\u0000\u0000\tMAX_FONTSLUpp::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\RichText.h:476:1)\u000EUpp::MAX_FONTS\tMAX_FONTS\u0003Upp\tMAX_FONTS\u0003Upp\u0003UPP\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000ß\u0001\u0000\u0000\u0001\u0000\u0000\u0000ß\u0001\u0000\u0000\u001E\u0000\u0000\u0000ß\u0001\u0000\u0000\u0001\u0000\u0000\bMAX_DOTSLUpp::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\RichText.h:476:1)\rUpp::MAX_DOTS\bMAX_DOTS\u0003Upp\bMAX_DOTS\u0003Upp\u0003UPP\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000à\u0001\u0000\u0000\u0001\u0000\u0000\u0000à\u0001\u0000\u0000\u0019\u0000\u0000\u0000à\u0001\u0000\u0000\u0001\u0000\u0000\u000EMAX_DOT_HEIGHTLUpp::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\RichText.h:476:1)\u0013Upp::MAX_DOT_HEIGHT\u000EMAX_DOT_HEIGHT\u0003Upp\u000EMAX_DOT_HEIGHT\u0003Upp\u0003UPP\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000á\u0001\u0000\u0000\u0001\u0000\u0000\u0000á\u0001\u0000\u0000,\u0000\u0000\u0000á\u0001\u0000\u0000\u0001\u0000\u0000\u0010MAX_POINT_HEIGHTLUpp::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\RichText.h:476:1)\u0015Upp::MAX_POINT_HEIGHT\u0010MAX_POINT_HEIGHT\u0003Upp\u0010MAX_POINT_HEIGHT\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\v\u0000\u0000\u0000ä\u0001\u0000\u0000\u0000\u0000\u0000\u0000ä\u0001\u0000\u0000[\u0000\u0000\u0000ä\u0001\u0000\u0000\u0001\u0000\u0000\bDotTwips\tint (int)\u0012Upp::DotTwips(int)\u0016int DotTwips(int dots)\u0003Upp\bDOTTWIPS\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\v\u0000\u0000\u0000å\u0001\u0000\u0000\u0000\u0000\u0000\u0000å\u0001\u0000\u0000[\u0000\u0000\u0000å\u0001\u0000\u0000\u0001\u0000\u0000\bTwipDots\tint (int)\u0012Upp::TwipDots(int)\u0015int TwipDots(int twp)\u0003Upp\bTWIPDOTS\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\v\u0000\u0000\u0000æ\u0001\u0000\u0000\u0000\u0000\u0000\u0000æ\u0001\u0000\u0000[\u0000\u0000\u0000æ\u0001\u0000\u0000\u0001\u0000\u0000\tDotPoints\tint (int)\u0013Upp::DotPoints(int)\u0017int DotPoints(int dots)\u0003Upp\tDOTPOINTS\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\v\u0000\u0000\u0000ç\u0001\u0000\u0000\u0000\u0000\u0000\u0000ç\u0001\u0000\u0000[\u0000\u0000\u0000ç\u0001\u0000\u0000\u0001\u0000\u0000\tPointDots\tint (int)\u0013Upp::PointDots(int)\u0016int PointDots(int pts)\u0003Upp\tPOINTDOTS\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\v\u0000\u0000\u0000è\u0001\u0000\u0000\u0000\u0000\u0000\u0000è\u0001\u0000\u0000f\u0000\u0000\u0000è\u0001\u0000\u0000\u0001\u0000\u0000\vTwipDotSize\tint (int)\u0015Upp::TwipDotSize(int)\u0018int TwipDotSize(int twp)\u0003Upp\vTWIPDOTSIZE\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\v\u0000\u0000\u0000é\u0001\u0000\u0000\u0000\u0000\u0000\u0000é\u0001\u0000\u0000g\u0000\u0000\u0000é\u0001\u0000\u0000\u0001\u0000\u0000\u000EPointDotHeight\tint (int)\u0018Upp::PointDotHeight(int)\u0019int PointDotHeight(int p)\u0003Upp\u000EPOINTDOTHEIGHT\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0006\u0000\u0000\u0000ë\u0001\u0000\u0000\u0000\u0000\u0000\u0000ë\u0001\u0000\u0000,\u0000\u0000\u0000ë\u0001\u0000\u0000\u0000\u0000\u0000\u0018SetRichTextStdScreenZoom\u000Fvoid (int, int)&Upp::SetRichTextStdScreenZoom(int,int)+void SetRichTextStdScreenZoom(int m, int d)\u0003Upp\u0018SETRICHTEXTSTDSCREENZOOM\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0006\u0000\u0000\u0000ì\u0001\u0000\u0000\u0000\u0000\u0000\u0000ì\u0001\u0000\u0000 \u0000\u0000\u0000ì\u0001\u0000\u0000\u0000\u0000\u0000\u0018GetRichTextStdScreenZoom\aZoom ()\u001FUpp::GetRichTextStdScreenZoom()\u001FZoom GetRichTextStdScreenZoom()\u0003Upp\u0018GETRICHTEXTSTDSCREENZOOM\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u000F\u0000\u0000\u0000î\u0001\u0000\u0000\u0000\u0000\u0000\u0000î\u0001\u0000\u0000\u001B\u0000\u0000\u0000î\u0001\u0000\u0000\u0000\u0000\u0000\nQTFDisplay\u0011const Display &()\u0011Upp::QTFDisplay()\u001Bconst Display& QTFDisplay()\u0003Upp\nQTFDISPLAY\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u000F\u0000\u0000\u0000ï\u0001\u0000\u0000\u0000\u0000\u0000\u0000ï\u0001\u0000\u0000\"\u0000\u0000\u0000ï\u0001\u0000\u0000\u0000\u0000\u0000\u0011QTFDisplayVCenter\u0011const Display &()\u0018Upp::QTFDisplayVCenter()\"const Display& QTFDisplayVCenter()\u0003Upp\u0011QTFDISPLAYVCENTER\u0003Upp\u0003UPP\u0000\u0000\u0004\u0000\u0000\u0000\u0006\u0000\u0000\u0000ñ\u0001\u0000\u0000\u0000\u0000\u0000\u0000ñ\u0001\u0000\u0000\u0001\u0000\u0000\u0000ø\u0001\u0000\u0000\u0001\u0000\u0000\u000FHtmlObjectSaver\u0014Upp::HtmlObjectSaver\u0014Upp::HtmlObjectSaver\u000FHtmlObjectSaver\u0003Upp\u000FHTMLOBJECTSAVER\u0014Upp::HtmlObjectSaver\u0014UPP::HTMLOBJECTSAVER\u0000\u0000\u0019\u0000\u0000\u0000\t\u0000\u0000\u0000ô\u0001\u0000\u0000\u0001\u0000\u0000\u0000ô\u0001\u0000\u0000\u001E\u0000\u0000\u0000ô\u0001\u0000\u0000\u0001\u0000\u0000\u0010~HtmlObjectSaver\u0010void () noexcept\u0019Upp::HtmlObjectSaver::~()\u0012~HtmlObjectSaver()\u0003Upp\u0010~HTMLOBJECTSAVER\u0014Upp::HtmlObjectSaver\u0014UPP::HTMLOBJECTSAVER\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000ö\u0001\u0000\u0000\u0001\u0000\u0000\u0000ö\u0001\u0000\u0000V\u0000\u0000\u0000ö\u0001\u0000\u0000\u0001\u0001\u0000\aGetHtml\u001BString (const RichObject &)0Upp::HtmlObjectSaver::GetHtml(const RichObject&)(String GetHtml(const RichObject& object)\u0003Upp\aGETHTML\u0014Upp::HtmlObjectSaver\u0014UPP::HTMLOBJECTSAVER\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000÷\u0001\u0000\u0000\u0001\u0000\u0000\u0000÷\u0001\u0000\u0000a\u0000\u0000\u0000÷\u0001\u0000\u0000\u0001\u0001\u0000\aGetHtml+String (const RichObject &, const String &)>Upp::HtmlObjectSaver::GetHtml(const RichObject&,const String&)<String GetHtml(const RichObject& object, const String& link)\u0003Upp\aGETHTML\u0014Upp::HtmlObjectSaver\u0014UPP::HTMLOBJECTSAVER\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000ú\u0001\u0000\u0000\u0000\u0000\u0000\u0000ú\u0001\u0000\u0000&\u0000\u0000\u0000ÿ\u0001\u0000\u0000\u0000\u0000\u0000\nEncodeHtmlÿ¾\u0000\u0000\u0000String (const RichText &, Index<String> &, const VectorMap<String, String> &, const VectorMap<String, String> &, const String &, const String &, Zoom, const VectorMap<String, String> &, int)ÿ\u007F\u0000\u0000\u0000Upp::EncodeHtml(const RichText&,Index&,const VectorMap&,const VectorMap&,const String&,const String&,Zoom,const VectorMap&,int)ÿ-\u0001\u0000\u0000String EncodeHtml(const RichText& text, Index<String>& css, const VectorMap<String, String>& links, const VectorMap<String, String>& labels, const String& path, const String& base = Null, Zoom z = Zoom(8, 40), const VectorMap<String, String>& escape = VectorMap<String, String>(), int imtolerance = 0)\u0003Upp\nENCODEHTML\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000X\u0000\u0000\u0000\u0004\u0002\u0000\u0000\u0000\u0000\u0000\nEncodeHtmlÿ¬\u0000\u0000\u0000String (const RichText &, Index<String> &, const VectorMap<String, String> &, const VectorMap<String, String> &, HtmlObjectSaver &, Zoom, const VectorMap<String, String> &)pUpp::EncodeHtml(const RichText&,Index&,const VectorMap&,const VectorMap&,HtmlObjectSaver&,Zoom,const VectorMap&)ÿ\b\u0001\u0000\u0000String EncodeHtml(const RichText& text, Index<String>& css, const VectorMap<String, String>& links, const VectorMap<String, String>& labels, HtmlObjectSaver& object_saver, Zoom z = Zoom(8, 40), const VectorMap<String, String>& escape = VectorMap<String, String>())\u0003Upp\nENCODEHTML\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000\u0005\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0002\u0000\u0000\u001F\u0000\u0000\u0000\u0005\u0002\u0000\u0000\u0000\u0000\u0000\u0005AsCss\u0018String (Index<String> &)\u0012Upp::AsCss(Index&)\u001FString AsCss(Index<String>& ss)\u0003Upp\u0005ASCSS\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000\a\u0002\u0000\u0000\u0000\u0000\u0000\u0000\a\u0002\u0000\u0000I\u0000\u0000\u0000\a\u0002\u0000\u0000\u0000\u0000\u0000\bMakeHtml5String (const char *, const String &, const String &)6Upp::MakeHtml(const char*,const String&,const String&)IString MakeHtml(const char *title, const String& css, const String& body)\u0003Upp\bMAKEHTML\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000\n\u0002\u0000\u0000\u0000\u0000\u0000\u0000\t\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u000E\u0002\u0000\u0000\u0001\u0000\u0000\nEncodeHtmlsString (const RichText &, Index<String> &, const VectorMap<String, String> &, const String &, const String &, Zoom)YUpp::EncodeHtml(const RichText&,Index&,const VectorMap&,const String&,const String&,Zoom)ÿ¨\u0000\u0000\u0000String EncodeHtml(const RichText& text, Index<String>& css, const VectorMap<String, String>& links, const String& path, const String& base = Null, Zoom z = Zoom(8, 40))\u0003Upp\nENCODEHTML\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000\u0000\u0010\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0002\u0000\u0000Y\u0000\u0000\u0000\u0010\u0002\u0000\u0000\u0000\u0000\u0000\u0010ParseTrivialHtml\u001DRichText (const char *, Font)'Upp::ParseTrivialHtml(const char*,Font)WRichText ParseTrivialHtml(const char *html, Font base_font = Serif(int(15 *600 / 96.)))\u0003Upp\u0010PARSETRIVIALHTML\u0003Upp\u0003UPP\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000\u0012\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0019\u0002\u0000\u0000\u0001\u0000\u0000\u000ESimplePageDraw\u0013Upp::SimplePageDraw\u0013Upp::SimplePageDraw\u0019SimplePageDraw : PageDraw\u0003Upp\u000ESIMPLEPAGEDRAW\u0013Upp::SimplePageDraw\u0013UPP::SIMPLEPAGEDRAW\rUpp::PageDraw\u0000\u0006\u0000\u0000\u0000\a\u0000\u0000\u0000\u0013\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0013\u0002\u0000\u0000\b\u0000\u0000\u0000\u0013\u0002\u0000\u0000\u0001\u0000\u0000\u0001w\u0006Draw &\u0016Upp::SimplePageDraw::w\aDraw& w\u0003Upp\u0001W\u0013Upp::SimplePageDraw\u0013UPP::SIMPLEPAGEDRAW\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0015\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0015\u0002\u0000\u0000\u0018\u0000\u0000\u0000\u0015\u0002\u0000\u0000\u0000\u0001\u0000\u0004Page\vDraw &(int)\u001EUpp::SimplePageDraw::Page(int)\u000FDraw& Page(int)\u0003Upp\u0004PAGE\u0013Upp::SimplePageDraw\u0013UPP::SIMPLEPAGEDRAW\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0017\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0017\u0002\u0000\u0000\"\u0000\u0000\u0000\u0017\u0002\u0000\u0000\u0001\u0000\u0000\u000ESimplePageDraw\rvoid (Draw &)*Upp::SimplePageDraw::SimplePageDraw(Draw&)\u0017SimplePageDraw(Draw& w)\u0003Upp\u000ESIMPLEPAGEDRAW\u0013Upp::SimplePageDraw\u0013UPP::SIMPLEPAGEDRAW\u0000\u0000\u0019\u0000\u0000\u0000\t\u0000\u0000\u0000\u0018\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0018\u0002\u0000\u0000\u001D\u0000\u0000\u0000\u0018\u0002\u0000\u0000\u0001\u0000\u0000\u000F~SimplePageDraw\u0010void () noexcept\u0018Upp::SimplePageDraw::~()\u0011~SimplePageDraw()\u0003Upp\u000F~SIMPLEPAGEDRAW\u0013Upp::SimplePageDraw\u0013UPP::SIMPLEPAGEDRAW\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000\u001B\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u001B\u0002\u0000\u0000\u0001\u0000\u0000\u0000%\u0002\u0000\u0000\u0001\u0000\u0000\rPrintPageDraw\u0012Upp::PrintPageDraw\u0012Upp::PrintPageDraw\u0018PrintPageDraw : PageDraw\u0003Upp\rPRINTPAGEDRAW\u0012Upp::PrintPageDraw\u0012UPP::PRINTPAGEDRAW\rUpp::PageDraw\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u001C\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u001C\u0002\u0000\u0000\r\u0000\u0000\u0000\u001C\u0002\u0000\u0000\u0001\u0000\u0000\u0004page\u0003int\u0018Upp::PrintPageDraw::page\bint page\u0003Upp\u0004PAGE\u0012Upp::PrintPageDraw\u0012UPP::PRINTPAGEDRAW\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u001D\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u001D\u0002\u0000\u0000\n\u0000\u0000\u0000\u001D\u0002\u0000\u0000\u0001\u0000\u0000\u0001w\u0006Draw &\u0015Upp::PrintPageDraw::w\aDraw& w\u0003Upp\u0001W\u0012Upp::PrintPageDraw\u0012UPP::PRINTPAGEDRAW\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u001E\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u001E\u0002\u0000\u0000\v\u0000\u0000\u0000\u001E\u0002\u0000\u0000\u0001\u0000\u0000\u0002nw\aNilDraw\u0016Upp::PrintPageDraw::nw\nNilDraw nw\u0003Upp\u0002NW\u0012Upp::PrintPageDraw\u0012UPP::PRINTPAGEDRAW\u0000\u0000\u0015\u0000\u0000\u0000\a\u0000\u0000\u0000 \u0002\u0000\u0000\u0001\u0000\u0000\u0000 \u0002\u0000\u0000D\u0000\u0000\u0000 \u0002\u0000\u0000\u0001\u0001\u0000\u0004Page\vDraw &(int)\u001DUpp::PrintPageDraw::Page(int)\u0015Draw& Page(int _page)\u0003Upp\u0004PAGE\u0012Upp::PrintPageDraw\u0012UPP::PRINTPAGEDRAW\u0000\u0000\u0015\u0000\u0000\u0000\a\u0000\u0000\u0000!\u0002\u0000\u0000\u0001\u0000\u0000\u0000!\u0002\u0000\u0000,\u0000\u0000\u0000!\u0002\u0000\u0000\u0001\u0000\u0000\aSetPage\nvoid (int) Upp::PrintPageDraw::SetPage(int)\u0017void SetPage(int _page)\u0003Upp\aSETPAGE\u0012Upp::PrintPageDraw\u0012UPP::PRINTPAGEDRAW\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000#\u0002\u0000\u0000\u0001\u0000\u0000\u0000#\u0002\u0000\u0000!\u0000\u0000\u0000#\u0002\u0000\u0000\u0001\u0000\u0000\rPrintPageDraw\rvoid (Draw &)(Upp::PrintPageDraw::PrintPageDraw(Draw&)\u0016PrintPageDraw(Draw& w)\u0003Upp\rPRINTPAGEDRAW\u0012Upp::PrintPageDraw\u0012UPP::PRINTPAGEDRAW\u0000\u0000\u0019\u0000\u0000\u0000\t\u0000\u0000\u0000$\u0002\u0000\u0000\u0001\u0000\u0000\u0000$\u0002\u0000\u0000\u001C\u0000\u0000\u0000$\u0002\u0000\u0000\u0001\u0000\u0000\u000E~PrintPageDraw\u0010void () noexcept\u0017Upp::PrintPageDraw::~()\u0010~PrintPageDraw()\u0003Upp\u000E~PRINTPAGEDRAW\u0012Upp::PrintPageDraw\u0012UPP::PRINTPAGEDRAW\u0000\u0000\b\u0000\u0000\u0000\u000F\u0000\u0000\u0000'\u0002\u0000\u0000\u0000\u0000\u0000\u0000'\u0002\u0000\u0000Q\u0000\u0000\u0000'\u0002\u0000\u0000\u0000\u0000\u0000\vRenderPages'Array<Drawing> (const RichText &, Size)&Upp::RenderPages(const RichText&,Size)QArray<Drawing> RenderPages(const RichText& txt, Size pagesize = Size(3968, 6074))\u0003Upp\vRENDERPAGES\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000)\u0002\u0000\u0000\u0000\u0000\u0000\u0000)\u0002\u0000\u0000B\u0000\u0000\u0000*\u0002\u0000\u0000\u0000\u0000\u0000\u0003PdfDString (const RichText &, Size, int, bool, const PdfSignatureInfo *)?Upp::Pdf(const RichText&,Size,int,bool,const PdfSignatureInfo*)ÿ\u0000\u0000\u0000String Pdf(const RichText& txt, Size pagesize = Size(3968, 6074), int margin = 200, bool pdfa = false, const PdfSignatureInfo *sign = 0)\u0003Upp\u0003PDF\u0003Upp\u0003UPP\u0000\u0000end\u0000Qå\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Para.h","value":"dataò\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\tRichCaret\u000EUpp::RichCaret\u000EUpp::RichCaret\tRichCaret\u0003Upp\tRICHCARET\u000EUpp::RichCaret\u000EUPP::RICHCARET\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\aRichPos\fUpp::RichPos\fUpp::RichPos\aRichPos\u0003Upp\aRICHPOS\fUpp::RichPos\fUPP::RICHPOS\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0001\u0000\u0000\u0000?\u0001\u0000\u0000\u0001\u0000\u0000\bRichPara\rUpp::RichPara\rUpp::RichPara\bRichPara\u0003Upp\bRICHPARA\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0005\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0002\u0000\u0000\u0000*\u0000\u0000\u0000\u0001\u0000\u0000\u0004Code\u0013Upp::RichPara::Code\u0013Upp::RichPara::Code\tenum Code\u0003Upp\u0004CODE\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0001\u0000\u0000\u0004NONE\u0013Upp::RichPara::Code\u0013Upp::RichPara::NONE\u0004NONE\u0003Upp\u0004NONE\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000\u0011\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\nINDEXENTRY\u0013Upp::RichPara::Code\u0019Upp::RichPara::INDEXENTRY\nINDEXENTRY\u0003Upp\nINDEXENTRY\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000\u0011\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0005FIELD\u0013Upp::RichPara::Code\u0014Upp::RichPara::FIELD\u0005FIELD\u0003Upp\u0005FIELD\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\t\u0000\u0000\u0000\u0002\u0000\u0000\u0000\t\u0000\u0000\u0000\u0011\u0000\u0000\u0000\t\u0000\u0000\u0000\u0001\u0000\u0000\u0004FACE\u0013Upp::RichPara::Code\u0013Upp::RichPara::FACE\u0004FACE\u0003Upp\u0004FACE\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\n\u0000\u0000\u0000\u0002\u0000\u0000\u0000\n\u0000\u0000\u0000\u0011\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0000\u0000\u0006HEIGHT\u0013Upp::RichPara::Code\u0015Upp::RichPara::HEIGHT\u0006HEIGHT\u0003Upp\u0006HEIGHT\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\v\u0000\u0000\u0000\u0002\u0000\u0000\u0000\v\u0000\u0000\u0000\u0011\u0000\u0000\u0000\v\u0000\u0000\u0000\u0001\u0000\u0000\bLANGUAGE\u0013Upp::RichPara::Code\u0017Upp::RichPara::LANGUAGE\bLANGUAGE\u0003Upp\bLANGUAGE\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\f\u0000\u0000\u0000\u0002\u0000\u0000\u0000\f\u0000\u0000\u0000\u0011\u0000\u0000\u0000\f\u0000\u0000\u0000\u0001\u0000\u0000\u0003INK\u0013Upp::RichPara::Code\u0012Upp::RichPara::INK\u0003INK\u0003Upp\u0003INK\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\r\u0000\u0000\u0000\u0002\u0000\u0000\u0000\r\u0000\u0000\u0000\u0011\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0005PAPER\u0013Upp::RichPara::Code\u0014Upp::RichPara::PAPER\u0005PAPER\u0003Upp\u0005PAPER\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\u0003TAB\u0013Upp::RichPara::Code\u0012Upp::RichPara::TAB\u0003TAB\u0003Upp\u0003TAB\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0004LINK\u0013Upp::RichPara::Code\u0013Upp::RichPara::LINK\u0004LINK\u0003Upp\u0004LINK\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0000\aSSCRIPT\u0013Upp::RichPara::Code\u0016Upp::RichPara::SSCRIPT\aSSCRIPT\u0003Upp\aSSCRIPT\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0001\u0000\u0000\u0005BOLD0\u0013Upp::RichPara::Code\u0014Upp::RichPara::BOLD0\u0005BOLD0\u0003Upp\u0005BOLD0\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0001\u0000\u0000\u0005BOLD1\u0013Upp::RichPara::Code\u0014Upp::RichPara::BOLD1\u0005BOLD1\u0003Upp\u0005BOLD1\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0000\u0005BOLDS\u0013Upp::RichPara::Code\u0014Upp::RichPara::BOLDS\u0005BOLDS\u0003Upp\u0005BOLDS\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\aITALIC0\u0013Upp::RichPara::Code\u0016Upp::RichPara::ITALIC0\aITALIC0\u0003Upp\aITALIC0\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\aITALIC1\u0013Upp::RichPara::Code\u0016Upp::RichPara::ITALIC1\aITALIC1\u0003Upp\aITALIC1\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0000\aITALICS\u0013Upp::RichPara::Code\u0016Upp::RichPara::ITALICS\aITALICS\u0003Upp\aITALICS\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\nUNDERLINE0\u0013Upp::RichPara::Code\u0019Upp::RichPara::UNDERLINE0\nUNDERLINE0\u0003Upp\nUNDERLINE0\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0001\u0000\u0000\nUNDERLINE1\u0013Upp::RichPara::Code\u0019Upp::RichPara::UNDERLINE1\nUNDERLINE1\u0003Upp\nUNDERLINE1\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0001\u0000\u0000\nUNDERLINES\u0013Upp::RichPara::Code\u0019Upp::RichPara::UNDERLINES\nUNDERLINES\u0003Upp\nUNDERLINES\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0000\u0000\tCAPITALS0\u0013Upp::RichPara::Code\u0018Upp::RichPara::CAPITALS0\tCAPITALS0\u0003Upp\tCAPITALS0\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0000\tCAPITALS1\u0013Upp::RichPara::Code\u0018Upp::RichPara::CAPITALS1\tCAPITALS1\u0003Upp\tCAPITALS1\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0001\u0000\u0000\tCAPITALSS\u0013Upp::RichPara::Code\u0018Upp::RichPara::CAPITALSS\tCAPITALSS\u0003Upp\tCAPITALSS\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000 \u0000\u0000\u0000\u0002\u0000\u0000\u0000 \u0000\u0000\u0000\u0012\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\nSTRIKEOUT0\u0013Upp::RichPara::Code\u0019Upp::RichPara::STRIKEOUT0\nSTRIKEOUT0\u0003Upp\nSTRIKEOUT0\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000!\u0000\u0000\u0000\u0002\u0000\u0000\u0000!\u0000\u0000\u0000\u0012\u0000\u0000\u0000!\u0000\u0000\u0000\u0001\u0000\u0000\nSTRIKEOUT1\u0013Upp::RichPara::Code\u0019Upp::RichPara::STRIKEOUT1\nSTRIKEOUT1\u0003Upp\nSTRIKEOUT1\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\"\u0000\u0000\u0000\u0002\u0000\u0000\u0000\"\u0000\u0000\u0000\u0012\u0000\u0000\u0000\"\u0000\u0000\u0000\u0001\u0000\u0000\nSTRIKEOUTS\u0013Upp::RichPara::Code\u0019Upp::RichPara::STRIKEOUTS\nSTRIKEOUTS\u0003Upp\nSTRIKEOUTS\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000#\u0000\u0000\u0000\u0002\u0000\u0000\u0000#\u0000\u0000\u0000\u0012\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\aDASHED0\u0013Upp::RichPara::Code\u0016Upp::RichPara::DASHED0\aDASHED0\u0003Upp\aDASHED0\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000$\u0000\u0000\u0000\u0002\u0000\u0000\u0000$\u0000\u0000\u0000\u0012\u0000\u0000\u0000$\u0000\u0000\u0000\u0001\u0000\u0000\aDASHED1\u0013Upp::RichPara::Code\u0016Upp::RichPara::DASHED1\aDASHED1\u0003Upp\aDASHED1\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000%\u0000\u0000\u0000\u0002\u0000\u0000\u0000%\u0000\u0000\u0000\u0012\u0000\u0000\u0000%\u0000\u0000\u0000\u0001\u0000\u0000\aDASHEDS\u0013Upp::RichPara::Code\u0016Upp::RichPara::DASHEDS\aDASHEDS\u0003Upp\aDASHEDS\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000'\u0000\u0000\u0000\u0002\u0000\u0000\u0000'\u0000\u0000\u0000\u0012\u0000\u0000\u0000'\u0000\u0000\u0000\u0001\u0000\u0000\u0003EXT\u0013Upp::RichPara::Code\u0012Upp::RichPara::EXT\u0003EXT\u0003Upp\u0003EXT\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000)\u0000\u0000\u0000\u0002\u0000\u0000\u0000)\u0000\u0000\u0000\u0012\u0000\u0000\u0000)\u0000\u0000\u0000\u0001\u0000\u0000\u0006OBJECT\u0013Upp::RichPara::Code\u0015Upp::RichPara::OBJECT\u0006OBJECT\u0003Upp\u0006OBJECT\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0005\u0000\u0000\u0000\u0006\u0000\u0000\u0000,\u0000\u0000\u0000\u0001\u0000\u0000\u0000,\u0000\u0000\u0000\u0002\u0000\u0000\u00000\u0000\u0000\u0000\u0001\u0000\u0000\aExtCode\u0016Upp::RichPara::ExtCode\u0016Upp::RichPara::ExtCode\fenum ExtCode\u0003Upp\aEXTCODE\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000-\u0000\u0000\u0000\u0002\u0000\u0000\u0000-\u0000\u0000\u0000\u0011\u0000\u0000\u0000-\u0000\u0000\u0000\u0001\u0000\u0000\u0006NONAA0\u0016Upp::RichPara::ExtCode\u0015Upp::RichPara::NONAA0\u0006NONAA0\u0003Upp\u0006NONAA0\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000.\u0000\u0000\u0000\u0002\u0000\u0000\u0000.\u0000\u0000\u0000\u0011\u0000\u0000\u0000.\u0000\u0000\u0000\u0001\u0000\u0000\u0006NONAA1\u0016Upp::RichPara::ExtCode\u0015Upp::RichPara::NONAA1\u0006NONAA1\u0003Upp\u0006NONAA1\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000/\u0000\u0000\u0000\u0002\u0000\u0000\u0000/\u0000\u0000\u0000\u0011\u0000\u0000\u0000/\u0000\u0000\u0000\u0001\u0000\u0000\u0006NONAAS\u0016Upp::RichPara::ExtCode\u0015Upp::RichPara::NONAAS\u0006NONAAS\u0003Upp\u0006NONAAS\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0005\u0000\u0000\u0000\u0006\u0000\u0000\u00002\u0000\u0000\u0000\u0001\u0000\u0000\u00002\u0000\u0000\u0000\u0002\u0000\u0000\u00009\u0000\u0000\u0000\u0001\u0000\u0000\fBULLET_STYLE\u001BUpp::RichPara::BULLET_STYLE\u001BUpp::RichPara::BULLET_STYLE\u0011enum BULLET_STYLE\u0003Upp\fBULLET_STYLE\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u00003\u0000\u0000\u0000\u0002\u0000\u0000\u00003\u0000\u0000\u0000\r\u0000\u0000\u00003\u0000\u0000\u0000\u0001\u0000\u0000\vBULLET_NONE\u001BUpp::RichPara::BULLET_STYLE\u001AUpp::RichPara::BULLET_NONE\vBULLET_NONE\u0003Upp\vBULLET_NONE\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u00004\u0000\u0000\u0000\u0002\u0000\u0000\u00004\u0000\u0000\u0000\u000E\u0000\u0000\u00004\u0000\u0000\u0000\u0001\u0000\u0000\fBULLET_ROUND\u001BUpp::RichPara::BULLET_STYLE\u001BUpp::RichPara::BULLET_ROUND\fBULLET_ROUND\u0003Upp\fBULLET_ROUND\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u00005\u0000\u0000\u0000\u0002\u0000\u0000\u00005\u0000\u0000\u0000\u0013\u0000\u0000\u00005\u0000\u0000\u0000\u0001\u0000\u0000\u0011BULLET_ROUNDWHITE\u001BUpp::RichPara::BULLET_STYLE Upp::RichPara::BULLET_ROUNDWHITE\u0011BULLET_ROUNDWHITE\u0003Upp\u0011BULLET_ROUNDWHITE\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u00006\u0000\u0000\u0000\u0002\u0000\u0000\u00006\u0000\u0000\u0000\f\u0000\u0000\u00006\u0000\u0000\u0000\u0001\u0000\u0000\nBULLET_BOX\u001BUpp::RichPara::BULLET_STYLE\u0019Upp::RichPara::BULLET_BOX\nBULLET_BOX\u0003Upp\nBULLET_BOX\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u00007\u0000\u0000\u0000\u0002\u0000\u0000\u00007\u0000\u0000\u0000\u0011\u0000\u0000\u00007\u0000\u0000\u0000\u0001\u0000\u0000\u000FBULLET_BOXWHITE\u001BUpp::RichPara::BULLET_STYLE\u001EUpp::RichPara::BULLET_BOXWHITE\u000FBULLET_BOXWHITE\u0003Upp\u000FBULLET_BOXWHITE\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u00008\u0000\u0000\u0000\u0002\u0000\u0000\u00008\u0000\u0000\u0000\r\u0000\u0000\u00008\u0000\u0000\u0000\u0001\u0000\u0000\vBULLET_TEXT\u001BUpp::RichPara::BULLET_STYLE\u001AUpp::RichPara::BULLET_TEXT\vBULLET_TEXT\u0003Upp\vBULLET_TEXT\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0005\u0000\u0000\u0000\u0006\u0000\u0000\u0000;\u0000\u0000\u0000\u0001\u0000\u0000\u0000;\u0000\u0000\u0000\u0002\u0000\u0000\u0000C\u0000\u0000\u0000\u0001\u0000\u0000\fNUMBER_STYLE\u001BUpp::RichPara::NUMBER_STYLE\u001BUpp::RichPara::NUMBER_STYLE\u0011enum NUMBER_STYLE\u0003Upp\fNUMBER_STYLE\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000<\u0000\u0000\u0000\u0002\u0000\u0000\u0000<\u0000\u0000\u0000\r\u0000\u0000\u0000<\u0000\u0000\u0000\u0001\u0000\u0000\vNUMBER_NONE\u001BUpp::RichPara::NUMBER_STYLE\u001AUpp::RichPara::NUMBER_NONE\vNUMBER_NONE\u0003Upp\vNUMBER_NONE\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000=\u0000\u0000\u0000\u0002\u0000\u0000\u0000=\u0000\u0000\u0000\n\u0000\u0000\u0000=\u0000\u0000\u0000\u0001\u0000\u0000\bNUMBER_1\u001BUpp::RichPara::NUMBER_STYLE\u0017Upp::RichPara::NUMBER_1\bNUMBER_1\u0003Upp\bNUMBER_1\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000>\u0000\u0000\u0000\u0002\u0000\u0000\u0000>\u0000\u0000\u0000\n\u0000\u0000\u0000>\u0000\u0000\u0000\u0001\u0000\u0000\bNUMBER_0\u001BUpp::RichPara::NUMBER_STYLE\u0017Upp::RichPara::NUMBER_0\bNUMBER_0\u0003Upp\bNUMBER_0\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000?\u0000\u0000\u0000\u0002\u0000\u0000\u0000?\u0000\u0000\u0000\n\u0000\u0000\u0000?\u0000\u0000\u0000\u0001\u0000\u0000\bNUMBER_a\u001BUpp::RichPara::NUMBER_STYLE\u0017Upp::RichPara::NUMBER_a\bNUMBER_a\u0003Upp\bNUMBER_A\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000@\u0000\u0000\u0000\u0002\u0000\u0000\u0000@\u0000\u0000\u0000\n\u0000\u0000\u0000@\u0000\u0000\u0000\u0001\u0000\u0000\bNUMBER_A\u001BUpp::RichPara::NUMBER_STYLE\u0017Upp::RichPara::NUMBER_A\bNUMBER_A\u0003Upp\bNUMBER_A\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000A\u0000\u0000\u0000\u0002\u0000\u0000\u0000A\u0000\u0000\u0000\n\u0000\u0000\u0000A\u0000\u0000\u0000\u0001\u0000\u0000\bNUMBER_i\u001BUpp::RichPara::NUMBER_STYLE\u0017Upp::RichPara::NUMBER_i\bNUMBER_i\u0003Upp\bNUMBER_I\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000B\u0000\u0000\u0000\u0002\u0000\u0000\u0000B\u0000\u0000\u0000\n\u0000\u0000\u0000B\u0000\u0000\u0000\u0001\u0000\u0000\bNUMBER_I\u001BUpp::RichPara::NUMBER_STYLE\u0017Upp::RichPara::NUMBER_I\bNUMBER_I\u0003Upp\bNUMBER_I\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0005\u0000\u0000\u0000\u0006\u0000\u0000\u0000E\u0000\u0000\u0000\u0001\u0000\u0000\u0000E\u0000\u0000\u0000\u0002\u0000\u0000\u0000J\u0000\u0000\u0000\u0001\u0000\u0000\vLINESPACING\u001AUpp::RichPara::LINESPACING\u001AUpp::RichPara::LINESPACING\u0010enum LINESPACING\u0003Upp\vLINESPACING\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000F\u0000\u0000\u0000\u0002\u0000\u0000\u0000F\u0000\u0000\u0000\v\u0000\u0000\u0000F\u0000\u0000\u0000\u0001\u0000\u0000\u0005LSP10\u001AUpp::RichPara::LINESPACING\u0014Upp::RichPara::LSP10\u0005LSP10\u0003Upp\u0005LSP10\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000G\u0000\u0000\u0000\u0002\u0000\u0000\u0000G\u0000\u0000\u0000\f\u0000\u0000\u0000G\u0000\u0000\u0000\u0001\u0000\u0000\u0005LSP15\u001AUpp::RichPara::LINESPACING\u0014Upp::RichPara::LSP15\u0005LSP15\u0003Upp\u0005LSP15\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000H\u0000\u0000\u0000\u0002\u0000\u0000\u0000H\u0000\u0000\u0000\f\u0000\u0000\u0000H\u0000\u0000\u0000\u0001\u0000\u0000\u0005LSP20\u001AUpp::RichPara::LINESPACING\u0014Upp::RichPara::LSP20\u0005LSP20\u0003Upp\u0005LSP20\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000I\u0000\u0000\u0000\u0002\u0000\u0000\u0000I\u0000\u0000\u0000\r\u0000\u0000\u0000I\u0000\u0000\u0000\u0001\u0000\u0000\u0006LSP115\u001AUpp::RichPara::LINESPACING\u0015Upp::RichPara::LSP115\u0006LSP115\u0003Upp\u0006LSP115\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0005\u0000\u0000\u0000\u0006\u0000\u0000\u0000L\u0000\u0000\u0000\u0001\u0000\u0000\u0000L\u0000\u0000\u0000\u0002\u0000\u0000\u0000N\u0000\u0000\u0000\u0001\u0000\u0000\nTabSpecial\u0019Upp::RichPara::TabSpecial\u0019Upp::RichPara::TabSpecial\u000Fenum TabSpecial\u0003Upp\nTABSPECIAL\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000M\u0000\u0000\u0000\u0002\u0000\u0000\u0000M\u0000\u0000\u0000\u001A\u0000\u0000\u0000M\u0000\u0000\u0000\u0001\u0000\u0000\fTAB_RIGHTPOS\u0019Upp::RichPara::TabSpecial\u001BUpp::RichPara::TAB_RIGHTPOS\fTAB_RIGHTPOS\u0003Upp\fTAB_RIGHTPOS\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0005\u0000\u0000\u0000\u0006\u0000\u0000\u0000P\u0000\u0000\u0000\u0001\u0000\u0000\u0000P\u0000\u0000\u0000\u0002\u0000\u0000\u0000T\u0000\u0000\u0000\u0001\u0000\u0000\nRulerStyle\u0019Upp::RichPara::RulerStyle\u0019Upp::RichPara::RulerStyle\u000Fenum RulerStyle\u0003Upp\nRULERSTYLE\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000Q\u0000\u0000\u0000\u0002\u0000\u0000\u0000Q\u0000\u0000\u0000\r\u0000\u0000\u0000Q\u0000\u0000\u0000\u0001\u0000\u0000\vRULER_SOLID\u0019Upp::RichPara::RulerStyle\u001AUpp::RichPara::RULER_SOLID\vRULER_SOLID\u0003Upp\vRULER_SOLID\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000R\u0000\u0000\u0000\u0002\u0000\u0000\u0000R\u0000\u0000\u0000\v\u0000\u0000\u0000R\u0000\u0000\u0000\u0001\u0000\u0000\tRULER_DOT\u0019Upp::RichPara::RulerStyle\u0018Upp::RichPara::RULER_DOT\tRULER_DOT\u0003Upp\tRULER_DOT\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000S\u0000\u0000\u0000\u0002\u0000\u0000\u0000S\u0000\u0000\u0000\f\u0000\u0000\u0000S\u0000\u0000\u0000\u0001\u0000\u0000\nRULER_DASH\u0019Upp::RichPara::RulerStyle\u0019Upp::RichPara::RULER_DASH\nRULER_DASH\u0003Upp\nRULER_DASH\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000V\u0000\u0000\u0000\u0001\u0000\u0000\u0000V\u0000\u0000\u0000\u0002\u0000\u0000\u0000d\u0000\u0000\u0000\u0001\u0000\u0000\nCharFormat\u0019Upp::RichPara::CharFormat\u0019Upp::RichPara::CharFormat\u0018CharFormat : public Font\u0003Upp\nCHARFORMAT\u0019Upp::RichPara::CharFormat\u0019UPP::RICHPARA::CHARFORMAT\tUpp::Font\u0000\u0006\u0000\u0000\u0000\n\u0000\u0000\u0000W\u0000\u0000\u0000\u0002\u0000\u0000\u0000W\u0000\u0000\u0000\u0012\u0000\u0000\u0000W\u0000\u0000\u0000\u0001\u0000\u0000\blanguage\u0003int#Upp::RichPara::CharFormat::language\fint language\u0003Upp\bLANGUAGE\u0019Upp::RichPara::CharFormat\u0019UPP::RICHPARA::CHARFORMAT\u0000\u0000\u0006\u0000\u0000\u0000\n\u0000\u0000\u0000X\u0000\u0000\u0000\u0002\u0000\u0000\u0000X\u0000\u0000\u0000\r\u0000\u0000\u0000X\u0000\u0000\u0000\u0001\u0000\u0000\u0003ink\u0005Color\u001EUpp::RichPara::CharFormat::ink\tColor ink\u0003Upp\u0003INK\u0019Upp::RichPara::CharFormat\u0019UPP::RICHPARA::CHARFORMAT\u0000\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000X\u0000\u0000\u0000\u0002\u0000\u0000\u0000X\u0000\u0000\u0000\u0014\u0000\u0000\u0000X\u0000\u0000\u0000\u0001\u0000\u0000\u0005paper\u0005Color Upp::RichPara::CharFormat::paper\vColor paper\u0003Upp\u0005PAPER\u0019Upp::RichPara::CharFormat\u0019UPP::RICHPARA::CHARFORMAT\u0000\u0000\u0006\u0000\u0000\u0000\n\u0000\u0000\u0000Y\u0000\u0000\u0000\u0002\u0000\u0000\u0000Y\u0000\u0000\u0000\u000E\u0000\u0000\u0000Y\u0000\u0000\u0000\u0001\u0000\u0000\u0004link\u0006String\u001FUpp::RichPara::CharFormat::link\vString link\u0003Upp\u0004LINK\u0019Upp::RichPara::CharFormat\u0019UPP::RICHPARA::CHARFORMAT\u0000\u0000\u0006\u0000\u0000\u0000\n\u0000\u0000\u0000Z\u0000\u0000\u0000\u0002\u0000\u0000\u0000Z\u0000\u0000\u0000\u0014\u0000\u0000\u0000Z\u0000\u0000\u0000\u0001\u0000\u0000\nindexentry\aWString%Upp::RichPara::CharFormat::indexentry\u0012WString indexentry\u0003Upp\nINDEXENTRY\u0019Upp::RichPara::CharFormat\u0019UPP::RICHPARA::CHARFORMAT\u0000\u0000\u0006\u0000\u0000\u0000\n\u0000\u0000\u0000[\u0000\u0000\u0000\u0002\u0000\u0000\u0000[\u0000\u0000\u0000\u0013\u0000\u0000\u0000[\u0000\u0000\u0000\u0001\u0000\u0000\asscript\u0005dword\"Upp::RichPara::CharFormat::sscript\u0011dword sscript : 2\u0003Upp\aSSCRIPT\u0019Upp::RichPara::CharFormat\u0019UPP::RICHPARA::CHARFORMAT\u0000\u0000\u0006\u0000\u0000\u0000\n\u0000\u0000\u0000\\\u0000\u0000\u0000\u0002\u0000\u0000\u0000\\\u0000\u0000\u0000\u0012\u0000\u0000\u0000\\\u0000\u0000\u0000\u0001\u0000\u0000\bcapitals\u0004bool#Upp::RichPara::CharFormat::capitals\rbool capitals\u0003Upp\bCAPITALS\u0019Upp::RichPara::CharFormat\u0019UPP::RICHPARA::CHARFORMAT\u0000\u0000\u0006\u0000\u0000\u0000\n\u0000\u0000\u0000]\u0000\u0000\u0000\u0002\u0000\u0000\u0000]\u0000\u0000\u0000\u0010\u0000\u0000\u0000]\u0000\u0000\u0000\u0001\u0000\u0000\u0006dashed\u0004bool!Upp::RichPara::CharFormat::dashed\vbool dashed\u0003Upp\u0006DASHED\u0019Upp::RichPara::CharFormat\u0019UPP::RICHPARA::CHARFORMAT\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000`\u0000\u0000\u0000\u0002\u0000\u0000\u0000`\u0000\u0000\u0000\u001A\u0000\u0000\u0000`\u0000\u0000\u0000\u0000\u0000\u0000\bToString\u000FString () const*Upp::RichPara::CharFormat::ToString()const\u0017String ToString() const\u0003Upp\bTOSTRING\u0019Upp::RichPara::CharFormat\u0019UPP::RICHPARA::CHARFORMAT\u0000\u0000\u0018\u0000\u0000\u0000\u0002\u0000\u0000\u0000c\u0000\u0000\u0000\u0002\u0000\u0000\u0000c\u0000\u0000\u0000\u000E\u0000\u0000\u0000c\u0000\u0000\u0000\u0000\u0000\u0000\nCharFormat\avoid ()'Upp::RichPara::CharFormat::CharFormat()\fCharFormat()\u0003Upp\nCHARFORMAT\u0019Upp::RichPara::CharFormat\u0019UPP::RICHPARA::CHARFORMAT\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000f\u0000\u0000\u0000\u0001\u0000\u0000\u0000f\u0000\u0000\u0000\u0002\u0000\u0000\u0000l\u0000\u0000\u0000\u0001\u0000\u0000\u0003Tab\u0012Upp::RichPara::Tab\u0012Upp::RichPara::Tab\u0013Tab : Moveable<Tab>\u0003Upp\u0003TAB\u0012Upp::RichPara::Tab\u0012UPP::RICHPARA::TAB\rUpp::Moveable\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000g\u0000\u0000\u0000\u0002\u0000\u0000\u0000g\u0000\u0000\u0000\v\u0000\u0000\u0000g\u0000\u0000\u0000\u0001\u0000\u0000\u0003pos\u0003int\u0017Upp::RichPara::Tab::pos\aint pos\u0003Upp\u0003POS\u0012Upp::RichPara::Tab\u0012UPP::RICHPARA::TAB\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000h\u0000\u0000\u0000\u0002\u0000\u0000\u0000h\u0000\u0000\u0000\r\u0000\u0000\u0000h\u0000\u0000\u0000\u0001\u0000\u0000\u0005align\u0004byte\u0019Upp::RichPara::Tab::align\nbyte align\u0003Upp\u0005ALIGN\u0012Upp::RichPara::Tab\u0012UPP::RICHPARA::TAB\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000i\u0000\u0000\u0000\u0002\u0000\u0000\u0000i\u0000\u0000\u0000\u0010\u0000\u0000\u0000i\u0000\u0000\u0000\u0001\u0000\u0000\bfillchar\u0004byte\u001CUpp::RichPara::Tab::fillchar\rbyte fillchar\u0003Upp\bFILLCHAR\u0012Upp::RichPara::Tab\u0012UPP::RICHPARA::TAB\u0000\u0000\u0018\u0000\u0000\u0000\u0002\u0000\u0000\u0000k\u0000\u0000\u0000\u0002\u0000\u0000\u0000k\u0000\u0000\u00006\u0000\u0000\u0000k\u0000\u0000\u0000\u0001\u0000\u0000\u0003Tab\avoid ()\u0019Upp::RichPara::Tab::Tab()\u0005Tab()\u0003Upp\u0003TAB\u0012Upp::RichPara::Tab\u0012UPP::RICHPARA::TAB\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000n\u0000\u0000\u0000\u0001\u0000\u0000\u0000n\u0000\u0000\u0000\u0002\u0000\u0000\u0000u\u0000\u0000\u0000\u0001\u0000\u0000\fNumberFormat\u001BUpp::RichPara::NumberFormat\u001BUpp::RichPara::NumberFormat\fNumberFormat\u0003Upp\fNUMBERFORMAT\u001BUpp::RichPara::NumberFormat\u001BUPP::RICHPARA::NUMBERFORMAT\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000o\u0000\u0000\u0000\u0002\u0000\u0000\u0000o\u0000\u0000\u0000\u001B\u0000\u0000\u0000o\u0000\u0000\u0000\u0001\u0000\u0000\rbefore_number\u0006String*Upp::RichPara::NumberFormat::before_number\u0014String before_number\u0003Upp\rBEFORE_NUMBER\u001BUpp::RichPara::NumberFormat\u001BUPP::RICHPARA::NUMBERFORMAT\u0000\u0000\u0006\u0000\u0000\u0000\u001D\u0000\u0000\u0000o\u0000\u0000\u0000\u0002\u0000\u0000\u0000o\u0000\u0000\u0000)\u0000\u0000\u0000o\u0000\u0000\u0000\u0001\u0000\u0000\fafter_number\u0006String)Upp::RichPara::NumberFormat::after_number\u0013String after_number\u0003Upp\fAFTER_NUMBER\u001BUpp::RichPara::NumberFormat\u001BUPP::RICHPARA::NUMBERFORMAT\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000p\u0000\u0000\u0000\u0002\u0000\u0000\u0000p\u0000\u0000\u0000\u001A\u0000\u0000\u0000p\u0000\u0000\u0000\u0001\u0000\u0000\freset_number\u0004bool)Upp::RichPara::NumberFormat::reset_number\u0011bool reset_number\u0003Upp\fRESET_NUMBER\u001BUpp::RichPara::NumberFormat\u001BUPP::RICHPARA::NUMBERFORMAT\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000q\u0000\u0000\u0000\u0002\u0000\u0000\u0000q\u0000\u0000\u0000\u0017\u0000\u0000\u0000q\u0000\u0000\u0000\u0001\u0000\u0000\u0006number\abyte[8]#Upp::RichPara::NumberFormat::number\u000Ebyte number[8]\u0003Upp\u0006NUMBER\u001BUpp::RichPara::NumberFormat\u001BUPP::RICHPARA::NUMBERFORMAT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000s\u0000\u0000\u0000\u0002\u0000\u0000\u0000s\u0000\u0000\u0000 \u0000\u0000\u0000s\u0000\u0000\u0000\u0000\u0000\u0000\nIsNumbered\rbool () const.Upp::RichPara::NumberFormat::IsNumbered()const\u0017bool IsNumbered() const\u0003Upp\nISNUMBERED\u001BUpp::RichPara::NumberFormat\u001BUPP::RICHPARA::NUMBERFORMAT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000t\u0000\u0000\u0000\u0002\u0000\u0000\u0000t\u0000\u0000\u0000$\u0000\u0000\u0000t\u0000\u0000\u0000\u0000\u0000\u0000\u000EGetNumberLevel\fint () const2Upp::RichPara::NumberFormat::GetNumberLevel()const\u001Aint GetNumberLevel() const\u0003Upp\u000EGETNUMBERLEVEL\u001BUpp::RichPara::NumberFormat\u001BUPP::RICHPARA::NUMBERFORMAT\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000w\u0000\u0000\u0000\u0001\u0000\u0000\u0000w\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0006Format\u0015Upp::RichPara::Format\u0015Upp::RichPara::Format!Format : NumberFormat, CharFormat\u0003Upp\u0006FORMAT\u0015Upp::RichPara::Format\u0015UPP::RICHPARA::FORMAT5Upp::RichPara::NumberFormat;Upp::RichPara::CharFormat\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000x\u0000\u0000\u0000\u0002\u0000\u0000\u0000x\u0000\u0000\u0000\u0015\u0000\u0000\u0000x\u0000\u0000\u0000\u0001\u0000\u0000\astyleid\u0004Uuid\u001EUpp::RichPara::Format::styleid\fUuid styleid\u0003Upp\aSTYLEID\u0015Upp::RichPara::Format\u0015UPP::RICHPARA::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000y\u0000\u0000\u0000\u0002\u0000\u0000\u0000y\u0000\u0000\u0000\u0013\u0000\u0000\u0000y\u0000\u0000\u0000\u0001\u0000\u0000\u0005label\u0006String\u001CUpp::RichPara::Format::label\fString label\u0003Upp\u0005LABEL\u0015Upp::RichPara::Format\u0015UPP::RICHPARA::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\u001E\u0000\u0000\u0000z\u0000\u0000\u0000\u0002\u0000\u0000\u0000z\u0000\u0000\u0000!\u0000\u0000\u0000z\u0000\u0000\u0000\u0001\u0000\u0000\u0003tab\u0019WithDeepCopy<Vector<Tab>>\u001AUpp::RichPara::Format::tab\u001DWithDeepCopy<Vector<Tab>> tab\u0003Upp\u0003TAB\u0015Upp::RichPara::Format\u0015UPP::RICHPARA::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000{\u0000\u0000\u0000\u0002\u0000\u0000\u0000{\u0000\u0000\u0000\u0013\u0000\u0000\u0000{\u0000\u0000\u0000\u0001\u0000\u0000\u0005align\u0003int\u001CUpp::RichPara::Format::align\tint align\u0003Upp\u0005ALIGN\u0015Upp::RichPara::Format\u0015UPP::RICHPARA::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000|\u0000\u0000\u0000\u0002\u0000\u0000\u0000|\u0000\u0000\u0000\u0013\u0000\u0000\u0000|\u0000\u0000\u0000\u0001\u0000\u0000\u0005ruler\u0003int\u001CUpp::RichPara::Format::ruler\tint ruler\u0003Upp\u0005RULER\u0015Upp::RichPara::Format\u0015UPP::RICHPARA::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\u0015\u0000\u0000\u0000|\u0000\u0000\u0000\u0002\u0000\u0000\u0000|\u0000\u0000\u0000\u001B\u0000\u0000\u0000|\u0000\u0000\u0000\u0001\u0000\u0000\u0006before\u0003int\u001DUpp::RichPara::Format::before\nint before\u0003Upp\u0006BEFORE\u0015Upp::RichPara::Format\u0015UPP::RICHPARA::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\u001D\u0000\u0000\u0000|\u0000\u0000\u0000\u0002\u0000\u0000\u0000|\u0000\u0000\u0000\u001F\u0000\u0000\u0000|\u0000\u0000\u0000\u0001\u0000\u0000\u0002lm\u0003int\u0019Upp::RichPara::Format::lm\u0006int lm\u0003Upp\u0002LM\u0015Upp::RichPara::Format\u0015UPP::RICHPARA::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000!\u0000\u0000\u0000|\u0000\u0000\u0000\u0002\u0000\u0000\u0000|\u0000\u0000\u0000'\u0000\u0000\u0000|\u0000\u0000\u0000\u0001\u0000\u0000\u0006indent\u0003int\u001DUpp::RichPara::Format::indent\nint indent\u0003Upp\u0006INDENT\u0015Upp::RichPara::Format\u0015UPP::RICHPARA::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000)\u0000\u0000\u0000|\u0000\u0000\u0000\u0002\u0000\u0000\u0000|\u0000\u0000\u0000+\u0000\u0000\u0000|\u0000\u0000\u0000\u0001\u0000\u0000\u0002rm\u0003int\u0019Upp::RichPara::Format::rm\u0006int rm\u0003Upp\u0002RM\u0015Upp::RichPara::Format\u0015UPP::RICHPARA::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000-\u0000\u0000\u0000|\u0000\u0000\u0000\u0002\u0000\u0000\u0000|\u0000\u0000\u00002\u0000\u0000\u0000|\u0000\u0000\u0000\u0001\u0000\u0000\u0005after\u0003int\u001CUpp::RichPara::Format::after\tint after\u0003Upp\u0005AFTER\u0015Upp::RichPara::Format\u0015UPP::RICHPARA::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000}\u0000\u0000\u0000\u0002\u0000\u0000\u0000}\u0000\u0000\u0000\u0016\u0000\u0000\u0000}\u0000\u0000\u0000\u0001\u0000\u0000\brulerink\u0005Color\u001FUpp::RichPara::Format::rulerink\u000EColor rulerink\u0003Upp\bRULERINK\u0015Upp::RichPara::Format\u0015UPP::RICHPARA::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000~\u0000\u0000\u0000\u0002\u0000\u0000\u0000~\u0000\u0000\u0000\u0018\u0000\u0000\u0000~\u0000\u0000\u0000\u0001\u0000\u0000\nrulerstyle\u0003int!Upp::RichPara::Format::rulerstyle\u000Eint rulerstyle\u0003Upp\nRULERSTYLE\u0015Upp::RichPara::Format\u0015UPP::RICHPARA::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u007F\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u007F\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u007F\u0000\u0000\u0000\u0001\u0000\u0000\atabsize\u0003int\u001EUpp::RichPara::Format::tabsize\vint tabsize\u0003Upp\aTABSIZE\u0015Upp::RichPara::Format\u0015UPP::RICHPARA::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0006bullet\u0003int\u001DUpp::RichPara::Format::bullet\nint bullet\u0003Upp\u0006BULLET\u0015Upp::RichPara::Format\u0015UPP::RICHPARA::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\vlinespacing\u0003int\"Upp::RichPara::Format::linespacing\u000Fint linespacing\u0003Upp\vLINESPACING\u0015Upp::RichPara::Format\u0015UPP::RICHPARA::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\anewpage\u0004bool\u001EUpp::RichPara::Format::newpage\fbool newpage\u0003Upp\aNEWPAGE\u0015Upp::RichPara::Format\u0015UPP::RICHPARA::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\vfirstonpage\u0004bool\"Upp::RichPara::Format::firstonpage\u0010bool firstonpage\u0003Upp\vFIRSTONPAGE\u0015Upp::RichPara::Format\u0015UPP::RICHPARA::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000$\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0004keep\u0004bool\u001BUpp::RichPara::Format::keep\tbool keep\u0003Upp\u0004KEEP\u0015Upp::RichPara::Format\u0015UPP::RICHPARA::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000*\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u00002\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\bkeepnext\u0004bool\u001FUpp::RichPara::Format::keepnext\rbool keepnext\u0003Upp\bKEEPNEXT\u0015Upp::RichPara::Format\u0015UPP::RICHPARA::FORMAT\u0000\u0000\u0006\u0000\u0000\u00004\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000:\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0006orphan\u0004bool\u001DUpp::RichPara::Format::orphan\vbool orphan\u0003Upp\u0006ORPHAN\u0015Upp::RichPara::Format\u0015UPP::RICHPARA::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000<\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000E\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\tnewhdrftr\u0004bool Upp::RichPara::Format::newhdrftr\u000Ebool newhdrftr\u0003Upp\tNEWHDRFTR\u0015Upp::RichPara::Format\u0015UPP::RICHPARA::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\nheader_qtf\u0006String!Upp::RichPara::Format::header_qtf\u0011String header_qtf\u0003Upp\nHEADER_QTF\u0015Upp::RichPara::Format\u0015UPP::RICHPARA::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000$\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\nfooter_qtf\u0006String!Upp::RichPara::Format::footer_qtf\u0011String footer_qtf\u0003Upp\nFOOTER_QTF\u0015Upp::RichPara::Format\u0015UPP::RICHPARA::FORMAT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\bSortTabs\avoid ()!Upp::RichPara::Format::SortTabs()\u000Fvoid SortTabs()\u0003Upp\bSORTTABS\u0015Upp::RichPara::Format\u0015UPP::RICHPARA::FORMAT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\bToString\u000FString () const&Upp::RichPara::Format::ToString()const\u0017String ToString() const\u0003Upp\bTOSTRING\u0015Upp::RichPara::Format\u0015UPP::RICHPARA::FORMAT\u0000\u0000\u0018\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006Format\avoid ()\u001FUpp::RichPara::Format::Format()\bFormat()\u0003Upp\u0006FORMAT\u0015Upp::RichPara::Format\u0015UPP::RICHPARA::FORMAT\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0006Number\u0015Upp::RichPara::Number\u0015Upp::RichPara::Number\u0006Number\u0003Upp\u0006NUMBER\u0015Upp::RichPara::Number\u0015UPP::RICHPARA::NUMBER\u0000\u0000\u0006\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001n\u0006int[8]\u0018Upp::RichPara::Number::n\bint n[8]\u0003Upp\u0001N\u0015Upp::RichPara::Number\u0015UPP::RICHPARA::NUMBER\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u00002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006AsText#String (const NumberFormat &) const7Upp::RichPara::Number::AsText(const NumberFormat&)const/String AsText(const NumberFormat& format) const\u0003Upp\u0006ASTEXT\u0015Upp::RichPara::Number\u0015UPP::RICHPARA::NUMBER\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000*\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004Next\u001Bvoid (const NumberFormat &)0Upp::RichPara::Number::Next(const NumberFormat&)%void Next(const NumberFormat& format)\u0003Upp\u0004NEXT\u0015Upp::RichPara::Number\u0015UPP::RICHPARA::NUMBER\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000L\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0005Reset\avoid ()\u001EUpp::RichPara::Number::Reset()\fvoid Reset()\u0003Upp\u0005RESET\u0015Upp::RichPara::Number\u0015UPP::RICHPARA::NUMBER\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000O\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\noperator!=\u001Bbool (const Number &) const5Upp::RichPara::Number::operator!=(const Number&)const\u000Ebool operator!\u0003Upp\nOPERATOR!=\u0015Upp::RichPara::Number\u0015UPP::RICHPARA::NUMBER\u0000\u0000\u0018\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000<\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0006Number\avoid ()\u001FUpp::RichPara::Number::Number()\bNumber()\u0003Upp\u0006NUMBER\u0015Upp::RichPara::Number\u0015UPP::RICHPARA::NUMBER\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000¥\u0000\u0000\u0000\u0001\u0000\u0000\u0004Part\u0013Upp::RichPara::Part\u0013Upp::RichPara::Part\u0004Part\u0003Upp\u0004PART\u0013Upp::RichPara::Part\u0013UPP::RICHPARA::PART\u0000\u0000\u0006\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000$\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0006object\nRichObject\u001BUpp::RichPara::Part::object\u0011RichObject object\u0003Upp\u0006OBJECT\u0013Upp::RichPara::Part\u0013UPP::RICHPARA::PART\u0000\u0000\u0006\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0004text\aWString\u0019Upp::RichPara::Part::text\fWString text\u0003Upp\u0004TEXT\u0013Upp::RichPara::Part\u0013UPP::RICHPARA::PART\u0000\u0000\u0006\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000$\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0006format\nCharFormat\u001BUpp::RichPara::Part::format\u0011CharFormat format\u0003Upp\u0006FORMAT\u0013Upp::RichPara::Part\u0013UPP::RICHPARA::PART\u0000\u0000\u0006\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000#\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0005field\u0002Id\u001AUpp::RichPara::Part::field\bId field\u0003Upp\u0005FIELD\u0013Upp::RichPara::Part\u0013UPP::RICHPARA::PART\u0000\u0000\u0006\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\nfieldparam\u0006String\u001FUpp::RichPara::Part::fieldparam\u0011String fieldparam\u0003Upp\nFIELDPARAM\u0013Upp::RichPara::Part\u0013UPP::RICHPARA::PART\u0000\u0000\u0006\u0000\u0000\u0000\u001E\u0000\u0000\u0000 \u0000\u0000\u0000\u0002\u0000\u0000\u0000 \u0000\u0000\u0000'\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\tfieldpart\u0019WithDeepCopy<Array<Part>>\u001EUpp::RichPara::Part::fieldpart#WithDeepCopy<Array<Part>> fieldpart\u0003Upp\tFIELDPART\u0013Upp::RichPara::Part\u0013UPP::RICHPARA::PART\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000¢\u0000\u0000\u0000\u0002\u0000\u0000\u0000¢\u0000\u0000\u0000<\u0000\u0000\u0000¢\u0000\u0000\u0000\u0001\u0000\u0000\aNonText\rbool () const#Upp::RichPara::Part::NonText()const\u0014bool NonText() const\u0003Upp\aNONTEXT\u0013Upp::RichPara::Part\u0013UPP::RICHPARA::PART\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000£\u0000\u0000\u0000\u0002\u0000\u0000\u0000£\u0000\u0000\u00007\u0000\u0000\u0000£\u0000\u0000\u0000\u0001\u0000\u0000\u0006IsText\rbool () const\"Upp::RichPara::Part::IsText()const\u0013bool IsText() const\u0003Upp\u0006ISTEXT\u0013Upp::RichPara::Part\u0013UPP::RICHPARA::PART\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000¤\u0000\u0000\u0000\u0002\u0000\u0000\u0000¤\u0000\u0000\u0000S\u0000\u0000\u0000¤\u0000\u0000\u0000\u0001\u0000\u0000\tGetLength\fint () const%Upp::RichPara::Part::GetLength()const\u0015int GetLength() const\u0003Upp\tGETLENGTH\u0013Upp::RichPara::Part\u0013UPP::RICHPARA::PART\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000§\u0000\u0000\u0000\u0001\u0000\u0000\u0000§\u0000\u0000\u0000\u0002\u0000\u0000\u0000­\u0000\u0000\u0000\u0001\u0000\u0000\tFieldType\u0018Upp::RichPara::FieldType\u0018Upp::RichPara::FieldType\tFieldType\u0003Upp\tFIELDTYPE\u0018Upp::RichPara::FieldType\u0018UPP::RICHPARA::FIELDTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0016\u0000\u0000\u0000¨\u0000\u0000\u0000\u0002\u0000\u0000\u0000¨\u0000\u0000\u00009\u0000\u0000\u0000©\u0000\u0000\u0000\u0000\u0001\u0000\bEvaluateLArray<Part> (const String &, VectorMap<String, Value> &, const CharFormat &)NUpp::RichPara::FieldType::Evaluate(const String&,VectorMap&,const CharFormat&)`Array<Part> Evaluate(const String& param, VectorMap<String, Value>& vars, const CharFormat& fmt)\u0003Upp\bEVALUATE\u0018Upp::RichPara::FieldType\u0018UPP::RICHPARA::FIELDTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0016\u0000\u0000\u0000ª\u0000\u0000\u0000\u0002\u0000\u0000\u0000ª\u0000\u0000\u0000<\u0000\u0000\u0000ª\u0000\u0000\u0000\u0001\u0001\u0000\u0004Menu\u001Cvoid (Bar &, String *) const1Upp::RichPara::FieldType::Menu(Bar&,String*)const(void Menu(Bar& bar, String *param) const\u0003Upp\u0004MENU\u0018Upp::RichPara::FieldType\u0018UPP::RICHPARA::FIELDTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0016\u0000\u0000\u0000«\u0000\u0000\u0000\u0002\u0000\u0000\u0000«\u0000\u0000\u0000;\u0000\u0000\u0000«\u0000\u0000\u0000\u0001\u0001\u0000\rDefaultAction\u0015void (String *) const5Upp::RichPara::FieldType::DefaultAction(String*)const'void DefaultAction(String *param) const\u0003Upp\rDEFAULTACTION\u0018Upp::RichPara::FieldType\u0018UPP::RICHPARA::FIELDTYPE\u0000\u0000\u0019\u0000\u0000\u0000\n\u0000\u0000\u0000¬\u0000\u0000\u0000\u0002\u0000\u0000\u0000¬\u0000\u0000\u0000\u0019\u0000\u0000\u0000¬\u0000\u0000\u0000\u0001\u0000\u0000\n~FieldType\u0010void () noexcept\u001DUpp::RichPara::FieldType::~()\f~FieldType()\u0003Upp\n~FIELDTYPE\u0018Upp::RichPara::FieldType\u0018UPP::RICHPARA::FIELDTYPE\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000¯\u0000\u0000\u0000\u0001\u0000\u0000\u0000¯\u0000\u0000\u0000\u0002\u0000\u0000\u0000·\u0000\u0000\u0000\u0001\u0000\u0000\nHeightInfo\u0019Upp::RichPara::HeightInfo\u0019Upp::RichPara::HeightInfo\nHeightInfo\u0003Upp\nHEIGHTINFO\u0019Upp::RichPara::HeightInfo\u0019UPP::RICHPARA::HEIGHTINFO\u0000\u0000\u0006\u0000\u0000\u0000\u0017\u0000\u0000\u0000°\u0000\u0000\u0000\u0002\u0000\u0000\u0000°\u0000\u0000\u0000\u001D\u0000\u0000\u0000°\u0000\u0000\u0000\u0001\u0000\u0000\u0006ascent\u0003int!Upp::RichPara::HeightInfo::ascent\nint ascent\u0003Upp\u0006ASCENT\u0019Upp::RichPara::HeightInfo\u0019UPP::RICHPARA::HEIGHTINFO\u0000\u0000\u0006\u0000\u0000\u0000\u0017\u0000\u0000\u0000±\u0000\u0000\u0000\u0002\u0000\u0000\u0000±\u0000\u0000\u0000\u001E\u0000\u0000\u0000±\u0000\u0000\u0000\u0001\u0000\u0000\adescent\u0003int\"Upp::RichPara::HeightInfo::descent\vint descent\u0003Upp\aDESCENT\u0019Upp::RichPara::HeightInfo\u0019UPP::RICHPARA::HEIGHTINFO\u0000\u0000\u0006\u0000\u0000\u0000\u0017\u0000\u0000\u0000²\u0000\u0000\u0000\u0002\u0000\u0000\u0000²\u0000\u0000\u0000\u001F\u0000\u0000\u0000²\u0000\u0000\u0000\u0001\u0000\u0000\bexternal\u0003int#Upp::RichPara::HeightInfo::external\fint external\u0003Upp\bEXTERNAL\u0019Upp::RichPara::HeightInfo\u0019UPP::RICHPARA::HEIGHTINFO\u0000\u0000\u0006\u0000\u0000\u0000\u0017\u0000\u0000\u0000³\u0000\u0000\u0000\u0002\u0000\u0000\u0000³\u0000\u0000\u0000\u001D\u0000\u0000\u0000³\u0000\u0000\u0000\u0001\u0000\u0000\u0006ydelta\u0003int!Upp::RichPara::HeightInfo::ydelta\nint ydelta\u0003Upp\u0006YDELTA\u0019Upp::RichPara::HeightInfo\u0019UPP::RICHPARA::HEIGHTINFO\u0000\u0000\u0006\u0000\u0000\u0000\u0017\u0000\u0000\u0000´\u0000\u0000\u0000\u0002\u0000\u0000\u0000´\u0000\u0000\u0000\u001D\u0000\u0000\u0000´\u0000\u0000\u0000\u0001\u0000\u0000\u0006object\u0012const RichObject *!Upp::RichPara::HeightInfo::object\u0018const RichObject *object\u0003Upp\u0006OBJECT\u0019Upp::RichPara::HeightInfo\u0019UPP::RICHPARA::HEIGHTINFO\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000¶\u0000\u0000\u0000\u0002\u0000\u0000\u0000¶\u0000\u0000\u0000J\u0000\u0000\u0000¶\u0000\u0000\u0000\u0001\u0000\u0000\u0003Sum\fint () const%Upp::RichPara::HeightInfo::Sum()const\u000Fint Sum() const\u0003Upp\u0003SUM\u0019Upp::RichPara::HeightInfo\u0019UPP::RICHPARA::HEIGHTINFO\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000¹\u0000\u0000\u0000\u0001\u0000\u0000\u0000¹\u0000\u0000\u0000\u0002\u0000\u0000\u0000Â\u0000\u0000\u0000\u0001\u0000\u0000\u0004Line\u0013Upp::RichPara::Line\u0013Upp::RichPara::Line\u0018Line : public HeightInfo\u0003Upp\u0004LINE\u0013Upp::RichPara::Line\u0013UPP::RICHPARA::LINE\u0019Upp::RichPara::HeightInfo\u0000\u0006\u0000\u0000\u0000\a\u0000\u0000\u0000º\u0000\u0000\u0000\u0002\u0000\u0000\u0000º\u0000\u0000\u0000\n\u0000\u0000\u0000º\u0000\u0000\u0000\u0001\u0000\u0000\u0003pos\u0003int\u0018Upp::RichPara::Line::pos\aint pos\u0003Upp\u0003POS\u0013Upp::RichPara::Line\u0013UPP::RICHPARA::LINE\u0000\u0000\u0006\u0000\u0000\u0000\a\u0000\u0000\u0000»\u0000\u0000\u0000\u0002\u0000\u0000\u0000»\u0000\u0000\u0000\n\u0000\u0000\u0000»\u0000\u0000\u0000\u0001\u0000\u0000\u0003len\u0003int\u0018Upp::RichPara::Line::len\aint len\u0003Upp\u0003LEN\u0013Upp::RichPara::Line\u0013UPP::RICHPARA::LINE\u0000\u0000\u0006\u0000\u0000\u0000\a\u0000\u0000\u0000¼\u0000\u0000\u0000\u0002\u0000\u0000\u0000¼\u0000\u0000\u0000\v\u0000\u0000\u0000¼\u0000\u0000\u0000\u0001\u0000\u0000\u0004ppos\u0003int\u0019Upp::RichPara::Line::ppos\bint ppos\u0003Upp\u0004PPOS\u0013Upp::RichPara::Line\u0013UPP::RICHPARA::LINE\u0000\u0000\u0006\u0000\u0000\u0000\a\u0000\u0000\u0000½\u0000\u0000\u0000\u0002\u0000\u0000\u0000½\u0000\u0000\u0000\v\u0000\u0000\u0000½\u0000\u0000\u0000\u0001\u0000\u0000\u0004plen\u0003int\u0019Upp::RichPara::Line::plen\bint plen\u0003Upp\u0004PLEN\u0013Upp::RichPara::Line\u0013UPP::RICHPARA::LINE\u0000\u0000\u0006\u0000\u0000\u0000\a\u0000\u0000\u0000¾\u0000\u0000\u0000\u0002\u0000\u0000\u0000¾\u0000\u0000\u0000\v\u0000\u0000\u0000¾\u0000\u0000\u0000\u0001\u0000\u0000\u0004xpos\u0003int\u0019Upp::RichPara::Line::xpos\bint xpos\u0003Upp\u0004XPOS\u0013Upp::RichPara::Line\u0013UPP::RICHPARA::LINE\u0000\u0000\u0006\u0000\u0000\u0000\a\u0000\u0000\u0000¿\u0000\u0000\u0000\u0002\u0000\u0000\u0000¿\u0000\u0000\u0000\t\u0000\u0000\u0000¿\u0000\u0000\u0000\u0001\u0000\u0000\u0002cx\u0003int\u0017Upp::RichPara::Line::cx\u0006int cx\u0003Upp\u0002CX\u0013Upp::RichPara::Line\u0013UPP::RICHPARA::LINE\u0000\u0000\u0006\u0000\u0000\u0000\a\u0000\u0000\u0000À\u0000\u0000\u0000\u0002\u0000\u0000\u0000À\u0000\u0000\u0000\u000E\u0000\u0000\u0000À\u0000\u0000\u0000\u0001\u0000\u0000\aobjecti\u0003int\u001CUpp::RichPara::Line::objecti\vint objecti\u0003Upp\aOBJECTI\u0013Upp::RichPara::Line\u0013UPP::RICHPARA::LINE\u0000\u0000\u0006\u0000\u0000\u0000\a\u0000\u0000\u0000Á\u0000\u0000\u0000\u0002\u0000\u0000\u0000Á\u0000\u0000\u0000\u000F\u0000\u0000\u0000Á\u0000\u0000\u0000\u0001\u0000\u0000\bwithtabs\u0004bool\u001DUpp::RichPara::Line::withtabs\rbool withtabs\u0003Upp\bWITHTABS\u0013Upp::RichPara::Line\u0013UPP::RICHPARA::LINE\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000Ä\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ä\u0000\u0000\u0000\u0002\u0000\u0000\u0000ç\u0000\u0000\u0000\u0001\u0000\u0000\u0005Lines\u0014Upp::RichPara::Lines\u0014Upp::RichPara::Lines\u0005Lines\u0003Upp\u0005LINES\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0006\u0000\u0000\u0000\u001D\u0000\u0000\u0000Å\u0000\u0000\u0000\u0002\u0000\u0000\u0000Å\u0000\u0000\u0000 \u0000\u0000\u0000Å\u0000\u0000\u0000\u0001\u0000\u0000\u0003len\u0003int\u0019Upp::RichPara::Lines::len\aint len\u0003Upp\u0003LEN\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0006\u0000\u0000\u0000\u001D\u0000\u0000\u0000Æ\u0000\u0000\u0000\u0002\u0000\u0000\u0000Æ\u0000\u0000\u0000!\u0000\u0000\u0000Æ\u0000\u0000\u0000\u0001\u0000\u0000\u0004clen\u0003int\u001AUpp::RichPara::Lines::clen\bint clen\u0003Upp\u0004CLEN\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0006\u0000\u0000\u0000\u001D\u0000\u0000\u0000Ç\u0000\u0000\u0000\u0002\u0000\u0000\u0000Ç\u0000\u0000\u0000\u001F\u0000\u0000\u0000Ç\u0000\u0000\u0000\u0001\u0000\u0000\u0002cx\u0003int\u0018Upp::RichPara::Lines::cx\u0006int cx\u0003Upp\u0002CX\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0006\u0000\u0000\u0000\u001D\u0000\u0000\u0000È\u0000\u0000\u0000\u0002\u0000\u0000\u0000È\u0000\u0000\u0000!\u0000\u0000\u0000È\u0000\u0000\u0000\u0001\u0000\u0000\u0004text\rBuffer<wchar>\u001AUpp::RichPara::Lines::text\u0012Buffer<wchar> text\u0003Upp\u0004TEXT\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0006\u0000\u0000\u0000\u001D\u0000\u0000\u0000É\u0000\u0000\u0000\u0002\u0000\u0000\u0000É\u0000\u0000\u0000 \u0000\u0000\u0000É\u0000\u0000\u0000\u0001\u0000\u0000\u0003pos\vBuffer<int>\u0019Upp::RichPara::Lines::pos\u000FBuffer<int> pos\u0003Upp\u0003POS\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0006\u0000\u0000\u0000\u001D\u0000\u0000\u0000Ê\u0000\u0000\u0000\u0002\u0000\u0000\u0000Ê\u0000\u0000\u0000\"\u0000\u0000\u0000Ê\u0000\u0000\u0000\u0001\u0000\u0000\u0005width\vBuffer<int>\u001BUpp::RichPara::Lines::width\u0011Buffer<int> width\u0003Upp\u0005WIDTH\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0006\u0000\u0000\u0000\u001D\u0000\u0000\u0000Ë\u0000\u0000\u0000\u0002\u0000\u0000\u0000Ë\u0000\u0000\u0000#\u0000\u0000\u0000Ë\u0000\u0000\u0000\u0001\u0000\u0000\u0006height\u0012Buffer<HeightInfo>\u001CUpp::RichPara::Lines::height\u0019Buffer<HeightInfo> height\u0003Upp\u0006HEIGHT\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0006\u0000\u0000\u0000\u001D\u0000\u0000\u0000Ì\u0000\u0000\u0000\u0002\u0000\u0000\u0000Ì\u0000\u0000\u0000#\u0000\u0000\u0000Ì\u0000\u0000\u0000\u0001\u0000\u0000\u0006format\u001ABuffer<const CharFormat *>\u001CUpp::RichPara::Lines::format!Buffer<const CharFormat *> format\u0003Upp\u0006FORMAT\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0006\u0000\u0000\u0000\u001D\u0000\u0000\u0000Í\u0000\u0000\u0000\u0002\u0000\u0000\u0000Í\u0000\u0000\u0000!\u0000\u0000\u0000Í\u0000\u0000\u0000\u0001\u0000\u0000\u0004line\vArray<Line>\u001AUpp::RichPara::Lines::line\u0010Array<Line> line\u0003Upp\u0004LINE\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0006\u0000\u0000\u0000\u001D\u0000\u0000\u0000Î\u0000\u0000\u0000\u0002\u0000\u0000\u0000Î\u0000\u0000\u0000$\u0000\u0000\u0000Î\u0000\u0000\u0000\u0001\u0000\u0000\ahformat\u0011Array<CharFormat>\u001DUpp::RichPara::Lines::hformat\u0019Array<CharFormat> hformat\u0003Upp\aHFORMAT\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0006\u0000\u0000\u0000\u001D\u0000\u0000\u0000Ï\u0000\u0000\u0000\u0002\u0000\u0000\u0000Ï\u0000\u0000\u0000#\u0000\u0000\u0000Ï\u0000\u0000\u0000\u0001\u0000\u0000\u0006object\u0011Array<RichObject>\u001CUpp::RichPara::Lines::object\u0018Array<RichObject> object\u0003Upp\u0006OBJECT\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0006\u0000\u0000\u0000\u001D\u0000\u0000\u0000Ð\u0000\u0000\u0000\u0002\u0000\u0000\u0000Ð\u0000\u0000\u0000)\u0000\u0000\u0000Ð\u0000\u0000\u0000\u0001\u0000\u0000\ffirst_indent\u0003int\"Upp::RichPara::Lines::first_indent\u0010int first_indent\u0003Upp\fFIRST_INDENT\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0006\u0000\u0000\u0000\u001D\u0000\u0000\u0000Ñ\u0000\u0000\u0000\u0002\u0000\u0000\u0000Ñ\u0000\u0000\u0000(\u0000\u0000\u0000Ñ\u0000\u0000\u0000\u0001\u0000\u0000\vnext_indent\u0003int!Upp::RichPara::Lines::next_indent\u000Fint next_indent\u0003Upp\vNEXT_INDENT\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0006\u0000\u0000\u0000\u001D\u0000\u0000\u0000Ò\u0000\u0000\u0000\u0002\u0000\u0000\u0000Ò\u0000\u0000\u0000)\u0000\u0000\u0000Ò\u0000\u0000\u0000\u0001\u0000\u0000\fnumber_chars\u0003int\"Upp::RichPara::Lines::number_chars\u0010int number_chars\u0003Upp\fNUMBER_CHARS\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000Õ\u0000\u0000\u0000\u0002\u0000\u0000\u0000Õ\u0000\u0000\u0000J\u0000\u0000\u0000Õ\u0000\u0000\u0000\u0001\u0000\u0000\bGetCount\fint () const%Upp::RichPara::Lines::GetCount()const\u0014int GetCount() const\u0003Upp\bGETCOUNT\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000Ö\u0000\u0000\u0000\u0002\u0000\u0000\u0000Ö\u0000\u0000\u0000B\u0000\u0000\u0000Ö\u0000\u0000\u0000\u0001\u0000\u0000\noperator[]\vLine &(int)%Upp::RichPara::Lines::operator[](int)\u0017Line& operator[](int i)\u0003Upp\nOPERATOR[]\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000×\u0000\u0000\u0000\u0002\u0000\u0000\u0000×\u0000\u0000\u0000B\u0000\u0000\u0000×\u0000\u0000\u0000\u0001\u0000\u0000\noperator[]\u0017const Line &(int) const*Upp::RichPara::Lines::operator[](int)const#const Line& operator[](int i) const\u0003Upp\nOPERATOR[]\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000Ø\u0000\u0000\u0000\u0002\u0000\u0000\u0000Ø\u0000\u0000\u00004\u0000\u0000\u0000Ø\u0000\u0000\u0000\u0000\u0000\u0000\aJustify\u0015void (const Format &),Upp::RichPara::Lines::Justify(const Format&)\"void Justify(const Format& format)\u0003Upp\aJUSTIFY\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000Ù\u0000\u0000\u0000\u0002\u0000\u0000\u0000Ù\u0000\u0000\u0000)\u0000\u0000\u0000Ù\u0000\u0000\u0000\u0000\u0000\u0000\nBodyHeight\fint () const'Upp::RichPara::Lines::BodyHeight()const\u0016int BodyHeight() const\u0003Upp\nBODYHEIGHT\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0015\u0000\u0000\u0000\u0002\u0000\u0000\u0000Û\u0000\u0000\u0000\u0002\u0000\u0000\u0000Û\u0000\u0000\u0000\u0015\u0000\u0000\u0000Û\u0000\u0000\u0000\u0001\u0000\u0000\toperator=!Lines &(Lines &&) noexcept(false)2Upp::RichPara::Lines::operator=(Lines&&)()=default\u000FLines& operator\u0003Upp\tOPERATOR=\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0018\u0000\u0000\u0000\u0002\u0000\u0000\u0000Û\u0000\u0000\u0000\u0002\u0000\u0000\u0000Û\u0000\u0000\u0000\u0015\u0000\u0000\u0000Û\u0000\u0000\u0000\u0001\u0000\u0000\u0005Lines\u001Fvoid (Lines &&) noexcept(false).Upp::RichPara::Lines::Lines(Lines&&)()=default\u0016Lines(Lines&&) (false)\u0003Upp\u0005LINES\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0018\u0000\u0000\u0000\u0002\u0000\u0000\u0000Ý\u0000\u0000\u0000\u0002\u0000\u0000\u0000Ý\u0000\u0000\u0000\t\u0000\u0000\u0000Ý\u0000\u0000\u0000\u0000\u0000\u0000\u0005Lines\avoid ()\u001DUpp::RichPara::Lines::Lines()\aLines()\u0003Upp\u0005LINES\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0019\u0000\u0000\u0000\u0002\u0000\u0000\u0000Þ\u0000\u0000\u0000\u0002\u0000\u0000\u0000Þ\u0000\u0000\u0000\n\u0000\u0000\u0000Þ\u0000\u0000\u0000\u0000\u0000\u0000\u0006~Lines\u0010void () noexcept\u0019Upp::RichPara::Lines::~()\b~Lines()\u0003Upp\u0006~LINES\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0015\u0000\u0000\u0000\u001D\u0000\u0000\u0000á\u0000\u0000\u0000\u0002\u0000\u0000\u0000á\u0000\u0000\u0000$\u0000\u0000\u0000á\u0000\u0000\u0000\u0000\u0000\u0001\u0005Cache\u0010Array<Lines> &()\u001DUpp::RichPara::Lines::Cache()\u001Cstatic Array<Lines>& Cache()\u0003Upp\u0005CACHE\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0006\u0000\u0000\u0000\u001D\u0000\u0000\u0000â\u0000\u0000\u0000\u0002\u0000\u0000\u0000â\u0000\u0000\u0000$\u0000\u0000\u0000â\u0000\u0000\u0000\u0001\u0000\u0000\aincache\u0004bool\u001DUpp::RichPara::Lines::incache\fbool incache\u0003Upp\aINCACHE\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0006\u0000\u0000\u0000\u001D\u0000\u0000\u0000ã\u0000\u0000\u0000\u0002\u0000\u0000\u0000ã\u0000\u0000\u0000&\u0000\u0000\u0000ã\u0000\u0000\u0000\u0001\u0000\u0000\tjustified\u0004bool\u001FUpp::RichPara::Lines::justified\u000Ebool justified\u0003Upp\tJUSTIFIED\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0006\u0000\u0000\u0000\u001D\u0000\u0000\u0000ä\u0000\u0000\u0000\u0002\u0000\u0000\u0000ä\u0000\u0000\u0000$\u0000\u0000\u0000ä\u0000\u0000\u0000\u0001\u0000\u0000\acacheid\u0005int64\u001DUpp::RichPara::Lines::cacheid\rint64 cacheid\u0003Upp\aCACHEID\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0015\u0000\u0000\u0000*\u0000\u0000\u0000é\u0000\u0000\u0000\u0001\u0000\u0000\u0000é\u0000\u0000\u0000N\u0000\u0000\u0000é\u0000\u0000\u0000\u0001\u0000\u0001\tfieldtype$const VectorMap<Id, FieldType *> &()\u001AUpp::RichPara::fieldtype()4static const VectorMap<Id, FieldType *>& fieldtype()\u0003Upp\tFIELDTYPE\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000ê\u0000\u0000\u0000\u0001\u0000\u0000\u0000ê\u0000\u0000\u0000,\u0000\u0000\u0000ê\u0000\u0000\u0000\u0000\u0000\u0001\bRegister\u0016void (Id, FieldType &)&Upp::RichPara::Register(Id,FieldType&)*static void Register(Id id, FieldType& ft)\u0003Upp\bREGISTER\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u001E\u0000\u0000\u0000 \u0000\u0000\u0000ë\u0000\u0000\u0000\u0001\u0000\u0000\u0000ë\u0000\u0000\u0000V\u0000\u0000\u0000ë\u0000\u0000\u0000\u0001\u0000\u0000\bRegister\tvoid (Id)\u001BUpp::RichPara::Register(Id).template <class T> static void Register(Id id)\u0003Upp\bREGISTER\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000í\u0000\u0000\u0000\u0001\u0000\u0000\u0000í\u0000\u0000\u0000\u0014\u0000\u0000\u0000í\u0000\u0000\u0000\u0001\u0000\u0000\acacheid\u0005int64\u0016Upp::RichPara::cacheid\rint64 cacheid\u0003Upp\aCACHEID\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000î\u0000\u0000\u0000\u0001\u0000\u0000\u0000î\u0000\u0000\u0000\u0014\u0000\u0000\u0000î\u0000\u0000\u0000\u0001\u0000\u0000\aincache\u0004bool\u0016Upp::RichPara::incache\fbool incache\u0003Upp\aINCACHE\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000ï\u0000\u0000\u0000\u0001\u0000\u0000\u0000ï\u0000\u0000\u0000\u0011\u0000\u0000\u0000ï\u0000\u0000\u0000\u0001\u0000\u0000\u0004part\vArray<Part>\u0013Upp::RichPara::part\u0010Array<Part> part\u0003Upp\u0004PART\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000ð\u0000\u0000\u0000\u0001\u0000\u0000\u0000ð\u0000\u0000\u0000\u0013\u0000\u0000\u0000ð\u0000\u0000\u0000\u0001\u0000\u0000\u0006format\u0006Format\u0015Upp::RichPara::format\rFormat format\u0003Upp\u0006FORMAT\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000ò\u0000\u0000\u0000\u0001\u0000\u0000\u0000ò\u0000\u0000\u0000,\u0000\u0000\u0000ó\u0000\u0000\u0000\u0000\u0000\u0001\nCharformatKvoid (Stream &, const CharFormat &, const CharFormat &, const CharFormat &)XUpp::RichPara::Charformat(Stream&,const CharFormat&,const CharFormat&,const CharFormat&)bstatic void Charformat(Stream& out, const CharFormat& o, const CharFormat& n, const CharFormat& s)\u0003Upp\nCHARFORMAT\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000õ\u0000\u0000\u0000\u0001\u0000\u0000\u0000õ\u0000\u0000\u0000S\u0000\u0000\u0000õ\u0000\u0000\u0000\u0000\u0000\u0001\tDrawRuler-void (Draw &, int, int, int, int, Color, int)9Upp::RichPara::DrawRuler(Draw&,int,int,int,int,Color,int)Rstatic void DrawRuler(Draw& w, int x, int y, int cx, int cy, Color ink, int style)\u0003Upp\tDRAWRULER\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000÷\u0000\u0000\u0000\u0001\u0000\u0000\u0000÷\u0000\u0000\u00007\u0000\u0000\u0000÷\u0000\u0000\u0000\u0000\u0000\u0000\u0003Cat*void (const WString &, const CharFormat &)4Upp::RichPara::Cat(const WString&,const CharFormat&)/void Cat(const WString& s, const CharFormat& f)\u0003Upp\u0003CAT\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000ø\u0000\u0000\u0000\u0001\u0000\u0000\u0000ø\u0000\u0000\u00004\u0000\u0000\u0000ø\u0000\u0000\u0000\u0000\u0000\u0000\u0003Cat'void (const char *, const CharFormat &)1Upp::RichPara::Cat(const char*,const CharFormat&),void Cat(const char *s, const CharFormat& f)\u0003Upp\u0003CAT\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000ù\u0000\u0000\u0000\u0001\u0000\u0000\u0000ù\u0000\u0000\u0000:\u0000\u0000\u0000ù\u0000\u0000\u0000\u0000\u0000\u0000\u0003Cat-void (const RichObject &, const CharFormat &)7Upp::RichPara::Cat(const RichObject&,const CharFormat&)2void Cat(const RichObject& o, const CharFormat& f)\u0003Upp\u0003CAT\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000ú\u0000\u0000\u0000\u0001\u0000\u0000\u0000ú\u0000\u0000\u0000H\u0000\u0000\u0000ú\u0000\u0000\u0000\u0000\u0000\u0000\u0003Cat-void (Id, const String &, const CharFormat &)6Upp::RichPara::Cat(Id,const String&,const CharFormat&)@void Cat(Id fieldtype, const String& param, const CharFormat& f)\u0003Upp\u0003CAT\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000ü\u0000\u0000\u0000\u0001\u0000\u0000\u0000ü\u0000\u0000\u0000\u001E\u0000\u0000\u0000ü\u0000\u0000\u0000\u0000\u0000\u0000\tGetLength\fint () const\u001FUpp::RichPara::GetLength()const\u0015int GetLength() const\u0003Upp\tGETLENGTH\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000ý\u0000\u0000\u0000\u0001\u0000\u0000\u0000ý\u0000\u0000\u0000R\u0000\u0000\u0000ý\u0000\u0000\u0000\u0001\u0000\u0000\bGetCount\fint () const\u001EUpp::RichPara::GetCount()const\u0014int GetCount() const\u0003Upp\bGETCOUNT\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000þ\u0000\u0000\u0000\u0001\u0000\u0000\u0000þ\u0000\u0000\u0000\u001C\u0000\u0000\u0000þ\u0000\u0000\u0000\u0000\u0000\u0000\aIsEmpty\rbool () const\u001DUpp::RichPara::IsEmpty()const\u0014bool IsEmpty() const\u0003Upp\aISEMPTY\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000ÿ\u0000\u0000\u0000\u0001\u0000\u0000\u0000ÿ\u0000\u0000\u0000D\u0000\u0000\u0000ÿ\u0000\u0000\u0000\u0000\u0000\u0000\u0004Pack2String (const Format &, Array<RichObject> &) const.Upp::RichPara::Pack(const Format&,Array&)const>String Pack(const Format& style, Array<RichObject>& obj) const\u0003Upp\u0004PACK\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0001\u0000\u0000W\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0006Unpack@void (const String &, const Array<RichObject> &, const Format &)?Upp::RichPara::Unpack(const String&,const Array&,const Format&)Ovoid Unpack(const String& s, const Array<RichObject>& obj, const Format& style)\u0003Upp\u0006UNPACK\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u0002\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0001\u0000\u0000/\u0000\u0000\u0000\u0002\u0001\u0000\u0000\u0000\u0000\u0000\nApplyStyle\u0015void (const Format &)(Upp::RichPara::ApplyStyle(const Format&)'void ApplyStyle(const Format& newstyle)\u0003Upp\nAPPLYSTYLE\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u0004\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0001\u0000\u0000J\u0000\u0000\u0000\u0004\u0001\u0000\u0000\u0001\u0000\u0000\noperator[]\vPart &(int)\u001EUpp::RichPara::operator[](int)\u0017Part& operator[](int i)\u0003Upp\nOPERATOR[]\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0005\u0001\u0000\u0000J\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0001\u0000\u0000\noperator[]\u0017const Part &(int) const#Upp::RichPara::operator[](int)const#const Part& operator[](int i) const\u0003Upp\nOPERATOR[]\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u0006\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0001\u0000\u0000%\u0000\u0000\u0000\u0006\u0001\u0000\u0000\u0000\u0000\u0000\bFindPart\u0011int (int &) const\"Upp::RichPara::FindPart(int&)const\u001Cint FindPart(int& pos) const\u0003Upp\bFINDPART\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\a\u0001\u0000\u0000\u0001\u0000\u0000\u0000\a\u0001\u0000\u0000\u001A\u0000\u0000\u0000\a\u0001\u0000\u0000\u0000\u0000\u0000\u0004Trim\nvoid (int)\u0018Upp::RichPara::Trim(int)\u0012void Trim(int pos)\u0003Upp\u0004TRIM\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\b\u0001\u0000\u0000\u0001\u0000\u0000\u0000\b\u0001\u0000\u0000\u0019\u0000\u0000\u0000\b\u0001\u0000\u0000\u0000\u0000\u0000\u0003Mid\nvoid (int)\u0017Upp::RichPara::Mid(int)\u0011void Mid(int pos)\u0003Upp\u0003MID\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\t\u0001\u0000\u0000\u0001\u0000\u0000\u0000\t\u0001\u0000\u0000O\u0000\u0000\u0000\t\u0001\u0000\u0000\u0001\u0000\u0000\u0006Append\u0017void (const RichPara &)&Upp::RichPara::Append(const RichPara&)\u001Evoid Append(const RichPara& p)\u0003Upp\u0006APPEND\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\v\u0001\u0000\u0000\u0001\u0000\u0000\u0000\v\u0001\u0000\u00003\u0000\u0000\u0000\v\u0001\u0000\u0000\u0000\u0000\u0000\nGetRichPos\u001Bvoid (RichPos &, int) const,Upp::RichPara::GetRichPos(RichPos&,int)const+void GetRichPos(RichPos& rp, int pos) const\u0003Upp\nGETRICHPOS\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\r\u0001\u0000\u0000\u0001\u0000\u0000\u0000\r\u0001\u0000\u00007\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u0000\vFormatLines!Lines (int, const Number &) const2Upp::RichPara::FormatLines(int,const Number&)const0Lines FormatLines(int cx, const Number& n) const\u0003Upp\vFORMATLINES\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u000E\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u000E\u0001\u0000\u0000\u0000\u0000\u0000\u000E\u0001\u0000\u0000\u0000\u0000\u0000\u0005Paint[void (PageDraw &, RichContext, const PaintInfo &, const Number &, const Bits &, bool) const`Upp::RichPara::Paint(PageDraw&,RichContext,const PaintInfo&,const Number&,const Bits&,bool)const|void Paint(PageDraw& pw, RichContext rc, const PaintInfo& pi, const Number& n, const Bits& spellerror, bool baselevel) const\u0003Upp\u0005PAINT\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u000F\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u000F\u0001\u0000\u00004\u0000\u0000\u0000\u000F\u0001\u0000\u0000\u0000\u0000\u0000\bGetCaret\"RichCaret (int, RichContext) const-Upp::RichPara::GetCaret(int,RichContext)const1RichCaret GetCaret(int pos, RichContext rc) const\u0003Upp\bGETCARET\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u0010\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0010\u0001\u0000\u00009\u0000\u0000\u0000\u0010\u0001\u0000\u0000\u0000\u0000\u0000\u0006GetPos#int (int, PageY, RichContext) const1Upp::RichPara::GetPos(int,PageY,RichContext)const0int GetPos(int x, PageY y, RichContext rc) const\u0003Upp\u0006GETPOS\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0011\u0001\u0000\u0000R\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0000\fGatherLabels3void (Vector<RichValPos> &, RichContext, int) const9Upp::RichPara::GatherLabels(Vector&,RichContext,int)constJvoid GatherLabels(Vector<RichValPos>& info, RichContext rc, int pos) const\u0003Upp\fGATHERLABELS\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u0012\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0012\u0001\u0000\u0000S\u0000\u0000\u0000\u0012\u0001\u0000\u0000\u0000\u0000\u0000\rGatherIndexes3void (Vector<RichValPos> &, RichContext, int) const:Upp::RichPara::GatherIndexes(Vector&,RichContext,int)constKvoid GatherIndexes(Vector<RichValPos>& info, RichContext rc, int pos) const\u0003Upp\rGATHERINDEXES\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0013\u0001\u0000\u0000a\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0000\vGetVertMove<int (int, int, const Rect &, int, const RichContext &) constKUpp::RichPara::GetVertMove(int,int,const Rect&,int,const RichContext&)constXint GetVertMove(int pos, int gx, const Rect& page, int dir, const RichContext& rc) const\u0003Upp\vGETVERTMOVE\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u001C\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0000\aGetText\u0010WString () const\u001DUpp::RichPara::GetText()const\u0017WString GetText() const\u0003Upp\aGETTEXT\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u001B\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0000\u0006HasPos\rbool () const\u001CUpp::RichPara::HasPos()const\u0013bool HasPos() const\u0003Upp\u0006HASPOS\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0019\u0001\u0000\u0000;\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u0000\u000EEvaluateFields!bool (VectorMap<String, Value> &))Upp::RichPara::EvaluateFields(VectorMap&)3bool EvaluateFields(VectorMap<String, Value>& vars)\u0003Upp\u000EEVALUATEFIELDS\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u001B\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u001B\u0001\u0000\u0000^\u0000\u0000\u0000\u001B\u0001\u0000\u0000\u0001\u0000\u0000\voperator<<=\u0017void (const RichPara &)+Upp::RichPara::operator<<=(const RichPara&)\u000Fvoid operator<<\u0003Upp\vOPERATOR<<=\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0013\u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0000\u0000\u0000\u0004Dump\avoid ()\u0015Upp::RichPara::Dump()\vvoid Dump()\u0003Upp\u0004DUMP\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000!\u0001\u0000\u0000\u0001\u0000\u0000\u0000!\u0001\u0000\u0000\u001E\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000\u0000\tApplyZoom\vvoid (Zoom)\u001EUpp::RichPara::ApplyZoom(Zoom)\u0016void ApplyZoom(Zoom z)\u0003Upp\tAPPLYZOOM\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000#\u0001\u0000\u0000\u0001\u0000\u0000\u0000#\u0001\u0000\u0000\u001E\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000\u0000\aCacheId\fvoid (int64)\u001DUpp::RichPara::CacheId(int64)\u0016void CacheId(int64 id)\u0003Upp\aCACHEID\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000%\u0001\u0000\u0000\u0001\u0000\u0000\u0000%\u0001\u0000\u0000\u0017\u0000\u0000\u0000%\u0001\u0000\u0000\u0001\u0000\u0000\bRichPara\"void (RichPara &&) noexcept(false)-Upp::RichPara::RichPara(RichPara&&)()=default\u001CRichPara(RichPara&&) (false)\u0003Upp\bRICHPARA\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u0001\u0000\u0000\u0000%\u0001\u0000\u0000\u0001\u0000\u0000\u0000%\u0001\u0000\u0000\u0017\u0000\u0000\u0000%\u0001\u0000\u0000\u0001\u0000\u0000\toperator='RichPara &(RichPara &&) noexcept(false).Upp::RichPara::operator=(RichPara&&)()=default\u0012RichPara& operator\u0003Upp\tOPERATOR=\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000'\u0001\u0000\u0000\u0001\u0000\u0000\u0000'\u0001\u0000\u0000\v\u0000\u0000\u0000'\u0001\u0000\u0000\u0000\u0000\u0000\bRichPara\avoid ()\u0019Upp::RichPara::RichPara()\nRichPara()\u0003Upp\bRICHPARA\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000(\u0001\u0000\u0000\u0001\u0000\u0000\u0000(\u0001\u0000\u0000\f\u0000\u0000\u0000(\u0001\u0000\u0000\u0000\u0000\u0000\t~RichPara\u0010void () noexcept\u0012Upp::RichPara::~()\v~RichPara()\u0003Upp\t~RICHPARA\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000+\u0001\u0000\u0000\u0001\u0000\u0000\u0000+\u0001\u0000\u0000.\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000\u0000\nGetNextTab\u0014Tab (int, int) const'Upp::RichPara::GetNextTab(int,int)const%Tab GetNextTab(int pos, int cx) const\u0003Upp\nGETNEXTTAB\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000,\u0001\u0000\u0000\u0001\u0000\u0000\u0000,\u0001\u0000\u0000<\u0000\u0000\u0000,\u0001\u0000\u0000\u0000\u0000\u0000\u0003Smh'void (Lines &, HeightInfo *, int) const/Upp::RichPara::Smh(Lines&,HeightInfo*,int)const4void Smh(Lines& lines, HeightInfo *th, int cx) const\u0003Upp\u0003SMH\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000-\u0001\u0000\u0000\u0001\u0000\u0000\u0000-\u0001\u0000\u0000)\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000\u0000\u0005Begin\u001BLines (RichContext &) const'Upp::RichPara::Begin(RichContext&)const\"Lines Begin(RichContext& rc) const\u0003Upp\u0005BEGIN\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000.\u0001\u0000\u0000\u0001\u0000\u0000\u0000.\u0001\u0000\u0000L\u0000\u0000\u0000.\u0001\u0000\u0000\u0000\u0000\u0000\nBreaksPage4bool (const RichContext &, const Lines &, int) constCUpp::RichPara::BreaksPage(const RichContext&,const Lines&,int)constDbool BreaksPage(const RichContext& rc, const Lines& pl, int i) const\u0003Upp\nBREAKSPAGE\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000/\u0001\u0000\u0000\u0001\u0000\u0000\u0000/\u0001\u0000\u00004\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u0000\u0000\tPackPartsavoid (Stream &, const CharFormat &, const Array<Part> &, CharFormat &, Array<RichObject> &) constXUpp::RichPara::PackParts(Stream&,const CharFormat&,const Array&,CharFormat&,Array&)const~void PackParts(Stream& out, const CharFormat& chrstyle, const Array<Part>& part, CharFormat& cf, Array<RichObject>& obj) const\u0003Upp\tPACKPARTS\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u00002\u0001\u0000\u0000\u0001\u0000\u0000\u00002\u0001\u0000\u0000R\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u0000\u0000\vUnpackPartsTvoid (Stream &, const CharFormat &, Array<Part> &, const Array<RichObject> &, int &)NUpp::RichPara::UnpackParts(Stream&,const CharFormat&,Array&,const Array&,int&)rvoid UnpackParts(Stream& in, const CharFormat& chrstyle, Array<Part>& part, const Array<RichObject>& obj, int& oi)\u0003Upp\vUNPACKPARTS\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u00004\u0001\u0000\u0000\u0001\u0000\u0000\u00004\u0001\u0000\u0000=\u0000\u0000\u00006\u0001\u0000\u0000\u0000\u0000\u0001\u0005Flushyvoid (Draw &, const PaintInfo &, wchar *, const CharFormat **, int *, int, int, int, int, int, int, int, int, Zoom, bool)uUpp::RichPara::Flush(Draw&,const PaintInfo&,wchar*,const CharFormat**,int*,int,int,int,int,int,int,int,int,Zoom,bool)ÿÃ\u0000\u0000\u0000static void Flush(Draw& draw, const PaintInfo& pi, wchar *text, const CharFormat **i0, int *wd, int pos, int len, int x0, int x, int y0, int y, int linecy, int lineascent, Zoom z, bool highlight)\u0003Upp\u0005FLUSH\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u00007\u0001\u0000\u0000\u0001\u0000\u0000\u00007\u0001\u0000\u0000O\u0000\u0000\u00007\u0001\u0000\u0000\u0000\u0000\u0000\tPosInLine1int (int, const Rect &, const Lines &, int) const?Upp::RichPara::PosInLine(int,const Rect&,const Lines&,int)constFint PosInLine(int x, const Rect& page, const Lines& pl, int lni) const\u0003Upp\tPOSINLINE\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\t\u0000\u0000\u0000\u0019\u0000\u0000\u00009\u0001\u0000\u0000\u0001\u0000\u0000\u00009\u0001\u0000\u0000#\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000\u0001\ncache_lock\vStaticMutex\u0019Upp::RichPara::cache_lock\u001Dstatic StaticMutex cache_lock\u0003Upp\nCACHE_LOCK\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000:\u0001\u0000\u0000\u0001\u0000\u0000\u0000:\u0001\u0000\u0000 \u0000\u0000\u0000:\u0001\u0000\u0000\u0000\u0000\u0001\u0005Cache\u0013Array<RichPara> &()\u0016Upp::RichPara::Cache()\u001Fstatic Array<RichPara>& Cache()\u0003Upp\u0005CACHE\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000$\u0000\u0000\u0000<\u0001\u0000\u0000\u0001\u0000\u0000\u0000<\u0001\u0000\u00000\u0000\u0000\u0000<\u0001\u0000\u0000\u0000\u0000\u0001\nfieldtype0\u001EVectorMap<Id, FieldType *> &()\u001BUpp::RichPara::fieldtype0()/static VectorMap<Id, FieldType *>& fieldtype0()\u0003Upp\nFIELDTYPE0\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000>\u0001\u0000\u0000\u0001\u0000\u0000\u0000>\u0001\u0000\u0000\u0011\u0000\u0000\u0000>\u0001\u0000\u0000\u0000\u0000\u0000\tStorePart\u0018Upp::RichPara::StorePart\u0018Upp::RichPara::StorePart\tStorePart\u0003Upp\tSTOREPART\u0018Upp::RichPara::StorePart\u0018UPP::RICHPARA::STOREPART\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0000\u0000\u0000A\u0001\u0000\u0000\u0001\u0000\u0000\u0000C\u0001\u0000\u0000\u0001\u0000\u0000\noperator==3bool (const RichPara::Tab &, const RichPara::Tab &):Upp::operator==(const RichPara::Tab&,const RichPara::Tab&)\rbool operator\u0003Upp\nOPERATOR==\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000E\u0001\u0000\u0000\u0000\u0000\u0000\u0000E\u0001\u0000\u0000Q\u0000\u0000\u0000E\u0001\u0000\u0000\u0000\u0000\u0000\u0010NumberingDiffers9bool (const RichPara::Format &, const RichPara::Format &)FUpp::NumberingDiffers(const RichPara::Format&,const RichPara::Format&)Qbool NumberingDiffers(const RichPara::Format& fmt1, const RichPara::Format& fmt2)\u0003Upp\u0010NUMBERINGDIFFERS\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000G\u0001\u0000\u0000\u0000\u0000\u0000\u0000G\u0001\u0000\u0000%\u0000\u0000\u0000G\u0001\u0000\u0000\u0000\u0000\u0000\u0004Sort\u001Evoid (Vector<RichPara::Tab> &)\u0012Upp::Sort(Vector&)%void Sort(Vector<RichPara::Tab>& tab)\u0003Upp\u0004SORT\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000I\u0001\u0000\u0000\u0000\u0000\u0000\u0000I\u0001\u0000\u0000.\u0000\u0000\u0000I\u0001\u0000\u0000\u0000\u0000\u0000\noperator*=\u001Fvoid (RichPara::Format &, Zoom)'Upp::operator*=(RichPara::Format&,Zoom)\u000Evoid operator*\u0003Upp\nOPERATOR*=\u0003Upp\u0003UPP\u0000\u0000end\u0000\"\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h","value":"data×\u0004\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\r\u0001\u0000\u0000\u0001\u0000\u0000\aRichTxt\fUpp::RichTxt\fUpp::RichTxt!RichTxt : DeepCopyOption<RichTxt>\u0003Upp\aRICHTXT\fUpp::RichTxt\fUPP::RICHTXT\u0013Upp::DeepCopyOption\u0000\u0005\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0000\u0000@(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:3:2)NUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:3:2)DUpp::RichTxt::(unnamed at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.)\u0004enum\u0003Upp@(UNNAMED ENUM AT C:\\USERS\\SBLO\\AI-UPP\\UPPSRC\\RICHTEXT\\TXT.H:3:2)\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0001\u0000\u0000\u0004BOLDNUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:3:2)\u0012Upp::RichTxt::BOLD\u0004BOLD\u0003Upp\u0004BOLD\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0006ITALICNUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:3:2)\u0014Upp::RichTxt::ITALIC\u0006ITALIC\u0003Upp\u0006ITALIC\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0001\u0000\u0000\tUNDERLINENUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:3:2)\u0017Upp::RichTxt::UNDERLINE\tUNDERLINE\u0003Upp\tUNDERLINE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0004FACENUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:3:2)\u0012Upp::RichTxt::FACE\u0004FACE\u0003Upp\u0004FACE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000\u0019\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0006HEIGHTNUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:3:2)\u0014Upp::RichTxt::HEIGHT\u0006HEIGHT\u0003Upp\u0006HEIGHT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000\u0019\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\bLANGUAGENUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:3:2)\u0016Upp::RichTxt::LANGUAGE\bLANGUAGE\u0003Upp\bLANGUAGE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\t\u0000\u0000\u0000\u0002\u0000\u0000\u0000\t\u0000\u0000\u0000\u0019\u0000\u0000\u0000\t\u0000\u0000\u0000\u0001\u0000\u0000\u0003INKNUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:3:2)\u0011Upp::RichTxt::INK\u0003INK\u0003Upp\u0003INK\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\n\u0000\u0000\u0000\u0002\u0000\u0000\u0000\n\u0000\u0000\u0000\u0019\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0000\u0000\u0005PAPERNUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:3:2)\u0013Upp::RichTxt::PAPER\u0005PAPER\u0003Upp\u0005PAPER\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\v\u0000\u0000\u0000\u0002\u0000\u0000\u0000\v\u0000\u0000\u0000\u0019\u0000\u0000\u0000\v\u0000\u0000\u0000\u0001\u0000\u0000\u0004LINKNUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:3:2)\u0012Upp::RichTxt::LINK\u0004LINK\u0003Upp\u0004LINK\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\f\u0000\u0000\u0000\u0002\u0000\u0000\u0000\f\u0000\u0000\u0000\u0019\u0000\u0000\u0000\f\u0000\u0000\u0000\u0001\u0000\u0000\aSSCRIPTNUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:3:2)\u0015Upp::RichTxt::SSCRIPT\aSSCRIPT\u0003Upp\aSSCRIPT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\r\u0000\u0000\u0000\u0002\u0000\u0000\u0000\r\u0000\u0000\u0000\u0019\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\bCAPITALSNUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:3:2)\u0016Upp::RichTxt::CAPITALS\bCAPITALS\u0003Upp\bCAPITALS\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0001\u0000\u0000\tSTRIKEOUTNUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:3:2)\u0017Upp::RichTxt::STRIKEOUT\tSTRIKEOUT\u0003Upp\tSTRIKEOUT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\u0004LANGNUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:3:2)\u0012Upp::RichTxt::LANG\u0004LANG\u0003Upp\u0004LANG\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\nINDEXENTRYNUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:3:2)\u0018Upp::RichTxt::INDEXENTRY\nINDEXENTRY\u0003Upp\nINDEXENTRY\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0006DASHEDNUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:3:2)\u0014Upp::RichTxt::DASHED\u0006DASHED\u0003Upp\u0006DASHED\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0000\u0004NOAANUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:3:2)\u0012Upp::RichTxt::NOAA\u0004NOAA\u0003Upp\u0004NOAA\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0005\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0002\u0000\u0000\u0000,\u0000\u0000\u0000\u0001\u0000\u0000A(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:22:2)OUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:22:2)DUpp::RichTxt::(unnamed at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.)\u0004enum\u0003UppA(UNNAMED ENUM AT C:\\USERS\\SBLO\\AI-UPP\\UPPSRC\\RICHTEXT\\TXT.H:22:2)\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0000\u0005ALIGNOUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:22:2)\u0013Upp::RichTxt::ALIGN\u0005ALIGN\u0003Upp\u0005ALIGN\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0006BEFOREOUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:22:2)\u0014Upp::RichTxt::BEFORE\u0006BEFORE\u0003Upp\u0006BEFORE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0002LMOUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:22:2)\u0010Upp::RichTxt::LM\u0002LM\u0003Upp\u0002LM\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0006INDENTOUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:22:2)\u0014Upp::RichTxt::INDENT\u0006INDENT\u0003Upp\u0006INDENT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\u0002RMOUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:22:2)\u0010Upp::RichTxt::RM\u0002RM\u0003Upp\u0002RM\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0001\u0000\u0000\u0005AFTEROUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:22:2)\u0013Upp::RichTxt::AFTER\u0005AFTER\u0003Upp\u0005AFTER\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0001\u0000\u0000\aTABSIZEOUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:22:2)\u0015Upp::RichTxt::TABSIZE\aTABSIZE\u0003Upp\aTABSIZE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0000\u0000\u0006BULLETOUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:22:2)\u0014Upp::RichTxt::BULLET\u0006BULLET\u0003Upp\u0006BULLET\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0000\aNEWPAGEOUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:22:2)\u0015Upp::RichTxt::NEWPAGE\aNEWPAGE\u0003Upp\aNEWPAGE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0001\u0000\u0000\u0004KEEPOUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:22:2)\u0012Upp::RichTxt::KEEP\u0004KEEP\u0003Upp\u0004KEEP\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000 \u0000\u0000\u0000\u0002\u0000\u0000\u0000 \u0000\u0000\u0000\u0018\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\u0004TABSOUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:22:2)\u0012Upp::RichTxt::TABS\u0004TABS\u0003Upp\u0004TABS\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000!\u0000\u0000\u0000\u0002\u0000\u0000\u0000!\u0000\u0000\u0000\u0018\u0000\u0000\u0000!\u0000\u0000\u0000\u0001\u0000\u0000\u0005STYLEOUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:22:2)\u0013Upp::RichTxt::STYLE\u0005STYLE\u0003Upp\u0005STYLE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\"\u0000\u0000\u0000\u0002\u0000\u0000\u0000\"\u0000\u0000\u0000\u0018\u0000\u0000\u0000\"\u0000\u0000\u0000\u0001\u0000\u0000\u0005LABELOUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:22:2)\u0013Upp::RichTxt::LABEL\u0005LABEL\u0003Upp\u0005LABEL\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000#\u0000\u0000\u0000\u0002\u0000\u0000\u0000#\u0000\u0000\u0000\u0018\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\bKEEPNEXTOUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:22:2)\u0016Upp::RichTxt::KEEPNEXT\bKEEPNEXT\u0003Upp\bKEEPNEXT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000$\u0000\u0000\u0000\u0002\u0000\u0000\u0000$\u0000\u0000\u0000\u0018\u0000\u0000\u0000$\u0000\u0000\u0000\u0001\u0000\u0000\u0006ORPHANOUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:22:2)\u0014Upp::RichTxt::ORPHAN\u0006ORPHAN\u0003Upp\u0006ORPHAN\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000%\u0000\u0000\u0000\u0002\u0000\u0000\u0000%\u0000\u0000\u0000\u0018\u0000\u0000\u0000%\u0000\u0000\u0000\u0001\u0000\u0000\tNUMBERINGOUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:22:2)\u0017Upp::RichTxt::NUMBERING\tNUMBERING\u0003Upp\tNUMBERING\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000&\u0000\u0000\u0000\u0002\u0000\u0000\u0000&\u0000\u0000\u0000\u0018\u0000\u0000\u0000&\u0000\u0000\u0000\u0001\u0000\u0000\aSPACINGOUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:22:2)\u0015Upp::RichTxt::SPACING\aSPACING\u0003Upp\aSPACING\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000'\u0000\u0000\u0000\u0002\u0000\u0000\u0000'\u0000\u0000\u0000\u0018\u0000\u0000\u0000'\u0000\u0000\u0000\u0001\u0000\u0000\u0005RULEROUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:22:2)\u0013Upp::RichTxt::RULER\u0005RULER\u0003Upp\u0005RULER\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000(\u0000\u0000\u0000\u0002\u0000\u0000\u0000(\u0000\u0000\u0000\u0018\u0000\u0000\u0000(\u0000\u0000\u0000\u0001\u0000\u0000\bRULERINKOUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:22:2)\u0016Upp::RichTxt::RULERINK\bRULERINK\u0003Upp\bRULERINK\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000)\u0000\u0000\u0000\u0002\u0000\u0000\u0000)\u0000\u0000\u0000\u0018\u0000\u0000\u0000)\u0000\u0000\u0000\u0001\u0000\u0000\nRULERSTYLEOUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:22:2)\u0018Upp::RichTxt::RULERSTYLE\nRULERSTYLE\u0003Upp\nRULERSTYLE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000*\u0000\u0000\u0000\u0002\u0000\u0000\u0000*\u0000\u0000\u0000\u0018\u0000\u0000\u0000*\u0000\u0000\u0000\u0001\u0000\u0000\tNEWHDRFTROUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:22:2)\u0017Upp::RichTxt::NEWHDRFTR\tNEWHDRFTR\u0003Upp\tNEWHDRFTR\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000+\u0000\u0000\u0000\u0002\u0000\u0000\u0000+\u0000\u0000\u0000\u001A\u0000\u0000\u0000+\u0000\u0000\u0000\u0001\u0000\u0000\vFIRSTONPAGEOUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:22:2)\u0019Upp::RichTxt::FIRSTONPAGE\vFIRSTONPAGE\u0003Upp\vFIRSTONPAGE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000.\u0000\u0000\u0000\u0001\u0000\u0000\u0000.\u0000\u0000\u0000\u0002\u0000\u0000\u00009\u0000\u0000\u0000\u0001\u0000\u0000\nFormatInfo\u0018Upp::RichTxt::FormatInfo\u0018Upp::RichTxt::FormatInfo\u001DFormatInfo : RichPara::Format\u0003Upp\nFORMATINFO\u0018Upp::RichTxt::FormatInfo\u0018UPP::RICHTXT::FORMATINFO\u0015Upp::RichPara::Format\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000/\u0000\u0000\u0000\u0002\u0000\u0000\u0000/\u0000\u0000\u0000\u0011\u0000\u0000\u0000/\u0000\u0000\u0000\u0001\u0000\u0000\tcharvalid\u0005dword#Upp::RichTxt::FormatInfo::charvalid\u000Fdword charvalid\u0003Upp\tCHARVALID\u0018Upp::RichTxt::FormatInfo\u0018UPP::RICHTXT::FORMATINFO\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u00000\u0000\u0000\u0000\u0002\u0000\u0000\u00000\u0000\u0000\u0000\u0011\u0000\u0000\u00000\u0000\u0000\u0000\u0001\u0000\u0000\tparavalid\u0005dword#Upp::RichTxt::FormatInfo::paravalid\u000Fdword paravalid\u0003Upp\tPARAVALID\u0018Upp::RichTxt::FormatInfo\u0018UPP::RICHTXT::FORMATINFO\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u00002\u0000\u0000\u0000\u0002\u0000\u0000\u00002\u0000\u0000\u0000(\u0000\u0000\u00002\u0000\u0000\u0000\u0000\u0000\u0000\u0003Set\u001Fvoid (const RichPara::Format &)6Upp::RichTxt::FormatInfo::Set(const RichPara::Format&)%void Set(const RichPara::Format& fmt)\u0003Upp\u0003SET\u0018Upp::RichTxt::FormatInfo\u0018UPP::RICHTXT::FORMATINFO\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u00003\u0000\u0000\u0000\u0002\u0000\u0000\u00003\u0000\u0000\u0000,\u0000\u0000\u00003\u0000\u0000\u0000\u0000\u0000\u0000\u0003Set#void (const RichPara::CharFormat &):Upp::RichTxt::FormatInfo::Set(const RichPara::CharFormat&))void Set(const RichPara::CharFormat& fmt)\u0003Upp\u0003SET\u0018Upp::RichTxt::FormatInfo\u0018UPP::RICHTXT::FORMATINFO\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u00004\u0000\u0000\u0000\u0002\u0000\u0000\u00004\u0000\u0000\u00000\u0000\u0000\u00004\u0000\u0000\u0000\u0000\u0000\u0000\aCombine#void (const RichPara::CharFormat &)>Upp::RichTxt::FormatInfo::Combine(const RichPara::CharFormat&)-void Combine(const RichPara::CharFormat& fmt)\u0003Upp\aCOMBINE\u0018Upp::RichTxt::FormatInfo\u0018UPP::RICHTXT::FORMATINFO\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u00005\u0000\u0000\u0000\u0002\u0000\u0000\u00005\u0000\u0000\u0000,\u0000\u0000\u00005\u0000\u0000\u0000\u0000\u0000\u0000\aCombine\u001Fvoid (const RichPara::Format &):Upp::RichTxt::FormatInfo::Combine(const RichPara::Format&))void Combine(const RichPara::Format& fmt)\u0003Upp\aCOMBINE\u0018Upp::RichTxt::FormatInfo\u0018UPP::RICHTXT::FORMATINFO\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u00006\u0000\u0000\u0000\u0002\u0000\u0000\u00006\u0000\u0000\u0000&\u0000\u0000\u00006\u0000\u0000\u0000\u0000\u0000\u0000\aCombine\u0019void (const FormatInfo &)4Upp::RichTxt::FormatInfo::Combine(const FormatInfo&)#void Combine(const FormatInfo& fmt)\u0003Upp\aCOMBINE\u0018Upp::RichTxt::FormatInfo\u0018UPP::RICHTXT::FORMATINFO\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u00007\u0000\u0000\u0000\u0002\u0000\u0000\u00007\u0000\u0000\u00000\u0000\u0000\u00007\u0000\u0000\u0000\u0000\u0000\u0000\aApplyTo#void (RichPara::CharFormat &) const=Upp::RichTxt::FormatInfo::ApplyTo(RichPara::CharFormat&)const-void ApplyTo(RichPara::CharFormat& fmt) const\u0003Upp\aAPPLYTO\u0018Upp::RichTxt::FormatInfo\u0018UPP::RICHTXT::FORMATINFO\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u00008\u0000\u0000\u0000\u0002\u0000\u0000\u00008\u0000\u0000\u0000,\u0000\u0000\u00008\u0000\u0000\u0000\u0000\u0000\u0000\aApplyTo\u001Fvoid (RichPara::Format &) const9Upp::RichTxt::FormatInfo::ApplyTo(RichPara::Format&)const)void ApplyTo(RichPara::Format& fmt) const\u0003Upp\aAPPLYTO\u0018Upp::RichTxt::FormatInfo\u0018UPP::RICHTXT::FORMATINFO\u0000\u0000\u0004\u0000\u0000\u0000\a\u0000\u0000\u0000;\u0000\u0000\u0000\u0001\u0000\u0000\u0000;\u0000\u0000\u0000\u0002\u0000\u0000\u0000@\u0000\u0000\u0000\u0001\u0000\u0000\tFormating\u0017Upp::RichTxt::Formating\u0017Upp::RichTxt::Formating\tFormating\u0003Upp\tFORMATING\u0017Upp::RichTxt::Formating\u0017UPP::RICHTXT::FORMATING\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000<\u0000\u0000\u0000\u0002\u0000\u0000\u0000<\u0000\u0000\u0000\u0019\u0000\u0000\u0000<\u0000\u0000\u0000\u0001\u0000\u0000\astyleid\fVector<Uuid> Upp::RichTxt::Formating::styleid\u0014Vector<Uuid> styleid\u0003Upp\aSTYLEID\u0017Upp::RichTxt::Formating\u0017UPP::RICHTXT::FORMATING\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000=\u0000\u0000\u0000\u0002\u0000\u0000\u0000=\u0000\u0000\u0000\u0018\u0000\u0000\u0000=\u0000\u0000\u0000\u0001\u0000\u0000\u0006format\u000EVector<String>\u001FUpp::RichTxt::Formating::format\u0015Vector<String> format\u0003Upp\u0006FORMAT\u0017Upp::RichTxt::Formating\u0017UPP::RICHTXT::FORMATING\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000C\u0000\u0000\u0000\u0001\u0000\u0000\u0000C\u0000\u0000\u0000\u0002\u0000\u0000\u0000c\u0000\u0000\u0000\u0001\u0000\u0000\u0004Para\u0012Upp::RichTxt::Para\u0012Upp::RichTxt::Para\u001BPara : DeepCopyOption<Para>\u0003Upp\u0004PARA\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0013Upp::DeepCopyOption\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000D\u0000\u0000\u0000\u0002\u0000\u0000\u0000D\u0000\u0000\u0000\u001F\u0000\u0000\u0000D\u0000\u0000\u0000\u0001\u0000\u0000\astyleid\u0004Uuid\u001BUpp::RichTxt::Para::styleid\fUuid styleid\u0003Upp\aSTYLEID\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000E\u0000\u0000\u0000\u0002\u0000\u0000\u0000E\u0000\u0000\u0000\u001E\u0000\u0000\u0000E\u0000\u0000\u0000\u0001\u0000\u0000\u0006length\u0003int\u001AUpp::RichTxt::Para::length\nint length\u0003Upp\u0006LENGTH\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000F\u0000\u0000\u0000\u0002\u0000\u0000\u0000F\u0000\u0000\u0000\u001F\u0000\u0000\u0000F\u0000\u0000\u0000\u0001\u0000\u0000\acontent\u0006String\u001BUpp::RichTxt::Para::content\u000EString content\u0003Upp\aCONTENT\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000G\u0000\u0000\u0000\u0002\u0000\u0000\u0000G\u0000\u0000\u0000\u001E\u0000\u0000\u0000G\u0000\u0000\u0000\u0001\u0000\u0000\u0006object\u0011Array<RichObject>\u001AUpp::RichTxt::Para::object\u0018Array<RichObject> object\u0003Upp\u0006OBJECT\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0006\u0000\u0000\u0000\u001E\u0000\u0000\u0000H\u0000\u0000\u0000\u0002\u0000\u0000\u0000H\u0000\u0000\u0000(\u0000\u0000\u0000H\u0000\u0000\u0000\u0001\u0000\u0000\nnumber_fmt\u001BOne<RichPara::NumberFormat>\u001EUpp::RichTxt::Para::number_fmt&One<RichPara::NumberFormat> number_fmt\u0003Upp\nNUMBER_FMT\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000J\u0000\u0000\u0000\u0002\u0000\u0000\u0000J\u0000\u0000\u0000$\u0000\u0000\u0000J\u0000\u0000\u0000\u0001\u0000\u0000\fupdateserial\u0005int64 Upp::RichTxt::Para::updateserial\u001Amutable int64 updateserial\u0003Upp\fUPDATESERIAL\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0006\u0000\u0000\u0000\u001B\u0000\u0000\u0000K\u0000\u0000\u0000\u0002\u0000\u0000\u0000K\u0000\u0000\u0000!\u0000\u0000\u0000K\u0000\u0000\u0000\u0001\u0000\u0000\u0006number\u0010RichPara::Number\u001AUpp::RichTxt::Para::number\u001Fmutable RichPara::Number number\u0003Upp\u0006NUMBER\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000L\u0000\u0000\u0000\u0002\u0000\u0000\u0000L\u0000\u0000\u0000\u001E\u0000\u0000\u0000L\u0000\u0000\u0000\u0001\u0000\u0000\u0006linecy\vVector<int>\u001AUpp::RichTxt::Para::linecy\u001Amutable Vector<int> linecy\u0003Upp\u0006LINECY\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000M\u0000\u0000\u0000\u0002\u0000\u0000\u0000M\u0000\u0000\u0000#\u0000\u0000\u0000M\u0000\u0000\u0000\u0001\u0000\u0000\vspellerrors\u0004Bits\u001FUpp::RichTxt::Para::spellerrors\u0018mutable Bits spellerrors\u0003Upp\vSPELLERRORS\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000N\u0000\u0000\u0000\u0002\u0000\u0000\u0000N\u0000\u0000\u0000\"\u0000\u0000\u0000N\u0000\u0000\u0000\u0001\u0000\u0000\nheader_qtf\u0006String\u001EUpp::RichTxt::Para::header_qtf\u0019mutable String header_qtf\u0003Upp\nHEADER_QTF\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0006\u0000\u0000\u0000$\u0000\u0000\u0000N\u0000\u0000\u0000\u0002\u0000\u0000\u0000N\u0000\u0000\u0000.\u0000\u0000\u0000N\u0000\u0000\u0000\u0001\u0000\u0000\nfooter_qtf\u0006String\u001EUpp::RichTxt::Para::footer_qtf\u0019mutable String footer_qtf\u0003Upp\nFOOTER_QTF\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000O\u0000\u0000\u0000\u0002\u0000\u0000\u0000O\u0000\u0000\u0000\u001E\u0000\u0000\u0000O\u0000\u0000\u0000\u0001\u0000\u0000\u0006header\rOne<RichText>\u001AUpp::RichTxt::Para::header\u001Cmutable One<RichText> header\u0003Upp\u0006HEADER\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0006\u0000\u0000\u0000 \u0000\u0000\u0000O\u0000\u0000\u0000\u0002\u0000\u0000\u0000O\u0000\u0000\u0000&\u0000\u0000\u0000O\u0000\u0000\u0000\u0001\u0000\u0000\u0006footer\rOne<RichText>\u001AUpp::RichTxt::Para::footer\u001Cmutable One<RichText> footer\u0003Upp\u0006FOOTER\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000P\u0000\u0000\u0000\u0002\u0000\u0000\u0000P\u0000\u0000\u0000\u001B\u0000\u0000\u0000P\u0000\u0000\u0000\u0001\u0000\u0000\u0003ccx\u0003int\u0017Upp::RichTxt::Para::ccx\u000Fmutable int ccx\u0003Upp\u0003CCX\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000Q\u0000\u0000\u0000\u0002\u0000\u0000\u0000Q\u0000\u0000\u0000\u001A\u0000\u0000\u0000Q\u0000\u0000\u0000\u0001\u0000\u0000\u0002cy\u0003int\u0016Upp::RichTxt::Para::cy\u000Emutable int cy\u0003Upp\u0002CY\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000R\u0000\u0000\u0000\u0002\u0000\u0000\u0000R\u0000\u0000\u0000\u001D\u0000\u0000\u0000R\u0000\u0000\u0000\u0001\u0000\u0000\u0005ruler\u0003int\u0019Upp::RichTxt::Para::ruler\u0011mutable int ruler\u0003Upp\u0005RULER\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000S\u0000\u0000\u0000\u0002\u0000\u0000\u0000S\u0000\u0000\u0000\u001E\u0000\u0000\u0000S\u0000\u0000\u0000\u0001\u0000\u0000\u0006before\u0003int\u001AUpp::RichTxt::Para::before\u0012mutable int before\u0003Upp\u0006BEFORE\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000T\u0000\u0000\u0000\u0002\u0000\u0000\u0000T\u0000\u0000\u0000\u001D\u0000\u0000\u0000T\u0000\u0000\u0000\u0001\u0000\u0000\u0005after\u0003int\u0019Upp::RichTxt::Para::after\u0011mutable int after\u0003Upp\u0005AFTER\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000U\u0000\u0000\u0000\u0002\u0000\u0000\u0000U\u0000\u0000\u0000\u001F\u0000\u0000\u0000U\u0000\u0000\u0000\u0001\u0000\u0000\anewpage\u0004bool\u001BUpp::RichTxt::Para::newpage\u0014mutable bool newpage\u0003Upp\aNEWPAGE\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000V\u0000\u0000\u0000\u0002\u0000\u0000\u0000V\u0000\u0000\u0000#\u0000\u0000\u0000V\u0000\u0000\u0000\u0001\u0000\u0000\vfirstonpage\u0004bool\u001FUpp::RichTxt::Para::firstonpage\u0018mutable bool firstonpage\u0003Upp\vFIRSTONPAGE\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000W\u0000\u0000\u0000\u0002\u0000\u0000\u0000W\u0000\u0000\u0000\u001C\u0000\u0000\u0000W\u0000\u0000\u0000\u0001\u0000\u0000\u0004keep\u0004bool\u0018Upp::RichTxt::Para::keep\u0011mutable bool keep\u0003Upp\u0004KEEP\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000X\u0000\u0000\u0000\u0002\u0000\u0000\u0000X\u0000\u0000\u0000 \u0000\u0000\u0000X\u0000\u0000\u0000\u0001\u0000\u0000\bkeepnext\u0004bool\u001CUpp::RichTxt::Para::keepnext\u0015mutable bool keepnext\u0003Upp\bKEEPNEXT\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000Y\u0000\u0000\u0000\u0002\u0000\u0000\u0000Y\u0000\u0000\u0000\u001E\u0000\u0000\u0000Y\u0000\u0000\u0000\u0001\u0000\u0000\u0006orphan\u0004bool\u001AUpp::RichTxt::Para::orphan\u0013mutable bool orphan\u0003Upp\u0006ORPHAN\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000Z\u0000\u0000\u0000\u0002\u0000\u0000\u0000Z\u0000\u0000\u0000!\u0000\u0000\u0000Z\u0000\u0000\u0000\u0001\u0000\u0000\tnumbering\u0003int\u001DUpp::RichTxt::Para::numbering\u0015mutable int numbering\u0003Upp\tNUMBERING\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000[\u0000\u0000\u0000\u0002\u0000\u0000\u0000[\u0000\u0000\u0000\u001F\u0000\u0000\u0000[\u0000\u0000\u0000\u0001\u0000\u0000\achecked\u0004bool\u001BUpp::RichTxt::Para::checked\u0014mutable bool checked\u0003Upp\aCHECKED\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000\\\u0000\u0000\u0000\u0002\u0000\u0000\u0000\\\u0000\u0000\u0000\u001E\u0000\u0000\u0000\\\u0000\u0000\u0000\u0001\u0000\u0000\u0006haspos\u0004bool\u001AUpp::RichTxt::Para::haspos\u0013mutable bool haspos\u0003Upp\u0006HASPOS\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000]\u0000\u0000\u0000\u0002\u0000\u0000\u0000]\u0000\u0000\u0000!\u0000\u0000\u0000]\u0000\u0000\u0000\u0001\u0000\u0000\tnewhdrftr\u0004bool\u001DUpp::RichTxt::Para::newhdrftr\u0016mutable bool newhdrftr\u0003Upp\tNEWHDRFTR\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0015\u0000\u0000\u0000\a\u0000\u0000\u0000_\u0000\u0000\u0000\u0002\u0000\u0000\u0000_\u0000\u0000\u0000\u0019\u0000\u0000\u0000_\u0000\u0000\u0000\u0000\u0000\u0000\nInvalidate\rvoid () const%Upp::RichTxt::Para::Invalidate()const\u0017void Invalidate() const\u0003Upp\nINVALIDATE\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0018\u0000\u0000\u0000\u0002\u0000\u0000\u0000a\u0000\u0000\u0000\u0002\u0000\u0000\u0000a\u0000\u0000\u0000\u001C\u0000\u0000\u0000a\u0000\u0000\u0000\u0000\u0000\u0000\u0004Para\u0018void (const Para &, int))Upp::RichTxt::Para::Para(const Para&,int)\u001APara(const Para& src, int)\u0003Upp\u0004PARA\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0018\u0000\u0000\u0000\u0002\u0000\u0000\u0000b\u0000\u0000\u0000\u0002\u0000\u0000\u0000b\u0000\u0000\u0000W\u0000\u0000\u0000b\u0000\u0000\u0000\u0001\u0000\u0000\u0004Para\avoid ()\u001AUpp::RichTxt::Para::Para()\u0006Para()\u0003Upp\u0004PARA\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000e\u0000\u0000\u0000\u0001\u0000\u0000\u0000e\u0000\u0000\u0000\u0002\u0000\u0000\u0000h\u0000\u0000\u0000\u0001\u0000\u0000\u0004Part\u0012Upp::RichTxt::Part\u0012Upp::RichTxt::Part+Part : MoveableAndDeepCopyOption<Part>, Any\u0003Upp\u0004PART\u0012Upp::RichTxt::Part\u0012UPP::RICHTXT::PART'Upp::MoveableAndDeepCopyOption;Upp::Any\u0000\u0018\u0000\u0000\u0000\u0002\u0000\u0000\u0000f\u0000\u0000\u0000\u0002\u0000\u0000\u0000f\u0000\u0000\u0000\u001C\u0000\u0000\u0000f\u0000\u0000\u0000\u0000\u0000\u0000\u0004Part\u0018void (const Part &, int))Upp::RichTxt::Part::Part(const Part&,int)\u001APart(const Part& src, int)\u0003Upp\u0004PART\u0012Upp::RichTxt::Part\u0012UPP::RICHTXT::PART\u0000\u0000\u0018\u0000\u0000\u0000\u0002\u0000\u0000\u0000g\u0000\u0000\u0000\u0002\u0000\u0000\u0000g\u0000\u0000\u0000\b\u0000\u0000\u0000g\u0000\u0000\u0000\u0000\u0000\u0000\u0004Part\avoid ()\u001AUpp::RichTxt::Part::Part()\u0006Part()\u0003Upp\u0004PART\u0012Upp::RichTxt::Part\u0012UPP::RICHTXT::PART\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000j\u0000\u0000\u0000\u0001\u0000\u0000\u0000j\u0000\u0000\u0000\u001C\u0000\u0000\u0000j\u0000\u0000\u0000\u0001\u0000\u0000\u0004part\fVector<Part>\u0012Upp::RichTxt::part\u0011Vector<Part> part\u0003Upp\u0004PART\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000k\u0000\u0000\u0000\u0001\u0000\u0000\u0000k\u0000\u0000\u0000\"\u0000\u0000\u0000k\u0000\u0000\u0000\u0001\u0000\u0000\nheader_qtf\u0006String\u0018Upp::RichTxt::header_qtf\u0011String header_qtf\u0003Upp\nHEADER_QTF\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0006\u0000\u0000\u0000$\u0000\u0000\u0000k\u0000\u0000\u0000\u0001\u0000\u0000\u0000k\u0000\u0000\u0000.\u0000\u0000\u0000k\u0000\u0000\u0000\u0001\u0000\u0000\nfooter_qtf\u0006String\u0018Upp::RichTxt::footer_qtf\u0011String footer_qtf\u0003Upp\nFOOTER_QTF\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000l\u0000\u0000\u0000\u0001\u0000\u0000\u0000l\u0000\u0000\u0000\u001E\u0000\u0000\u0000l\u0000\u0000\u0000\u0001\u0000\u0000\u0006header\rOne<RichText>\u0014Upp::RichTxt::header\u001Cmutable One<RichText> header\u0003Upp\u0006HEADER\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0006\u0000\u0000\u0000 \u0000\u0000\u0000l\u0000\u0000\u0000\u0001\u0000\u0000\u0000l\u0000\u0000\u0000&\u0000\u0000\u0000l\u0000\u0000\u0000\u0001\u0000\u0000\u0006footer\rOne<RichText>\u0014Upp::RichTxt::footer\u001Cmutable One<RichText> footer\u0003Upp\u0006FOOTER\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000m\u0000\u0000\u0000\u0001\u0000\u0000\u0000m\u0000\u0000\u0000\u001E\u0000\u0000\u0000m\u0000\u0000\u0000\u0001\u0000\u0000\u0006length\u0003int\u0014Upp::RichTxt::length\u0012mutable int length\u0003Upp\u0006LENGTH\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000n\u0000\u0000\u0000\u0001\u0000\u0000\u0000n\u0000\u0000\u0000 \u0000\u0000\u0000n\u0000\u0000\u0000\u0001\u0000\u0000\btabcount\u0003int\u0016Upp::RichTxt::tabcount\u0014mutable int tabcount\u0003Upp\bTABCOUNT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0005\u0000\u0000\u0000\u0001\u0000\u0000\u0000p\u0000\u0000\u0000\u0001\u0000\u0000\u0000p\u0000\u0000\u0000\u0002\u0000\u0000\u0000r\u0000\u0000\u0000\u0001\u0000\u0000B(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:113:2)PUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:113:2)DUpp::RichTxt::(unnamed at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.)\u0004enum\u0003UppB(UNNAMED ENUM AT C:\\USERS\\SBLO\\AI-UPP\\UPPSRC\\RICHTEXT\\TXT.H:113:2)\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000q\u0000\u0000\u0000\u0002\u0000\u0000\u0000q\u0000\u0000\u0000\u0006\u0000\u0000\u0000q\u0000\u0000\u0000\u0001\u0000\u0000\u0004NONEPUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:113:2)\u0012Upp::RichTxt::NONE\u0004NONE\u0003Upp\u0004NONE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\b\u0000\u0000\u0000q\u0000\u0000\u0000\b\u0000\u0000\u0000q\u0000\u0000\u0000\r\u0000\u0000\u0000q\u0000\u0000\u0000\u0001\u0000\u0000\u0005SPARAPUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:113:2)\u0013Upp::RichTxt::SPARA\u0005SPARA\u0003Upp\u0005SPARA\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u000F\u0000\u0000\u0000q\u0000\u0000\u0000\u000F\u0000\u0000\u0000q\u0000\u0000\u0000\u0013\u0000\u0000\u0000q\u0000\u0000\u0000\u0001\u0000\u0000\u0004PARAPUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:113:2)\u0012Upp::RichTxt::PARA\u0004PARA\u0003Upp\u0004PARA\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0015\u0000\u0000\u0000q\u0000\u0000\u0000\u0015\u0000\u0000\u0000q\u0000\u0000\u0000\u0019\u0000\u0000\u0000q\u0000\u0000\u0000\u0001\u0000\u0000\u0004FROMPUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:113:2)\u0012Upp::RichTxt::FROM\u0004FROM\u0003Upp\u0004FROM\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u001B\u0000\u0000\u0000q\u0000\u0000\u0000\u001B\u0000\u0000\u0000q\u0000\u0000\u0000\u001E\u0000\u0000\u0000q\u0000\u0000\u0000\u0001\u0000\u0000\u0003ALLPUpp::RichTxt::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:113:2)\u0011Upp::RichTxt::ALL\u0003ALL\u0003Upp\u0003ALL\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0006\u0000\u0000\u0000\u0006\u0000\u0000\u0000t\u0000\u0000\u0000\u0001\u0000\u0000\u0000t\u0000\u0000\u0000\f\u0000\u0000\u0000t\u0000\u0000\u0000\u0001\u0000\u0000\u0006r_type\u0003int\u0014Upp::RichTxt::r_type\nint r_type\u0003Upp\u0006R_TYPE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0006\u0000\u0000\u0000\u0006\u0000\u0000\u0000u\u0000\u0000\u0000\u0001\u0000\u0000\u0000u\u0000\u0000\u0000\r\u0000\u0000\u0000u\u0000\u0000\u0000\u0001\u0000\u0000\ar_parti\u0003int\u0015Upp::RichTxt::r_parti\vint r_parti\u0003Upp\aR_PARTI\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0006\u0000\u0000\u0000\u0006\u0000\u0000\u0000v\u0000\u0000\u0000\u0001\u0000\u0000\u0000v\u0000\u0000\u0000\u000F\u0000\u0000\u0000v\u0000\u0000\u0000\u0001\u0000\u0000\tr_paraocx\u0003int\u0017Upp::RichTxt::r_paraocx\rint r_paraocx\u0003Upp\tR_PARAOCX\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0006\u0000\u0000\u0000\u0006\u0000\u0000\u0000w\u0000\u0000\u0000\u0001\u0000\u0000\u0000w\u0000\u0000\u0000\u000F\u0000\u0000\u0000w\u0000\u0000\u0000\u0001\u0000\u0000\tr_paraocy\u0003int\u0017Upp::RichTxt::r_paraocy\rint r_paraocy\u0003Upp\tR_PARAOCY\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0006\u0000\u0000\u0000\u0006\u0000\u0000\u0000x\u0000\u0000\u0000\u0001\u0000\u0000\u0000x\u0000\u0000\u0000\u0014\u0000\u0000\u0000x\u0000\u0000\u0000\u0001\u0000\u0000\u0006r_keep\u0004bool\u0014Upp::RichTxt::r_keep\vbool r_keep\u0003Upp\u0006R_KEEP\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0006\u0000\u0000\u0000\u0006\u0000\u0000\u0000y\u0000\u0000\u0000\u0001\u0000\u0000\u0000y\u0000\u0000\u0000\u0018\u0000\u0000\u0000y\u0000\u0000\u0000\u0001\u0000\u0000\nr_keepnext\u0004bool\u0018Upp::RichTxt::r_keepnext\u000Fbool r_keepnext\u0003Upp\nR_KEEPNEXT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0006\u0000\u0000\u0000\u0006\u0000\u0000\u0000z\u0000\u0000\u0000\u0001\u0000\u0000\u0000z\u0000\u0000\u0000\u0017\u0000\u0000\u0000z\u0000\u0000\u0000\u0001\u0000\u0000\tr_newpage\u0004bool\u0017Upp::RichTxt::r_newpage\u000Ebool r_newpage\u0003Upp\tR_NEWPAGE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0006\u0000\u0000\u0000\u0006\u0000\u0000\u0000{\u0000\u0000\u0000\u0001\u0000\u0000\u0000{\u0000\u0000\u0000\u001B\u0000\u0000\u0000{\u0000\u0000\u0000\u0001\u0000\u0000\rr_firstonpage\u0004bool\u001BUpp::RichTxt::r_firstonpage\u0012bool r_firstonpage\u0003Upp\rR_FIRSTONPAGE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\f\u0000\u0000\u0000}\u0000\u0000\u0000\u0001\u0000\u0000\u0000}\u0000\u0000\u0000\u0012\u0000\u0000\u0000}\u0000\u0000\u0000\u0000\u0000\u0000\u0004Init\avoid ()\u0014Upp::RichTxt::Init()\vvoid Init()\u0003Upp\u0004INIT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\f\u0000\u0000\u0000\u007F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u007F\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u007F\u0000\u0000\u0000\u0000\u0000\u0000\nInvalidate\avoid ()\u001AUpp::RichTxt::Invalidate()\u0011void Invalidate()\u0003Upp\nINVALIDATE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000!\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\nSetRefresh\nvoid (int)\u001DUpp::RichTxt::SetRefresh(int)\u001Avoid SetRefresh(int parai)\u0003Upp\nSETREFRESH\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000ESetRefreshFrom\nvoid (int)!Upp::RichTxt::SetRefreshFrom(int)\u001Evoid SetRefreshFrom(int parai)\u0003Upp\u000ESETREFRESHFROM\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000A\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\nRefreshAll\avoid ()\u001AUpp::RichTxt::RefreshAll()\u0011void RefreshAll()\u0003Upp\nREFRESHALL\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u00005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\nParaRemove\u0014void (int, int, int)%Upp::RichTxt::ParaRemove(int,int,int).void ParaRemove(int parai, int pos, int count)\u0003Upp\nPARAREMOVE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000=\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\nParaInsert!void (int, int, const RichPara &)1Upp::RichTxt::ParaInsert(int,int,const RichPara&)6void ParaInsert(int parai, int pos, const RichPara& p)\u0003Upp\nPARAINSERT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u00009\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\bParaCopy\u001ERichPara (int, int, int) const(Upp::RichTxt::ParaCopy(int,int,int)const6RichPara ParaCopy(int parai, int pos, int count) const\u0003Upp\bPARACOPY\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000=\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003Put/void (int, const RichPara &, const RichStyle &)7Upp::RichTxt::Put(int,const RichPara&,const RichStyle&)6void Put(int i, const RichPara& p, const RichStyle& s)\u0003Upp\u0003PUT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000>\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003Put0void (int, const RichPara &, const RichStyles &)8Upp::RichTxt::Put(int,const RichPara&,const RichStyles&)7void Put(int i, const RichPara& p, const RichStyles& s)\u0003Upp\u0003PUT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000J\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005Sync03void (const Para &, int, const RichContext &) const<Upp::RichTxt::Sync0(const Para&,int,const RichContext&)constBvoid Sync0(const Para& pp, int parti, const RichContext& rc) const\u0003Upp\u0005SYNC0\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u00009\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004Sync%void (int, const RichContext &) const/Upp::RichTxt::Sync(int,const RichContext&)const1void Sync(int parti, const RichContext& rc) const\u0003Upp\u0004SYNC\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\nBreaksPage3bool (PageY, const Para &, int, const Rect &) const@Upp::RichTxt::BreaksPage(PageY,const Para&,int,const Rect&)constHbool BreaksPage(PageY py, const Para& pp, int i, const Rect& page) const\u0003Upp\nBREAKSPAGE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000J\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\aAdvance.void (int, RichContext &, RichContext &) const9Upp::RichTxt::Advance(int,RichContext&,RichContext&)constBvoid Advance(int parti, RichContext& rc, RichContext& begin) const\u0003Upp\aADVANCE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000T\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\vGetAdvanced;RichContext (int, const RichContext &, RichContext &) constCUpp::RichTxt::GetAdvanced(int,const RichContext&,RichContext&)constSRichContext GetAdvanced(int parti, const RichContext& rc, RichContext& begin) const\u0003Upp\vGETADVANCED\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000D\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000EGetPartContext,RichContext (int, const RichContext &) const9Upp::RichTxt::GetPartContext(int,const RichContext&)constCRichContext GetPartContext(int parti, const RichContext& rc0) const\u0003Upp\u000EGETPARTCONTEXT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000n\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\fGetPartPageY&PageY (int, const RichContext &) const7Upp::RichTxt::GetPartPageY(int,const RichContext&)const:PageY GetPartPageY(int parti, const RichContext& rc) const\u0003Upp\fGETPARTPAGEY\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0006ParaOp\u0014Upp::RichTxt::ParaOp\u0014Upp::RichTxt::ParaOp\u0006ParaOp\u0003Upp\u0006PARAOP\u0014Upp::RichTxt::ParaOp\u0014UPP::RICHTXT::PARAOP\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000/\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\noperator()\u0016bool (RichTxt::Para &)0Upp::RichTxt::ParaOp::operator()(RichTxt::Para&)!bool operator()(RichTxt::Para& p)\u0003Upp\nOPERATOR()\u0014Upp::RichTxt::ParaOp\u0014UPP::RICHTXT::PARAOP\u0000\u0000\u0019\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\a~ParaOp\u0010void () noexcept\u0019Upp::RichTxt::ParaOp::~()\t~ParaOp()\u0003Upp\a~PARAOP\u0014Upp::RichTxt::ParaOp\u0014UPP::RICHTXT::PARAOP\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000$\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006Update\u000Fbool (ParaOp &)\u001DUpp::RichTxt::Update(ParaOp&)\u0017bool Update(ParaOp& op)\u0003Upp\u0006UPDATE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u00001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\bGetText0\u0016RichTxt &(int &, bool)!Upp::RichTxt::GetText0(int&,bool)(RichTxt& GetText0(int& pos, bool update)\u0003Upp\bGETTEXT0\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000)\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\rGetUpdateText\u0010RichTxt &(int &)!Upp::RichTxt::GetUpdateText(int&) RichTxt& GetUpdateText(int& pos)\u0003Upp\rGETUPDATETEXT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000.\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\fGetConstText\u001Cconst RichTxt &(int &) const%Upp::RichTxt::GetConstText(int&)const+const RichTxt& GetConstText(int& pos) const\u0003Upp\fGETCONSTTEXT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u00003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\tGetTable0\u0016RichTable &(int, bool)!Upp::RichTxt::GetTable0(int,bool),RichTable& GetTable0(int table, bool update)\u0003Upp\tGETTABLE0\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000+\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000EGetUpdateTable\u0010RichTable &(int)!Upp::RichTxt::GetUpdateTable(int)$RichTable& GetUpdateTable(int table)\u0003Upp\u000EGETUPDATETABLE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000Q\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012GetTableUpdateText)RichTxt &(int, const RichStyles &, int &)<Upp::RichTxt::GetTableUpdateText(int,const RichStyles&,int&)HRichTxt& GetTableUpdateText(int table, const RichStyles& style, int& pi)\u0003Upp\u0012GETTABLEUPDATETEXT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\u0000 \u0000\u0000\u0000J\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0003Get.RichPara (int, const RichStyles &, bool) const2Upp::RichTxt::Get(int,const RichStyles&,bool)constARichPara Get(int parti, const RichStyles& s, bool usecache) const\u0003Upp\u0003GET\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000¡\u0000\u0000\u0000\u0001\u0000\u0000\u0000¡\u0000\u0000\u0000_\u0000\u0000\u0000¡\u0000\u0000\u0000\u0000\u0000\u0000\u0003Get<RichPara (int, const Uuid &, const RichStyles &, bool) const>Upp::RichTxt::Get(int,const Uuid&,const RichStyles&,bool)constVRichPara Get(int parai, const Uuid& styleid, const RichStyles& s, bool usecache) const\u0003Upp\u0003GET\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000¢\u0000\u0000\u0000\u0001\u0000\u0000\u0000¢\u0000\u0000\u0000M\u0000\u0000\u0000¢\u0000\u0000\u0000\u0000\u0000\u0000\u0003Get-RichPara (int, const RichStyle &, bool) const1Upp::RichTxt::Get(int,const RichStyle&,bool)constDRichPara Get(int parai, const RichStyle& style, bool usecache) const\u0003Upp\u0003GET\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000¤\u0000\u0000\u0000\u0001\u0000\u0000\u0000¤\u0000\u0000\u0000f\u0000\u0000\u0000¤\u0000\u0000\u0000\u0000\u0000\u0000\rCombineFormat?void (FormatInfo &, int, int, bool &, const RichStyles &) constMUpp::RichTxt::CombineFormat(FormatInfo&,int,int,bool&,const RichStyles&)const^void CombineFormat(FormatInfo& f, int pi, int pi2, bool& first, const RichStyles& style) const\u0003Upp\rCOMBINEFORMAT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000¥\u0000\u0000\u0000\u0001\u0000\u0000\u0000¥\u0000\u0000\u0000T\u0000\u0000\u0000¥\u0000\u0000\u0000\u0000\u0000\u0001\nApplyStyle9void (const FormatInfo &, RichPara &, const RichStyles &)GUpp::RichTxt::ApplyStyle(const FormatInfo&,RichPara&,const RichStyles&)Sstatic void ApplyStyle(const FormatInfo& fi, RichPara& pa, const RichStyles& style)\u0003Upp\nAPPLYSTYLE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000¦\u0000\u0000\u0000\u0001\u0000\u0000\u0000¦\u0000\u0000\u0000O\u0000\u0000\u0000¦\u0000\u0000\u0000\u0000\u0000\u0001\u0005Apply9void (const FormatInfo &, RichPara &, const RichStyles &)BUpp::RichTxt::Apply(const FormatInfo&,RichPara&,const RichStyles&)Nstatic void Apply(const FormatInfo& fi, RichPara& pa, const RichStyles& style)\u0003Upp\u0005APPLY\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000§\u0000\u0000\u0000\u0001\u0000\u0000\u0000§\u0000\u0000\u0000W\u0000\u0000\u0000§\u0000\u0000\u0000\u0000\u0000\u0000\vApplyFormat7void (const FormatInfo &, int, int, const RichStyles &)FUpp::RichTxt::ApplyFormat(const FormatInfo&,int,int,const RichStyles&)Ovoid ApplyFormat(const FormatInfo& f, int pi, int pi2, const RichStyles& style)\u0003Upp\vAPPLYFORMAT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000¨\u0000\u0000\u0000\u0001\u0000\u0000\u0000¨\u0000\u0000\u0000T\u0000\u0000\u0000¨\u0000\u0000\u0000\u0000\u0000\u0000\nSaveFormat6void (Formating &, int, int, const RichStyles &) constCUpp::RichTxt::SaveFormat(Formating&,int,int,const RichStyles&)constLvoid SaveFormat(Formating& f, int p1, int p2, const RichStyles& style) const\u0003Upp\nSAVEFORMAT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000©\u0000\u0000\u0000\u0001\u0000\u0000\u0000©\u0000\u0000\u0000[\u0000\u0000\u0000©\u0000\u0000\u0000\u0000\u0000\u0000\rRestoreFormat8void (int, const Formating &, int &, const RichStyles &)HUpp::RichTxt::RestoreFormat(int,const Formating&,int&,const RichStyles&)Svoid RestoreFormat(int pi, const Formating& info, int& ii, const RichStyles& style)\u0003Upp\rRESTOREFORMAT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000«\u0000\u0000\u0000\u0001\u0000\u0000\u0000«\u0000\u0000\u00003\u0000\u0000\u0000«\u0000\u0000\u0000\u0000\u0000\u0000\u000FGetAllLanguages\u0019void (Index<int> &) const*Upp::RichTxt::GetAllLanguages(Index&)const+void GetAllLanguages(Index<int>& all) const\u0003Upp\u000FGETALLLANGUAGES\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000±\u0000\u0000\u0000\u0001\u0000\u0000\u0000±\u0000\u0000\u0000,\u0000\u0000\u0000±\u0000\u0000\u0000\u0000\u0000\u0000\rComputeLength\fint () const\"Upp::RichTxt::ComputeLength()const\u0019int ComputeLength() const\u0003Upp\rCOMPUTELENGTH\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000³\u0000\u0000\u0000\u0001\u0000\u0000\u0000³\u0000\u0000\u0000i\u0000\u0000\u0000³\u0000\u0000\u0000\u0000\u0000\u0000\nGetRichPos9void (int, RichPos &, int, int, const RichStyles &) constEUpp::RichTxt::GetRichPos(int,RichPos&,int,int,const RichStyles&)constWvoid GetRichPos(int pos, RichPos& rp, int ti, int maxlevel, const RichStyles& st) const\u0003Upp\nGETRICHPOS\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000´\u0000\u0000\u0000\u0001\u0000\u0000\u0000´\u0000\u0000\u0000A\u0000\u0000\u0000´\u0000\u0000\u0000\u0000\u0000\u0000\u000EGetFirstFormat+RichPara::Format (const RichStyles &) const4Upp::RichTxt::GetFirstFormat(const RichStyles&)const;RichPara::Format GetFirstFormat(const RichStyles& st) const\u0003Upp\u000EGETFIRSTFORMAT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000¶\u0000\u0000\u0000\u0001\u0000\u0000\u0000¶\u0000\u0000\u00003\u0000\u0000\u0000¶\u0000\u0000\u0000\u0000\u0000\u0000\u0006GetTop\u0019PageY (RichContext) const&Upp::RichTxt::GetTop(RichContext)const\"PageY GetTop(RichContext rc) const\u0003Upp\u0006GETTOP\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000·\u0000\u0000\u0000\u0001\u0000\u0000\u0000·\u0000\u0000\u00006\u0000\u0000\u0000·\u0000\u0000\u0000\u0000\u0000\u0000\tGetHeight\u0019PageY (RichContext) const)Upp::RichTxt::GetHeight(RichContext)const%PageY GetHeight(RichContext rc) const\u0003Upp\tGETHEIGHT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000¸\u0000\u0000\u0000\u0001\u0000\u0000\u0000¸\u0000\u0000\u0000;\u0000\u0000\u0000¸\u0000\u0000\u0000\u0000\u0000\u0000\bGetWidth\u001Eint (const RichStyles &) const.Upp::RichTxt::GetWidth(const RichStyles&)const(int GetWidth(const RichStyles& st) const\u0003Upp\bGETWIDTH\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000¹\u0000\u0000\u0000\u0001\u0000\u0000\u0000¹\u0000\u0000\u0000U\u0000\u0000\u0000¹\u0000\u0000\u0000\u0000\u0000\u0000\u0005Paint9void (PageDraw &, RichContext &, const PaintInfo &) constAUpp::RichTxt::Paint(PageDraw&,RichContext&,const PaintInfo&)constCvoid Paint(PageDraw& w, RichContext& rc, const PaintInfo& pi) const\u0003Upp\u0005PAINT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000º\u0000\u0000\u0000\u0001\u0000\u0000\u0000º\u0000\u0000\u0000>\u0000\u0000\u0000º\u0000\u0000\u0000\u0000\u0000\u0000\bGetCaret\"RichCaret (int, RichContext) const,Upp::RichTxt::GetCaret(int,RichContext)const1RichCaret GetCaret(int pos, RichContext rc) const\u0003Upp\bGETCARET\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000»\u0000\u0000\u0000\u0001\u0000\u0000\u0000»\u0000\u0000\u0000C\u0000\u0000\u0000»\u0000\u0000\u0000\u0000\u0000\u0000\u0006GetPos#int (int, PageY, RichContext) const0Upp::RichTxt::GetPos(int,PageY,RichContext)const0int GetPos(int x, PageY y, RichContext rc) const\u0003Upp\u0006GETPOS\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000¼\u0000\u0000\u0000\u0001\u0000\u0000\u0000¼\u0000\u0000\u0000R\u0000\u0000\u0000¼\u0000\u0000\u0000\u0000\u0000\u0000\vGetVertMove&int (int, int, RichContext, int) const7Upp::RichTxt::GetVertMove(int,int,RichContext,int)const?int GetVertMove(int pos, int gx, RichContext rc, int dir) const\u0003Upp\vGETVERTMOVE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000½\u0000\u0000\u0000\u0001\u0000\u0000\u0000½\u0000\u0000\u0000U\u0000\u0000\u0000½\u0000\u0000\u0000\u0000\u0000\u0000\tGetHotPos/RichHotPos (int, PageY, int, RichContext) const7Upp::RichTxt::GetHotPos(int,PageY,int,RichContext)constIRichHotPos GetHotPos(int x, PageY y, int tolerance, RichContext rc) const\u0003Upp\tGETHOTPOS\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000¿\u0000\u0000\u0000\u0001\u0000\u0000\u0000¿\u0000\u0000\u0000c\u0000\u0000\u0000¿\u0000\u0000\u0000\u0000\u0000\u0000\fGatherValPos8void (Vector<RichValPos> &, RichContext, int, int) const<Upp::RichTxt::GatherValPos(Vector&,RichContext,int,int)constQvoid GatherValPos(Vector<RichValPos>& f, RichContext rc, int pos, int type) const\u0003Upp\fGATHERVALPOS\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000Á\u0000\u0000\u0000\u0001\u0000\u0000\u0000Á\u0000\u0000\u0000Z\u0000\u0000\u0000Á\u0000\u0000\u0000\u0000\u0000\u0000\u000EEvaluateFields5bool (const RichStyles &, VectorMap<String, Value> &):Upp::RichTxt::EvaluateFields(const RichStyles&,VectorMap&)Hbool EvaluateFields(const RichStyles& s, VectorMap<String, Value>& vars)\u0003Upp\u000EEVALUATEFIELDS\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000Ã\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ã\u0000\u0000\u0000\\\u0000\u0000\u0000Ã\u0000\u0000\u0000\u0000\u0000\u0000\tApplyZoom3void (Zoom, const RichStyles &, const RichStyles &)AUpp::RichTxt::ApplyZoom(Zoom,const RichStyles&,const RichStyles&)Jvoid ApplyZoom(Zoom z, const RichStyles& ostyle, const RichStyles& zstyle)\u0003Upp\tAPPLYZOOM\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0005\u0000\u0000\u0000\u0006\u0000\u0000\u0000Æ\u0000\u0000\u0000\u0001\u0000\u0000\u0000Æ\u0000\u0000\u0000)\u0000\u0000\u0000Æ\u0000\u0000\u0000\u0001\u0000\u0000\nValPosType\u0018Upp::RichTxt::ValPosType\u0018Upp::RichTxt::ValPosType\u000Fenum ValPosType\u0003Upp\nVALPOSTYPE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u0013\u0000\u0000\u0000Æ\u0000\u0000\u0000\u0013\u0000\u0000\u0000Æ\u0000\u0000\u0000\u0019\u0000\u0000\u0000Æ\u0000\u0000\u0000\u0001\u0000\u0000\u0006LABELS\u0018Upp::RichTxt::ValPosType\u0014Upp::RichTxt::LABELS\u0006LABELS\u0003Upp\u0006LABELS\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\a\u0000\u0000\u0000\u001B\u0000\u0000\u0000Æ\u0000\u0000\u0000\u001B\u0000\u0000\u0000Æ\u0000\u0000\u0000'\u0000\u0000\u0000Æ\u0000\u0000\u0000\u0001\u0000\u0000\fINDEXENTRIES\u0018Upp::RichTxt::ValPosType\u001AUpp::RichTxt::INDEXENTRIES\fINDEXENTRIES\u0003Upp\fINDEXENTRIES\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000È\u0000\u0000\u0000\u0001\u0000\u0000\u0000È\u0000\u0000\u0000W\u0000\u0000\u0000È\u0000\u0000\u0000\u0001\u0000\u0000\fGetPartCount\fint () const!Upp::RichTxt::GetPartCount()const\u0018int GetPartCount() const\u0003Upp\fGETPARTCOUNT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000É\u0000\u0000\u0000\u0001\u0000\u0000\u0000É\u0000\u0000\u0000Z\u0000\u0000\u0000É\u0000\u0000\u0000\u0001\u0000\u0000\u0006IsPara\u0010bool (int) const\u001EUpp::RichTxt::IsPara(int)const\u0018bool IsPara(int i) const\u0003Upp\u0006ISPARA\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000Ê\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ê\u0000\u0000\u0000+\u0000\u0000\u0000Ê\u0000\u0000\u0000\u0000\u0000\u0000\aIsTable\u0010bool (int) const\u001FUpp::RichTxt::IsTable(int)const\u0019bool IsTable(int i) const\u0003Upp\aISTABLE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000Ë\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ë\u0000\u0000\u00002\u0000\u0000\u0000Ë\u0000\u0000\u0000\u0000\u0000\u0000\rGetPartLength\u000Fint (int) const%Upp::RichTxt::GetPartLength(int)const\u001Fint GetPartLength(int pi) const\u0003Upp\rGETPARTLENGTH\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000Ì\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ì\u0000\u0000\u0000/\u0000\u0000\u0000Ì\u0000\u0000\u0000\u0000\u0000\u0000\bFindPart\u0011int (int &) const!Upp::RichTxt::FindPart(int&)const\u001Cint FindPart(int& pos) const\u0003Upp\bFINDPART\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000Í\u0000\u0000\u0000\u0001\u0000\u0000\u0000Í\u0000\u0000\u0000/\u0000\u0000\u0000Í\u0000\u0000\u0000\u0000\u0000\u0000\nGetPartPos\u000Fint (int) const\"Upp::RichTxt::GetPartPos(int)const\u001Cint GetPartPos(int pi) const\u0003Upp\nGETPARTPOS\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000Ï\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ï\u0000\u0000\u0000<\u0000\u0000\u0000Ï\u0000\u0000\u0000\u0000\u0000\u0000\u0003Get(RichPara (int, const RichStyles &) const-Upp::RichTxt::Get(int,const RichStyles&)const.RichPara Get(int i, const RichStyles& s) const\u0003Upp\u0003GET\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000Ð\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ð\u0000\u0000\u0000Q\u0000\u0000\u0000Ð\u0000\u0000\u0000\u0000\u0000\u0000\u0003Get6RichPara (int, const Uuid &, const RichStyles &) const9Upp::RichTxt::Get(int,const Uuid&,const RichStyles&)constCRichPara Get(int i, const Uuid& styleid, const RichStyles& s) const\u0003Upp\u0003GET\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000Ñ\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ñ\u0000\u0000\u0000?\u0000\u0000\u0000Ñ\u0000\u0000\u0000\u0000\u0000\u0000\u0003Get'RichPara (int, const RichStyle &) const,Upp::RichTxt::Get(int,const RichStyle&)const1RichPara Get(int i, const RichStyle& style) const\u0003Upp\u0003GET\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000Ò\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ò\u0000\u0000\u0000c\u0000\u0000\u0000Ò\u0000\u0000\u0000\u0001\u0000\u0000\fGetParaStyle\u0010Uuid (int) const$Upp::RichTxt::GetParaStyle(int)const\u001EUuid GetParaStyle(int i) const\u0003Upp\fGETPARASTYLE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000Ó\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ó\u0000\u0000\u0000:\u0000\u0000\u0000Ó\u0000\u0000\u0000\u0000\u0000\u0000\fSetParaStyle\u0018void (int, const Uuid &)+Upp::RichTxt::SetParaStyle(int,const Uuid&)(void SetParaStyle(int i, const Uuid& si)\u0003Upp\fSETPARASTYLE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000Õ\u0000\u0000\u0000\u0001\u0000\u0000\u0000Õ\u0000\u0000\u0000,\u0000\u0000\u0000Õ\u0000\u0000\u0000\u0000\u0000\u0000\bGetTable\u001Cconst RichTable &(int) const Upp::RichTxt::GetTable(int)const&const RichTable& GetTable(int i) const\u0003Upp\bGETTABLE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000×\u0000\u0000\u0000\u0001\u0000\u0000\u0000×\u0000\u0000\u0000(\u0000\u0000\u0000×\u0000\u0000\u0000\u0000\u0000\u0000\tGetLength\fint () const\u001EUpp::RichTxt::GetLength()const\u0015int GetLength() const\u0003Upp\tGETLENGTH\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000Ù\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ù\u0000\u0000\u0000,\u0000\u0000\u0000Ù\u0000\u0000\u0000\u0000\u0000\u0000\rGetTableCount\fint () const\"Upp::RichTxt::GetTableCount()const\u0019int GetTableCount() const\u0003Upp\rGETTABLECOUNT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000Ú\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ú\u0000\u0000\u00005\u0000\u0000\u0000Ú\u0000\u0000\u0000\u0000\u0000\u0000\rGetConstTable\u001Cconst RichTable &(int) const%Upp::RichTxt::GetConstTable(int)const/const RichTable& GetConstTable(int table) const\u0003Upp\rGETCONSTTABLE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000Ü\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ü\u0000\u0000\u0000&\u0000\u0000\u0000Ü\u0000\u0000\u0000\u0000\u0000\u0000\aIsEmpty\rbool () const\u001CUpp::RichTxt::IsEmpty()const\u0014bool IsEmpty() const\u0003Upp\aISEMPTY\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000Þ\u0000\u0000\u0000\u0001\u0000\u0000\u0000Þ\u0000\u0000\u0000G\u0000\u0000\u0000Þ\u0000\u0000\u0000\u0000\u0000\u0000\nGetCellPos!RichCellPos (int, int, int) const*Upp::RichTxt::GetCellPos(int,int,int)const<RichCellPos GetCellPos(int table, int row, int column) const\u0003Upp\nGETCELLPOS\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000ß\u0000\u0000\u0000\u0001\u0000\u0000\u0000ß\u0000\u0000\u0000;\u0000\u0000\u0000ß\u0000\u0000\u0000\u0000\u0000\u0000\nGetCellPos\u001ERichCellPos (int, Point) const(Upp::RichTxt::GetCellPos(int,Point)const0RichCellPos GetCellPos(int table, Point p) const\u0003Upp\nGETCELLPOS\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000á\u0000\u0000\u0000\u0001\u0000\u0000\u0000á\u0000\u0000\u0000\u001E\u0000\u0000\u0000á\u0000\u0000\u0000\u0000\u0000\u0000\u0005Clear\avoid ()\u0015Upp::RichTxt::Clear()\fvoid Clear()\u0003Upp\u0005CLEAR\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000ã\u0000\u0000\u0000\u0001\u0000\u0000\u0000ã\u0000\u0000\u0000&\u0000\u0000\u0000ã\u0000\u0000\u0000\u0000\u0000\u0000\rClearSpelling\avoid ()\u001DUpp::RichTxt::ClearSpelling()\u0014void ClearSpelling()\u0003Upp\rCLEARSPELLING\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000å\u0000\u0000\u0000\u0001\u0000\u0000\u0000å\u0000\u0000\u0000<\u0000\u0000\u0000å\u0000\u0000\u0000\u0000\u0000\u0000\aSetPick\u0018void (int, RichTable &&)&Upp::RichTxt::SetPick(int,RichTable&&)*void SetPick(int parti, RichTable&& table)\u0003Upp\aSETPICK\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000æ\u0000\u0000\u0000\u0001\u0000\u0000\u0000æ\u0000\u0000\u0000l\u0000\u0000\u0000æ\u0000\u0000\u0000\u0001\u0000\u0000\aCatPick\u0013void (RichTable &&)\"Upp::RichTxt::CatPick(RichTable&&)\u001Fvoid CatPick(RichTable&& table)\u0003Upp\aCATPICK\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000ç\u0000\u0000\u0000\u0001\u0000\u0000\u0000ç\u0000\u0000\u0000M\u0000\u0000\u0000ç\u0000\u0000\u0000\u0000\u0000\u0000\u0003Set0void (int, const RichPara &, const RichStyles &)8Upp::RichTxt::Set(int,const RichPara&,const RichStyles&);void Set(int parai, const RichPara& p, const RichStyles& s)\u0003Upp\u0003SET\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000è\u0000\u0000\u0000\u0001\u0000\u0000\u0000è\u0000\u0000\u0000a\u0000\u0000\u0000è\u0000\u0000\u0000\u0001\u0000\u0000\u0003Cat+void (const RichPara &, const RichStyles &)4Upp::RichTxt::Cat(const RichPara&,const RichStyles&)0void Cat(const RichPara& p, const RichStyles& s)\u0003Upp\u0003CAT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000ê\u0000\u0000\u0000\u0001\u0000\u0000\u0000ê\u0000\u0000\u0000,\u0000\u0000\u0000ê\u0000\u0000\u0000\u0000\u0000\u0000\nRemovePart\nvoid (int)\u001DUpp::RichTxt::RemovePart(int)\u001Avoid RemovePart(int parti)\u0003Upp\nREMOVEPART\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000ì\u0000\u0000\u0000\u0001\u0000\u0000\u0000ì\u0000\u0000\u0000\"\u0000\u0000\u0000ì\u0000\u0000\u0000\u0000\u0000\u0000\tNormalize\avoid ()\u0019Upp::RichTxt::Normalize()\u0010void Normalize()\u0003Upp\tNORMALIZE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000î\u0000\u0000\u0000\u0001\u0000\u0000\u0000î\u0000\u0000\u0000.\u0000\u0000\u0000î\u0000\u0000\u0000\u0000\u0000\u0000\u000FGetAllLanguages\u0014Vector<int> () const$Upp::RichTxt::GetAllLanguages()const#Vector<int> GetAllLanguages() const\u0003Upp\u000FGETALLLANGUAGES\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000ï\u0000\u0000\u0000\u0001\u0000\u0000\u0000ï\u0000\u0000\u0000V\u0000\u0000\u0000ï\u0000\u0000\u0000\u0000\u0000\u0000\fGetPlainText\u001AWString (bool, bool) const*Upp::RichTxt::GetPlainText(bool,bool)constGWString GetPlainText(bool withcr = true, bool allow_tabs = false) const\u0003Upp\fGETPLAINTEXT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000ñ\u0000\u0000\u0000\u0001\u0000\u0000\u0000ñ\u0000\u0000\u00004\u0000\u0000\u0000ñ\u0000\u0000\u0000\u0000\u0000\u0000\fSetHeaderQtf\u0013void (const char *)'Upp::RichTxt::SetHeaderQtf(const char*)\"void SetHeaderQtf(const char *qtf)\u0003Upp\fSETHEADERQTF\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000ò\u0000\u0000\u0000\u0001\u0000\u0000\u0000ò\u0000\u0000\u00004\u0000\u0000\u0000ò\u0000\u0000\u0000\u0000\u0000\u0000\fSetFooterQtf\u0013void (const char *)'Upp::RichTxt::SetFooterQtf(const char*)\"void SetFooterQtf(const char *qtf)\u0003Upp\fSETFOOTERQTF\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000ó\u0000\u0000\u0000\u0001\u0000\u0000\u0000ó\u0000\u0000\u0000Y\u0000\u0000\u0000ó\u0000\u0000\u0000\u0001\u0000\u0000\fGetHeaderQtf\u000FString () const!Upp::RichTxt::GetHeaderQtf()const\u001BString GetHeaderQtf() const\u0003Upp\fGETHEADERQTF\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000ô\u0000\u0000\u0000\u0001\u0000\u0000\u0000ô\u0000\u0000\u0000Y\u0000\u0000\u0000ô\u0000\u0000\u0000\u0001\u0000\u0000\fGetFooterQtf\u000FString () const!Upp::RichTxt::GetFooterQtf()const\u001BString GetFooterQtf() const\u0003Upp\fGETFOOTERQTF\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000õ\u0000\u0000\u0000\u0001\u0000\u0000\u0000õ\u0000\u0000\u0000Z\u0000\u0000\u0000õ\u0000\u0000\u0000\u0001\u0000\u0000\vClearHeader\avoid ()\u001BUpp::RichTxt::ClearHeader()\u0012void ClearHeader()\u0003Upp\vCLEARHEADER\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000ö\u0000\u0000\u0000\u0001\u0000\u0000\u0000ö\u0000\u0000\u0000Z\u0000\u0000\u0000ö\u0000\u0000\u0000\u0001\u0000\u0000\vClearFooter\avoid ()\u001BUpp::RichTxt::ClearFooter()\u0012void ClearFooter()\u0003Upp\vCLEARFOOTER\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000ø\u0000\u0000\u0000\u0001\u0000\u0000\u0000ø\u0000\u0000\u0000\u0002\u0000\u0000\u0000ü\u0000\u0000\u0000\u0001\u0000\u0000\u000EUpdateIterator\u001CUpp::RichTxt::UpdateIterator\u001CUpp::RichTxt::UpdateIterator\u000EUpdateIterator\u0003Upp\u000EUPDATEITERATOR\u001CUpp::RichTxt::UpdateIterator\u001CUPP::RICHTXT::UPDATEITERATOR\u0000\u0000\u0005\u0000\u0000\u0000\u0002\u0000\u0000\u0000ù\u0000\u0000\u0000\u0002\u0000\u0000\u0000ù\u0000\u0000\u0000-\u0000\u0000\u0000ù\u0000\u0000\u0000\u0001\u0000\u0000B(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:250:3)`Upp::RichTxt::UpdateIterator::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:250:3)TUpp::RichTxt::UpdateIterator::(unnamed at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.)\u0004enum\u0003UppB(UNNAMED ENUM AT C:\\USERS\\SBLO\\AI-UPP\\UPPSRC\\RICHTEXT\\TXT.H:250:3)\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\t\u0000\u0000\u0000ù\u0000\u0000\u0000\t\u0000\u0000\u0000ù\u0000\u0000\u0000\u0015\u0000\u0000\u0000ù\u0000\u0000\u0000\u0001\u0000\u0000\bCONTINUE`Upp::RichTxt::UpdateIterator::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:250:3)&Upp::RichTxt::UpdateIterator::CONTINUE\bCONTINUE\u0003Upp\bCONTINUE\u001CUpp::RichTxt::UpdateIterator\u001CUPP::RICHTXT::UPDATEITERATOR\u0000\u0000\a\u0000\u0000\u0000\u0017\u0000\u0000\u0000ù\u0000\u0000\u0000\u0017\u0000\u0000\u0000ù\u0000\u0000\u0000\u001F\u0000\u0000\u0000ù\u0000\u0000\u0000\u0001\u0000\u0000\u0004STOP`Upp::RichTxt::UpdateIterator::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:250:3)\"Upp::RichTxt::UpdateIterator::STOP\u0004STOP\u0003Upp\u0004STOP\u001CUpp::RichTxt::UpdateIterator\u001CUPP::RICHTXT::UPDATEITERATOR\u0000\u0000\a\u0000\u0000\u0000!\u0000\u0000\u0000ù\u0000\u0000\u0000!\u0000\u0000\u0000ù\u0000\u0000\u0000+\u0000\u0000\u0000ù\u0000\u0000\u0000\u0001\u0000\u0000\u0006UPDATE`Upp::RichTxt::UpdateIterator::(unnamed enum at C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Txt.h:250:3)$Upp::RichTxt::UpdateIterator::UPDATE\u0006UPDATE\u0003Upp\u0006UPDATE\u001CUpp::RichTxt::UpdateIterator\u001CUPP::RICHTXT::UPDATEITERATOR\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000ú\u0000\u0000\u0000\u0002\u0000\u0000\u0000ú\u0000\u0000\u00005\u0000\u0000\u0000ú\u0000\u0000\u0000\u0000\u0001\u0000\noperator()\u0015int (int, RichPara &)7Upp::RichTxt::UpdateIterator::operator()(int,RichPara&)'int operator()(int pos, RichPara& para)\u0003Upp\nOPERATOR()\u001CUpp::RichTxt::UpdateIterator\u001CUPP::RICHTXT::UPDATEITERATOR\u0000\u0000\u0019\u0000\u0000\u0000\n\u0000\u0000\u0000û\u0000\u0000\u0000\u0002\u0000\u0000\u0000û\u0000\u0000\u0000\u001E\u0000\u0000\u0000û\u0000\u0000\u0000\u0001\u0000\u0000\u000F~UpdateIterator\u0010void () noexcept!Upp::RichTxt::UpdateIterator::~()\u0011~UpdateIterator()\u0003Upp\u000F~UPDATEITERATOR\u001CUpp::RichTxt::UpdateIterator\u001CUPP::RICHTXT::UPDATEITERATOR\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000ý\u0000\u0000\u0000\u0001\u0000\u0000\u0000ý\u0000\u0000\u0000P\u0000\u0000\u0000ý\u0000\u0000\u0000\u0000\u0000\u0000\aIterate0bool (UpdateIterator &, int, const RichStyles &)<Upp::RichTxt::Iterate(UpdateIterator&,int,const RichStyles&)>bool Iterate(UpdateIterator& r, int gpos, const RichStyles& s)\u0003Upp\aITERATE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000ÿ\u0000\u0000\u0000\u0001\u0000\u0000\u0000ÿ\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0002\u0001\u0000\u0000\u0001\u0000\u0000\bIterator\u0016Upp::RichTxt::Iterator\u0016Upp::RichTxt::Iterator\bIterator\u0003Upp\bITERATOR\u0016Upp::RichTxt::Iterator\u0016UPP::RICHTXT::ITERATOR\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0001\u0000\u0000<\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\noperator()\u001Cbool (int, const RichPara &)7Upp::RichTxt::Iterator::operator()(int,const RichPara&).bool operator()(int pos, const RichPara& para)\u0003Upp\nOPERATOR()\u0016Upp::RichTxt::Iterator\u0016UPP::RICHTXT::ITERATOR\u0000\u0000\u0019\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0001\u0000\u0000\u0002\u0000\u0000\u0000\u0001\u0001\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0001\u0000\u0000\u0001\u0000\u0000\t~Iterator\u0010void () noexcept\u001BUpp::RichTxt::Iterator::~()\v~Iterator()\u0003Upp\t~ITERATOR\u0016Upp::RichTxt::Iterator\u0016UPP::RICHTXT::ITERATOR\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0001\u0000\u0000P\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0000\aIterate0bool (Iterator &, int, const RichStyles &) const;Upp::RichTxt::Iterate(Iterator&,int,const RichStyles&)const>bool Iterate(Iterator& r, int gpos, const RichStyles& s) const\u0003Upp\aITERATE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0005\u0001\u0000\u0000!\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0000\aRichTxt\u001Bvoid (const RichTxt &, int))Upp::RichTxt::RichTxt(const RichTxt&,int) RichTxt(const RichTxt& src, int)\u0003Upp\aRICHTXT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0001\u0000\u0000\n\u0000\u0000\u0000\u0006\u0001\u0000\u0000\u0000\u0000\u0000\aRichTxt\avoid ()\u0017Upp::RichTxt::RichTxt()\tRichTxt()\u0003Upp\aRICHTXT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0001\u0000\u0000\u0000\b\u0001\u0000\u0000\u0001\u0000\u0000\u0000\b\u0001\u0000\u0000\u0016\u0000\u0000\u0000\b\u0001\u0000\u0000\u0001\u0000\u0000\toperator=%RichTxt &(RichTxt &&) noexcept(false),Upp::RichTxt::operator=(RichTxt&&)()=default\u0011RichTxt& operator\u0003Upp\tOPERATOR=\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000\b\u0001\u0000\u0000\u0001\u0000\u0000\u0000\b\u0001\u0000\u0000\u0016\u0000\u0000\u0000\b\u0001\u0000\u0000\u0001\u0000\u0000\aRichTxt!void (RichTxt &&) noexcept(false)*Upp::RichTxt::RichTxt(RichTxt&&)()=default\u001ARichTxt(RichTxt&&) (false)\u0003Upp\aRICHTXT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000\v\u0001\u0000\u0000\u0001\u0000\u0000\u0000\v\u0001\u0000\u0000\u001D\u0000\u0000\u0000\v\u0001\u0000\u0000\u0000\u0000\u0000\u0004Dump\avoid ()\u0014Upp::RichTxt::Dump()\vvoid Dump()\u0003Upp\u0004DUMP\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000end\u0000è\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Table.h","value":"dataº\u0004\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u00001\u0000\u0000\u0000\u0001\u0000\u0000\bRichCell\rUpp::RichCell\rUpp::RichCell#RichCell : DeepCopyOption<RichCell>\u0003Upp\bRICHCELL\rUpp::RichCell\rUPP::RICHCELL\u0013Upp::DeepCopyOption\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0006Format\u0015Upp::RichCell::Format\u0015Upp::RichCell::Format\u0006Format\u0003Upp\u0006FORMAT\u0015Upp::RichCell::Format\u0015UPP::RICHCELL::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\v\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0001\u0000\u0000\u0006border\u0004Rect\u001DUpp::RichCell::Format::border\vRect border\u0003Upp\u0006BORDER\u0015Upp::RichCell::Format\u0015UPP::RICHCELL::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\v\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0006margin\u0004Rect\u001DUpp::RichCell::Format::margin\vRect margin\u0003Upp\u0006MARGIN\u0015Upp::RichCell::Format\u0015UPP::RICHCELL::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\v\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0001\u0000\u0000\u0005align\u0003int\u001CUpp::RichCell::Format::align\tint align\u0003Upp\u0005ALIGN\u0015Upp::RichCell::Format\u0015UPP::RICHCELL::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\v\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\tminheight\u0003int Upp::RichCell::Format::minheight\rint minheight\u0003Upp\tMINHEIGHT\u0015Upp::RichCell::Format\u0015UPP::RICHCELL::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\v\u0000\u0000\u0000\a\u0000\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000\u0010\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0005color\u0005Color\u001CUpp::RichCell::Format::color\vColor color\u0003Upp\u0005COLOR\u0015Upp::RichCell::Format\u0015UPP::RICHCELL::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\v\u0000\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000\u0016\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\vbordercolor\u0005Color\"Upp::RichCell::Format::bordercolor\u0011Color bordercolor\u0003Upp\vBORDERCOLOR\u0015Upp::RichCell::Format\u0015UPP::RICHCELL::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\v\u0000\u0000\u0000\t\u0000\u0000\u0000\u0002\u0000\u0000\u0000\t\u0000\u0000\u0000\u000F\u0000\u0000\u0000\t\u0000\u0000\u0000\u0001\u0000\u0000\u0004keep\u0004bool\u001BUpp::RichCell::Format::keep\tbool keep\u0003Upp\u0004KEEP\u0015Upp::RichCell::Format\u0015UPP::RICHCELL::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\v\u0000\u0000\u0000\n\u0000\u0000\u0000\u0002\u0000\u0000\u0000\n\u0000\u0000\u0000\u0010\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0000\u0000\u0005round\u0004bool\u001CUpp::RichCell::Format::round\nbool round\u0003Upp\u0005ROUND\u0015Upp::RichCell::Format\u0015UPP::RICHCELL::FORMAT\u0000\u0000\u0018\u0000\u0000\u0000\u0002\u0000\u0000\u0000\f\u0000\u0000\u0000\u0002\u0000\u0000\u0000\f\u0000\u0000\u0000\n\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0006Format\avoid ()\u001FUpp::RichCell::Format::Format()\bFormat()\u0003Upp\u0006FORMAT\u0015Upp::RichCell::Format\u0015UPP::RICHCELL::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\n\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\u0006format\u0006Format\u0015Upp::RichCell::format\rFormat format\u0003Upp\u0006FORMAT\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0006\u0000\u0000\u0000\n\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0005vspan\u0003int\u0014Upp::RichCell::vspan\tint vspan\u0003Upp\u0005VSPAN\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0006\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0005hspan\u0003int\u0014Upp::RichCell::hspan\tint hspan\u0003Upp\u0005HSPAN\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0006\u0000\u0000\u0000\n\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0004text\aRichTxt\u0013Upp::RichCell::text\fRichTxt text\u0003Upp\u0004TEXT\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0014\u0000\u0000\u0000'\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0006Reduce\u001Abool (RichContext &) const(Upp::RichCell::Reduce(RichContext&)const\"bool Reduce(RichContext& rc) const\u0003Upp\u0006REDUCE\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0015\u0000\u0000\u00007\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0005Align(PageY (const RichContext &, PageY) const3Upp::RichCell::Align(const RichContext&,PageY)const3PageY Align(const RichContext& rc, PageY npy) const\u0003Upp\u0005ALIGN\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0016\u0000\u0000\u0000A\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\bDrawCellVvoid (Draw &, int, int, int, int, const Rect &, const Rect &, const PaintInfo &) const\\Upp::RichCell::DrawCell(Draw&,int,int,int,int,const Rect&,const Rect&,const PaintInfo&)constvvoid DrawCell(Draw& w, int l, int r, int y, int yy, const Rect& border, const Rect& margin, const PaintInfo& pi) const\u0003Upp\bDRAWCELL\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0000\u0000\u0000\tClearText\avoid ()\u001AUpp::RichCell::ClearText()\u0010void ClearText()\u0003Upp\tCLEARTEXT\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001A\u0000\u0000\u0000O\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0000\u0000\u0000\tClearText3void (const RichPara::Format &, const RichStyles &)CUpp::RichCell::ClearText(const RichPara::Format&,const RichStyles&)Gvoid ClearText(const RichPara::Format& format, const RichStyles& style)\u0003Upp\tCLEARTEXT\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0000\u0000\u0000\u0005Clear\avoid ()\u0016Upp::RichCell::Clear()\fvoid Clear()\u0003Upp\u0005CLEAR\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001D\u0000\u0000\u0000)\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0000\u0000\u0000\u0006GetTop\u0019PageY (RichContext) const'Upp::RichCell::GetTop(RichContext)const\"PageY GetTop(RichContext rc) const\u0003Upp\u0006GETTOP\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001E\u0000\u0000\u0000,\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\tGetHeight\u0019PageY (RichContext) const*Upp::RichCell::GetHeight(RichContext)const%PageY GetHeight(RichContext rc) const\u0003Upp\tGETHEIGHT\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001F\u0000\u0000\u0000%\u0000\u0000\u0000\"\u0000\u0000\u0000\u0000\u0000\u0000\u0005Paintjvoid (PageDraw &, RichContext, PageY, const Rect &, const Rect &, int, int, const PaintInfo &, bool) constlUpp::RichCell::Paint(PageDraw&,RichContext,PageY,const Rect&,const Rect&,int,int,const PaintInfo&,bool)constÿ\u0000\u0000\u0000void Paint(PageDraw& pw, RichContext rc, PageY npy, const Rect& xpg, const Rect& nxpg, int y, int ny, const PaintInfo& pi, bool select) const\u0003Upp\u0005PAINT\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\u0000#\u0000\u0000\u0000?\u0000\u0000\u0000#\u0000\u0000\u0000\u0000\u0000\u0000\bGetCaret)RichCaret (int, RichContext, PageY) const3Upp::RichCell::GetCaret(int,RichContext,PageY)const<RichCaret GetCaret(int pos, RichContext rc, PageY pyy) const\u0003Upp\bGETCARET\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000$\u0000\u0000\u0000\u0001\u0000\u0000\u0000$\u0000\u0000\u0000D\u0000\u0000\u0000$\u0000\u0000\u0000\u0000\u0000\u0000\u0006GetPos*int (int, PageY, RichContext, PageY) const7Upp::RichCell::GetPos(int,PageY,RichContext,PageY)const;int GetPos(int x, PageY y, RichContext rc, PageY pyy) const\u0003Upp\u0006GETPOS\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000%\u0000\u0000\u0000\u0001\u0000\u0000\u0000%\u0000\u0000\u0000V\u0000\u0000\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\tGetHotPos6RichHotPos (int, PageY, int, RichContext, PageY) const>Upp::RichCell::GetHotPos(int,PageY,int,RichContext,PageY)constTRichHotPos GetHotPos(int x, PageY y, int tolerance, RichContext rc, PageY pyy) const\u0003Upp\tGETHOTPOS\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000'\u0000\u0000\u0000\u0001\u0000\u0000\u0000'\u0000\u0000\u0000d\u0000\u0000\u0000'\u0000\u0000\u0000\u0000\u0000\u0000\fGatherValPos?void (Vector<RichValPos> &, RichContext, PageY, int, int) constCUpp::RichCell::GatherValPos(Vector&,RichContext,PageY,int,int)const\\void GatherValPos(Vector<RichValPos>& f, RichContext rc, PageY pyy, int pos, int type) const\u0003Upp\fGATHERVALPOS\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0015\u0000\u0000\u0000\u0001\u0000\u0000\u0000-\u0000\u0000\u0000\u0001\u0000\u0000\u0000-\u0000\u0000\u0000\u0017\u0000\u0000\u0000-\u0000\u0000\u0000\u0000\u0000\u0000\toperator=\u0017RichCell &(RichCell &&),Upp::RichCell::operator=(RichCell&&)=default\u0012RichCell& operator\u0003Upp\tOPERATOR=\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000-\u0000\u0000\u0000\u0001\u0000\u0000\u0000-\u0000\u0000\u0000\u0017\u0000\u0000\u0000-\u0000\u0000\u0000\u0001\u0000\u0000\bRichCell\"void (RichCell &&) noexcept(false)-Upp::RichCell::RichCell(RichCell&&)()=default\u001CRichCell(RichCell&&) (false)\u0003Upp\bRICHCELL\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000/\u0000\u0000\u0000\u0001\u0000\u0000\u0000/\u0000\u0000\u0000#\u0000\u0000\u0000/\u0000\u0000\u0000\u0000\u0000\u0000\bRichCell\u001Cvoid (const RichCell &, int),Upp::RichCell::RichCell(const RichCell&,int)\"RichCell(const RichCell& src, int)\u0003Upp\bRICHCELL\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u00000\u0000\u0000\u0000\u0001\u0000\u0000\u00000\u0000\u0000\u0000\v\u0000\u0000\u00000\u0000\u0000\u0000\u0000\u0000\u0000\bRichCell\avoid ()\u0019Upp::RichCell::RichCell()\nRichCell()\u0003Upp\bRICHCELL\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0004\u0000\u0000\u0000\u0006\u0000\u0000\u00003\u0000\u0000\u0000\u0000\u0000\u0000\u00003\u0000\u0000\u0000\u0001\u0000\u0000\u0000ô\u0000\u0000\u0000\u0001\u0000\u0000\tRichTable\u000EUpp::RichTable\u000EUpp::RichTable%RichTable : DeepCopyOption<RichTable>\u0003Upp\tRICHTABLE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0013Upp::DeepCopyOption\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u00005\u0000\u0000\u0000\u0001\u0000\u0000\u00005\u0000\u0000\u0000\u0002\u0000\u0000\u0000A\u0000\u0000\u0000\u0001\u0000\u0000\u0006Format\u0016Upp::RichTable::Format\u0016Upp::RichTable::Format\u0006Format\u0003Upp\u0006FORMAT\u0016Upp::RichTable::Format\u0016UPP::RICHTABLE::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u00006\u0000\u0000\u0000\u0002\u0000\u0000\u00006\u0000\u0000\u0000\u000F\u0000\u0000\u00006\u0000\u0000\u0000\u0001\u0000\u0000\u0006before\u0003int\u001EUpp::RichTable::Format::before\nint before\u0003Upp\u0006BEFORE\u0016Upp::RichTable::Format\u0016UPP::RICHTABLE::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\u0011\u0000\u0000\u00006\u0000\u0000\u0000\u0002\u0000\u0000\u00006\u0000\u0000\u0000\u0013\u0000\u0000\u00006\u0000\u0000\u0000\u0001\u0000\u0000\u0002lm\u0003int\u001AUpp::RichTable::Format::lm\u0006int lm\u0003Upp\u0002LM\u0016Upp::RichTable::Format\u0016UPP::RICHTABLE::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\u0015\u0000\u0000\u00006\u0000\u0000\u0000\u0002\u0000\u0000\u00006\u0000\u0000\u0000\u0017\u0000\u0000\u00006\u0000\u0000\u0000\u0001\u0000\u0000\u0002rm\u0003int\u001AUpp::RichTable::Format::rm\u0006int rm\u0003Upp\u0002RM\u0016Upp::RichTable::Format\u0016UPP::RICHTABLE::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\u0019\u0000\u0000\u00006\u0000\u0000\u0000\u0002\u0000\u0000\u00006\u0000\u0000\u0000\u001E\u0000\u0000\u00006\u0000\u0000\u0000\u0001\u0000\u0000\u0005after\u0003int\u001DUpp::RichTable::Format::after\tint after\u0003Upp\u0005AFTER\u0016Upp::RichTable::Format\u0016UPP::RICHTABLE::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u00007\u0000\u0000\u0000\u0002\u0000\u0000\u00007\u0000\u0000\u0000\u000E\u0000\u0000\u00007\u0000\u0000\u0000\u0001\u0000\u0000\u0005frame\u0003int\u001DUpp::RichTable::Format::frame\tint frame\u0003Upp\u0005FRAME\u0016Upp::RichTable::Format\u0016UPP::RICHTABLE::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u00008\u0000\u0000\u0000\u0002\u0000\u0000\u00008\u0000\u0000\u0000\u0013\u0000\u0000\u00008\u0000\u0000\u0000\u0001\u0000\u0000\nframecolor\u0005Color\"Upp::RichTable::Format::framecolor\u0010Color framecolor\u0003Upp\nFRAMECOLOR\u0016Upp::RichTable::Format\u0016UPP::RICHTABLE::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u00009\u0000\u0000\u0000\u0002\u0000\u0000\u00009\u0000\u0000\u0000\r\u0000\u0000\u00009\u0000\u0000\u0000\u0001\u0000\u0000\u0004grid\u0003int\u001CUpp::RichTable::Format::grid\bint grid\u0003Upp\u0004GRID\u0016Upp::RichTable::Format\u0016UPP::RICHTABLE::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000:\u0000\u0000\u0000\u0002\u0000\u0000\u0000:\u0000\u0000\u0000\u0012\u0000\u0000\u0000:\u0000\u0000\u0000\u0001\u0000\u0000\tgridcolor\u0005Color!Upp::RichTable::Format::gridcolor\u000FColor gridcolor\u0003Upp\tGRIDCOLOR\u0016Upp::RichTable::Format\u0016UPP::RICHTABLE::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\u001E\u0000\u0000\u0000;\u0000\u0000\u0000\u0002\u0000\u0000\u0000;\u0000\u0000\u0000$\u0000\u0000\u0000;\u0000\u0000\u0000\u0001\u0000\u0000\u0006column\u0019WithDeepCopy<Vector<int>>\u001EUpp::RichTable::Format::column WithDeepCopy<Vector<int>> column\u0003Upp\u0006COLUMN\u0016Upp::RichTable::Format\u0016UPP::RICHTABLE::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000<\u0000\u0000\u0000\u0002\u0000\u0000\u0000<\u0000\u0000\u0000\u000F\u0000\u0000\u0000<\u0000\u0000\u0000\u0001\u0000\u0000\u0006header\u0003int\u001EUpp::RichTable::Format::header\nint header\u0003Upp\u0006HEADER\u0016Upp::RichTable::Format\u0016UPP::RICHTABLE::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000=\u0000\u0000\u0000\u0002\u0000\u0000\u0000=\u0000\u0000\u0000\r\u0000\u0000\u0000=\u0000\u0000\u0000\u0001\u0000\u0000\u0004keep\u0004bool\u001CUpp::RichTable::Format::keep\tbool keep\u0003Upp\u0004KEEP\u0016Upp::RichTable::Format\u0016UPP::RICHTABLE::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000=\u0000\u0000\u0000\u0002\u0000\u0000\u0000=\u0000\u0000\u0000\u0016\u0000\u0000\u0000=\u0000\u0000\u0000\u0001\u0000\u0000\anewpage\u0004bool\u001FUpp::RichTable::Format::newpage\fbool newpage\u0003Upp\aNEWPAGE\u0016Upp::RichTable::Format\u0016UPP::RICHTABLE::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000=\u0000\u0000\u0000\u0002\u0000\u0000\u0000=\u0000\u0000\u0000!\u0000\u0000\u0000=\u0000\u0000\u0000\u0001\u0000\u0000\tnewhdrftr\u0004bool!Upp::RichTable::Format::newhdrftr\u000Ebool newhdrftr\u0003Upp\tNEWHDRFTR\u0016Upp::RichTable::Format\u0016UPP::RICHTABLE::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000>\u0000\u0000\u0000\u0002\u0000\u0000\u0000>\u0000\u0000\u0000\u0013\u0000\u0000\u0000>\u0000\u0000\u0000\u0001\u0000\u0000\nheader_qtf\u0006String\"Upp::RichTable::Format::header_qtf\u0011String header_qtf\u0003Upp\nHEADER_QTF\u0016Upp::RichTable::Format\u0016UPP::RICHTABLE::FORMAT\u0000\u0000\u0006\u0000\u0000\u0000\u0015\u0000\u0000\u0000>\u0000\u0000\u0000\u0002\u0000\u0000\u0000>\u0000\u0000\u0000\u001F\u0000\u0000\u0000>\u0000\u0000\u0000\u0001\u0000\u0000\nfooter_qtf\u0006String\"Upp::RichTable::Format::footer_qtf\u0011String footer_qtf\u0003Upp\nFOOTER_QTF\u0016Upp::RichTable::Format\u0016UPP::RICHTABLE::FORMAT\u0000\u0000\u0018\u0000\u0000\u0000\u0002\u0000\u0000\u0000@\u0000\u0000\u0000\u0002\u0000\u0000\u0000@\u0000\u0000\u0000\n\u0000\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\u0006Format\avoid () Upp::RichTable::Format::Format()\bFormat()\u0003Upp\u0006FORMAT\u0016Upp::RichTable::Format\u0016UPP::RICHTABLE::FORMAT\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000C\u0000\u0000\u0000\u0001\u0000\u0000\u0000C\u0000\u0000\u0000\u0002\u0000\u0000\u0000J\u0000\u0000\u0000\u0001\u0000\u0000\bCellInfo\u0018Upp::RichTable::CellInfo\u0018Upp::RichTable::CellInfo\bCellInfo\u0003Upp\bCELLINFO\u0018Upp::RichTable::CellInfo\u0018UPP::RICHTABLE::CELLINFO\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000D\u0000\u0000\u0000\u0002\u0000\u0000\u0000D\u0000\u0000\u0000\r\u0000\u0000\u0000D\u0000\u0000\u0000\u0001\u0000\u0000\u0005valid\u0004bool\u001FUpp::RichTable::CellInfo::valid\nbool valid\u0003Upp\u0005VALID\u0018Upp::RichTable::CellInfo\u0018UPP::RICHTABLE::CELLINFO\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000E\u0000\u0000\u0000\u0002\u0000\u0000\u0000E\u0000\u0000\u0000\u000E\u0000\u0000\u0000E\u0000\u0000\u0000\u0001\u0000\u0000\u0006master\u0005Point Upp::RichTable::CellInfo::master\fPoint master\u0003Upp\u0006MASTER\u0018Upp::RichTable::CellInfo\u0018UPP::RICHTABLE::CELLINFO\u0000\u0000\u001A\u0000\u0000\u0000\u0002\u0000\u0000\u0000G\u0000\u0000\u0000\u0002\u0000\u0000\u0000G\u0000\u0000\u0000)\u0000\u0000\u0000G\u0000\u0000\u0000\u0001\u0000\u0000\roperator bool\rbool () const.Upp::RichTable::CellInfo::operator bool()const\u0015operator bool() const\u0003Upp\rOPERATOR BOOL\u0018Upp::RichTable::CellInfo\u0018UPP::RICHTABLE::CELLINFO\u0000\u0000\u0018\u0000\u0000\u0000\u0002\u0000\u0000\u0000I\u0000\u0000\u0000\u0002\u0000\u0000\u0000I\u0000\u0000\u0000)\u0000\u0000\u0000I\u0000\u0000\u0000\u0001\u0000\u0000\bCellInfo\avoid ()$Upp::RichTable::CellInfo::CellInfo()\nCellInfo()\u0003Upp\bCELLINFO\u0018Upp::RichTable::CellInfo\u0018UPP::RICHTABLE::CELLINFO\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000M\u0000\u0000\u0000\u0001\u0000\u0000\u0000M\u0000\u0000\u0000\u000E\u0000\u0000\u0000M\u0000\u0000\u0000\u0001\u0000\u0000\u0006format\u0006Format\u0016Upp::RichTable::format\rFormat format\u0003Upp\u0006FORMAT\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0006\u0000\u0000\u0000\u001A\u0000\u0000\u0000N\u0000\u0000\u0000\u0001\u0000\u0000\u0000N\u0000\u0000\u0000\u001E\u0000\u0000\u0000N\u0000\u0000\u0000\u0001\u0000\u0000\u0004cell\u0016Array<Array<RichCell>>\u0014Upp::RichTable::cell\u001BArray<Array<RichCell>> cell\u0003Upp\u0004CELL\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0006\u0000\u0000\u0000\u0017\u0000\u0000\u0000O\u0000\u0000\u0000\u0001\u0000\u0000\u0000O\u0000\u0000\u0000\u001D\u0000\u0000\u0000O\u0000\u0000\u0000\u0001\u0000\u0000\u0006header\rOne<RichText>\u0016Upp::RichTable::header\u001Cmutable One<RichText> header\u0003Upp\u0006HEADER\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0006\u0000\u0000\u0000\u001F\u0000\u0000\u0000O\u0000\u0000\u0000\u0001\u0000\u0000\u0000O\u0000\u0000\u0000%\u0000\u0000\u0000O\u0000\u0000\u0000\u0001\u0000\u0000\u0006footer\rOne<RichText>\u0016Upp::RichTable::footer\u001Cmutable One<RichText> footer\u0003Upp\u0006FOOTER\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000Q\u0000\u0000\u0000\u0001\u0000\u0000\u0000Q\u0000\u0000\u0000\u0002\u0000\u0000\u0000]\u0000\u0000\u0000\u0001\u0000\u0000\tPaintCell\u0019Upp::RichTable::PaintCell\u0019Upp::RichTable::PaintCell\u001FPaintCell : Moveable<PaintCell>\u0003Upp\tPAINTCELL\u0019Upp::RichTable::PaintCell\u0019UPP::RICHTABLE::PAINTCELL\rUpp::Moveable\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000R\u0000\u0000\u0000\u0002\u0000\u0000\u0000R\u0000\u0000\u0000\f\u0000\u0000\u0000R\u0000\u0000\u0000\u0001\u0000\u0000\u0004left\u0003int\u001FUpp::RichTable::PaintCell::left\bint left\u0003Upp\u0004LEFT\u0019Upp::RichTable::PaintCell\u0019UPP::RICHTABLE::PAINTCELL\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000S\u0000\u0000\u0000\u0002\u0000\u0000\u0000S\u0000\u0000\u0000\r\u0000\u0000\u0000S\u0000\u0000\u0000\u0001\u0000\u0000\u0005right\u0003int Upp::RichTable::PaintCell::right\tint right\u0003Upp\u0005RIGHT\u0019Upp::RichTable::PaintCell\u0019UPP::RICHTABLE::PAINTCELL\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000T\u0000\u0000\u0000\u0002\u0000\u0000\u0000T\u0000\u0000\u0000\u0011\u0000\u0000\u0000T\u0000\u0000\u0000\u0001\u0000\u0000\tpage_left\u0003int$Upp::RichTable::PaintCell::page_left\rint page_left\u0003Upp\tPAGE_LEFT\u0019Upp::RichTable::PaintCell\u0019UPP::RICHTABLE::PAINTCELL\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000U\u0000\u0000\u0000\u0002\u0000\u0000\u0000U\u0000\u0000\u0000\u0012\u0000\u0000\u0000U\u0000\u0000\u0000\u0001\u0000\u0000\npage_right\u0003int%Upp::RichTable::PaintCell::page_right\u000Eint page_right\u0003Upp\nPAGE_RIGHT\u0019Upp::RichTable::PaintCell\u0019UPP::RICHTABLE::PAINTCELL\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000V\u0000\u0000\u0000\u0002\u0000\u0000\u0000V\u0000\u0000\u0000\n\u0000\u0000\u0000V\u0000\u0000\u0000\u0001\u0000\u0000\u0002hy\u0005PageY\u001DUpp::RichTable::PaintCell::hy\bPageY hy\u0003Upp\u0002HY\u0019Upp::RichTable::PaintCell\u0019UPP::RICHTABLE::PAINTCELL\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000W\u0000\u0000\u0000\u0002\u0000\u0000\u0000W\u0000\u0000\u0000\v\u0000\u0000\u0000W\u0000\u0000\u0000\u0001\u0000\u0000\u0003top\u0004bool\u001EUpp::RichTable::PaintCell::top\bbool top\u0003Upp\u0003TOP\u0019Upp::RichTable::PaintCell\u0019UPP::RICHTABLE::PAINTCELL\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000X\u0000\u0000\u0000\u0002\u0000\u0000\u0000X\u0000\u0000\u0000\u000E\u0000\u0000\u0000X\u0000\u0000\u0000\u0001\u0000\u0000\u0006bottom\u0004bool!Upp::RichTable::PaintCell::bottom\vbool bottom\u0003Upp\u0006BOTTOM\u0019Upp::RichTable::PaintCell\u0019UPP::RICHTABLE::PAINTCELL\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000Z\u0000\u0000\u0000\u0002\u0000\u0000\u0000Z\u0000\u0000\u00003\u0000\u0000\u0000Z\u0000\u0000\u0000\u0000\u0000\u0000\u000FMakeRichContext\u001FRichContext (RichContext) const<Upp::RichTable::PaintCell::MakeRichContext(RichContext)const1RichContext MakeRichContext(RichContext rc) const\u0003Upp\u000FMAKERICHCONTEXT\u0019Upp::RichTable::PaintCell\u0019UPP::RICHTABLE::PAINTCELL\u0000\u0000\u0018\u0000\u0000\u0000\u0002\u0000\u0000\u0000\\\u0000\u0000\u0000\u0002\u0000\u0000\u0000\\\u0000\u0000\u0000 \u0000\u0000\u0000\\\u0000\u0000\u0000\u0001\u0000\u0000\tPaintCell\avoid ()&Upp::RichTable::PaintCell::PaintCell()\vPaintCell()\u0003Upp\tPAINTCELL\u0019Upp::RichTable::PaintCell\u0019UPP::RICHTABLE::PAINTCELL\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000_\u0000\u0000\u0000\u0001\u0000\u0000\u0000_\u0000\u0000\u0000\u0002\u0000\u0000\u0000g\u0000\u0000\u0000\u0001\u0000\u0000\bPaintRow\u0018Upp::RichTable::PaintRow\u0018Upp::RichTable::PaintRow\u001DPaintRow : Moveable<PaintRow>\u0003Upp\bPAINTROW\u0018Upp::RichTable::PaintRow\u0018UPP::RICHTABLE::PAINTROW\rUpp::Moveable\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000`\u0000\u0000\u0000\u0002\u0000\u0000\u0000`\u0000\u0000\u0000\u0017\u0000\u0000\u0000`\u0000\u0000\u0000\u0001\u0000\u0000\u0003gpy\u0005PageY\u001DUpp::RichTable::PaintRow::gpy\tPageY gpy\u0003Upp\u0003GPY\u0018Upp::RichTable::PaintRow\u0018UPP::RICHTABLE::PAINTROW\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000a\u0000\u0000\u0000\u0002\u0000\u0000\u0000a\u0000\u0000\u0000\u0016\u0000\u0000\u0000a\u0000\u0000\u0000\u0001\u0000\u0000\u0002py\u0005PageY\u001CUpp::RichTable::PaintRow::py\bPageY py\u0003Upp\u0002PY\u0018Upp::RichTable::PaintRow\u0018UPP::RICHTABLE::PAINTROW\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000a\u0000\u0000\u0000\u0002\u0000\u0000\u0000a\u0000\u0000\u0000\u001B\u0000\u0000\u0000a\u0000\u0000\u0000\u0001\u0000\u0000\u0003pyy\u0005PageY\u001DUpp::RichTable::PaintRow::pyy\tPageY pyy\u0003Upp\u0003PYY\u0018Upp::RichTable::PaintRow\u0018UPP::RICHTABLE::PAINTROW\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000b\u0000\u0000\u0000\u0002\u0000\u0000\u0000b\u0000\u0000\u0000\u0018\u0000\u0000\u0000b\u0000\u0000\u0000\u0001\u0000\u0000\u0004cell\u0011Buffer<PaintCell>\u001EUpp::RichTable::PaintRow::cell\u0016Buffer<PaintCell> cell\u0003Upp\u0004CELL\u0018Upp::RichTable::PaintRow\u0018UPP::RICHTABLE::PAINTROW\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000c\u0000\u0000\u0000\u0002\u0000\u0000\u0000c\u0000\u0000\u0000\u0019\u0000\u0000\u0000c\u0000\u0000\u0000\u0001\u0000\u0000\u0005first\u0004bool\u001FUpp::RichTable::PaintRow::first\nbool first\u0003Upp\u0005FIRST\u0018Upp::RichTable::PaintRow\u0018UPP::RICHTABLE::PAINTROW\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000e\u0000\u0000\u0000\u0002\u0000\u0000\u0000e\u0000\u0000\u0000A\u0000\u0000\u0000e\u0000\u0000\u0000\u0001\u0000\u0000\noperator[]\u0010PaintCell &(int))Upp::RichTable::PaintRow::operator[](int)\u001CPaintCell& operator[](int i)\u0003Upp\nOPERATOR[]\u0018Upp::RichTable::PaintRow\u0018UPP::RICHTABLE::PAINTROW\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000f\u0000\u0000\u0000\u0002\u0000\u0000\u0000f\u0000\u0000\u0000A\u0000\u0000\u0000f\u0000\u0000\u0000\u0001\u0000\u0000\noperator[]\u001Cconst PaintCell &(int) const.Upp::RichTable::PaintRow::operator[](int)const(const PaintCell& operator[](int i) const\u0003Upp\nOPERATOR[]\u0018Upp::RichTable::PaintRow\u0018UPP::RICHTABLE::PAINTROW\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000i\u0000\u0000\u0000\u0001\u0000\u0000\u0000i\u0000\u0000\u0000\u0002\u0000\u0000\u0000t\u0000\u0000\u0000\u0001\u0000\u0000\u0006Layout\u0016Upp::RichTable::Layout\u0016Upp::RichTable::Layout\u0006Layout\u0003Upp\u0006LAYOUT\u0016Upp::RichTable::Layout\u0016UPP::RICHTABLE::LAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000j\u0000\u0000\u0000\u0002\u0000\u0000\u0000j\u0000\u0000\u0000\u0017\u0000\u0000\u0000j\u0000\u0000\u0000\u0001\u0000\u0000\u0003row\u0010Buffer<PaintRow>\u001BUpp::RichTable::Layout::row\u0014Buffer<PaintRow> row\u0003Upp\u0003ROW\u0016Upp::RichTable::Layout\u0016UPP::RICHTABLE::LAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000k\u0000\u0000\u0000\u0002\u0000\u0000\u0000k\u0000\u0000\u0000\u0019\u0000\u0000\u0000k\u0000\u0000\u0000\u0001\u0000\u0000\u0005frame\u0003int\u001DUpp::RichTable::Layout::frame\tint frame\u0003Upp\u0005FRAME\u0016Upp::RichTable::Layout\u0016UPP::RICHTABLE::LAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000l\u0000\u0000\u0000\u0002\u0000\u0000\u0000l\u0000\u0000\u0000\u0018\u0000\u0000\u0000l\u0000\u0000\u0000\u0001\u0000\u0000\u0004grid\u0003int\u001CUpp::RichTable::Layout::grid\bint grid\u0003Upp\u0004GRID\u0016Upp::RichTable::Layout\u0016UPP::RICHTABLE::LAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000m\u0000\u0000\u0000\u0002\u0000\u0000\u0000m\u0000\u0000\u0000\u0017\u0000\u0000\u0000m\u0000\u0000\u0000\u0001\u0000\u0000\u0003pyy\u0005PageY\u001BUpp::RichTable::Layout::pyy\tPageY pyy\u0003Upp\u0003PYY\u0016Upp::RichTable::Layout\u0016UPP::RICHTABLE::LAYOUT\u0000\u0000\u0015\u0000\u0000\u0000\f\u0000\u0000\u0000o\u0000\u0000\u0000\u0002\u0000\u0000\u0000o\u0000\u0000\u0000@\u0000\u0000\u0000o\u0000\u0000\u0000\u0001\u0000\u0000\noperator[]\u000FPaintRow &(int)'Upp::RichTable::Layout::operator[](int)\u001BPaintRow& operator[](int i)\u0003Upp\nOPERATOR[]\u0016Upp::RichTable::Layout\u0016UPP::RICHTABLE::LAYOUT\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000p\u0000\u0000\u0000\u0002\u0000\u0000\u0000p\u0000\u0000\u0000@\u0000\u0000\u0000p\u0000\u0000\u0000\u0001\u0000\u0000\noperator[]\u001Bconst PaintRow &(int) const,Upp::RichTable::Layout::operator[](int)const'const PaintRow& operator[](int i) const\u0003Upp\nOPERATOR[]\u0016Upp::RichTable::Layout\u0016UPP::RICHTABLE::LAYOUT\u0000\u0000\u0015\u0000\u0000\u0000\u0002\u0000\u0000\u0000r\u0000\u0000\u0000\u0002\u0000\u0000\u0000r\u0000\u0000\u0000\u0016\u0000\u0000\u0000r\u0000\u0000\u0000\u0001\u0000\u0000\toperator=#Layout &(Layout &&) noexcept(false)5Upp::RichTable::Layout::operator=(Layout&&)()=default\u0010Layout& operator\u0003Upp\tOPERATOR=\u0016Upp::RichTable::Layout\u0016UPP::RICHTABLE::LAYOUT\u0000\u0000\u0018\u0000\u0000\u0000\u0002\u0000\u0000\u0000r\u0000\u0000\u0000\u0002\u0000\u0000\u0000r\u0000\u0000\u0000\u0016\u0000\u0000\u0000r\u0000\u0000\u0000\u0001\u0000\u0000\u0006Layout void (Layout &&) noexcept(false)2Upp::RichTable::Layout::Layout(Layout&&)()=default\u0018Layout(Layout&&) (false)\u0003Upp\u0006LAYOUT\u0016Upp::RichTable::Layout\u0016UPP::RICHTABLE::LAYOUT\u0000\u0000\u0018\u0000\u0000\u0000\u0002\u0000\u0000\u0000s\u0000\u0000\u0000\u0002\u0000\u0000\u0000s\u0000\u0000\u0000\r\u0000\u0000\u0000s\u0000\u0000\u0000\u0001\u0000\u0000\u0006Layout\avoid () Upp::RichTable::Layout::Layout()\bLayout()\u0003Upp\u0006LAYOUT\u0016Upp::RichTable::Layout\u0016UPP::RICHTABLE::LAYOUT\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000v\u0000\u0000\u0000\u0001\u0000\u0000\u0000v\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\tTabLayout\u0019Upp::RichTable::TabLayout\u0019Upp::RichTable::TabLayout\u0012TabLayout : Layout\u0003Upp\tTABLAYOUT\u0019Upp::RichTable::TabLayout\u0019UPP::RICHTABLE::TABLAYOUT\u0016Upp::RichTable::Layout\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000w\u0000\u0000\u0000\u0002\u0000\u0000\u0000w\u0000\u0000\u0000%\u0000\u0000\u0000w\u0000\u0000\u0000\u0001\u0000\u0000\thasheader\u0004bool$Upp::RichTable::TabLayout::hasheader\u000Ebool hasheader\u0003Upp\tHASHEADER\u0019Upp::RichTable::TabLayout\u0019UPP::RICHTABLE::TABLAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000x\u0000\u0000\u0000\u0002\u0000\u0000\u0000x\u0000\u0000\u0000\u001A\u0000\u0000\u0000x\u0000\u0000\u0000\u0001\u0000\u0000\u0006header\u0006Layout!Upp::RichTable::TabLayout::header\rLayout header\u0003Upp\u0006HEADER\u0019Upp::RichTable::TabLayout\u0019UPP::RICHTABLE::TABLAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000y\u0000\u0000\u0000\u0002\u0000\u0000\u0000y\u0000\u0000\u0000\u0016\u0000\u0000\u0000y\u0000\u0000\u0000\u0001\u0000\u0000\u0002sz\u0004Size\u001DUpp::RichTable::TabLayout::sz\aSize sz\u0003Upp\u0002SZ\u0019Upp::RichTable::TabLayout\u0019UPP::RICHTABLE::TABLAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000z\u0000\u0000\u0000\u0002\u0000\u0000\u0000z\u0000\u0000\u0000\u0016\u0000\u0000\u0000z\u0000\u0000\u0000\u0001\u0000\u0000\u0002py\u0005PageY\u001DUpp::RichTable::TabLayout::py\bPageY py\u0003Upp\u0002PY\u0019Upp::RichTable::TabLayout\u0019UPP::RICHTABLE::TABLAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000{\u0000\u0000\u0000\u0002\u0000\u0000\u0000{\u0000\u0000\u0000\u001E\u0000\u0000\u0000{\u0000\u0000\u0000\u0001\u0000\u0000\nfirst_page\u0004Rect%Upp::RichTable::TabLayout::first_page\u000FRect first_page\u0003Upp\nFIRST_PAGE\u0019Upp::RichTable::TabLayout\u0019UPP::RICHTABLE::TABLAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000|\u0000\u0000\u0000\u0002\u0000\u0000\u0000|\u0000\u0000\u0000\u001D\u0000\u0000\u0000|\u0000\u0000\u0000\u0001\u0000\u0000\tnext_page\u0004Rect$Upp::RichTable::TabLayout::next_page\u000ERect next_page\u0003Upp\tNEXT_PAGE\u0019Upp::RichTable::TabLayout\u0019UPP::RICHTABLE::TABLAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000}\u0000\u0000\u0000\u0002\u0000\u0000\u0000}\u0000\u0000\u0000\u001F\u0000\u0000\u0000}\u0000\u0000\u0000\u0001\u0000\u0000\vheader_page\u0004Rect&Upp::RichTable::TabLayout::header_page\u0010Rect header_page\u0003Upp\vHEADER_PAGE\u0019Upp::RichTable::TabLayout\u0019UPP::RICHTABLE::TABLAYOUT\u0000\u0000\u0015\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u007F\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u007F\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u007F\u0000\u0000\u0000\u0001\u0000\u0000\toperator=)TabLayout &(TabLayout &&) noexcept(false);Upp::RichTable::TabLayout::operator=(TabLayout&&)()=default\u0013TabLayout& operator\u0003Upp\tOPERATOR=\u0019Upp::RichTable::TabLayout\u0019UPP::RICHTABLE::TABLAYOUT\u0000\u0000\u0018\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u007F\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u007F\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u007F\u0000\u0000\u0000\u0001\u0000\u0000\tTabLayout#void (TabLayout &&) noexcept(false);Upp::RichTable::TabLayout::TabLayout(TabLayout&&)()=default\u001ETabLayout(TabLayout&&) (false)\u0003Upp\tTABLAYOUT\u0019Upp::RichTable::TabLayout\u0019UPP::RICHTABLE::TABLAYOUT\u0000\u0000\u0018\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\tTabLayout\avoid ()&Upp::RichTable::TabLayout::TabLayout()\vTabLayout()\u0003Upp\tTABLAYOUT\u0019Upp::RichTable::TabLayout\u0019UPP::RICHTABLE::TABLAYOUT\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\aclayout\tTabLayout\u0017Upp::RichTable::clayout\u0019mutable TabLayout clayout\u0003Upp\aCLAYOUT\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0006\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0002ci\u0018Buffer<Buffer<CellInfo>>\u0012Upp::RichTable::ci\u001BBuffer<Buffer<CellInfo>> ci\u0003Upp\u0002CI\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0005r_row\u0003int\u0015Upp::RichTable::r_row\tint r_row\u0003Upp\u0005R_ROW\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0006\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000!\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\br_column\u0003int\u0018Upp::RichTable::r_column\fint r_column\u0003Upp\bR_COLUMN\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\fr_first_page\u0004Rect\u001CUpp::RichTable::r_first_page\u0011Rect r_first_page\u0003Upp\fR_FIRST_PAGE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0006\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000+\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\vr_next_page\u0004Rect\u001BUpp::RichTable::r_next_page\u0010Rect r_next_page\u0003Upp\vR_NEXT_PAGE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0006\u0000\u0000\u0000-\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000:\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\rr_header_page\u0004Rect\u001DUpp::RichTable::r_header_page\u0012Rect r_header_page\u0003Upp\rR_HEADER_PAGE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0004r_py\u0005PageY\u0014Upp::RichTable::r_py\nPageY r_py\u0003Upp\u0004R_PY\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0005r_pyy\u0005PageY\u0015Upp::RichTable::r_pyy\vPageY r_pyy\u0003Upp\u0005R_PYY\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\nInvalidate\avoid ()\u001CUpp::RichTable::Invalidate()\u0011void Invalidate()\u0003Upp\nINVALIDATE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u00001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011InvalidateRefresh\u000Fvoid (int, int)*Upp::RichTable::InvalidateRefresh(int,int)$void InvalidateRefresh(int i, int j)\u0003Upp\u0011INVALIDATEREFRESH\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000X\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0011InvalidateRefresh\fvoid (Point)(Upp::RichTable::InvalidateRefresh(Point)\u001Fvoid InvalidateRefresh(Point p)\u0003Upp\u0011INVALIDATEREFRESH\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000'\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006Reduce\u0013bool (Rect &) const\"Upp::RichTable::Reduce(Rect&)const\u001Abool Reduce(Rect& r) const\u0003Upp\u0006REDUCE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000Q\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006Reduce(bool (RichContext, Rect &, Rect &) const4Upp::RichTable::Reduce(RichContext,Rect&,Rect&)constDbool Reduce(RichContext rc, Rect& first_page, Rect& next_page) const\u0003Upp\u0006REDUCE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000-\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\vGetPageRect\u0012Rect (PageY) const'Upp::RichTable::GetPageRect(PageY)const Rect GetPageRect(PageY py) const\u0003Upp\vGETPAGERECT\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\bNextPage\u001Avoid (PageY &, bool) const*Upp::RichTable::NextPage(PageY&,bool)const3void NextPage(PageY& py, bool header = false) const\u0003Upp\bNEXTPAGE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000V\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000FMakeRichContext,RichContext (RichContext, PageY, bool) const<Upp::RichTable::MakeRichContext(RichContext,PageY,bool)constPRichContext MakeRichContext(RichContext rc, PageY py, bool header = false) const\u0003Upp\u000FMAKERICHCONTEXT\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000O\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\aRealize,Layout (PageY, RichContext, int, bool) const8Upp::RichTable::Realize(PageY,RichContext,int,bool)constDLayout Realize(PageY py, RichContext arc, int ny, bool header) const\u0003Upp\aREALIZE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000D\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\bRowPaintÿ\u0000\u0000\u0000bool (PageDraw &, RichContext, const Layout &, bool, int, int, Rect, Rect, VectorMap<int, Rect> &, PaintInfo &, int, bool) constxUpp::RichTable::RowPaint(PageDraw&,RichContext,const Layout&,bool,int,int,Rect,Rect,VectorMap&,PaintInfo&,int,bool)constÿ¯\u0000\u0000\u0000bool RowPaint(PageDraw& pw, RichContext rc, const Layout& tab, bool header, int i, int ny, Rect pg, Rect npg, VectorMap<int, Rect>& frr, PaintInfo& pi, int pd, bool sel) const\u0003Upp\bROWPAINT\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000/\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\aRealize$const TabLayout &(RichContext) const)Upp::RichTable::Realize(RichContext)const.const TabLayout& Realize(RichContext rc) const\u0003Upp\aREALIZE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0006length\u0003int\u0016Upp::RichTable::length\u0012mutable int length\u0003Upp\u0006LENGTH\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0006\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\btabcount\u0003int\u0018Upp::RichTable::tabcount\u0014mutable int tabcount\u0003Upp\bTABCOUNT\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000V\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\tExpandFrr6void (VectorMap<int, Rect> &, int, int, int, int, int)9Upp::RichTable::ExpandFrr(VectorMap&,int,int,int,int,int)Tstatic void ExpandFrr(VectorMap<int, Rect>& frr, int pi, int l, int r, int t, int b)\u0003Upp\tEXPANDFRR\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0018\u0000\u0000\u0000¢\u0000\u0000\u0000\u0001\u0000\u0000\u0000¢\u0000\u0000\u0000I\u0000\u0000\u0000¢\u0000\u0000\u0000\u0001\u0000\u0000\noperator[]\u0016Array<RichCell> &(int)\u001FUpp::RichTable::operator[](int)\"Array<RichCell>& operator[](int i)\u0003Upp\nOPERATOR[]\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0018\u0000\u0000\u0000£\u0000\u0000\u0000\u0001\u0000\u0000\u0000£\u0000\u0000\u0000I\u0000\u0000\u0000£\u0000\u0000\u0000\u0001\u0000\u0000\noperator[]\"const Array<RichCell> &(int) const$Upp::RichTable::operator[](int)const.const Array<RichCell>& operator[](int i) const\u0003Upp\nOPERATOR[]\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000¤\u0000\u0000\u0000\u0001\u0000\u0000\u0000¤\u0000\u0000\u0000P\u0000\u0000\u0000¤\u0000\u0000\u0000\u0001\u0000\u0000\noperator[]\u0011RichCell &(Point)!Upp::RichTable::operator[](Point)\u001DRichCell& operator[](Point p)\u0003Upp\nOPERATOR[]\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000¥\u0000\u0000\u0000\u0001\u0000\u0000\u0000¥\u0000\u0000\u0000P\u0000\u0000\u0000¥\u0000\u0000\u0000\u0001\u0000\u0000\noperator[]\u001Dconst RichCell &(Point) const&Upp::RichTable::operator[](Point)const)const RichCell& operator[](Point p) const\u0003Upp\nOPERATOR[]\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000¦\u0000\u0000\u0000\u0001\u0000\u0000\u0000¦\u0000\u0000\u0000/\u0000\u0000\u0000¦\u0000\u0000\u0000\u0000\u0000\u0000\nGetCellPos\u0014int (int, int) const(Upp::RichTable::GetCellPos(int,int)const\"int GetCellPos(int i, int j) const\u0003Upp\nGETCELLPOS\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000§\u0000\u0000\u0000\u0001\u0000\u0000\u0000§\u0000\u0000\u0000V\u0000\u0000\u0000§\u0000\u0000\u0000\u0001\u0000\u0000\nGetCellPos\u0011int (Point) const&Upp::RichTable::GetCellPos(Point)const\u001Dint GetCellPos(Point p) const\u0003Upp\nGETCELLPOS\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000¨\u0000\u0000\u0000\u0001\u0000\u0000\u0000¨\u0000\u0000\u00002\u0000\u0000\u0000¨\u0000\u0000\u0000\u0000\u0000\u0000\rGetTableCount\u0014int (int, int) const+Upp::RichTable::GetTableCount(int,int)const%int GetTableCount(int i, int j) const\u0003Upp\rGETTABLECOUNT\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000©\u0000\u0000\u0000\u0001\u0000\u0000\u0000©\u0000\u0000\u0000Y\u0000\u0000\u0000©\u0000\u0000\u0000\u0001\u0000\u0000\rGetTableCount\u0011int (Point) const)Upp::RichTable::GetTableCount(Point)const int GetTableCount(Point p) const\u0003Upp\rGETTABLECOUNT\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000ª\u0000\u0000\u0000\u0001\u0000\u0000\u0000ª\u0000\u0000\u00002\u0000\u0000\u0000ª\u0000\u0000\u0000\u0000\u0000\u0000\rGetMasterCell\u0016Point (int, int) const+Upp::RichTable::GetMasterCell(int,int)const'Point GetMasterCell(int i, int j) const\u0003Upp\rGETMASTERCELL\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000«\u0000\u0000\u0000\u0001\u0000\u0000\u0000«\u0000\u0000\u0000Y\u0000\u0000\u0000«\u0000\u0000\u0000\u0001\u0000\u0000\rGetMasterCell\u0013Point (Point) const)Upp::RichTable::GetMasterCell(Point)const\"Point GetMasterCell(Point p) const\u0003Upp\rGETMASTERCELL\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000¬\u0000\u0000\u0000\u0001\u0000\u0000\u0000¬\u0000\u0000\u0000.\u0000\u0000\u0000¬\u0000\u0000\u0000\u0000\u0000\u0000\tGetMaster const RichCell &(int, int) const'Upp::RichTable::GetMaster(int,int)const-const RichCell& GetMaster(int i, int j) const\u0003Upp\tGETMASTER\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000®\u0000\u0000\u0000\u0001\u0000\u0000\u0000®\u0000\u0000\u0000 \u0000\u0000\u0000®\u0000\u0000\u0000\u0000\u0000\u0000\tGetLength\fint () const Upp::RichTable::GetLength()const\u0015int GetLength() const\u0003Upp\tGETLENGTH\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000¯\u0000\u0000\u0000\u0001\u0000\u0000\u0000¯\u0000\u0000\u0000$\u0000\u0000\u0000¯\u0000\u0000\u0000\u0000\u0000\u0000\rGetTableCount\fint () const$Upp::RichTable::GetTableCount()const\u0019int GetTableCount() const\u0003Upp\rGETTABLECOUNT\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000±\u0000\u0000\u0000\u0001\u0000\u0000\u0000±\u0000\u0000\u0000\"\u0000\u0000\u0000±\u0000\u0000\u0000\u0000\u0000\u0000\tRemoveRow\nvoid (int)\u001EUpp::RichTable::RemoveRow(int)\u0018void RemoveRow(int rowi)\u0003Upp\tREMOVEROW\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000²\u0000\u0000\u0000\u0001\u0000\u0000\u0000²\u0000\u0000\u0000;\u0000\u0000\u0000²\u0000\u0000\u0000\u0000\u0000\u0000\tInsertRow\u001Evoid (int, const RichStyles &)0Upp::RichTable::InsertRow(int,const RichStyles&)1void InsertRow(int rowi, const RichStyles& style)\u0003Upp\tINSERTROW\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000µ\u0000\u0000\u0000\u0001\u0000\u0000\u0000µ\u0000\u0000\u0000\u001B\u0000\u0000\u0000µ\u0000\u0000\u0000\u0000\u0000\u0000\nNormalize0\avoid ()\u001CUpp::RichTable::Normalize0()\u0011void Normalize0()\u0003Upp\nNORMALIZE0\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000·\u0000\u0000\u0000\u0001\u0000\u0000\u0000·\u0000\u0000\u0000*\u0000\u0000\u0000·\u0000\u0000\u0000\u0000\u0000\u0000\u0004Copy\u001ERichTable (const Rect &) const&Upp::RichTable::Copy(const Rect&)const%RichTable Copy(const Rect& sel) const\u0003Upp\u0004COPY\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000¸\u0000\u0000\u0000\u0001\u0000\u0000\u0000¸\u0000\u0000\u00005\u0000\u0000\u0000¸\u0000\u0000\u0000\u0000\u0000\u0000\u0005Paste\u001Fvoid (Point, const RichTable &)-Upp::RichTable::Paste(Point,const RichTable&)+void Paste(Point pos, const RichTable& tab)\u0003Upp\u0005PASTE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000¹\u0000\u0000\u0000\u0001\u0000\u0000\u0000¹\u0000\u0000\u0000#\u0000\u0000\u0000¹\u0000\u0000\u0000\u0000\u0000\u0000\nRemoveRow0\nvoid (int)\u001FUpp::RichTable::RemoveRow0(int)\u0019void RemoveRow0(int rowi)\u0003Upp\nREMOVEROW0\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000º\u0000\u0000\u0000\u0001\u0000\u0000\u0000º\u0000\u0000\u0000(\u0000\u0000\u0000º\u0000\u0000\u0000\u0000\u0000\u0000\rRemoveColumn0\nvoid (int)\"Upp::RichTable::RemoveColumn0(int)\u001Evoid RemoveColumn0(int column)\u0003Upp\rREMOVECOLUMN0\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000»\u0000\u0000\u0000\u0001\u0000\u0000\u0000»\u0000\u0000\u0000'\u0000\u0000\u0000»\u0000\u0000\u0000\u0000\u0000\u0000\fRemoveColumn\nvoid (int)!Upp::RichTable::RemoveColumn(int)\u001Dvoid RemoveColumn(int column)\u0003Upp\fREMOVECOLUMN\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000¼\u0000\u0000\u0000\u0001\u0000\u0000\u0000¼\u0000\u0000\u0000@\u0000\u0000\u0000¼\u0000\u0000\u0000\u0000\u0000\u0000\fInsertColumn\u001Evoid (int, const RichStyles &)3Upp::RichTable::InsertColumn(int,const RichStyles&)6void InsertColumn(int column, const RichStyles& style)\u0003Upp\fINSERTCOLUMN\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000½\u0000\u0000\u0000\u0001\u0000\u0000\u0000½\u0000\u0000\u0000\"\u0000\u0000\u0000½\u0000\u0000\u0000\u0000\u0000\u0000\nIsRowEmpty\nbool (int)\u001FUpp::RichTable::IsRowEmpty(int)\u0018bool IsRowEmpty(int row)\u0003Upp\nISROWEMPTY\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000¾\u0000\u0000\u0000\u0001\u0000\u0000\u0000¾\u0000\u0000\u0000(\u0000\u0000\u0000¾\u0000\u0000\u0000\u0000\u0000\u0000\rIsColumnEmpty\nbool (int)\"Upp::RichTable::IsColumnEmpty(int)\u001Ebool IsColumnEmpty(int column)\u0003Upp\rISCOLUMNEMPTY\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000¿\u0000\u0000\u0000\u0001\u0000\u0000\u0000¿\u0000\u0000\u0000D\u0000\u0000\u0000¿\u0000\u0000\u0000\u0000\u0000\u0000\tSplitCell&void (Point, Size, const RichStyles &)7Upp::RichTable::SplitCell(Point,Size,const RichStyles&):void SplitCell(Point cl, Size sz, const RichStyles& style)\u0003Upp\tSPLITCELL\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000À\u0000\u0000\u0000\u0001\u0000\u0000\u0000À\u0000\u0000\u00006\u0000\u0000\u0000À\u0000\u0000\u0000\u0000\u0000\u0000\rGetCellFormat%RichCell::Format (const Rect &) const/Upp::RichTable::GetCellFormat(const Rect&)const5RichCell::Format GetCellFormat(const Rect& sel) const\u0003Upp\rGETCELLFORMAT\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000Á\u0000\u0000\u0000\u0001\u0000\u0000\u0000Á\u0000\u0000\u0000<\u0000\u0000\u0000Â\u0000\u0000\u0000\u0000\u0000\u0000\rSetCellFormat9void (const Rect &, const RichCell::Format &, bool, bool)LUpp::RichTable::SetCellFormat(const Rect&,const RichCell::Format&,bool,bool)]void SetCellFormat(const Rect& sel, const RichCell::Format& fmt, bool setkeep, bool setround)\u0003Upp\rSETCELLFORMAT\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000Ä\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ä\u0000\u0000\u0000.\u0000\u0000\u0000Ä\u0000\u0000\u0000\u0000\u0000\u0000\tGetHeight\u0019PageY (RichContext) const+Upp::RichTable::GetHeight(RichContext)const%PageY GetHeight(RichContext rc) const\u0003Upp\tGETHEIGHT\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000Å\u0000\u0000\u0000\u0001\u0000\u0000\u0000Å\u0000\u0000\u0000+\u0000\u0000\u0000Å\u0000\u0000\u0000\u0000\u0000\u0000\u0006GetTop\u0019PageY (RichContext) const(Upp::RichTable::GetTop(RichContext)const\"PageY GetTop(RichContext rc) const\u0003Upp\u0006GETTOP\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000Æ\u0000\u0000\u0000\u0001\u0000\u0000\u0000Æ\u0000\u0000\u0000]\u0000\u0000\u0000Æ\u0000\u0000\u0000\u0000\u0000\u0000\u0005Paint=void (PageDraw &, RichContext, const PaintInfo &, bool) constGUpp::RichTable::Paint(PageDraw&,RichContext,const PaintInfo&,bool)constSvoid Paint(PageDraw& pw, RichContext rc, const PaintInfo& pi, bool baselevel) const\u0003Upp\u0005PAINT\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000Ç\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ç\u0000\u0000\u00006\u0000\u0000\u0000Ç\u0000\u0000\u0000\u0000\u0000\u0000\bGetCaret\"RichCaret (int, RichContext) const.Upp::RichTable::GetCaret(int,RichContext)const1RichCaret GetCaret(int pos, RichContext rc) const\u0003Upp\bGETCARET\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000È\u0000\u0000\u0000\u0001\u0000\u0000\u0000È\u0000\u0000\u0000;\u0000\u0000\u0000È\u0000\u0000\u0000\u0000\u0000\u0000\u0006GetPos#int (int, PageY, RichContext) const2Upp::RichTable::GetPos(int,PageY,RichContext)const0int GetPos(int x, PageY y, RichContext rc) const\u0003Upp\u0006GETPOS\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000É\u0000\u0000\u0000\u0001\u0000\u0000\u0000É\u0000\u0000\u0000J\u0000\u0000\u0000É\u0000\u0000\u0000\u0000\u0000\u0000\vGetVertMove&int (int, int, RichContext, int) const9Upp::RichTable::GetVertMove(int,int,RichContext,int)const?int GetVertMove(int pos, int gx, RichContext rc, int dir) const\u0003Upp\vGETVERTMOVE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000Ê\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ê\u0000\u0000\u0000M\u0000\u0000\u0000Ê\u0000\u0000\u0000\u0000\u0000\u0000\tGetHotPos/RichHotPos (int, PageY, int, RichContext) const9Upp::RichTable::GetHotPos(int,PageY,int,RichContext)constIRichHotPos GetHotPos(int x, PageY y, int tolerance, RichContext rc) const\u0003Upp\tGETHOTPOS\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000Ë\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ë\u0000\u0000\u0000)\u0000\u0000\u0000Ë\u0000\u0000\u0000\u0000\u0000\u0000\tAdjustSel\u0013void (Rect &) const%Upp::RichTable::AdjustSel(Rect&)const\u001Fvoid AdjustSel(Rect& sel) const\u0003Upp\tADJUSTSEL\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000Í\u0000\u0000\u0000\u0001\u0000\u0000\u0000Í\u0000\u0000\u00003\u0000\u0000\u0000Í\u0000\u0000\u0000\u0000\u0000\u0000\bGetWidth\u001Eint (const RichStyles &) const0Upp::RichTable::GetWidth(const RichStyles&)const(int GetWidth(const RichStyles& st) const\u0003Upp\bGETWIDTH\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000Ï\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ï\u0000\u0000\u0000[\u0000\u0000\u0000Ï\u0000\u0000\u0000\u0000\u0000\u0000\fGatherValPos8void (Vector<RichValPos> &, RichContext, int, int) const>Upp::RichTable::GatherValPos(Vector&,RichContext,int,int)constQvoid GatherValPos(Vector<RichValPos>& f, RichContext rc, int pos, int type) const\u0003Upp\fGATHERVALPOS\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000Ð\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ð\u0000\u0000\u0000\u001E\u0000\u0000\u0000Ð\u0000\u0000\u0000\u0000\u0000\u0000\rClearSpelling\avoid ()\u001FUpp::RichTable::ClearSpelling()\u0014void ClearSpelling()\u0003Upp\rCLEARSPELLING\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000Ò\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ò\u0000\u0000\u0000'\u0000\u0000\u0000Ò\u0000\u0000\u0000\u0000\u0000\u0000\bFindCell\u0013Point (int &) const#Upp::RichTable::FindCell(int&)const\u001EPoint FindCell(int& pos) const\u0003Upp\bFINDCELL\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000Ó\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ó\u0000\u0000\u0000>\u0000\u0000\u0000Ó\u0000\u0000\u0000\u0000\u0000\u0000\nGetRichPos'RichPos (int, const RichStyles &) const6Upp::RichTable::GetRichPos(int,const RichStyles&)const7RichPos GetRichPos(int pos, const RichStyles& st) const\u0003Upp\nGETRICHPOS\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000Õ\u0000\u0000\u0000\u0001\u0000\u0000\u0000Õ\u0000\u0000\u0000J\u0000\u0000\u0000Õ\u0000\u0000\u0000\u0001\u0000\u0000\vGetCellInfo\u0013CellInfo (int, int)$Upp::RichTable::GetCellInfo(int,int)\"CellInfo GetCellInfo(int i, int j)\u0003Upp\vGETCELLINFO\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000×\u0000\u0000\u0000\u0001\u0000\u0000\u0000×\u0000\u0000\u0000J\u0000\u0000\u0000×\u0000\u0000\u0000\u0000\u0000\u0000\nGetInvalid)int (PageY &, PageY &, RichContext) const:Upp::RichTable::GetInvalid(PageY&,PageY&,RichContext)const?int GetInvalid(PageY& top, PageY& bottom, RichContext rc) const\u0003Upp\nGETINVALID\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000Ø\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ø\u0000\u0000\u0000\u0019\u0000\u0000\u0000Ø\u0000\u0000\u0000\u0000\u0000\u0000\bValidate\avoid ()\u001AUpp::RichTable::Validate()\u000Fvoid Validate()\u0003Upp\bVALIDATE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000Ú\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ú\u0000\u0000\u0000T\u0000\u0000\u0000Ú\u0000\u0000\u0000\u0000\u0000\u0000\tApplyZoom3void (Zoom, const RichStyles &, const RichStyles &)CUpp::RichTable::ApplyZoom(Zoom,const RichStyles&,const RichStyles&)Jvoid ApplyZoom(Zoom z, const RichStyles& ostyle, const RichStyles& zstyle)\u0003Upp\tAPPLYZOOM\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000Ý\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ý\u0000\u0000\u0000*\u0000\u0000\u0000Ý\u0000\u0000\u0000\u0000\u0000\u0000\tAddColumn\nvoid (int)\u001EUpp::RichTable::AddColumn(int)\u0016void AddColumn(int cx)\u0003Upp\tADDCOLUMN\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000Þ\u0000\u0000\u0000\u0001\u0000\u0000\u0000Þ\u0000\u0000\u0000>\u0000\u0000\u0000Þ\u0000\u0000\u0000\u0000\u0000\u0000\aSetPick\u001Bvoid (int, int, RichTxt &&)*Upp::RichTable::SetPick(int,int,RichTxt&&)*void SetPick(int i, int j, RichTxt&& text)\u0003Upp\aSETPICK\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000ß\u0000\u0000\u0000\u0001\u0000\u0000\u0000ß\u0000\u0000\u0000.\u0000\u0000\u0000ß\u0000\u0000\u0000\u0000\u0000\u0000\aGetPick\u0012RichTxt (int, int) Upp::RichTable::GetPick(int,int)\u001DRichTxt GetPick(int i, int j)\u0003Upp\aGETPICK\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000à\u0000\u0000\u0000\u0001\u0000\u0000\u0000à\u0000\u0000\u0000[\u0000\u0000\u0000à\u0000\u0000\u0000\u0001\u0000\u0000\u0003Get\u001Fconst RichTxt &(int, int) const!Upp::RichTable::Get(int,int)const&const RichTxt& Get(int i, int j) const\u0003Upp\u0003GET\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000á\u0000\u0000\u0000\u0001\u0000\u0000\u0000á\u0000\u0000\u0000>\u0000\u0000\u0000á\u0000\u0000\u0000\u0000\u0000\u0000\u0006SetQTF\u001Dvoid (int, int, const char *)+Upp::RichTable::SetQTF(int,int,const char*)*void SetQTF(int i, int j, const char *qtf)\u0003Upp\u0006SETQTF\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000â\u0000\u0000\u0000\u0001\u0000\u0000\u0000â\u0000\u0000\u0000M\u0000\u0000\u0000â\u0000\u0000\u0000\u0000\u0000\u0000\tSetFormat)void (int, int, const RichCell::Format &):Upp::RichTable::SetFormat(int,int,const RichCell::Format&)9void SetFormat(int i, int j, const RichCell::Format& fmt)\u0003Upp\tSETFORMAT\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000ã\u0000\u0000\u0000\u0001\u0000\u0000\u0000ã\u0000\u0000\u0000]\u0000\u0000\u0000ã\u0000\u0000\u0000\u0001\u0000\u0000\tGetFormat(const RichCell::Format &(int, int) const'Upp::RichTable::GetFormat(int,int)const5const RichCell::Format& GetFormat(int i, int j) const\u0003Upp\tGETFORMAT\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000ä\u0000\u0000\u0000\u0001\u0000\u0000\u0000ä\u0000\u0000\u0000Z\u0000\u0000\u0000ä\u0000\u0000\u0000\u0001\u0000\u0000\noperator()\u0015bool (int, int) const(Upp::RichTable::operator()(int,int)const#bool operator()(int i, int j) const\u0003Upp\nOPERATOR()\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000å\u0000\u0000\u0000\u0001\u0000\u0000\u0000å\u0000\u0000\u0000D\u0000\u0000\u0000å\u0000\u0000\u0000\u0000\u0000\u0000\aSetSpan\u0019void (int, int, int, int)(Upp::RichTable::SetSpan(int,int,int,int)0void SetSpan(int i, int j, int vspan, int hspan)\u0003Upp\aSETSPAN\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000æ\u0000\u0000\u0000\u0001\u0000\u0000\u0000æ\u0000\u0000\u00004\u0000\u0000\u0000æ\u0000\u0000\u0000\u0000\u0000\u0000\aGetSpan\u0015Size (int, int) const%Upp::RichTable::GetSpan(int,int)const Size GetSpan(int i, int j) const\u0003Upp\aGETSPAN\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000ç\u0000\u0000\u0000\u0001\u0000\u0000\u0000ç\u0000\u0000\u00005\u0000\u0000\u0000ç\u0000\u0000\u0000\u0000\u0000\u0000\tSetFormat\u0015void (const Format &)(Upp::RichTable::SetFormat(const Format&)!void SetFormat(const Format& fmt)\u0003Upp\tSETFORMAT\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000è\u0000\u0000\u0000\u0001\u0000\u0000\u0000è\u0000\u0000\u0000R\u0000\u0000\u0000è\u0000\u0000\u0000\u0001\u0000\u0000\tGetFormat\u0016const Format &() const Upp::RichTable::GetFormat()const\u001Fconst Format& GetFormat() const\u0003Upp\tGETFORMAT\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000ê\u0000\u0000\u0000\u0001\u0000\u0000\u0000ê\u0000\u0000\u0000d\u0000\u0000\u0000ê\u0000\u0000\u0000\u0001\u0000\u0000\nGetColumns\fint () const!Upp::RichTable::GetColumns()const\u0016int GetColumns() const\u0003Upp\nGETCOLUMNS\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000ë\u0000\u0000\u0000\u0001\u0000\u0000\u0000ë\u0000\u0000\u0000[\u0000\u0000\u0000ë\u0000\u0000\u0000\u0001\u0000\u0000\aGetRows\fint () const\u001EUpp::RichTable::GetRows()const\u0013int GetRows() const\u0003Upp\aGETROWS\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000ì\u0000\u0000\u0000\u0001\u0000\u0000\u0000ì\u0000\u0000\u0000i\u0000\u0000\u0000ì\u0000\u0000\u0000\u0001\u0000\u0000\aGetSize\rSize () const\u001EUpp::RichTable::GetSize()const\u0014Size GetSize() const\u0003Upp\aGETSIZE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000î\u0000\u0000\u0000\u0001\u0000\u0000\u0000î\u0000\u0000\u0000\u001A\u0000\u0000\u0000î\u0000\u0000\u0000\u0000\u0000\u0000\tNormalize\avoid ()\u001BUpp::RichTable::Normalize()\u0010void Normalize()\u0003Upp\tNORMALIZE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000ð\u0000\u0000\u0000\u0001\u0000\u0000\u0000ð\u0000\u0000\u0000\u0018\u0000\u0000\u0000ð\u0000\u0000\u0000\u0001\u0000\u0000\tRichTable#void (RichTable &&) noexcept(false)0Upp::RichTable::RichTable(RichTable&&)()=default\u001ERichTable(RichTable&&) (false)\u0003Upp\tRICHTABLE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0001\u0000\u0000\u0000ð\u0000\u0000\u0000\u0001\u0000\u0000\u0000ð\u0000\u0000\u0000\u0018\u0000\u0000\u0000ð\u0000\u0000\u0000\u0001\u0000\u0000\toperator=)RichTable &(RichTable &&) noexcept(false)0Upp::RichTable::operator=(RichTable&&)()=default\u0013RichTable& operator\u0003Upp\tOPERATOR=\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000ò\u0000\u0000\u0000\u0001\u0000\u0000\u0000ò\u0000\u0000\u0000%\u0000\u0000\u0000ò\u0000\u0000\u0000\u0000\u0000\u0000\tRichTable\u001Dvoid (const RichTable &, int)/Upp::RichTable::RichTable(const RichTable&,int)$RichTable(const RichTable& src, int)\u0003Upp\tRICHTABLE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000ó\u0000\u0000\u0000\u0001\u0000\u0000\u0000ó\u0000\u0000\u0000\f\u0000\u0000\u0000ó\u0000\u0000\u0000\u0000\u0000\u0000\tRichTable\avoid ()\u001BUpp::RichTable::RichTable()\vRichTable()\u0003Upp\tRICHTABLE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000end\u0000e\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Text.h","value":"datak\u0004\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\bRichText\rUpp::RichText\rUpp::RichText:RichText : public RichTxt, public DeepCopyOption<RichText>\u0003Upp\bRICHTEXT\rUpp::RichText\rUPP::RICHTEXT Upp::RichTxt;Upp::DeepCopyOption\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0005mutex\u0005Mutex\u0014Upp::RichText::mutex\u0013mutable Mutex mutex\u0003Upp\u0005MUTEX\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0005style\nRichStyles\u0014Upp::RichText::style\u0010RichStyles style\u0003Upp\u0005STYLE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0001\u0000\u0000\vfooter_hack\u0006String\u001AUpp::RichText::footer_hack\u0012String footer_hack\u0003Upp\vFOOTER_HACK\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\anolinks\u0004bool\u0016Upp::RichText::nolinks\fbool nolinks\u0003Upp\aNOLINKS\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\f\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0004Init\avoid ()\u0015Upp::RichText::Init()\vvoid Init()\u0003Upp\u0004INIT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\f\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\b\u0000\u0000\u0000?\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0011PaintHeaderFooterIvoid (PageDraw &, const Rect &, PageY, const PaintInfo &, int, int) const[Upp::RichText::PaintHeaderFooter(PageDraw&,const Rect&,PageY,const PaintInfo&,int,int)constwvoid PaintHeaderFooter(PageDraw& pw, const Rect& page, PageY py, const PaintInfo& pi, int from_page, int to_page) const\u0003Upp\u0011PAINTHEADERFOOTER\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000\v\u0000\u0000\u0000\u0001\u0000\u0000\u0000\v\u0000\u0000\u0000\u0015\u0000\u0000\u0000\v\u0000\u0000\u0000\u0000\u0000\u0000\rStyleChangeOp\u001CUpp::RichText::StyleChangeOp\u001CUpp::RichText::StyleChangeOp\rStyleChangeOp\u0003Upp\rSTYLECHANGEOP\u001CUpp::RichText::StyleChangeOp\u001CUPP::RICHTEXT::STYLECHANGEOP\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u0000\u0001\u0000\u0000\u0000\f\u0000\u0000\u0000\u0013\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\vSetStylesOp\u001AUpp::RichText::SetStylesOp\u001AUpp::RichText::SetStylesOp\vSetStylesOp\u0003Upp\vSETSTYLESOP\u001AUpp::RichText::SetStylesOp\u001AUPP::RICHTEXT::SETSTYLESOP\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0000\r\u0000\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\rRemoveStyleOp\u001CUpp::RichText::RemoveStyleOp\u001CUpp::RichText::RemoveStyleOp\rRemoveStyleOp\u0003Upp\rREMOVESTYLEOP\u001CUpp::RichText::RemoveStyleOp\u001CUPP::RICHTEXT::REMOVESTYLEOP\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\rMergeStylesOp\u001CUpp::RichText::MergeStylesOp\u001CUpp::RichText::MergeStylesOp\rMergeStylesOp\u0003Upp\rMERGESTYLESOP\u001CUpp::RichText::MergeStylesOp\u001CUPP::RICHTEXT::MERGESTYLESOP\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0010OverrideStylesOp\u001FUpp::RichText::OverrideStylesOp\u001FUpp::RichText::OverrideStylesOp\u0010OverrideStylesOp\u0003Upp\u0010OVERRIDESTYLESOP\u001FUpp::RichText::OverrideStylesOp\u001FUPP::RICHTEXT::OVERRIDESTYLESOP\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0005Clear\avoid ()\u0016Upp::RichText::Clear()\fvoid Clear()\u0003Upp\u0005CLEAR\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0015\u0000\u0000\u0000X\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0001\u0000\u0000\rGetStyleCount\fint () const#Upp::RichText::GetStyleCount()const\u0019int GetStyleCount() const\u0003Upp\rGETSTYLECOUNT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0016\u0000\u0000\u0000W\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0000\nGetStyleId\u0010Uuid (int) const#Upp::RichText::GetStyleId(int)const\u001CUuid GetStyleId(int i) const\u0003Upp\nGETSTYLEID\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0017\u0000\u0000\u0000;\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\nGetStyleId\u001BUuid (const String &) const-Upp::RichText::GetStyleId(const String&)const)Uuid GetStyleId(const String& name) const\u0003Upp\nGETSTYLEID\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0018\u0000\u0000\u0000P\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\bGetStyle\u001Cconst RichStyle &(int) const!Upp::RichText::GetStyle(int)const&const RichStyle& GetStyle(int i) const\u0003Upp\bGETSTYLE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0019\u0000\u0000\u0000`\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0000\bGetStyle%const RichStyle &(const Uuid &) const)Upp::RichText::GetStyle(const Uuid&)const/const RichStyle& GetStyle(const Uuid& id) const\u0003Upp\bGETSTYLE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001A\u0000\u0000\u0000H\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0000\u0000\u0000\bSetStyle&void (const Uuid &, const RichStyle &)5Upp::RichText::SetStyle(const Uuid&,const RichStyle&)6void SetStyle(const Uuid& id, const RichStyle& _style)\u0003Upp\bSETSTYLE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001B\u0000\u0000\u0000[\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0001\u0000\u0000\bHasStyle\u0013bool (const Uuid &)$Upp::RichText::HasStyle(const Uuid&)\u001Dbool HasStyle(const Uuid& id)\u0003Upp\bHASSTYLE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001C\u0000\u0000\u00002\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0000\u0000\u0000\vRemoveStyle\u0013void (const Uuid &)'Upp::RichText::RemoveStyle(const Uuid&) void RemoveStyle(const Uuid& id)\u0003Upp\vREMOVESTYLE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001E\u0000\u0000\u0000M\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0000\tGetStyles\u001Aconst RichStyles &() const\u001FUpp::RichText::GetStyles()const#const RichStyles& GetStyles() const\u0003Upp\tGETSTYLES\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001F\u0000\u0000\u0000:\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0000\u0000\u0000\tSetStyles\u0019void (const RichStyles &)+Upp::RichText::SetStyles(const RichStyles&)(void SetStyles(const RichStyles& styles)\u0003Upp\tSETSTYLES\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\u0000 \u0000\u0000\u0000T\u0000\u0000\u0000!\u0000\u0000\u0000\u0000\u0000\u0000\u000EOverrideStyles%void (const RichStyles &, bool, bool):Upp::RichText::OverrideStyles(const RichStyles&,bool,bool)bvoid OverrideStyles(const RichStyles& masterstyles, bool matchname = true, bool addmissing = true)\u0003Upp\u000EOVERRIDESTYLES\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000\"\u0000\u0000\u0000\u0001\u0000\u0000\u0000\"\u0000\u0000\u00008\u0000\u0000\u0000\"\u0000\u0000\u0000\u0000\u0000\u0000\vMergeStyles\u0017void (const RichText &)+Upp::RichText::MergeStyles(const RichText&)&void MergeStyles(const RichText& text)\u0003Upp\vMERGESTYLES\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000$\u0000\u0000\u0000\u0001\u0000\u0000\u0000$\u0000\u0000\u0000^\u0000\u0000\u0000$\u0000\u0000\u0000\u0001\u0000\u0000\u0003Get\u0014RichPara (int) const\u001CUpp::RichText::Get(int)const\u0019RichPara Get(int i) const\u0003Upp\u0003GET\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000%\u0000\u0000\u0000\u0001\u0000\u0000\u0000%\u0000\u0000\u0000W\u0000\u0000\u0000%\u0000\u0000\u0000\u0001\u0000\u0000\u0003Cat\u0017void (const RichPara &)#Upp::RichText::Cat(const RichPara&)\u001Bvoid Cat(const RichPara& p)\u0003Upp\u0003CAT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000&\u0000\u0000\u0000\u0001\u0000\u0000\u0000&\u0000\u0000\u0000,\u0000\u0000\u0000&\u0000\u0000\u0000\u0000\u0000\u0000\aCatPick\u0012void (RichText &&)\"Upp::RichText::CatPick(RichText&&)\u001Avoid CatPick(RichText&& p)\u0003Upp\aCATPICK\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000)\u0000\u0000\u0000\u0001\u0000\u0000\u0000)\u0000\u0000\u0000d\u0000\u0000\u0000)\u0000\u0000\u0000\u0000\u0000\u0000\aContext?RichContext (const Rect &, PageY, RichText *, RichText *) constBUpp::RichText::Context(const Rect&,PageY,RichText*,RichText*)constYRichContext Context(const Rect& page, PageY py, RichText *header, RichText *footer) const\u0003Upp\aCONTEXT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000*\u0000\u0000\u0000\u0001\u0000\u0000\u0000*\u0000\u0000\u0000p\u0000\u0000\u0000*\u0000\u0000\u0000\u0001\u0000\u0000\aContext'RichContext (const Rect &, PageY) const.Upp::RichText::Context(const Rect&,PageY)const5RichContext Context(const Rect& page, PageY py) const\u0003Upp\aCONTEXT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000-\u0000\u0000\u0000\u0001\u0000\u0000\u0000-\u0000\u0000\u0000H\u0000\u0000\u0000-\u0000\u0000\u0000\u0000\u0000\u0000\nGetRichPos\u0018RichPos (int, int) const'Upp::RichText::GetRichPos(int,int)const<RichPos GetRichPos(int pos, int maxlevel = 2147483647) const\u0003Upp\nGETRICHPOS\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000.\u0000\u0000\u0000\u0001\u0000\u0000\u0000.\u0000\u0000\u0000[\u0000\u0000\u0000.\u0000\u0000\u0000\u0001\u0000\u0000\noperator[]\u000Fint (int) const#Upp::RichText::operator[](int)const\u001Dint operator[](int pos) const\u0003Upp\nOPERATOR[]\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u00000\u0000\u0000\u0000\u0001\u0000\u0000\u00000\u0000\u0000\u0000(\u0000\u0000\u00000\u0000\u0000\u0000\u0000\u0000\u0000\tApplyZoom\vvoid (Zoom)\u001EUpp::RichText::ApplyZoom(Zoom)\u0016void ApplyZoom(Zoom z)\u0003Upp\tAPPLYZOOM\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u00002\u0000\u0000\u0000\u0001\u0000\u0000\u00002\u0000\u0000\u0000B\u0000\u0000\u00002\u0000\u0000\u0000\u0000\u0000\u0000\tGetHeight!PageY (PageY, const Rect &) const0Upp::RichText::GetHeight(PageY,const Rect&)const1PageY GetHeight(PageY py, const Rect& page) const\u0003Upp\tGETHEIGHT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u00003\u0000\u0000\u0000\u0001\u0000\u0000\u00003\u0000\u0000\u00008\u0000\u0000\u00003\u0000\u0000\u0000\u0000\u0000\u0000\tGetHeight\u001APageY (const Rect &) const*Upp::RichText::GetHeight(const Rect&)const'PageY GetHeight(const Rect& page) const\u0003Upp\tGETHEIGHT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u00004\u0000\u0000\u0000\u0001\u0000\u0000\u00004\u0000\u0000\u0000`\u0000\u0000\u00004\u0000\u0000\u0000\u0000\u0000\u0000\u0005Paint?void (PageDraw &, PageY, const Rect &, const PaintInfo &) constGUpp::RichText::Paint(PageDraw&,PageY,const Rect&,const PaintInfo&)constNvoid Paint(PageDraw& w, PageY py, const Rect& page, const PaintInfo& pi) const\u0003Upp\u0005PAINT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u00005\u0000\u0000\u0000\u0001\u0000\u0000\u00005\u0000\u0000\u0000V\u0000\u0000\u00005\u0000\u0000\u0000\u0000\u0000\u0000\u0005Paint8void (PageDraw &, const Rect &, const PaintInfo &) constAUpp::RichText::Paint(PageDraw&,const Rect&,const PaintInfo&)constDvoid Paint(PageDraw& w, const Rect& page, const PaintInfo& pi) const\u0003Upp\u0005PAINT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u00006\u0000\u0000\u0000\u0001\u0000\u0000\u00006\u0000\u0000\u0000@\u0000\u0000\u00006\u0000\u0000\u0000\u0000\u0000\u0000\bGetCaret#RichCaret (int, const Rect &) const-Upp::RichText::GetCaret(int,const Rect&)const3RichCaret GetCaret(int pos, const Rect& page) const\u0003Upp\bGETCARET\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u00007\u0000\u0000\u0000\u0001\u0000\u0000\u00007\u0000\u0000\u0000E\u0000\u0000\u00007\u0000\u0000\u0000\u0000\u0000\u0000\u0006GetPos$int (int, PageY, const Rect &) const1Upp::RichText::GetPos(int,PageY,const Rect&)const2int GetPos(int x, PageY y, const Rect& page) const\u0003Upp\u0006GETPOS\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u00008\u0000\u0000\u0000\u0001\u0000\u0000\u00008\u0000\u0000\u0000W\u0000\u0000\u00008\u0000\u0000\u0000\u0000\u0000\u0000\tGetHotPos0RichHotPos (int, PageY, int, const Rect &) const8Upp::RichText::GetHotPos(int,PageY,int,const Rect&)constKRichHotPos GetHotPos(int x, PageY y, int tolerance, const Rect& page) const\u0003Upp\tGETHOTPOS\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u00009\u0000\u0000\u0000\u0001\u0000\u0000\u00009\u0000\u0000\u0000T\u0000\u0000\u00009\u0000\u0000\u0000\u0000\u0000\u0000\vGetVertMove'int (int, int, const Rect &, int) const8Upp::RichText::GetVertMove(int,int,const Rect&,int)constAint GetVertMove(int pos, int gx, const Rect& page, int dir) const\u0003Upp\vGETVERTMOVE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000:\u0000\u0000\u0000\u0001\u0000\u0000\u0000:\u0000\u0000\u0000'\u0000\u0000\u0000:\u0000\u0000\u0000\u0000\u0000\u0000\bGetWidth\fint () const\u001EUpp::RichText::GetWidth()const\u0014int GetWidth() const\u0003Upp\bGETWIDTH\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000<\u0000\u0000\u0000\u0001\u0000\u0000\u0000<\u0000\u0000\u0000.\u0000\u0000\u0000<\u0000\u0000\u0000\u0000\u0000\u0000\tGetHeight\u000Fint (int) const\"Upp::RichText::GetHeight(int)const\u001Bint GetHeight(int cx) const\u0003Upp\tGETHEIGHT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000=\u0000\u0000\u0000\u0001\u0000\u0000\u0000=\u0000\u0000\u00009\u0000\u0000\u0000=\u0000\u0000\u0000\u0000\u0000\u0000\tGetHeight\u0015int (Zoom, int) const'Upp::RichText::GetHeight(Zoom,int)const&int GetHeight(Zoom zoom, int cx) const\u0003Upp\tGETHEIGHT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000>\u0000\u0000\u0000\u0001\u0000\u0000\u0000>\u0000\u0000\u0000V\u0000\u0000\u0000>\u0000\u0000\u0000\u0000\u0000\u0000\u0005Paint5void (Draw &, int, int, int, const PaintInfo &) const=Upp::RichText::Paint(Draw&,int,int,int,const PaintInfo&)constDvoid Paint(Draw& w, int x, int y, int cx, const PaintInfo& pi) const\u0003Upp\u0005PAINT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000?\u0000\u0000\u0000\u0001\u0000\u0000\u0000?\u0000\u0000\u0000L\u0000\u0000\u0000?\u0000\u0000\u0000\u0000\u0000\u0000\u0005Paint(void (Zoom, Draw &, int, int, int) const1Upp::RichText::Paint(Zoom,Draw&,int,int,int)const:void Paint(Zoom zoom, Draw& w, int x, int y, int cx) const\u0003Upp\u0005PAINT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000@\u0000\u0000\u0000\u0001\u0000\u0000\u0000@\u0000\u0000\u0000A\u0000\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\u0005Paint\"void (Draw &, int, int, int) const,Upp::RichText::Paint(Draw&,int,int,int)const/void Paint(Draw& w, int x, int y, int cx) const\u0003Upp\u0005PAINT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000B\u0000\u0000\u0000\u0001\u0000\u0000\u0000B\u0000\u0000\u0000B\u0000\u0000\u0000B\u0000\u0000\u0000\u0000\u0000\u0000\tGetValPos,Vector<RichValPos> (const Rect &, int) const.Upp::RichText::GetValPos(const Rect&,int)const>Vector<RichValPos> GetValPos(const Rect& page, int type) const\u0003Upp\tGETVALPOS\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000D\u0000\u0000\u0000\u0001\u0000\u0000\u0000D\u0000\u0000\u0000A\u0000\u0000\u0000D\u0000\u0000\u0000\u0000\u0000\u0000\fAdjustCursor\u0014int (int, int) const)Upp::RichText::AdjustCursor(int,int)const.int AdjustCursor(int anchor, int cursor) const\u0003Upp\fADJUSTCURSOR\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000F\u0000\u0000\u0000\u0001\u0000\u0000\u0000F\u0000\u0000\u00001\u0000\u0000\u0000F\u0000\u0000\u0000\u0000\u0000\u0000\u0006Remove\u000Fvoid (int, int)\u001EUpp::RichText::Remove(int,int)\u001Fvoid Remove(int pos, int count)\u0003Upp\u0006REMOVE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000G\u0000\u0000\u0000\u0001\u0000\u0000\u0000G\u0000\u0000\u00009\u0000\u0000\u0000G\u0000\u0000\u0000\u0000\u0000\u0000\u0006Insert\u001Cvoid (int, const RichText &)*Upp::RichText::Insert(int,const RichText&)'void Insert(int pos, const RichText& p)\u0003Upp\u0006INSERT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000H\u0000\u0000\u0000\u0001\u0000\u0000\u0000H\u0000\u0000\u00005\u0000\u0000\u0000H\u0000\u0000\u0000\u0000\u0000\u0000\u0004Copy\u0019RichText (int, int) const!Upp::RichText::Copy(int,int)const'RichText Copy(int pos, int count) const\u0003Upp\u0004COPY\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000J\u0000\u0000\u0000\u0001\u0000\u0000\u0000J\u0000\u0000\u0000>\u0000\u0000\u0000J\u0000\u0000\u0000\u0000\u0000\u0000\rGetFormatInfo\u001BFormatInfo (int, int) const*Upp::RichText::GetFormatInfo(int,int)const2FormatInfo GetFormatInfo(int pos, int count) const\u0003Upp\rGETFORMATINFO\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000K\u0000\u0000\u0000\u0001\u0000\u0000\u0000K\u0000\u0000\u0000P\u0000\u0000\u0000K\u0000\u0000\u0000\u0000\u0000\u0000\u000FApplyFormatInfo#void (int, const FormatInfo &, int)9Upp::RichText::ApplyFormatInfo(int,const FormatInfo&,int)>void ApplyFormatInfo(int pos, const FormatInfo& fi, int count)\u0003Upp\u000FAPPLYFORMATINFO\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000L\u0000\u0000\u0000\u0001\u0000\u0000\u0000L\u0000\u0000\u0000<\u0000\u0000\u0000L\u0000\u0000\u0000\u0000\u0000\u0000\fReplaceStyle\u0018void (int, const Uuid &),Upp::RichText::ReplaceStyle(int,const Uuid&)*void ReplaceStyle(int pos, const Uuid& id)\u0003Upp\fREPLACESTYLE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000N\u0000\u0000\u0000\u0001\u0000\u0000\u0000N\u0000\u0000\u00007\u0000\u0000\u0000N\u0000\u0000\u0000\u0000\u0000\u0000\aReStyle\u0018void (int, const Uuid &)'Upp::RichText::ReStyle(int,const Uuid&)%void ReStyle(int pos, const Uuid& id)\u0003Upp\aRESTYLE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000P\u0000\u0000\u0000\u0001\u0000\u0000\u0000P\u0000\u0000\u0000;\u0000\u0000\u0000P\u0000\u0000\u0000\u0000\u0000\u0000\nSaveFormat\u001AFormating (int, int) const'Upp::RichText::SaveFormat(int,int)const.Formating SaveFormat(int pos, int count) const\u0003Upp\nSAVEFORMAT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000Q\u0000\u0000\u0000\u0001\u0000\u0000\u0000Q\u0000\u0000\u0000D\u0000\u0000\u0000Q\u0000\u0000\u0000\u0000\u0000\u0000\rRestoreFormat\u001Dvoid (int, const Formating &)2Upp::RichText::RestoreFormat(int,const Formating&)2void RestoreFormat(int pos, const Formating& info)\u0003Upp\rRESTOREFORMAT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000T\u0000\u0000\u0000\u0001\u0000\u0000\u0000T\u0000\u0000\u00006\u0000\u0000\u0000T\u0000\u0000\u0000\u0000\u0000\u0000\u000EGetTableFormat\u001DRichTable::Format (int) const'Upp::RichText::GetTableFormat(int)const1RichTable::Format GetTableFormat(int table) const\u0003Upp\u000EGETTABLEFORMAT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000U\u0000\u0000\u0000\u0001\u0000\u0000\u0000U\u0000\u0000\u0000N\u0000\u0000\u0000U\u0000\u0000\u0000\u0000\u0000\u0000\u000ESetTableFormat%void (int, const RichTable::Format &);Upp::RichText::SetTableFormat(int,const RichTable::Format&)<void SetTableFormat(int table, const RichTable::Format& fmt)\u0003Upp\u000ESETTABLEFORMAT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000V\u0000\u0000\u0000\u0001\u0000\u0000\u0000V\u0000\u0000\u0000@\u0000\u0000\u0000V\u0000\u0000\u0000\u0000\u0000\u0000\bSetTable\u001Cint (int, const RichTable &)-Upp::RichText::SetTable(int,const RichTable&)-int SetTable(int pos, const RichTable& table)\u0003Upp\bSETTABLE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000W\u0000\u0000\u0000\u0001\u0000\u0000\u0000W\u0000\u0000\u0000.\u0000\u0000\u0000W\u0000\u0000\u0000\u0000\u0000\u0000\fDestroyTable\nvoid (int) Upp::RichText::DestroyTable(int)\u001Cvoid DestroyTable(int table)\u0003Upp\fDESTROYTABLE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000X\u0000\u0000\u0000\u0001\u0000\u0000\u0000X\u0000\u0000\u00001\u0000\u0000\u0000X\u0000\u0000\u0000\u0000\u0000\u0000\tCopyTable\u0015RichTable (int) const\"Upp::RichText::CopyTable(int)const$RichTable CopyTable(int table) const\u0003Upp\tCOPYTABLE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000Y\u0000\u0000\u0000\u0001\u0000\u0000\u0000Y\u0000\u0000\u0000D\u0000\u0000\u0000Y\u0000\u0000\u0000\u0000\u0000\u0000\fReplaceTable\u001Dvoid (int, const RichTable &)1Upp::RichText::ReplaceTable(int,const RichTable&)2void ReplaceTable(int table, const RichTable& tab)\u0003Upp\fREPLACETABLE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000Z\u0000\u0000\u0000\u0001\u0000\u0000\u0000Z\u0000\u0000\u0000@\u0000\u0000\u0000Z\u0000\u0000\u0000\u0000\u0000\u0000\u0011RemoveParaSpecial\u0010void (int, bool)*Upp::RichText::RemoveParaSpecial(int,bool).void RemoveParaSpecial(int table, bool before)\u0003Upp\u0011REMOVEPARASPECIAL\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000[\u0000\u0000\u0000\u0001\u0000\u0000\u0000[\u0000\u0000\u0000C\u0000\u0000\u0000[\u0000\u0000\u0000\u0000\u0000\u0000\u0014CanRemoveParaSpecial\u0010bool (int, bool)-Upp::RichText::CanRemoveParaSpecial(int,bool)1bool CanRemoveParaSpecial(int table, bool before)\u0003Upp\u0014CANREMOVEPARASPECIAL\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000\\\u0000\u0000\u0000\u0001\u0000\u0000\u0000\\\u0000\u0000\u0000]\u0000\u0000\u0000\\\u0000\u0000\u0000\u0000\u0000\u0000\u0011InsertParaSpecial*void (int, bool, const RichPara::Format &)BUpp::RichText::InsertParaSpecial(int,bool,const RichPara::Format&)Kvoid InsertParaSpecial(int table, bool before, const RichPara::Format& fmt)\u0003Upp\u0011INSERTPARASPECIAL\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000]\u0000\u0000\u0000\u0001\u0000\u0000\u0000]\u0000\u0000\u0000F\u0000\u0000\u0000]\u0000\u0000\u0000\u0000\u0000\u0000\u0017ShouldInsertParaSpecial\u0010bool (int, bool)0Upp::RichText::ShouldInsertParaSpecial(int,bool)4bool ShouldInsertParaSpecial(int table, bool before)\u0003Upp\u0017SHOULDINSERTPARASPECIAL\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000^\u0000\u0000\u0000\u0001\u0000\u0000\u0000^\u0000\u0000\u0000B\u0000\u0000\u0000^\u0000\u0000\u0000\u0000\u0000\u0000\tCopyTable#RichTable (int, const Rect &) const.Upp::RichText::CopyTable(int,const Rect&)const5RichTable CopyTable(int table, const Rect& sel) const\u0003Upp\tCOPYTABLE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000_\u0000\u0000\u0000\u0001\u0000\u0000\u0000_\u0000\u0000\u0000=\u0000\u0000\u0000_\u0000\u0000\u0000\u0000\u0000\u0000\nClearTable\u0018void (int, const Rect &)*Upp::RichText::ClearTable(int,const Rect&)+void ClearTable(int table, const Rect& sel)\u0003Upp\nCLEARTABLE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000`\u0000\u0000\u0000\u0001\u0000\u0000\u0000`\u0000\u0000\u0000M\u0000\u0000\u0000`\u0000\u0000\u0000\u0000\u0000\u0000\nPasteTable$void (int, Point, const RichTable &)5Upp::RichText::PasteTable(int,Point,const RichTable&);void PasteTable(int table, Point pos, const RichTable& tab)\u0003Upp\nPASTETABLE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000a\u0000\u0000\u0000\u0001\u0000\u0000\u0000a\u0000\u0000\u00009\u0000\u0000\u0000a\u0000\u0000\u0000\u0000\u0000\u0000\u000EInsertTableRow\u000Fvoid (int, int)&Upp::RichText::InsertTableRow(int,int)'void InsertTableRow(int table, int row)\u0003Upp\u000EINSERTTABLEROW\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000b\u0000\u0000\u0000\u0001\u0000\u0000\u0000b\u0000\u0000\u00009\u0000\u0000\u0000b\u0000\u0000\u0000\u0000\u0000\u0000\u000ERemoveTableRow\u000Fvoid (int, int)&Upp::RichText::RemoveTableRow(int,int)'void RemoveTableRow(int table, int row)\u0003Upp\u000EREMOVETABLEROW\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000c\u0000\u0000\u0000\u0001\u0000\u0000\u0000c\u0000\u0000\u0000?\u0000\u0000\u0000c\u0000\u0000\u0000\u0000\u0000\u0000\u0011InsertTableColumn\u000Fvoid (int, int))Upp::RichText::InsertTableColumn(int,int)-void InsertTableColumn(int table, int column)\u0003Upp\u0011INSERTTABLECOLUMN\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000d\u0000\u0000\u0000\u0001\u0000\u0000\u0000d\u0000\u0000\u0000?\u0000\u0000\u0000d\u0000\u0000\u0000\u0000\u0000\u0000\u0011RemoveTableColumn\u000Fvoid (int, int))Upp::RichText::RemoveTableColumn(int,int)-void RemoveTableColumn(int table, int column)\u0003Upp\u0011REMOVETABLECOLUMN\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000e\u0000\u0000\u0000\u0001\u0000\u0000\u0000e\u0000\u0000\u0000D\u0000\u0000\u0000e\u0000\u0000\u0000\u0000\u0000\u0000\rGetMasterCell\u0015Point (int, int, int))Upp::RichText::GetMasterCell(int,int,int)3Point GetMasterCell(int table, int row, int column)\u0003Upp\rGETMASTERCELL\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000f\u0000\u0000\u0000\u0001\u0000\u0000\u0000f\u0000\u0000\u0000s\u0000\u0000\u0000f\u0000\u0000\u0000\u0001\u0000\u0000\rGetMasterCell\u0012Point (int, Point)'Upp::RichText::GetMasterCell(int,Point)'Point GetMasterCell(int table, Point p)\u0003Upp\rGETMASTERCELL\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000g\u0000\u0000\u0000\u0001\u0000\u0000\u0000g\u0000\u0000\u0000@\u0000\u0000\u0000g\u0000\u0000\u0000\u0000\u0000\u0000\tSplitCell\u0017void (int, Point, Size)(Upp::RichText::SplitCell(int,Point,Size).void SplitCell(int table, Point cell, Size sz)\u0003Upp\tSPLITCELL\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000h\u0000\u0000\u0000\u0001\u0000\u0000\u0000h\u0000\u0000\u0000;\u0000\u0000\u0000h\u0000\u0000\u0000\u0000\u0000\u0000\bJoinCell\u0018void (int, const Rect &)(Upp::RichText::JoinCell(int,const Rect&))void JoinCell(int table, const Rect& sel)\u0003Upp\bJOINCELL\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000i\u0000\u0000\u0000\u0001\u0000\u0000\u0000i\u0000\u0000\u0000F\u0000\u0000\u0000i\u0000\u0000\u0000\u0000\u0000\u0000\rGetCellFormat*RichCell::Format (int, const Rect &) const2Upp::RichText::GetCellFormat(int,const Rect&)const@RichCell::Format GetCellFormat(int table, const Rect& sel) const\u0003Upp\rGETCELLFORMAT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000j\u0000\u0000\u0000\u0001\u0000\u0000\u0000j\u0000\u0000\u0000A\u0000\u0000\u0000k\u0000\u0000\u0000\u0000\u0000\u0000\rSetCellFormat>void (int, const Rect &, const RichCell::Format &, bool, bool)OUpp::RichText::SetCellFormat(int,const Rect&,const RichCell::Format&,bool,bool)hvoid SetCellFormat(int table, const Rect& sel, const RichCell::Format& fmt, bool setkeep, bool setround)\u0003Upp\rSETCELLFORMAT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000l\u0000\u0000\u0000\u0001\u0000\u0000\u0000l\u0000\u0000\u0000K\u0000\u0000\u0000l\u0000\u0000\u0000\u0000\u0000\u0000\u0012GetTableFormatInfo$FormatInfo (int, const Rect &) const7Upp::RichText::GetTableFormatInfo(int,const Rect&)const?FormatInfo GetTableFormatInfo(int table, const Rect& sel) const\u0003Upp\u0012GETTABLEFORMATINFO\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000m\u0000\u0000\u0000\u0001\u0000\u0000\u0000m\u0000\u0000\u0000g\u0000\u0000\u0000m\u0000\u0000\u0000\u0000\u0000\u0000\u0014ApplyTableFormatInfo6void (int, const Rect &, const RichText::FormatInfo &)PUpp::RichText::ApplyTableFormatInfo(int,const Rect&,const RichText::FormatInfo&)Uvoid ApplyTableFormatInfo(int table, const Rect& sel, const RichText::FormatInfo& fi)\u0003Upp\u0014APPLYTABLEFORMATINFO\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000n\u0000\u0000\u0000\u0001\u0000\u0000\u0000n\u0000\u0000\u0000x\u0000\u0000\u0000n\u0000\u0000\u0000\u0001\u0000\u0000\u000EAdjustTableSel\u0018void (int, Rect &) const-Upp::RichText::AdjustTableSel(int,Rect&)const/void AdjustTableSel(int table, Rect& sel) const\u0003Upp\u000EADJUSTTABLESEL\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000p\u0000\u0000\u0000\u0001\u0000\u0000\u0000p\u0000\u0000\u0000r\u0000\u0000\u0000p\u0000\u0000\u0000\u0001\u0000\u0000\aIterate\u0017bool (Iterator &) const&Upp::RichText::Iterate(Iterator&)const\u001Fbool Iterate(Iterator& r) const\u0003Upp\aITERATE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000q\u0000\u0000\u0000\u0001\u0000\u0000\u0000q\u0000\u0000\u0000r\u0000\u0000\u0000q\u0000\u0000\u0000\u0001\u0000\u0000\aIterate\u0017bool (UpdateIterator &)'Upp::RichText::Iterate(UpdateIterator&)\u001Fbool Iterate(UpdateIterator& r)\u0003Upp\aITERATE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000s\u0000\u0000\u0000\u0001\u0000\u0000\u0000s\u0000\u0000\u0000y\u0000\u0000\u0000s\u0000\u0000\u0000\u0001\u0000\u0000\u000EEvaluateFields!bool (VectorMap<String, Value> &))Upp::RichText::EvaluateFields(VectorMap&)3bool EvaluateFields(VectorMap<String, Value>& vars)\u0003Upp\u000EEVALUATEFIELDS\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000u\u0000\u0000\u0000\u0001\u0000\u0000\u0000u\u0000\u0000\u0000Z\u0000\u0000\u0000u\u0000\u0000\u0000\u0001\u0000\u0000\rInvalidateAll\avoid ()\u001EUpp::RichText::InvalidateAll()\u0014void InvalidateAll()\u0003Upp\rINVALIDATEALL\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000v\u0000\u0000\u0000\u0001\u0000\u0000\u0000v\u0000\u0000\u0000!\u0000\u0000\u0000v\u0000\u0000\u0000\u0000\u0000\u0000\bValidate\avoid ()\u0019Upp::RichText::Validate()\u000Fvoid Validate()\u0003Upp\bVALIDATE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000w\u0000\u0000\u0000\u0001\u0000\u0000\u0000w\u0000\u0000\u0000Q\u0000\u0000\u0000x\u0000\u0000\u0000\u0000\u0000\u0000\nGetInvalid?bool (PageY &, PageY &, const Rect &, int, int, int, int) constIUpp::RichText::GetInvalid(PageY&,PageY&,const Rect&,int,int,int,int)constlbool GetInvalid(PageY& top, PageY& bottom, const Rect& page, int sell, int selh, int osell, int oselh) const\u0003Upp\nGETINVALID\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000z\u0000\u0000\u0000\u0001\u0000\u0000\u0000z\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\rClipboardType\u001CUpp::RichText::ClipboardType\u001CUpp::RichText::ClipboardType\rClipboardType\u0003Upp\rCLIPBOARDTYPE\u001CUpp::RichText::ClipboardType\u001CUPP::RICHTEXT::CLIPBOARDTYPE\u0000\u0000\u0018\u0000\u0000\u0000\u0002\u0000\u0000\u0000{\u0000\u0000\u0000\u0002\u0000\u0000\u0000{\u0000\u0000\u0000\u0011\u0000\u0000\u0000{\u0000\u0000\u0000\u0000\u0000\u0000\rClipboardType\avoid ()-Upp::RichText::ClipboardType::ClipboardType()\u000FClipboardType()\u0003Upp\rCLIPBOARDTYPE\u001CUpp::RichText::ClipboardType\u001CUPP::RICHTEXT::CLIPBOARDTYPE\u0000\u0000\u0019\u0000\u0000\u0000\n\u0000\u0000\u0000|\u0000\u0000\u0000\u0002\u0000\u0000\u0000|\u0000\u0000\u0000\u001A\u0000\u0000\u0000|\u0000\u0000\u0000\u0000\u0000\u0000\u000E~ClipboardType\avoid ()!Upp::RichText::ClipboardType::~()\u0010~ClipboardType()\u0003Upp\u000E~CLIPBOARDTYPE\u001CUpp::RichText::ClipboardType\u001CUPP::RICHTEXT::CLIPBOARDTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000~\u0000\u0000\u0000\u0002\u0000\u0000\u0000~\u0000\u0000\u0000\u001A\u0000\u0000\u0000~\u0000\u0000\u0000\u0000\u0001\u0000\u0005Level\u0006int ()%Upp::RichText::ClipboardType::Level()\vint Level()\u0003Upp\u0005LEVEL\u001CUpp::RichText::ClipboardType\u001CUPP::RICHTEXT::CLIPBOARDTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u007F\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u007F\u0000\u0000\u0000?\u0000\u0000\u0000\u007F\u0000\u0000\u0000\u0000\u0001\u0000\rReadClipboard#RichText (const RichPara::Format &)DUpp::RichText::ClipboardType::ReadClipboard(const RichPara::Format&)1RichText ReadClipboard(const RichPara::Format& f)\u0003Upp\rREADCLIPBOARD\u001CUpp::RichText::ClipboardType\u001CUPP::RICHTEXT::CLIPBOARDTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000;\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u000EWriteClipboard\u0017void (const RichText &)=Upp::RichText::ClipboardType::WriteClipboard(const RichText&))void WriteClipboard(const RichText& text)\u0003Upp\u000EWRITECLIPBOARD\u001CUpp::RichText::ClipboardType\u001CUPP::RICHTEXT::CLIPBOARDTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u00004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\bRegister\u0016void (ClipboardType &)'Upp::RichText::Register(ClipboardType&))static void Register(ClipboardType& type)\u0003Upp\bREGISTER\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000_\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\tSetFooter\u0015void (const String &)'Upp::RichText::SetFooter(const String&)\u001Fvoid SetFooter(const String& s)\u0003Upp\tSETFOOTER\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000b\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\tGetFooter\u000FString () const\u001FUpp::RichText::GetFooter()const\u0018String GetFooter() const\u0003Upp\tGETFOOTER\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000[\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\fPrintNoLinks\vvoid (bool)!Upp::RichText::PrintNoLinks(bool) void PrintNoLinks(bool b = true)\u0003Upp\fPRINTNOLINKS\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000^\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u000EIsPrintNoLinks\rbool () const$Upp::RichText::IsPrintNoLinks()const\u001Bbool IsPrintNoLinks() const\u0003Upp\u000EISPRINTNOLINKS\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\bRichText\avoid ()\u0019Upp::RichText::RichText()\nRichText()\u0003Upp\bRICHTEXT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000!\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\bRichText\u001Cvoid (const RichText &, int),Upp::RichText::RichText(const RichText&,int) RichText(const RichText& x, int)\u0003Upp\bRICHTEXT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\bRichText\u0012void (RichText &&)#Upp::RichText::RichText(RichText&&)\u0016RichText(RichText&& x)\u0003Upp\bRICHTEXT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000'\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\bRichText void (RichTxt &&, RichStyles &&)/Upp::RichText::RichText(RichTxt&&,RichStyles&&)&RichText(RichTxt&& x, RichStyles&& st)\u0003Upp\bRICHTEXT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\v\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\toperator=\u0017RichText &(RichText &&)$Upp::RichText::operator=(RichText&&)\u0012RichText& operator\u0003Upp\tOPERATOR=\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000end\u0000hT\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\RichText.iml","value":"data\r\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0001\u0005Label\rUpp::Image ()\u0019Upp::RichTextImg::Label()\u0019static Upp::Image Label()\u0003Upp\u0005LABEL\u0010Upp::RichTextImg\u0010UPP::RICHTEXTIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0001\u0000\u0001\nLabel__UHD\rUpp::Image ()\u001EUpp::RichTextImg::Label__UHD()\u001Estatic Upp::Image Label__UHD()\u0003Upp\nLABEL__UHD\u0010Upp::RichTextImg\u0010UPP::RICHTEXTIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0001\u0000\u0001\u0006HdrFtr\rUpp::Image ()\u001AUpp::RichTextImg::HdrFtr()\u001Astatic Upp::Image HdrFtr()\u0003Upp\u0006HDRFTR\u0010Upp::RichTextImg\u0010UPP::RICHTEXTIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0001\vHdrFtr__UHD\rUpp::Image ()\u001FUpp::RichTextImg::HdrFtr__UHD()\u001Fstatic Upp::Image HdrFtr__UHD()\u0003Upp\vHDRFTR__UHD\u0010Upp::RichTextImg\u0010UPP::RICHTEXTIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0001\u0000\u0001\vEndParaChar\rUpp::Image ()\u001FUpp::RichTextImg::EndParaChar()\u001Fstatic Upp::Image EndParaChar()\u0003Upp\vENDPARACHAR\u0010Upp::RichTextImg\u0010UPP::RICHTEXTIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0001\u0010EndParaChar__UHD\rUpp::Image ()$Upp::RichTextImg::EndParaChar__UHD()$static Upp::Image EndParaChar__UHD()\u0003Upp\u0010ENDPARACHAR__UHD\u0010Upp::RichTextImg\u0010UPP::RICHTEXTIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0011\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0001\aTabChar\rUpp::Image ()\u001BUpp::RichTextImg::TabChar()\u001Bstatic Upp::Image TabChar()\u0003Upp\aTABCHAR\u0010Upp::RichTextImg\u0010UPP::RICHTEXTIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0016\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0001\fTabChar__UHD\rUpp::Image () Upp::RichTextImg::TabChar__UHD() static Upp::Image TabChar__UHD()\u0003Upp\fTABCHAR__UHD\u0010Upp::RichTextImg\u0010UPP::RICHTEXTIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0013\u0000\u0000\u0000\t\u0000\u0000\u0000\u0001\u0000\u0001\tSpaceChar\rUpp::Image ()\u001DUpp::RichTextImg::SpaceChar()\u001Dstatic Upp::Image SpaceChar()\u0003Upp\tSPACECHAR\u0010Upp::RichTextImg\u0010UPP::RICHTEXTIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n\u0000\u0000\u0000\u0018\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0000\u0001\u000ESpaceChar__UHD\rUpp::Image ()\"Upp::RichTextImg::SpaceChar__UHD()\"static Upp::Image SpaceChar__UHD()\u0003Upp\u000ESPACECHAR__UHD\u0010Upp::RichTextImg\u0010UPP::RICHTEXTIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\v\u0000\u0000\u0000\u0000\u0000\u0000\u0000\v\u0000\u0000\u0000\u0017\u0000\u0000\u0000\v\u0000\u0000\u0000\u0001\u0000\u0001\rHardSpaceChar\rUpp::Image ()!Upp::RichTextImg::HardSpaceChar()!static Upp::Image HardSpaceChar()\u0003Upp\rHARDSPACECHAR\u0010Upp::RichTextImg\u0010UPP::RICHTEXTIMG\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u001C\u0000\u0000\u0000\f\u0000\u0000\u0000\u0001\u0000\u0001\u0012HardSpaceChar__UHD\rUpp::Image ()&Upp::RichTextImg::HardSpaceChar__UHD()&static Upp::Image HardSpaceChar__UHD()\u0003Upp\u0012HARDSPACECHAR__UHD\u0010Upp::RichTextImg\u0010UPP::RICHTEXTIMG\u0000\u0000end\u0000%\b\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Object.cpp","value":"data]õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0004LLOG\u0000\u0004LLOG\u0004LLOG\u0000\u0004LLOG\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000#\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u000ERichObjectType\avoid ()%Upp::RichObjectType::RichObjectType()\u0010RichObjectType()\u0003Upp\u000ERICHOBJECTTYPE\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0019\u0000\u0000\u0000\u0010\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000$\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u000F~RichObjectType\u0010void () noexcept\u0018Upp::RichObjectType::~()\u0011~RichObjectType()\u0003Upp\u000F~RICHOBJECTTYPE\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0001\u0000\u0000\u0000\f\u0000\u0000\u0000\u0001\u0001\u0000\rGetCreateName\u000FString () const)Upp::RichObjectType::GetCreateName()const\u001CString GetCreateName() const\u0003Upp\rGETCREATENAME\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0001\u0000\u0000\u000EStdDefaultSize(Size (const Value &, Size, void *) constAUpp::RichObjectType::StdDefaultSize(const Value&,Size,void*)constISize StdDefaultSize(const Value& data, Size maxsize, void *context) const\u0003Upp\u000ESTDDEFAULTSIZE\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0001\u0000\u000EGetDefaultSize(Size (const Value &, Size, void *) constAUpp::RichObjectType::GetDefaultSize(const Value&,Size,void*)constISize GetDefaultSize(const Value& data, Size maxsize, void *context) const\u0003Upp\u000EGETDEFAULTSIZE\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\"\u0000\u0000\u0000\u0001\u0000\u0000\u0000%\u0000\u0000\u0000\u0001\u0001\u0000\u000EGetDefaultSize Size (const Value &, Size) const;Upp::RichObjectType::GetDefaultSize(const Value&,Size)const:Size GetDefaultSize(const Value& data, Size maxsize) const\u0003Upp\u000EGETDEFAULTSIZE\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0016\u0000\u0000\u0000'\u0000\u0000\u0000\u0000\u0000\u0000\u0000'\u0000\u0000\u0000\u0001\u0000\u0000\u0000*\u0000\u0000\u0000\u0001\u0001\u0000\u0004Read\u001CValue (const String &) const-Upp::RichObjectType::Read(const String&)const!Value Read(const String& s) const\u0003Upp\u0004READ\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000,\u0000\u0000\u0000\u0000\u0000\u0000\u0000,\u0000\u0000\u0000\u0001\u0000\u0000\u0000/\u0000\u0000\u0000\u0001\u0001\u0000\u0005Write\u001CString (const Value &) const-Upp::RichObjectType::Write(const Value&)const\"String Write(const Value& v) const\u0003Upp\u0005WRITE\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u00001\u0000\u0000\u0000\u0000\u0000\u0000\u00001\u0000\u0000\u0000\u0001\u0000\u0000\u00004\u0000\u0000\u0000\u0001\u0001\u0000\u0006IsText\rbool () const\"Upp::RichObjectType::IsText()const\u0013bool IsText() const\u0003Upp\u0006ISTEXT\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u00006\u0000\u0000\u0000\u0000\u0000\u0000\u00006\u0000\u0000\u0000\u0001\u0000\u0000\u00009\u0000\u0000\u0000\u0001\u0001\u0000\u0006Accept\u0012bool (PasteClip &)'Upp::RichObjectType::Accept(PasteClip&)\u001Cbool Accept(PasteClip& clip)\u0003Upp\u0006ACCEPT\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0016\u0000\u0000\u0000;\u0000\u0000\u0000\u0000\u0000\u0000\u0000;\u0000\u0000\u0000\u0001\u0000\u0000\u0000>\u0000\u0000\u0000\u0001\u0001\u0000\u0004Read\u0013Value (PasteClip &)%Upp::RichObjectType::Read(PasteClip&)\u001BValue Read(PasteClip& clip)\u0003Upp\u0004READ\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0000\u0000\u0000\u0001\u0000\u0000\u0000C\u0000\u0000\u0000\u0001\u0001\u0000\vGetClipFmts\u000FString () const'Upp::RichObjectType::GetClipFmts()const\u001AString GetClipFmts() const\u0003Upp\vGETCLIPFMTS\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000E\u0000\u0000\u0000\u0000\u0000\u0000\u0000E\u0000\u0000\u0000\u0001\u0000\u0000\u0000H\u0000\u0000\u0000\u0001\u0001\u0000\aGetClip,String (const Value &, const String &) const=Upp::RichObjectType::GetClip(const Value&,const String&)const:String GetClip(const Value& data, const String& fmt) const\u0003Upp\aGETCLIP\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000J\u0000\u0000\u0000\u0000\u0000\u0000\u0000J\u0000\u0000\u0000\u0001\u0000\u0000\u0000M\u0000\u0000\u0000\u0001\u0001\u0000\u0004Menu(void (Bar &, RichObject &, void *) const6Upp::RichObjectType::Menu(Bar&,RichObject&,void*)const:void Menu(Bar& bar, RichObject& data, void *context) const\u0003Upp\u0004MENU\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000O\u0000\u0000\u0000\u0000\u0000\u0000\u0000O\u0000\u0000\u0000>\u0000\u0000\u0000O\u0000\u0000\u0000\u0001\u0001\u0000\u0004Menu void (Bar &, RichObject &) const0Upp::RichObjectType::Menu(Bar&,RichObject&)const+void Menu(Bar& bar, RichObject& data) const\u0003Upp\u0004MENU\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000Q\u0000\u0000\u0000\u0000\u0000\u0000\u0000Q\u0000\u0000\u0000\u0001\u0000\u0000\u0000T\u0000\u0000\u0000\u0001\u0001\u0000\rDefaultAction!void (RichObject &, void *) const:Upp::RichObjectType::DefaultAction(RichObject&,void*)const9void DefaultAction(RichObject& data, void *context) const\u0003Upp\rDEFAULTACTION\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000V\u0000\u0000\u0000\u0000\u0000\u0000\u0000V\u0000\u0000\u0000=\u0000\u0000\u0000V\u0000\u0000\u0000\u0001\u0001\u0000\rDefaultAction\u0019void (RichObject &) const4Upp::RichObjectType::DefaultAction(RichObject&)const*void DefaultAction(RichObject& data) const\u0003Upp\rDEFAULTACTION\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000X\u0000\u0000\u0000\u0000\u0000\u0000\u0000X\u0000\u0000\u0000\u0001\u0000\u0000\u0000[\u0000\u0000\u0000\u0001\u0001\u0000\u000FGetPhysicalSize\"Size (const Value &, void *) const=Upp::RichObjectType::GetPhysicalSize(const Value&,void*)const<Size GetPhysicalSize(const Value& data, void *context) const\u0003Upp\u000FGETPHYSICALSIZE\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000]\u0000\u0000\u0000\u0000\u0000\u0000\u0000]\u0000\u0000\u0000T\u0000\u0000\u0000]\u0000\u0000\u0000\u0001\u0001\u0000\u000FGetPhysicalSize\u001ASize (const Value &) const7Upp::RichObjectType::GetPhysicalSize(const Value&)const-Size GetPhysicalSize(const Value& data) const\u0003Upp\u000FGETPHYSICALSIZE\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000_\u0000\u0000\u0000\u0000\u0000\u0000\u0000_\u0000\u0000\u0000\u0001\u0000\u0000\u0000b\u0000\u0000\u0000\u0001\u0001\u0000\fGetPixelSize\"Size (const Value &, void *) const:Upp::RichObjectType::GetPixelSize(const Value&,void*)const9Size GetPixelSize(const Value& data, void *context) const\u0003Upp\fGETPIXELSIZE\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000d\u0000\u0000\u0000\u0000\u0000\u0000\u0000d\u0000\u0000\u0000Q\u0000\u0000\u0000d\u0000\u0000\u0000\u0001\u0001\u0000\fGetPixelSize\u001ASize (const Value &) const4Upp::RichObjectType::GetPixelSize(const Value&)const*Size GetPixelSize(const Value& data) const\u0003Upp\fGETPIXELSIZE\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000f\u0000\u0000\u0000\u0001\u0000\u0000\u0000i\u0000\u0000\u0000\u0001\u0001\u0000\u0005Paint0void (const Value &, Draw &, Size, void *) const>Upp::RichObjectType::Paint(const Value&,Draw&,Size,void*)constDvoid Paint(const Value& data, Draw& w, Size sz, void *context) const\u0003Upp\u0005PAINT\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000k\u0000\u0000\u0000\u0000\u0000\u0000\u0000k\u0000\u0000\u0000H\u0000\u0000\u0000k\u0000\u0000\u0000\u0001\u0001\u0000\u0005Paint(void (const Value &, Draw &, Size) const8Upp::RichObjectType::Paint(const Value&,Draw&,Size)const5void Paint(const Value& data, Draw& w, Size sz) const\u0003Upp\u0005PAINT\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0016\u0000\u0000\u0000m\u0000\u0000\u0000\u0000\u0000\u0000\u0000m\u0000\u0000\u0000\u0001\u0000\u0000\u0000p\u0000\u0000\u0000\u0001\u0001\u0000\aToImage(Image (int64, const Value &, Size) const:Upp::RichObjectType::ToImage(int64,const Value&,Size)const@Image ToImage(int64 serial_id, const Value& data, Size sz) const\u0003Upp\aTOIMAGE\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0016\u0000\u0000\u0000r\u0000\u0000\u0000\u0000\u0000\u0000\u0000r\u0000\u0000\u0000\u0001\u0000\u0000\u0000x\u0000\u0000\u0000\u0001\u0001\u0000\aToImage0Image (int64, const Value &, Size, void *) const@Upp::RichObjectType::ToImage(int64,const Value&,Size,void*)constEImage ToImage(int64, const Value& data, Size sz, void *context) const\u0003Upp\aTOIMAGE\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000z\u0000\u0000\u0000\u0000\u0000\u0000\u0000z\u0000\u0000\u0000\u0001\u0000\u0000\u0000}\u0000\u0000\u0000\u0001\u0001\u0000\aGetLink)String (const Value &, Point, Size) const:Upp::RichObjectType::GetLink(const Value&,Point,Size)const:String GetLink(const Value& data, Point pt, Size sz) const\u0003Upp\aGETLINK\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u007F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u007F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0001\u0000\aGetLink1String (const Value &, Point, Size, void *) const@Upp::RichObjectType::GetLink(const Value&,Point,Size,void*)constIString GetLink(const Value& data, Point pt, Size sz, void *context) const\u0003Upp\aGETLINK\u0013Upp::RichObjectType\u0013UPP::RICHOBJECTTYPE\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\bInitSize\u0017void (int, int, void *)(Upp::RichObject::InitSize(int,int,void*)0void InitSize(int cx, int cy, void *context = 0)\u0003Upp\bINITSIZE\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u00001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0003Map'VectorMap<String, RichObjectType *> &()\u0016Upp::RichObject::Map()*VectorMap<String, RichObjectType *>& Map()\u0003Upp\u0003MAP\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\tNewSerial\avoid ()\u001CUpp::RichObject::NewSerial()\u0010void NewSerial()\u0003Upp\tNEWSERIAL\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\u0000¤\u0000\u0000\u0000\u0001\u0000\u0000\bRegister%void (const char *, RichObjectType *)6Upp::RichObject::Register(const char*,RichObjectType*)5void Register(const char *name, RichObjectType *type)\u0003Upp\bREGISTER\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000¦\u0000\u0000\u0000\u0000\u0000\u0000\u0000¦\u0000\u0000\u0000\u0001\u0000\u0000\u0000¯\u0000\u0000\u0000\u0001\u0000\u0000\u0005Paint!void (Draw &, Size, void *) const-Upp::RichObject::Paint(Draw&,Size,void*)const5void Paint(Draw& w, Size sz, void *context = 0) const\u0003Upp\u0005PAINT\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000±\u0000\u0000\u0000\u0000\u0000\u0000\u0000±\u0000\u0000\u0000\u0001\u0000\u0000\u0000º\u0000\u0000\u0000\u0001\u0000\u0000\aToImage\u001AImage (Size, void *) const)Upp::RichObject::ToImage(Size,void*)const/Image ToImage(Size sz, void *context = 0) const\u0003Upp\aTOIMAGE\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000¼\u0000\u0000\u0000\u0000\u0000\u0000\u0000¼\u0000\u0000\u0000\u0001\u0000\u0000\u0000¾\u0000\u0000\u0000\u0001\u0000\u0000\u0011UnknownRichObject\u0016Upp::UnknownRichObject\u0016Upp::UnknownRichObject\"UnknownRichObject : RichObjectType\u0003Upp\u0011UNKNOWNRICHOBJECT\u0016Upp::UnknownRichObject\u0016UPP::UNKNOWNRICHOBJECT\u0013Upp::RichObjectType\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000½\u0000\u0000\u0000\u0001\u0000\u0000\u0000½\u0000\u0000\u0000/\u0000\u0000\u0000½\u0000\u0000\u0000\u0000\u0001\u0000\vGetTypeName\u001CString (const Value &) const6Upp::UnknownRichObject::GetTypeName(const Value&)const&String GetTypeName(const Value&) const\u0003Upp\vGETTYPENAME\u0016Upp::UnknownRichObject\u0016UPP::UNKNOWNRICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\u001A\u0000\u0000\u0000À\u0000\u0000\u0000\u0000\u0000\u0000\u0000À\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ã\u0000\u0000\u0000\u0001\u0001\u0000\vGetTypeName\u001CString (const Value &) const6Upp::UnknownRichObject::GetTypeName(const Value&)const&String GetTypeName(const Value&) const\u0003Upp\vGETTYPENAME\u0016Upp::UnknownRichObject\u0016UPP::UNKNOWNRICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\"\u0000\u0000\u0000Å\u0000\u0000\u0000\u0000\u0000\u0000\u0000Å\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ê\u0000\u0000\u0000\u0001\u0000\u0000\aGetType\u001Econst RichObjectType &() const\u001FUpp::RichObject::GetType()const%const RichObjectType& GetType() const\u0003Upp\aGETTYPE\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000Ì\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ì\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ð\u0000\u0000\u0000\u0001\u0000\u0000\aSetData\u0014void (const Value &)&Upp::RichObject::SetData(const Value&)\u001Cvoid SetData(const Value& v)\u0003Upp\aSETDATA\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000Ò\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ò\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ö\u0000\u0000\u0000\u0001\u0000\u0000\u0012AdjustPhysicalSize\avoid ()%Upp::RichObject::AdjustPhysicalSize()\u0019void AdjustPhysicalSize()\u0003Upp\u0012ADJUSTPHYSICALSIZE\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000Ø\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ø\u0000\u0000\u0000\u0001\u0000\u0000\u0000ä\u0000\u0000\u0000\u0001\u0000\u0000\u0003Set4void (RichObjectType *, const Value &, Size, void *)=Upp::RichObject::Set(RichObjectType*,const Value&,Size,void*)gvoid Set(RichObjectType *_type, const Value& _data, Size maxsize = Size(3967, 3967), void *context = 0)\u0003Upp\u0003SET\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000æ\u0000\u0000\u0000\u0000\u0000\u0000\u0000æ\u0000\u0000\u0000\u0001\u0000\u0000\u0000õ\u0000\u0000\u0000\u0001\u0000\u0000\u0003Set2bool (const String &, const Value &, Size, void *);Upp::RichObject::Set(const String&,const Value&,Size,void*)jbool Set(const String& _type_name, const Value& _data, Size maxsize = Size(3967, 3967), void *context = 0)\u0003Upp\u0003SET\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000÷\u0000\u0000\u0000\u0000\u0000\u0000\u0000÷\u0000\u0000\u0000\u0001\u0000\u0000\u0000\n\u0001\u0000\u0000\u0001\u0000\u0000\u0004Read3bool (const String &, const String &, Size, void *)=Upp::RichObject::Read(const String&,const String&,Size,void*)Tbool Read(const String& _type_name, const String& _data, Size sz, void *context = 0)\u0003Upp\u0004READ\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000\f\u0001\u0000\u0000\u0000\u0000\u0000\u0000\f\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u000F\u0001\u0000\u0000\u0001\u0000\u0000\vGetTypeName\u000FString () const#Upp::RichObject::GetTypeName()const\u001AString GetTypeName() const\u0003Upp\vGETTYPENAME\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u001A\u0001\u0000\u0000\u0001\u0000\u0000\u0005Clear\avoid ()\u0018Upp::RichObject::Clear()\fvoid Clear()\u0003Upp\u0005CLEAR\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0018\u0000\u0000\u0000\f\u0000\u0000\u0000\u001C\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u001C\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u001F\u0001\u0000\u0000\u0001\u0000\u0000\nRichObject\avoid ()\u001DUpp::RichObject::RichObject()\fRichObject()\u0003Upp\nRICHOBJECT\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0018\u0000\u0000\u0000\f\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0001\u0000\u0000\u0000$\u0001\u0000\u0000\u0001\u0000\u0000\nRichObject,void (RichObjectType *, const Value &, Size)>Upp::RichObject::RichObject(RichObjectType*,const Value&,Size)TRichObject(RichObjectType *type, const Value& data, Size maxsize = Size(3967, 3967))\u0003Upp\nRICHOBJECT\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0018\u0000\u0000\u0000\f\u0000\u0000\u0000&\u0001\u0000\u0000\u0000\u0000\u0000\u0000&\u0001\u0000\u0000\u0001\u0000\u0000\u0000)\u0001\u0000\u0000\u0001\u0000\u0000\nRichObject*void (const String &, const Value &, Size)<Upp::RichObject::RichObject(const String&,const Value&,Size)RRichObject(const String& type, const Value& data, Size maxsize = Size(3967, 3967))\u0003Upp\nRICHOBJECT\u000FUpp::RichObject\u000FUPP::RICHOBJECT\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0001\u0000\u0000\u0000;\u0001\u0000\u0000\u0001\u0000\u0000\u0018RichObjectTypeDrawingCls\u001DUpp::RichObjectTypeDrawingCls\u001DUpp::RichObjectTypeDrawingCls0RichObjectTypeDrawingCls : public RichObjectType\u0003Upp\u0018RICHOBJECTTYPEDRAWINGCLS\u001DUpp::RichObjectTypeDrawingCls\u001DUPP::RICHOBJECTTYPEDRAWINGCLS\u0013Upp::RichObjectType\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000-\u0001\u0000\u0000\u0001\u0000\u0000\u0000-\u0001\u0000\u0000/\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0001\u0000\vGetTypeName\u001CString (const Value &) const=Upp::RichObjectTypeDrawingCls::GetTypeName(const Value&)const&String GetTypeName(const Value&) const\u0003Upp\vGETTYPENAME\u001DUpp::RichObjectTypeDrawingCls\u001DUPP::RICHOBJECTTYPEDRAWINGCLS\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000.\u0001\u0000\u0000\u0001\u0000\u0000\u0000.\u0001\u0000\u00008\u0000\u0000\u0000.\u0001\u0000\u0000\u0000\u0001\u0000\u000FGetPhysicalSize\u001ASize (const Value &) constAUpp::RichObjectTypeDrawingCls::GetPhysicalSize(const Value&)const-Size GetPhysicalSize(const Value& data) const\u0003Upp\u000FGETPHYSICALSIZE\u001DUpp::RichObjectTypeDrawingCls\u001DUPP::RICHOBJECTTYPEDRAWINGCLS\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000/\u0001\u0000\u0000\u0001\u0000\u0000\u0000/\u0001\u0000\u00005\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u0001\u0000\fGetPixelSize\u001ASize (const Value &) const>Upp::RichObjectTypeDrawingCls::GetPixelSize(const Value&)const*Size GetPixelSize(const Value& data) const\u0003Upp\fGETPIXELSIZE\u001DUpp::RichObjectTypeDrawingCls\u001DUPP::RICHOBJECTTYPEDRAWINGCLS\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u00000\u0001\u0000\u0000\u0001\u0000\u0000\u00000\u0001\u0000\u0000@\u0000\u0000\u00000\u0001\u0000\u0000\u0000\u0001\u0000\u0005Paint(void (const Value &, Draw &, Size) constBUpp::RichObjectTypeDrawingCls::Paint(const Value&,Draw&,Size)const5void Paint(const Value& data, Draw& w, Size sz) const\u0003Upp\u0005PAINT\u001DUpp::RichObjectTypeDrawingCls\u001DUPP::RICHOBJECTTYPEDRAWINGCLS\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u00001\u0001\u0000\u0000\u0001\u0000\u0000\u00001\u0001\u0000\u0000+\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u0001\u0000\u0004Read\u001CValue (const String &) const7Upp::RichObjectTypeDrawingCls::Read(const String&)const!Value Read(const String& s) const\u0003Upp\u0004READ\u001DUpp::RichObjectTypeDrawingCls\u001DUPP::RICHOBJECTTYPEDRAWINGCLS\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u00002\u0001\u0000\u0000\u0001\u0000\u0000\u00002\u0001\u0000\u0000+\u0000\u0000\u00002\u0001\u0000\u0000\u0000\u0001\u0000\u0005Write\u001CString (const Value &) const7Upp::RichObjectTypeDrawingCls::Write(const Value&)const\"String Write(const Value& v) const\u0003Upp\u0005WRITE\u001DUpp::RichObjectTypeDrawingCls\u001DUPP::RICHOBJECTTYPEDRAWINGCLS\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u00004\u0001\u0000\u0000\u0001\u0000\u0000\u00004\u0001\u0000\u0000\u0002\u0000\u0000\u0000:\u0001\u0000\u0000\u0001\u0000\u0000\u0004Data#Upp::RichObjectTypeDrawingCls::Data#Upp::RichObjectTypeDrawingCls::Data\u0004Data\u0003Upp\u0004DATA#Upp::RichObjectTypeDrawingCls::Data#UPP::RICHOBJECTTYPEDRAWINGCLS::DATA\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u00006\u0001\u0000\u0000\u0002\u0000\u0000\u00006\u0001\u0000\u0000#\u0000\u0000\u00006\u0001\u0000\u0000\u0000\u0000\u0000\tSerialize\u000Fvoid (Stream &)7Upp::RichObjectTypeDrawingCls::Data::Serialize(Stream&)\u001Evoid Serialize(Stream& stream)\u0003Upp\tSERIALIZE#Upp::RichObjectTypeDrawingCls::Data#UPP::RICHOBJECTTYPEDRAWINGCLS::DATA\u0000\u0000\u0006\u0000\u0000\u0000\n\u0000\u0000\u00008\u0001\u0000\u0000\u0002\u0000\u0000\u00008\u0001\u0000\u0000\u0011\u0000\u0000\u00008\u0001\u0000\u0000\u0001\u0000\u0000\adrawing\aDrawing,Upp::RichObjectTypeDrawingCls::Data::drawing\u000FDrawing drawing\u0003Upp\aDRAWING#Upp::RichObjectTypeDrawingCls::Data#UPP::RICHOBJECTTYPEDRAWINGCLS::DATA\u0000\u0000\u0006\u0000\u0000\u0000\n\u0000\u0000\u00009\u0001\u0000\u0000\u0002\u0000\u0000\u00009\u0001\u0000\u0000\u0012\u0000\u0000\u00009\u0001\u0000\u0000\u0001\u0000\u0000\bdot_size\u0004Size-Upp::RichObjectTypeDrawingCls::Data::dot_size\rSize dot_size\u0003Upp\bDOT_SIZE#Upp::RichObjectTypeDrawingCls::Data#UPP::RICHOBJECTTYPEDRAWINGCLS::DATA\u0000\u0000\b\u0000\u0000\u0000\u0010\u0000\u0000\u0000=\u0001\u0000\u0000\u0000\u0000\u0000\u0000=\u0001\u0000\u0000W\u0000\u0000\u0000=\u0001\u0000\u0000\u0001\u0000\u0000\u0015RichObjectTypeDrawing\u0012RichObjectType *()\u001CUpp::RichObjectTypeDrawing()'RichObjectType *RichObjectTypeDrawing()\u0003Upp\u0015RICHOBJECTTYPEDRAWING\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000%\u0000\u0000\u0000?\u0001\u0000\u0000\u0000\u0000\u0000\u0000?\u0001\u0000\u0000\u0001\u0000\u0000\u0000C\u0001\u0000\u0000\u0001\u0000\u0000\tSerialize\u000Fvoid (Stream &)7Upp::RichObjectTypeDrawingCls::Data::Serialize(Stream&)\u001Evoid Serialize(Stream& stream)\u0003Upp\tSERIALIZE#Upp::RichObjectTypeDrawingCls::Data#UPP::RICHOBJECTTYPEDRAWINGCLS::DATA\u0000\u0000\u0015\u0000\u0000\u0000!\u0000\u0000\u0000E\u0001\u0000\u0000\u0000\u0000\u0000\u0000E\u0001\u0000\u0000\u0001\u0000\u0000\u0000H\u0001\u0000\u0000\u0001\u0001\u0000\vGetTypeName\u001CString (const Value &) const=Upp::RichObjectTypeDrawingCls::GetTypeName(const Value&)const&String GetTypeName(const Value&) const\u0003Upp\vGETTYPENAME\u001DUpp::RichObjectTypeDrawingCls\u001DUPP::RICHOBJECTTYPEDRAWINGCLS\u0000\u0000\b\u0000\u0000\u0000\v\u0000\u0000\u0000J\u0001\u0000\u0000\u0000\u0000\u0000\u0000J\u0001\u0000\u0000\u0001\u0000\u0000\u0000S\u0001\u0000\u0000\u0001\u0000\u0000\u0013CreateDrawingObject(RichObject (const Drawing &, Size, Size)2Upp::CreateDrawingObject(const Drawing&,Size,Size)PRichObject CreateDrawingObject(const Drawing& dwg, Size dot_size, Size out_size)\u0003Upp\u0013CREATEDRAWINGOBJECT\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\v\u0000\u0000\u0000U\u0001\u0000\u0000\u0000\u0000\u0000\u0000U\u0001\u0000\u0000\u0001\u0000\u0000\u0000Y\u0001\u0000\u0000\u0001\u0000\u0000\u0013CreateDrawingObject&RichObject (const Drawing &, int, int)0Upp::CreateDrawingObject(const Drawing&,int,int)JRichObject CreateDrawingObject(const Drawing& dwg, int cx = 0, int cy = 0)\u0003Upp\u0013CREATEDRAWINGOBJECT\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000\u001F\u0000\u0000\u0000[\u0001\u0000\u0000\u0000\u0000\u0000\u0000[\u0001\u0000\u0000\u0001\u0000\u0000\u0000`\u0001\u0000\u0000\u0001\u0001\u0000\fGetPixelSize\u001ASize (const Value &) const>Upp::RichObjectTypeDrawingCls::GetPixelSize(const Value&)const*Size GetPixelSize(const Value& data) const\u0003Upp\fGETPIXELSIZE\u001DUpp::RichObjectTypeDrawingCls\u001DUPP::RICHOBJECTTYPEDRAWINGCLS\u0000\u0000\u0015\u0000\u0000\u0000\u001F\u0000\u0000\u0000b\u0001\u0000\u0000\u0000\u0000\u0000\u0000b\u0001\u0000\u0000\u0001\u0000\u0000\u0000g\u0001\u0000\u0000\u0001\u0001\u0000\u000FGetPhysicalSize\u001ASize (const Value &) constAUpp::RichObjectTypeDrawingCls::GetPhysicalSize(const Value&)const-Size GetPhysicalSize(const Value& data) const\u0003Upp\u000FGETPHYSICALSIZE\u001DUpp::RichObjectTypeDrawingCls\u001DUPP::RICHOBJECTTYPEDRAWINGCLS\u0000\u0000\u0015\u0000\u0000\u0000 \u0000\u0000\u0000i\u0001\u0000\u0000\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0001\u0000\u0000\u0000q\u0001\u0000\u0000\u0001\u0001\u0000\u0004Read\u001CValue (const String &) const7Upp::RichObjectTypeDrawingCls::Read(const String&)const!Value Read(const String& s) const\u0003Upp\u0004READ\u001DUpp::RichObjectTypeDrawingCls\u001DUPP::RICHOBJECTTYPEDRAWINGCLS\u0000\u0000\u0015\u0000\u0000\u0000!\u0000\u0000\u0000s\u0001\u0000\u0000\u0000\u0000\u0000\u0000s\u0001\u0000\u0000\u0001\u0000\u0000\u0000|\u0001\u0000\u0000\u0001\u0001\u0000\u0005Write\u001CString (const Value &) const7Upp::RichObjectTypeDrawingCls::Write(const Value&)const\"String Write(const Value& v) const\u0003Upp\u0005WRITE\u001DUpp::RichObjectTypeDrawingCls\u001DUPP::RICHOBJECTTYPEDRAWINGCLS\u0000\u0000\u0015\u0000\u0000\u0000\u001F\u0000\u0000\u0000~\u0001\u0000\u0000\u0000\u0000\u0000\u0000~\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0001\u0000\u0005Paint(void (const Value &, Draw &, Size) constBUpp::RichObjectTypeDrawingCls::Paint(const Value&,Draw&,Size)const5void Paint(const Value& data, Draw& w, Size sz) const\u0003Upp\u0005PAINT\u001DUpp::RichObjectTypeDrawingCls\u001DUPP::RICHOBJECTTYPEDRAWINGCLS\u0000\u0000\b\u0000\u0000\u0000\v\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0014CreatePaintingObject)RichObject (const Painting &, Size, Size)4Upp::CreatePaintingObject(const Painting&,Size,Size)QRichObject CreatePaintingObject(const Painting& pw, Size dot_size, Size out_size)\u0003Upp\u0014CREATEPAINTINGOBJECT\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\v\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0014CreatePaintingObject'RichObject (const Painting &, int, int)2Upp::CreatePaintingObject(const Painting&,int,int)KRichObject CreatePaintingObject(const Painting& pw, int cx = 0, int cy = 0)\u0003Upp\u0014CREATEPAINTINGOBJECT\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\t\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0001\rs__sF0_400_fn\avoid ()\u0014Upp::s__sF0_400_fn()\u001Bstatic void s__sF0_400_fn()\u0003Upp\rS__SF0_400_FN\u0003Upp\u0003UPP\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\t\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0001\ns__sF0_400\rUpp::Callinit\u000FUpp::s__sF0_400lstatic Upp::Callinit s__sF0_400(s__sF0_400_fn, \"C:\\\\Users\\\\sblo\\\\ai-upp\\\\uppsrc\\\\RichText\\\\Object.cpp\", 400)\u0003Upp\nS__SF0_400\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0001\rs__sF0_400_fn\avoid ()\u0014Upp::s__sF0_400_fn()\u001Bstatic void s__sF0_400_fn()\u0003Upp\rS__SF0_400_FN\u0003Upp\u0003UPP\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0014RichObjectTypePNGCls\u0019Upp::RichObjectTypePNGCls\u0019Upp::RichObjectTypePNGCls,RichObjectTypePNGCls : public RichObjectType\u0003Upp\u0014RICHOBJECTTYPEPNGCLS\u0019Upp::RichObjectTypePNGCls\u0019UPP::RICHOBJECTTYPEPNGCLS\u0013Upp::RichObjectType\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000/\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\vGetTypeName\u001CString (const Value &) const9Upp::RichObjectTypePNGCls::GetTypeName(const Value&)const&String GetTypeName(const Value&) const\u0003Upp\vGETTYPENAME\u0019Upp::RichObjectTypePNGCls\u0019UPP::RICHOBJECTTYPEPNGCLS\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u00008\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u000FGetPhysicalSize\u001ASize (const Value &) const=Upp::RichObjectTypePNGCls::GetPhysicalSize(const Value&)const-Size GetPhysicalSize(const Value& data) const\u0003Upp\u000FGETPHYSICALSIZE\u0019Upp::RichObjectTypePNGCls\u0019UPP::RICHOBJECTTYPEPNGCLS\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u00005\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\fGetPixelSize\u001ASize (const Value &) const:Upp::RichObjectTypePNGCls::GetPixelSize(const Value&)const*Size GetPixelSize(const Value& data) const\u0003Upp\fGETPIXELSIZE\u0019Upp::RichObjectTypePNGCls\u0019UPP::RICHOBJECTTYPEPNGCLS\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000@\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0005Paint(void (const Value &, Draw &, Size) const>Upp::RichObjectTypePNGCls::Paint(const Value&,Draw&,Size)const5void Paint(const Value& data, Draw& w, Size sz) const\u0003Upp\u0005PAINT\u0019Upp::RichObjectTypePNGCls\u0019UPP::RICHOBJECTTYPEPNGCLS\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000+\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0004Read\u001CValue (const String &) const3Upp::RichObjectTypePNGCls::Read(const String&)const!Value Read(const String& s) const\u0003Upp\u0004READ\u0019Upp::RichObjectTypePNGCls\u0019UPP::RICHOBJECTTYPEPNGCLS\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000+\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0005Write\u001CString (const Value &) const3Upp::RichObjectTypePNGCls::Write(const Value&)const\"String Write(const Value& v) const\u0003Upp\u0005WRITE\u0019Upp::RichObjectTypePNGCls\u0019UPP::RICHOBJECTTYPEPNGCLS\u0000\u0000\b\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000O\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0011RichObjectTypePNG\u0012RichObjectType *()\u0018Upp::RichObjectTypePNG()#RichObjectType *RichObjectTypePNG()\u0003Upp\u0011RICHOBJECTTYPEPNG\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000¢\u0001\u0000\u0000\u0001\u0001\u0000\vGetTypeName\u001CString (const Value &) const9Upp::RichObjectTypePNGCls::GetTypeName(const Value&)const&String GetTypeName(const Value&) const\u0003Upp\vGETTYPENAME\u0019Upp::RichObjectTypePNGCls\u0019UPP::RICHOBJECTTYPEPNGCLS\u0000\u0000\b\u0000\u0000\u0000\v\u0000\u0000\u0000¤\u0001\u0000\u0000\u0000\u0000\u0000\u0000¤\u0001\u0000\u0000\u0001\u0000\u0000\u0000ª\u0001\u0000\u0000\u0001\u0000\u0000\u000FCreatePNGObject&RichObject (const Image &, Size, Size),Upp::CreatePNGObject(const Image&,Size,Size)JRichObject CreatePNGObject(const Image& img, Size dot_size, Size out_size)\u0003Upp\u000FCREATEPNGOBJECT\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\v\u0000\u0000\u0000¬\u0001\u0000\u0000\u0000\u0000\u0000\u0000¬\u0001\u0000\u0000\u0001\u0000\u0000\u0000°\u0001\u0000\u0000\u0001\u0000\u0000\u000FCreatePNGObject$RichObject (const Image &, int, int)*Upp::CreatePNGObject(const Image&,int,int)DRichObject CreatePNGObject(const Image& img, int cx = 0, int cy = 0)\u0003Upp\u000FCREATEPNGOBJECT\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000\u001B\u0000\u0000\u0000²\u0001\u0000\u0000\u0000\u0000\u0000\u0000²\u0001\u0000\u0000\u0001\u0000\u0000\u0000»\u0001\u0000\u0000\u0001\u0001\u0000\fGetPixelSize\u001ASize (const Value &) const:Upp::RichObjectTypePNGCls::GetPixelSize(const Value&)const*Size GetPixelSize(const Value& data) const\u0003Upp\fGETPIXELSIZE\u0019Upp::RichObjectTypePNGCls\u0019UPP::RICHOBJECTTYPEPNGCLS\u0000\u0000\u0015\u0000\u0000\u0000\u001B\u0000\u0000\u0000½\u0001\u0000\u0000\u0000\u0000\u0000\u0000½\u0001\u0000\u0000\u0001\u0000\u0000\u0000Æ\u0001\u0000\u0000\u0001\u0001\u0000\u000FGetPhysicalSize\u001ASize (const Value &) const=Upp::RichObjectTypePNGCls::GetPhysicalSize(const Value&)const-Size GetPhysicalSize(const Value& data) const\u0003Upp\u000FGETPHYSICALSIZE\u0019Upp::RichObjectTypePNGCls\u0019UPP::RICHOBJECTTYPEPNGCLS\u0000\u0000\u0015\u0000\u0000\u0000\u001C\u0000\u0000\u0000È\u0001\u0000\u0000\u0000\u0000\u0000\u0000È\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ë\u0001\u0000\u0000\u0001\u0001\u0000\u0004Read\u001CValue (const String &) const3Upp::RichObjectTypePNGCls::Read(const String&)const!Value Read(const String& s) const\u0003Upp\u0004READ\u0019Upp::RichObjectTypePNGCls\u0019UPP::RICHOBJECTTYPEPNGCLS\u0000\u0000\u0015\u0000\u0000\u0000\u001D\u0000\u0000\u0000Í\u0001\u0000\u0000\u0000\u0000\u0000\u0000Í\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ð\u0001\u0000\u0000\u0001\u0001\u0000\u0005Write\u001CString (const Value &) const3Upp::RichObjectTypePNGCls::Write(const Value&)const\"String Write(const Value& v) const\u0003Upp\u0005WRITE\u0019Upp::RichObjectTypePNGCls\u0019UPP::RICHOBJECTTYPEPNGCLS\u0000\u0000\u0015\u0000\u0000\u0000\u001B\u0000\u0000\u0000Ò\u0001\u0000\u0000\u0000\u0000\u0000\u0000Ò\u0001\u0000\u0000\u0001\u0000\u0000\u0000Þ\u0001\u0000\u0000\u0001\u0001\u0000\u0005Paint(void (const Value &, Draw &, Size) const>Upp::RichObjectTypePNGCls::Paint(const Value&,Draw&,Size)const5void Paint(const Value& data, Draw& w, Size sz) const\u0003Upp\u0005PAINT\u0019Upp::RichObjectTypePNGCls\u0019UPP::RICHOBJECTTYPEPNGCLS\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000à\u0001\u0000\u0000\u0000\u0000\u0000\u0000à\u0001\u0000\u0000\u0001\u0000\u0000\u0000â\u0001\u0000\u0000\u0001\u0000\u0001\rs__sF0_481_fn\avoid ()\u0014Upp::s__sF0_481_fn()\u001Bstatic void s__sF0_481_fn()\u0003Upp\rS__SF0_481_FN\u0003Upp\u0003UPP\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000à\u0001\u0000\u0000\u0000\u0000\u0000\u0000à\u0001\u0000\u0000\t\u0000\u0000\u0000à\u0001\u0000\u0000\u0001\u0000\u0001\ns__sF0_481\rUpp::Callinit\u000FUpp::s__sF0_481lstatic Upp::Callinit s__sF0_481(s__sF0_481_fn, \"C:\\\\Users\\\\sblo\\\\ai-upp\\\\uppsrc\\\\RichText\\\\Object.cpp\", 481)\u0003Upp\nS__SF0_481\u0003Upp\u0003UPP\u0000\u0000end\u0000P\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\RichImage.cpp","value":"dataZ\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0001\u0000\u0000\tRichImage\u000EUpp::RichImage\u000EUpp::RichImage!RichImage : public RichObjectType\u0003Upp\tRICHIMAGE\u000EUpp::RichImage\u000EUPP::RICHIMAGE\u0013Upp::RichObjectType\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\b\u0000\u0000\u00001\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0001\u0000\vGetTypeName\u001CString (const Value &) const.Upp::RichImage::GetTypeName(const Value&)const(String GetTypeName(const Value& v) const\u0003Upp\vGETTYPENAME\u000EUpp::RichImage\u000EUPP::RICHIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\t\u0000\u0000\u0000\u0001\u0000\u0000\u0000\t\u0000\u0000\u00008\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0001\u0000\u000FGetPhysicalSize\u001ASize (const Value &) const2Upp::RichImage::GetPhysicalSize(const Value&)const-Size GetPhysicalSize(const Value& data) const\u0003Upp\u000FGETPHYSICALSIZE\u000EUpp::RichImage\u000EUPP::RICHIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0000\u0000\u0000\n\u0000\u0000\u00005\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0001\u0000\fGetPixelSize\u001ASize (const Value &) const/Upp::RichImage::GetPixelSize(const Value&)const*Size GetPixelSize(const Value& data) const\u0003Upp\fGETPIXELSIZE\u000EUpp::RichImage\u000EUPP::RICHIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\v\u0000\u0000\u0000\u0001\u0000\u0000\u0000\v\u0000\u0000\u0000H\u0000\u0000\u0000\v\u0000\u0000\u0000\u0000\u0001\u0000\u0005Paint0void (const Value &, Draw &, Size, void *) const9Upp::RichImage::Paint(const Value&,Draw&,Size,void*)const=void Paint(const Value& data, Draw& w, Size sz, void *) const\u0003Upp\u0005PAINT\u000EUpp::RichImage\u000EUPP::RICHIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\f\u0000\u0000\u0000\u0001\u0000\u0000\u0000\f\u0000\u0000\u0000H\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0001\u0000\aToImage0Image (int64, const Value &, Size, void *) const;Upp::RichImage::ToImage(int64,const Value&,Size,void*)const>Image ToImage(int64, const Value& data, Size sz, void *) const\u0003Upp\aTOIMAGE\u000EUpp::RichImage\u000EUPP::RICHIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000E\u0000\u0000\u0000'\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0001\u0000\u0006Accept\u0012bool (PasteClip &)\"Upp::RichImage::Accept(PasteClip&)\u001Cbool Accept(PasteClip& clip)\u0003Upp\u0006ACCEPT\u000EUpp::RichImage\u000EUPP::RICHIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000F\u0000\u0000\u0000%\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0000\u0001\u0000\u0004Read\u0013Value (PasteClip &) Upp::RichImage::Read(PasteClip&)\u001BValue Read(PasteClip& clip)\u0003Upp\u0004READ\u000EUpp::RichImage\u000EUPP::RICHIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0000#\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0001\u0000\vGetClipFmts\u000FString () const\"Upp::RichImage::GetClipFmts()const\u001AString GetClipFmts() const\u0003Upp\vGETCLIPFMTS\u000EUpp::RichImage\u000EUPP::RICHIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0011\u0000\u0000\u0000C\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0000\u0001\u0000\aGetClip,String (const Value &, const String &) const8Upp::RichImage::GetClip(const Value&,const String&)const:String GetClip(const Value& data, const String& fmt) const\u0003Upp\aGETCLIP\u000EUpp::RichImage\u000EUPP::RICHIMAGE\u0000\u0000\u0014\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0000\u0000\tCLASSNAME\u0019Upp::RichImage::CLASSNAME\u0019Upp::RichImage::CLASSNAME\u001Btypedef RichImage CLASSNAME\u0003Upp\tCLASSNAME\u000EUpp::RichImage\u000EUPP::RICHIMAGE\u000EUpp::RichImage\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0001\u0000\vGetTypeName\u001CString (const Value &) const.Upp::RichImage::GetTypeName(const Value&)const(String GetTypeName(const Value& v) const\u0003Upp\vGETTYPENAME\u000EUpp::RichImage\u000EUPP::RICHIMAGE\u0000\u0000\t\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001C\u0000\u0000\u0000H\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0001\u0000\u0001\rsGetImageClip)String (*)(const Image &, const String &)\u0012Upp::sGetImageClip;static String (*sGetImageClip)(const Image&, const String&)\u0003Upp\rSGETIMAGECLIP\u0003Upp\u0003UPP\u0000\u0000\n\u0000\u0000\u00001\u0000\u0000\u0000\u001C\u0000\u0000\u0000$\u0000\u0000\u0000\u001C\u0000\u0000\u00004\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0001\u0000\u0000\u0003img\rconst Image &\u0003img\u0010const Image& img\u0000\u0003IMG\u0000\u0000\u0000\u0000\n\u0000\u0000\u0000D\u0000\u0000\u0000\u001C\u0000\u0000\u00006\u0000\u0000\u0000\u001C\u0000\u0000\u0000G\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0001\u0000\u0000\u0003fmt\u000Econst String &\u0003fmt\u0011const String& fmt\u0000\u0003FMT\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001D\u0000\u0000\u00003\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0000\u0001\fsAcceptImage\u0015bool (*)(PasteClip &)\u0011Upp::sAcceptImage'static bool (*sAcceptImage)(PasteClip&)\u0003Upp\fSACCEPTIMAGE\u0003Upp\u0003UPP\u0000\u0000\n\u0000\u0000\u0000.\u0000\u0000\u0000\u001D\u0000\u0000\u0000#\u0000\u0000\u0000\u001D\u0000\u0000\u00002\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0000\u0000\u0004clip\vPasteClip &\u0004clip\u000FPasteClip& clip\u0000\u0004CLIP\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0000\u0000\u00000\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0001\tsGetImage\u0016Image (*)(PasteClip &)\u000EUpp::sGetImage%static Image (*sGetImage)(PasteClip&)\u0003Upp\tSGETIMAGE\u0003Upp\u0003UPP\u0000\u0000\n\u0000\u0000\u0000+\u0000\u0000\u0000\u001E\u0000\u0000\u0000 \u0000\u0000\u0000\u001E\u0000\u0000\u0000/\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0000\u0004clip\vPasteClip &\u0004clip\u000FPasteClip& clip\u0000\u0004CLIP\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001F\u0000\u0000\u0000&\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0001\u0000\u0001\u000EsClipFmtsImage\u0011const char *(*)()\u0013Upp::sClipFmtsImage&static const char *(*sClipFmtsImage)()\u0003Upp\u000ESCLIPFMTSIMAGE\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000!\u0000\u0000\u0000\u0000\u0000\u0000\u0000!\u0000\u0000\u0000\u0001\u0000\u0000\u0000*\u0000\u0000\u0000\u0001\u0000\u0000\rInitRichImagervoid (String (*)(const Image &, const String &), bool (*)(PasteClip &), Image (*)(PasteClip &), const char *(*)())sUpp::InitRichImage(String(*)(const Image&,const String&),bool(*)(PasteClip&),Image(*)(PasteClip&),const char*(*)())ÿ«\u0000\u0000\u0000void InitRichImage(String (*fGetImageClip)(const Image&, const String&), bool (*fAcceptImage)(PasteClip&), Image (*fGetImage)(PasteClip&), const char *(*fClipFmtsImage)())\u0003Upp\rINITRICHIMAGE\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000,\u0000\u0000\u0000\u0000\u0000\u0000\u0000,\u0000\u0000\u0000\u0001\u0000\u0000\u0000/\u0000\u0000\u0000\u0001\u0001\u0000\u0006Accept\u0012bool (PasteClip &)\"Upp::RichImage::Accept(PasteClip&)\u001Cbool Accept(PasteClip& clip)\u0003Upp\u0006ACCEPT\u000EUpp::RichImage\u000EUPP::RICHIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u00001\u0000\u0000\u0000\u0000\u0000\u0000\u00001\u0000\u0000\u0000\u0001\u0000\u0000\u00006\u0000\u0000\u0000\u0001\u0001\u0000\u0004Read\u0013Value (PasteClip &) Upp::RichImage::Read(PasteClip&)\u001BValue Read(PasteClip& clip)\u0003Upp\u0004READ\u000EUpp::RichImage\u000EUPP::RICHIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u00008\u0000\u0000\u0000\u0000\u0000\u0000\u00008\u0000\u0000\u0000\u0001\u0000\u0000\u0000=\u0000\u0000\u0000\u0001\u0001\u0000\vGetClipFmts\u000FString () const\"Upp::RichImage::GetClipFmts()const\u001AString GetClipFmts() const\u0003Upp\vGETCLIPFMTS\u000EUpp::RichImage\u000EUPP::RICHIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000?\u0000\u0000\u0000\u0000\u0000\u0000\u0000?\u0000\u0000\u0000\u0001\u0000\u0000\u0000D\u0000\u0000\u0000\u0001\u0001\u0000\aGetClip,String (const Value &, const String &) const8Upp::RichImage::GetClip(const Value&,const String&)const:String GetClip(const Value& data, const String& fmt) const\u0003Upp\aGETCLIP\u000EUpp::RichImage\u000EUPP::RICHIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000F\u0000\u0000\u0000\u0000\u0000\u0000\u0000F\u0000\u0000\u0000\u0001\u0000\u0000\u0000I\u0000\u0000\u0000\u0001\u0001\u0000\fGetPixelSize\u001ASize (const Value &) const/Upp::RichImage::GetPixelSize(const Value&)const*Size GetPixelSize(const Value& data) const\u0003Upp\fGETPIXELSIZE\u000EUpp::RichImage\u000EUPP::RICHIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000K\u0000\u0000\u0000\u0000\u0000\u0000\u0000K\u0000\u0000\u0000\u0001\u0000\u0000\u0000Q\u0000\u0000\u0000\u0001\u0001\u0000\u000FGetPhysicalSize\u001ASize (const Value &) const2Upp::RichImage::GetPhysicalSize(const Value&)const-Size GetPhysicalSize(const Value& data) const\u0003Upp\u000FGETPHYSICALSIZE\u000EUpp::RichImage\u000EUPP::RICHIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000S\u0000\u0000\u0000\u0000\u0000\u0000\u0000S\u0000\u0000\u0000\u0001\u0000\u0000\u0000X\u0000\u0000\u0000\u0001\u0001\u0000\u0005Paint0void (const Value &, Draw &, Size, void *) const9Upp::RichImage::Paint(const Value&,Draw&,Size,void*)const=void Paint(const Value& data, Draw& w, Size sz, void *) const\u0003Upp\u0005PAINT\u000EUpp::RichImage\u000EUPP::RICHIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000Z\u0000\u0000\u0000\u0000\u0000\u0000\u0000Z\u0000\u0000\u0000\u0001\u0000\u0000\u0000]\u0000\u0000\u0000\u0001\u0001\u0000\aToImage0Image (int64, const Value &, Size, void *) const;Upp::RichImage::ToImage(int64,const Value&,Size,void*)const>Image ToImage(int64, const Value& data, Size sz, void *) const\u0003Upp\aTOIMAGE\u000EUpp::RichImage\u000EUPP::RICHIMAGE\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000_\u0000\u0000\u0000\u0000\u0000\u0000\u0000_\u0000\u0000\u0000\t\u0000\u0000\u0000_\u0000\u0000\u0000\u0000\u0000\u0001\fs__sF1_96_fn\avoid ()\u0013Upp::s__sF1_96_fn()\u001Astatic void s__sF1_96_fn()\u0003Upp\fS__SF1_96_FN\u0003Upp\u0003UPP\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000_\u0000\u0000\u0000\u0000\u0000\u0000\u0000_\u0000\u0000\u0000\t\u0000\u0000\u0000_\u0000\u0000\u0000\u0001\u0000\u0001\ts__sF1_96\rUpp::Callinit\u000EUpp::s__sF1_96lstatic Upp::Callinit s__sF1_96(s__sF1_96_fn, \"C:\\\\Users\\\\sblo\\\\ai-upp\\\\uppsrc\\\\RichText\\\\RichImage.cpp\", 96)\u0003Upp\tS__SF1_96\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000_\u0000\u0000\u0000\u0000\u0000\u0000\u0000_\u0000\u0000\u0000\u0001\u0000\u0000\u0000a\u0000\u0000\u0000\u0001\u0000\u0001\fs__sF1_96_fn\avoid ()\u0013Upp::s__sF1_96_fn()\u001Astatic void s__sF1_96_fn()\u0003Upp\fS__SF1_96_FN\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\v\u0000\u0000\u0000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000c\u0000\u0000\u0000\u0001\u0000\u0000\u0000i\u0000\u0000\u0000\u0001\u0000\u0000\u0011CreateImageObject$RichObject (const Image &, int, int),Upp::CreateImageObject(const Image&,int,int)>RichObject CreateImageObject(const Image& img, int cx, int cy)\u0003Upp\u0011CREATEIMAGEOBJECT\u0003Upp\u0003UPP\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000k\u0000\u0000\u0000\u0000\u0000\u0000\u0000k\u0000\u0000\u0000\u0001\u0000\u0000\u0000s\u0000\u0000\u0000\u0001\u0000\u0000\aRichPNG\fUpp::RichPNG\fUpp::RichPNG\u001FRichPNG : public RichObjectType\u0003Upp\aRICHPNG\fUpp::RichPNG\fUPP::RICHPNG\u0013Upp::RichObjectType\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000l\u0000\u0000\u0000\u0001\u0000\u0000\u0000l\u0000\u0000\u00001\u0000\u0000\u0000l\u0000\u0000\u0000\u0000\u0001\u0000\vGetTypeName\u001CString (const Value &) const,Upp::RichPNG::GetTypeName(const Value&)const(String GetTypeName(const Value& v) const\u0003Upp\vGETTYPENAME\fUpp::RichPNG\fUPP::RICHPNG\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000m\u0000\u0000\u0000\u0001\u0000\u0000\u0000m\u0000\u0000\u0000+\u0000\u0000\u0000m\u0000\u0000\u0000\u0000\u0001\u0000\u0004Read\u001CValue (const String &) const&Upp::RichPNG::Read(const String&)const!Value Read(const String& s) const\u0003Upp\u0004READ\fUpp::RichPNG\fUPP::RICHPNG\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000n\u0000\u0000\u0000\u0001\u0000\u0000\u0000n\u0000\u0000\u0000+\u0000\u0000\u0000n\u0000\u0000\u0000\u0000\u0001\u0000\u0005Write\u001CString (const Value &) const&Upp::RichPNG::Write(const Value&)const\"String Write(const Value& v) const\u0003Upp\u0005WRITE\fUpp::RichPNG\fUPP::RICHPNG\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000o\u0000\u0000\u0000\u0001\u0000\u0000\u0000o\u0000\u0000\u00008\u0000\u0000\u0000o\u0000\u0000\u0000\u0000\u0001\u0000\u000FGetPhysicalSize\u001ASize (const Value &) const0Upp::RichPNG::GetPhysicalSize(const Value&)const-Size GetPhysicalSize(const Value& data) const\u0003Upp\u000FGETPHYSICALSIZE\fUpp::RichPNG\fUPP::RICHPNG\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000p\u0000\u0000\u0000\u0001\u0000\u0000\u0000p\u0000\u0000\u00005\u0000\u0000\u0000p\u0000\u0000\u0000\u0000\u0001\u0000\fGetPixelSize\u001ASize (const Value &) const-Upp::RichPNG::GetPixelSize(const Value&)const*Size GetPixelSize(const Value& data) const\u0003Upp\fGETPIXELSIZE\fUpp::RichPNG\fUPP::RICHPNG\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000q\u0000\u0000\u0000\u0001\u0000\u0000\u0000q\u0000\u0000\u0000@\u0000\u0000\u0000q\u0000\u0000\u0000\u0000\u0001\u0000\u0005Paint(void (const Value &, Draw &, Size) const1Upp::RichPNG::Paint(const Value&,Draw&,Size)const5void Paint(const Value& data, Draw& w, Size sz) const\u0003Upp\u0005PAINT\fUpp::RichPNG\fUPP::RICHPNG\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000r\u0000\u0000\u0000\u0001\u0000\u0000\u0000r\u0000\u0000\u0000H\u0000\u0000\u0000r\u0000\u0000\u0000\u0000\u0001\u0000\aToImage0Image (int64, const Value &, Size, void *) const9Upp::RichPNG::ToImage(int64,const Value&,Size,void*)const>Image ToImage(int64, const Value& data, Size sz, void *) const\u0003Upp\aTOIMAGE\fUpp::RichPNG\fUPP::RICHPNG\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000u\u0000\u0000\u0000\u0000\u0000\u0000\u0000u\u0000\u0000\u0000\u0001\u0000\u0000\u0000x\u0000\u0000\u0000\u0001\u0001\u0000\vGetTypeName\u001CString (const Value &) const,Upp::RichPNG::GetTypeName(const Value&)const(String GetTypeName(const Value& v) const\u0003Upp\vGETTYPENAME\fUpp::RichPNG\fUPP::RICHPNG\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000z\u0000\u0000\u0000\u0000\u0000\u0000\u0000z\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0001\u0000\u0004Read\u001CValue (const String &) const&Upp::RichPNG::Read(const String&)const!Value Read(const String& s) const\u0003Upp\u0004READ\fUpp::RichPNG\fUPP::RICHPNG\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0001\u0000\u0005Write\u001CString (const Value &) const&Upp::RichPNG::Write(const Value&)const\"String Write(const Value& v) const\u0003Upp\u0005WRITE\fUpp::RichPNG\fUPP::RICHPNG\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0001\u0000\u000FGetPhysicalSize\u001ASize (const Value &) const0Upp::RichPNG::GetPhysicalSize(const Value&)const-Size GetPhysicalSize(const Value& data) const\u0003Upp\u000FGETPHYSICALSIZE\fUpp::RichPNG\fUPP::RICHPNG\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0001\u0000\fGetPixelSize\u001ASize (const Value &) const-Upp::RichPNG::GetPixelSize(const Value&)const*Size GetPixelSize(const Value& data) const\u0003Upp\fGETPIXELSIZE\fUpp::RichPNG\fUPP::RICHPNG\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000¢\u0000\u0000\u0000\u0001\u0001\u0000\u0005Paint(void (const Value &, Draw &, Size) const1Upp::RichPNG::Paint(const Value&,Draw&,Size)const5void Paint(const Value& data, Draw& w, Size sz) const\u0003Upp\u0005PAINT\fUpp::RichPNG\fUPP::RICHPNG\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000¤\u0000\u0000\u0000\u0000\u0000\u0000\u0000¤\u0000\u0000\u0000\u0001\u0000\u0000\u0000®\u0000\u0000\u0000\u0001\u0001\u0000\aToImage0Image (int64, const Value &, Size, void *) const9Upp::RichPNG::ToImage(int64,const Value&,Size,void*)const>Image ToImage(int64, const Value& data, Size sz, void *) const\u0003Upp\aTOIMAGE\fUpp::RichPNG\fUPP::RICHPNG\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000°\u0000\u0000\u0000\u0000\u0000\u0000\u0000°\u0000\u0000\u0000\u0001\u0000\u0000\u0000²\u0000\u0000\u0000\u0001\u0000\u0001\rs__sF1_177_fn\avoid ()\u0014Upp::s__sF1_177_fn()\u001Bstatic void s__sF1_177_fn()\u0003Upp\rS__SF1_177_FN\u0003Upp\u0003UPP\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000°\u0000\u0000\u0000\u0000\u0000\u0000\u0000°\u0000\u0000\u0000\t\u0000\u0000\u0000°\u0000\u0000\u0000\u0001\u0000\u0001\ns__sF1_177\rUpp::Callinit\u000FUpp::s__sF1_177ostatic Upp::Callinit s__sF1_177(s__sF1_177_fn, \"C:\\\\Users\\\\sblo\\\\ai-upp\\\\uppsrc\\\\RichText\\\\RichImage.cpp\", 177)\u0003Upp\nS__SF1_177\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000°\u0000\u0000\u0000\u0000\u0000\u0000\u0000°\u0000\u0000\u0000\t\u0000\u0000\u0000°\u0000\u0000\u0000\u0000\u0000\u0001\rs__sF1_177_fn\avoid ()\u0014Upp::s__sF1_177_fn()\u001Bstatic void s__sF1_177_fn()\u0003Upp\rS__SF1_177_FN\u0003Upp\u0003UPP\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000´\u0000\u0000\u0000\u0000\u0000\u0000\u0000´\u0000\u0000\u0000\u0001\u0000\u0000\u0000¼\u0000\u0000\u0000\u0001\u0000\u0000\fRichRawImage\u0011Upp::RichRawImage\u0011Upp::RichRawImage$RichRawImage : public RichObjectType\u0003Upp\fRICHRAWIMAGE\u0011Upp::RichRawImage\u0011UPP::RICHRAWIMAGE\u0013Upp::RichObjectType\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000µ\u0000\u0000\u0000\u0001\u0000\u0000\u0000µ\u0000\u0000\u00001\u0000\u0000\u0000µ\u0000\u0000\u0000\u0000\u0001\u0000\vGetTypeName\u001CString (const Value &) const1Upp::RichRawImage::GetTypeName(const Value&)const(String GetTypeName(const Value& v) const\u0003Upp\vGETTYPENAME\u0011Upp::RichRawImage\u0011UPP::RICHRAWIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000¶\u0000\u0000\u0000\u0001\u0000\u0000\u0000¶\u0000\u0000\u0000+\u0000\u0000\u0000¶\u0000\u0000\u0000\u0000\u0001\u0000\u0004Read\u001CValue (const String &) const+Upp::RichRawImage::Read(const String&)const!Value Read(const String& s) const\u0003Upp\u0004READ\u0011Upp::RichRawImage\u0011UPP::RICHRAWIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000·\u0000\u0000\u0000\u0001\u0000\u0000\u0000·\u0000\u0000\u0000+\u0000\u0000\u0000·\u0000\u0000\u0000\u0000\u0001\u0000\u0005Write\u001CString (const Value &) const+Upp::RichRawImage::Write(const Value&)const\"String Write(const Value& v) const\u0003Upp\u0005WRITE\u0011Upp::RichRawImage\u0011UPP::RICHRAWIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000¸\u0000\u0000\u0000\u0001\u0000\u0000\u0000¸\u0000\u0000\u00008\u0000\u0000\u0000¸\u0000\u0000\u0000\u0000\u0001\u0000\u000FGetPhysicalSize\u001ASize (const Value &) const5Upp::RichRawImage::GetPhysicalSize(const Value&)const-Size GetPhysicalSize(const Value& data) const\u0003Upp\u000FGETPHYSICALSIZE\u0011Upp::RichRawImage\u0011UPP::RICHRAWIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000¹\u0000\u0000\u0000\u0001\u0000\u0000\u0000¹\u0000\u0000\u00005\u0000\u0000\u0000¹\u0000\u0000\u0000\u0000\u0001\u0000\fGetPixelSize\u001ASize (const Value &) const2Upp::RichRawImage::GetPixelSize(const Value&)const*Size GetPixelSize(const Value& data) const\u0003Upp\fGETPIXELSIZE\u0011Upp::RichRawImage\u0011UPP::RICHRAWIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000º\u0000\u0000\u0000\u0001\u0000\u0000\u0000º\u0000\u0000\u0000H\u0000\u0000\u0000º\u0000\u0000\u0000\u0000\u0001\u0000\u0005Paint0void (const Value &, Draw &, Size, void *) const<Upp::RichRawImage::Paint(const Value&,Draw&,Size,void*)const=void Paint(const Value& data, Draw& w, Size sz, void *) const\u0003Upp\u0005PAINT\u0011Upp::RichRawImage\u0011UPP::RICHRAWIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000»\u0000\u0000\u0000\u0001\u0000\u0000\u0000»\u0000\u0000\u0000H\u0000\u0000\u0000»\u0000\u0000\u0000\u0000\u0001\u0000\aToImage0Image (int64, const Value &, Size, void *) const>Upp::RichRawImage::ToImage(int64,const Value&,Size,void*)const>Image ToImage(int64, const Value& data, Size sz, void *) const\u0003Upp\aTOIMAGE\u0011Upp::RichRawImage\u0011UPP::RICHRAWIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000¾\u0000\u0000\u0000\u0000\u0000\u0000\u0000¾\u0000\u0000\u0000\u0001\u0000\u0000\u0000Á\u0000\u0000\u0000\u0001\u0001\u0000\vGetTypeName\u001CString (const Value &) const1Upp::RichRawImage::GetTypeName(const Value&)const(String GetTypeName(const Value& v) const\u0003Upp\vGETTYPENAME\u0011Upp::RichRawImage\u0011UPP::RICHRAWIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000Ã\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ã\u0000\u0000\u0000\u0001\u0000\u0000\u0000Æ\u0000\u0000\u0000\u0001\u0001\u0000\u0004Read\u001CValue (const String &) const+Upp::RichRawImage::Read(const String&)const!Value Read(const String& s) const\u0003Upp\u0004READ\u0011Upp::RichRawImage\u0011UPP::RICHRAWIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000È\u0000\u0000\u0000\u0000\u0000\u0000\u0000È\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ë\u0000\u0000\u0000\u0001\u0001\u0000\u0005Write\u001CString (const Value &) const+Upp::RichRawImage::Write(const Value&)const\"String Write(const Value& v) const\u0003Upp\u0005WRITE\u0011Upp::RichRawImage\u0011UPP::RICHRAWIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000Í\u0000\u0000\u0000\u0000\u0000\u0000\u0000Í\u0000\u0000\u0000\u0001\u0000\u0000\u0000Û\u0000\u0000\u0000\u0001\u0001\u0000\u000FGetPhysicalSize\u001ASize (const Value &) const5Upp::RichRawImage::GetPhysicalSize(const Value&)const-Size GetPhysicalSize(const Value& data) const\u0003Upp\u000FGETPHYSICALSIZE\u0011Upp::RichRawImage\u0011UPP::RICHRAWIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000Ý\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ý\u0000\u0000\u0000\u0001\u0000\u0000\u0000ê\u0000\u0000\u0000\u0001\u0001\u0000\fGetPixelSize\u001ASize (const Value &) const2Upp::RichRawImage::GetPixelSize(const Value&)const*Size GetPixelSize(const Value& data) const\u0003Upp\fGETPIXELSIZE\u0011Upp::RichRawImage\u0011UPP::RICHRAWIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000ì\u0000\u0000\u0000\u0000\u0000\u0000\u0000ì\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0001\u0000\u0000\u0001\u0001\u0000\u0005Paint0void (const Value &, Draw &, Size, void *) const<Upp::RichRawImage::Paint(const Value&,Draw&,Size,void*)const=void Paint(const Value& data, Draw& w, Size sz, void *) const\u0003Upp\u0005PAINT\u0011Upp::RichRawImage\u0011UPP::RICHRAWIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u001C\u0001\u0000\u0000\u0001\u0001\u0000\aToImage0Image (int64, const Value &, Size, void *) const>Upp::RichRawImage::ToImage(int64,const Value&,Size,void*)constHImage ToImage(int64 serial_id, const Value& data, Size sz, void *) const\u0003Upp\aTOIMAGE\u0011Upp::RichRawImage\u0011UPP::RICHRAWIMAGE\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0001\u0000\u0000\u0000 \u0001\u0000\u0000\u0001\u0000\u0001\rs__sF1_287_fn\avoid ()\u0014Upp::s__sF1_287_fn()\u001Bstatic void s__sF1_287_fn()\u0003Upp\rS__SF1_287_FN\u0003Upp\u0003UPP\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0001\u0000\u0000\t\u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0001\u0000\u0001\ns__sF1_287\rUpp::Callinit\u000FUpp::s__sF1_287ostatic Upp::Callinit s__sF1_287(s__sF1_287_fn, \"C:\\\\Users\\\\sblo\\\\ai-upp\\\\uppsrc\\\\RichText\\\\RichImage.cpp\", 287)\u0003Upp\nS__SF1_287\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0001\u0000\u0000\t\u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0000\u0000\u0001\rs__sF1_287_fn\avoid ()\u0014Upp::s__sF1_287_fn()\u001Bstatic void s__sF1_287_fn()\u0003Upp\rS__SF1_287_FN\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\v\u0000\u0000\u0000\"\u0001\u0000\u0000\u0000\u0000\u0000\u0000\"\u0001\u0000\u0000\u0001\u0000\u0000\u0000'\u0001\u0000\u0000\u0001\u0000\u0000\u0014CreateRawImageObject%RichObject (const String &, int, int)0Upp::CreateRawImageObject(const String&,int,int)HRichObject CreateRawImageObject(const String& s, int cx = 0, int cy = 0)\u0003Upp\u0014CREATERAWIMAGEOBJECT\u0003Upp\u0003UPP\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0001\u0000\u0000\u00002\u0001\u0000\u0000\u0001\u0000\u0000\fRichImlImage\u0011Upp::RichImlImage\u0011Upp::RichImlImage$RichImlImage : public RichObjectType\u0003Upp\fRICHIMLIMAGE\u0011Upp::RichImlImage\u0011UPP::RICHIMLIMAGE\u0013Upp::RichObjectType\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000*\u0001\u0000\u0000\u0001\u0000\u0000\u0000*\u0001\u0000\u00001\u0000\u0000\u0000*\u0001\u0000\u0000\u0000\u0001\u0000\vGetTypeName\u001CString (const Value &) const1Upp::RichImlImage::GetTypeName(const Value&)const(String GetTypeName(const Value& v) const\u0003Upp\vGETTYPENAME\u0011Upp::RichImlImage\u0011UPP::RICHIMLIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000+\u0001\u0000\u0000\u0001\u0000\u0000\u0000+\u0001\u0000\u00008\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0001\u0000\u000FGetPhysicalSize\u001ASize (const Value &) const5Upp::RichImlImage::GetPhysicalSize(const Value&)const-Size GetPhysicalSize(const Value& data) const\u0003Upp\u000FGETPHYSICALSIZE\u0011Upp::RichImlImage\u0011UPP::RICHIMLIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000,\u0001\u0000\u0000\u0001\u0000\u0000\u0000,\u0001\u0000\u00005\u0000\u0000\u0000,\u0001\u0000\u0000\u0000\u0001\u0000\fGetPixelSize\u001ASize (const Value &) const2Upp::RichImlImage::GetPixelSize(const Value&)const*Size GetPixelSize(const Value& data) const\u0003Upp\fGETPIXELSIZE\u0011Upp::RichImlImage\u0011UPP::RICHIMLIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000-\u0001\u0000\u0000\u0001\u0000\u0000\u0000-\u0001\u0000\u0000@\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0001\u0000\u0005Paint(void (const Value &, Draw &, Size) const6Upp::RichImlImage::Paint(const Value&,Draw&,Size)const5void Paint(const Value& data, Draw& w, Size sz) const\u0003Upp\u0005PAINT\u0011Upp::RichImlImage\u0011UPP::RICHIMLIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000.\u0001\u0000\u0000\u0001\u0000\u0000\u0000.\u0001\u0000\u0000H\u0000\u0000\u0000.\u0001\u0000\u0000\u0000\u0001\u0000\aToImage0Image (int64, const Value &, Size, void *) const>Upp::RichImlImage::ToImage(int64,const Value&,Size,void*)const>Image ToImage(int64, const Value& data, Size sz, void *) const\u0003Upp\aTOIMAGE\u0011Upp::RichImlImage\u0011UPP::RICHIMLIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000/\u0001\u0000\u0000\u0001\u0000\u0000\u0000/\u0001\u0000\u0000\u001E\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u0001\u0000\u0006IsText\rbool () const Upp::RichImlImage::IsText()const\u0013bool IsText() const\u0003Upp\u0006ISTEXT\u0011Upp::RichImlImage\u0011UPP::RICHIMLIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\a\u0000\u0000\u00001\u0001\u0000\u0000\u0001\u0000\u0000\u00001\u0001\u0000\u0000 \u0000\u0000\u00001\u0001\u0000\u0000\u0000\u0000\u0000\u0003Get\u001BImage (const Value &) const)Upp::RichImlImage::Get(const Value&)const\u001FImage Get(const Value& v) const\u0003Upp\u0003GET\u0011Upp::RichImlImage\u0011UPP::RICHIMLIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u00004\u0001\u0000\u0000\u0000\u0000\u0000\u00004\u0001\u0000\u0000\u0001\u0000\u0000\u00007\u0001\u0000\u0000\u0001\u0000\u0000\u0003Get\u001BImage (const Value &) const)Upp::RichImlImage::Get(const Value&)const\u001FImage Get(const Value& v) const\u0003Upp\u0003GET\u0011Upp::RichImlImage\u0011UPP::RICHIMLIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0001\u0000\u0000\u0000<\u0001\u0000\u0000\u0001\u0001\u0000\vGetTypeName\u001CString (const Value &) const1Upp::RichImlImage::GetTypeName(const Value&)const(String GetTypeName(const Value& v) const\u0003Upp\vGETTYPENAME\u0011Upp::RichImlImage\u0011UPP::RICHIMLIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000>\u0001\u0000\u0000\u0000\u0000\u0000\u0000>\u0001\u0000\u0000\u0001\u0000\u0000\u0000A\u0001\u0000\u0000\u0001\u0001\u0000\u0006IsText\rbool () const Upp::RichImlImage::IsText()const\u0013bool IsText() const\u0003Upp\u0006ISTEXT\u0011Upp::RichImlImage\u0011UPP::RICHIMLIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000C\u0001\u0000\u0000\u0000\u0000\u0000\u0000C\u0001\u0000\u0000\u0001\u0000\u0000\u0000F\u0001\u0000\u0000\u0001\u0001\u0000\u000FGetPhysicalSize\u001ASize (const Value &) const5Upp::RichImlImage::GetPhysicalSize(const Value&)const-Size GetPhysicalSize(const Value& data) const\u0003Upp\u000FGETPHYSICALSIZE\u0011Upp::RichImlImage\u0011UPP::RICHIMLIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000H\u0001\u0000\u0000\u0000\u0000\u0000\u0000H\u0001\u0000\u0000\u0001\u0000\u0000\u0000K\u0001\u0000\u0000\u0001\u0001\u0000\fGetPixelSize\u001ASize (const Value &) const2Upp::RichImlImage::GetPixelSize(const Value&)const*Size GetPixelSize(const Value& data) const\u0003Upp\fGETPIXELSIZE\u0011Upp::RichImlImage\u0011UPP::RICHIMLIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000M\u0001\u0000\u0000\u0000\u0000\u0000\u0000M\u0001\u0000\u0000\u0001\u0000\u0000\u0000P\u0001\u0000\u0000\u0001\u0001\u0000\u0005Paint(void (const Value &, Draw &, Size) const6Upp::RichImlImage::Paint(const Value&,Draw&,Size)const5void Paint(const Value& data, Draw& w, Size sz) const\u0003Upp\u0005PAINT\u0011Upp::RichImlImage\u0011UPP::RICHIMLIMAGE\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000R\u0001\u0000\u0000\u0000\u0000\u0000\u0000R\u0001\u0000\u0000\u0001\u0000\u0000\u0000U\u0001\u0000\u0000\u0001\u0001\u0000\aToImage0Image (int64, const Value &, Size, void *) const>Upp::RichImlImage::ToImage(int64,const Value&,Size,void*)const>Image ToImage(int64, const Value& data, Size sz, void *) const\u0003Upp\aTOIMAGE\u0011Upp::RichImlImage\u0011UPP::RICHIMLIMAGE\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000W\u0001\u0000\u0000\u0000\u0000\u0000\u0000W\u0001\u0000\u0000\t\u0000\u0000\u0000W\u0001\u0000\u0000\u0001\u0000\u0001\ns__sF1_344\rUpp::Callinit\u000FUpp::s__sF1_344ostatic Upp::Callinit s__sF1_344(s__sF1_344_fn, \"C:\\\\Users\\\\sblo\\\\ai-upp\\\\uppsrc\\\\RichText\\\\RichImage.cpp\", 344)\u0003Upp\nS__SF1_344\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000W\u0001\u0000\u0000\u0000\u0000\u0000\u0000W\u0001\u0000\u0000\t\u0000\u0000\u0000W\u0001\u0000\u0000\u0000\u0000\u0001\rs__sF1_344_fn\avoid ()\u0014Upp::s__sF1_344_fn()\u001Bstatic void s__sF1_344_fn()\u0003Upp\rS__SF1_344_FN\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000]\u0001\u0000\u0000\u0000\u0000\u0000\u0000]\u0001\u0000\u0000\u0016\u0000\u0000\u0000]\u0001\u0000\u0000\u0001\u0000\u0000\u0016RichImage__initializer\avoid ()\u001DUpp::RichImage__initializer()\u001Dvoid RichImage__initializer()\u0003Upp\u0016RICHIMAGE__INITIALIZER\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000]\u0001\u0000\u0000\u0000\u0000\u0000\u0000]\u0001\u0000\u0000\u0016\u0000\u0000\u0000]\u0001\u0000\u0000\u0000\u0000\u0000\u0019RichImage__initializer_fn\avoid () Upp::RichImage__initializer_fn() void RichImage__initializer_fn()\u0003Upp\u0019RICHIMAGE__INITIALIZER_FN\u0003Upp\u0003UPP\u0000\u0000end\u0000\u0017E\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\ParaData.cpp","value":"data)\t\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000 \u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\ncache_lock\vStaticMutex\u0019Upp::RichPara::cache_lock\u0016StaticMutex cache_lock\u0003Upp\nCACHE_LOCK\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0000\u0000\u0005Cache\u0013Array<RichPara> &()\u0016Upp::RichPara::Cache()\u0018Array<RichPara>& Cache()\u0003Upp\u0005CACHE\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\aCacheId\fvoid (int64)\u001DUpp::RichPara::CacheId(int64)\u0016void CacheId(int64 id)\u0003Upp\aCACHEID\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0018\u0000\u0000\u0000\n\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\bRichPara\avoid ()\u0019Upp::RichPara::RichPara()\nRichPara()\u0003Upp\bRICHPARA\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0019\u0000\u0000\u0000\n\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000)\u0000\u0000\u0000\u0001\u0000\u0000\t~RichPara\u0010void () noexcept\u0012Upp::RichPara::~()\v~RichPara()\u0003Upp\t~RICHPARA\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0018\u0000\u0000\u0000\v\u0000\u0000\u0000+\u0000\u0000\u0000\u0000\u0000\u0000\u0000+\u0000\u0000\u0000\u0001\u0000\u0000\u0000B\u0000\u0000\u0000\u0001\u0000\u0000\tPaintInfo\avoid ()\u001BUpp::PaintInfo::PaintInfo()\vPaintInfo()\u0003Upp\tPAINTINFO\u000EUpp::PaintInfo\u000EUPP::PAINTINFO\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000D\u0000\u0000\u0000\u0000\u0000\u0000\u0000D\u0000\u0000\u0000\u0001\u0000\u0000\u0000b\u0000\u0000\u0000\u0001\u0000\u0000\u0006AsText-String (const RichPara::NumberFormat &) constAUpp::RichPara::Number::AsText(const RichPara::NumberFormat&)const9String AsText(const RichPara::NumberFormat& format) const\u0003Upp\u0006ASTEXT\u0015Upp::RichPara::Number\u0015UPP::RICHPARA::NUMBER\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000d\u0000\u0000\u0000\u0000\u0000\u0000\u0000d\u0000\u0000\u0000\u0001\u0000\u0000\u0000x\u0000\u0000\u0000\u0001\u0000\u0000\u0004Next%void (const RichPara::NumberFormat &):Upp::RichPara::Number::Next(const RichPara::NumberFormat&),void Next(const RichPara::NumberFormat& fmt)\u0003Upp\u0004NEXT\u0015Upp::RichPara::Number\u0015UPP::RICHPARA::NUMBER\u0000\u0000\u0015\u0000\u0000\u0000\u001D\u0000\u0000\u0000z\u0000\u0000\u0000\u0000\u0000\u0000\u0000z\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\nIsNumbered\rbool () const.Upp::RichPara::NumberFormat::IsNumbered()const\u0017bool IsNumbered() const\u0003Upp\nISNUMBERED\u001BUpp::RichPara::NumberFormat\u001BUPP::RICHPARA::NUMBERFORMAT\u0000\u0000\u0015\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u000EGetNumberLevel\fint () const2Upp::RichPara::NumberFormat::GetNumberLevel()const\u001Aint GetNumberLevel() const\u0003Upp\u000EGETNUMBERLEVEL\u001BUpp::RichPara::NumberFormat\u001BUPP::RICHPARA::NUMBERFORMAT\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0010NumberingDiffers9bool (const RichPara::Format &, const RichPara::Format &)FUpp::NumberingDiffers(const RichPara::Format&,const RichPara::Format&)Qbool NumberingDiffers(const RichPara::Format& fmt1, const RichPara::Format& fmt2)\u0003Upp\u0010NUMBERINGDIFFERS\u0003Upp\u0003UPP\u0000\u0000\u0018\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\nCharFormat\avoid ()'Upp::RichPara::CharFormat::CharFormat()\fCharFormat()\u0003Upp\nCHARFORMAT\u0019Upp::RichPara::CharFormat\u0019UPP::RICHPARA::CHARFORMAT\u0000\u0000\u0018\u0000\u0000\u0000\u0012\u0000\u0000\u0000¡\u0000\u0000\u0000\u0000\u0000\u0000\u0000¡\u0000\u0000\u0000\u0001\u0000\u0000\u0000¯\u0000\u0000\u0000\u0001\u0000\u0000\u0006Format\avoid ()\u001FUpp::RichPara::Format::Format()\bFormat()\u0003Upp\u0006FORMAT\u0015Upp::RichPara::Format\u0015UPP::RICHPARA::FORMAT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000±\u0000\u0000\u0000\u0000\u0000\u0000\u0000±\u0000\u0000\u0000\u0001\u0000\u0000\u0000î\u0000\u0000\u0000\u0001\u0000\u0000\nCharformativoid (Stream &, const RichPara::CharFormat &, const RichPara::CharFormat &, const RichPara::CharFormat &)vUpp::RichPara::Charformat(Stream&,const RichPara::CharFormat&,const RichPara::CharFormat&,const RichPara::CharFormat&)yvoid Charformat(Stream& out, const RichPara::CharFormat& o, const RichPara::CharFormat& n, const RichPara::CharFormat& s)\u0003Upp\nCHARFORMAT\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000ð\u0000\u0000\u0000\u0000\u0000\u0000\u0000ð\u0000\u0000\u0000\u0001\u0000\u0000\u0000ö\u0000\u0000\u0000\u0001\u0000\u0000\u0003Cat4void (const WString &, const RichPara::CharFormat &)>Upp::RichPara::Cat(const WString&,const RichPara::CharFormat&)9void Cat(const WString& s, const RichPara::CharFormat& f)\u0003Upp\u0003CAT\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000ø\u0000\u0000\u0000\u0000\u0000\u0000\u0000ø\u0000\u0000\u0000\u0001\u0000\u0000\u0000û\u0000\u0000\u0000\u0001\u0000\u0000\u0003Cat'void (const char *, const CharFormat &)1Upp::RichPara::Cat(const char*,const CharFormat&),void Cat(const char *s, const CharFormat& f)\u0003Upp\u0003CAT\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000ý\u0000\u0000\u0000\u0000\u0000\u0000\u0000ý\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0001\u0000\u0000\u0003Cat7void (const RichObject &, const RichPara::CharFormat &)AUpp::RichPara::Cat(const RichObject&,const RichPara::CharFormat&)<void Cat(const RichObject& o, const RichPara::CharFormat& f)\u0003Upp\u0003CAT\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0010\u0001\u0000\u0000\u0001\u0000\u0000\u0003Cat7void (Id, const String &, const RichPara::CharFormat &)@Upp::RichPara::Cat(Id,const String&,const RichPara::CharFormat&)Fvoid Cat(Id field, const String& param, const RichPara::CharFormat& f)\u0003Upp\u0003CAT\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000\u0012\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0016\u0001\u0000\u0000\u0001\u0000\u0000\aTabLess\fUpp::TabLess\fUpp::TabLess\aTabLess\u0003Upp\aTABLESS\fUpp::TabLess\fUPP::TABLESS\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0002\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0001\u0000\u0000\noperator()9bool (const RichPara::Tab &, const RichPara::Tab &) constHUpp::TabLess::operator()(const RichPara::Tab&,const RichPara::Tab&)constEbool operator()(const RichPara::Tab& a, const RichPara::Tab& b) const\u0003Upp\nOPERATOR()\fUpp::TabLess\fUPP::TABLESS\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0018\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u001B\u0001\u0000\u0000\u0001\u0000\u0000\bSortTabs\avoid ()!Upp::RichPara::Format::SortTabs()\u000Fvoid SortTabs()\u0003Upp\bSORTTABS\u0015Upp::RichPara::Format\u0015UPP::RICHPARA::FORMAT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u001D\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u001D\u0001\u0000\u0000\u0001\u0000\u0000\u00009\u0001\u0000\u0000\u0001\u0000\u0000\tPackPartsuvoid (Stream &, const RichPara::CharFormat &, const Array<RichPara::Part> &, CharFormat &, Array<RichObject> &) constbUpp::RichPara::PackParts(Stream&,const RichPara::CharFormat&,const Array&,CharFormat&,Array&)constÿ\u0000\u0000\u0000void PackParts(Stream& out, const RichPara::CharFormat& chrstyle, const Array<RichPara::Part>& part, CharFormat& cf, Array<RichObject>& obj) const\u0003Upp\tPACKPARTS\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000;\u0001\u0000\u0000\u0000\u0000\u0000\u0000;\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0004Pack<String (const RichPara::Format &, Array<RichObject> &) const8Upp::RichPara::Pack(const RichPara::Format&,Array&)constHString Pack(const RichPara::Format& style, Array<RichObject>& obj) const\u0003Upp\u0004PACK\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u00001\u0002\u0000\u0000\u0001\u0000\u0000\vUnpackPartshvoid (Stream &, const RichPara::CharFormat &, Array<RichPara::Part> &, const Array<RichObject> &, int &)XUpp::RichPara::UnpackParts(Stream&,const RichPara::CharFormat&,Array&,const Array&,int&)ÿ\u0000\u0000\u0000void UnpackParts(Stream& in, const RichPara::CharFormat& chrstyle, Array<RichPara::Part>& part, const Array<RichObject>& obj, int& oi)\u0003Upp\vUNPACKPARTS\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u00003\u0002\u0000\u0000\u0000\u0000\u0000\u00003\u0002\u0000\u0000\u0001\u0000\u0000\u0000{\u0002\u0000\u0000\u0001\u0000\u0000\u0006UnpackJvoid (const String &, const Array<RichObject> &, const RichPara::Format &)IUpp::RichPara::Unpack(const String&,const Array&,const RichPara::Format&)\\void Unpack(const String& data, const Array<RichObject>& obj, const RichPara::Format& style)\u0003Upp\u0006UNPACK\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000}\u0002\u0000\u0000\u0000\u0000\u0000\u0000}\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\aIsEmpty\rbool () const\u001DUpp::RichPara::IsEmpty()const\u0014bool IsEmpty() const\u0003Upp\aISEMPTY\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\tGetLength\fint () const\u001FUpp::RichPara::GetLength()const\u0015int GetLength() const\u0003Upp\tGETLENGTH\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\aGetText\u0010WString () const\u001DUpp::RichPara::GetText()const\u0017WString GetText() const\u0003Upp\aGETTEXT\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u00000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\nfieldtype0(VectorMap<Id, RichPara::FieldType *> &()\u001BUpp::RichPara::fieldtype0()2VectorMap<Id, RichPara::FieldType *>& fieldtype0()\u0003Upp\nFIELDTYPE0\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\bRegister\u0016void (Id, FieldType &)&Upp::RichPara::Register(Id,FieldType&)#void Register(Id id, FieldType& ft)\u0003Upp\bREGISTER\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000¡\u0002\u0000\u0000\u0000\u0000\u0000\u0000¡\u0002\u0000\u0000\u0001\u0000\u0000\u0000¯\u0002\u0000\u0000\u0001\u0000\u0000\u000EEvaluateFields!bool (VectorMap<String, Value> &))Upp::RichPara::EvaluateFields(VectorMap&)3bool EvaluateFields(VectorMap<String, Value>& vars)\u0003Upp\u000EEVALUATEFIELDS\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000±\u0002\u0000\u0000\u0000\u0000\u0000\u0000±\u0002\u0000\u0000\u0001\u0000\u0000\u0000¸\u0002\u0000\u0000\u0001\u0000\u0000\u0006HasPos\rbool () const\u001CUpp::RichPara::HasPos()const\u0013bool HasPos() const\u0003Upp\u0006HASPOS\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000º\u0002\u0000\u0000\u0000\u0000\u0000\u0000º\u0002\u0000\u0000\u0001\u0000\u0000\u0000Â\u0002\u0000\u0000\u0001\u0000\u0000\bFindPart\u0011int (int &) const\"Upp::RichPara::FindPart(int&)const\u001Cint FindPart(int& pos) const\u0003Upp\bFINDPART\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000Ä\u0002\u0000\u0000\u0000\u0000\u0000\u0000Ä\u0002\u0000\u0000\u0001\u0000\u0000\u0000Ï\u0002\u0000\u0000\u0001\u0000\u0000\u0004Trim\nvoid (int)\u0018Upp::RichPara::Trim(int)\u0012void Trim(int pos)\u0003Upp\u0004TRIM\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000Ñ\u0002\u0000\u0000\u0000\u0000\u0000\u0000Ñ\u0002\u0000\u0000\u0001\u0000\u0000\u0000Ú\u0002\u0000\u0000\u0001\u0000\u0000\u0003Mid\nvoid (int)\u0017Upp::RichPara::Mid(int)\u0011void Mid(int pos)\u0003Upp\u0003MID\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000Ü\u0002\u0000\u0000\u0000\u0000\u0000\u0000Ü\u0002\u0000\u0000\u0001\u0000\u0000\u0000ö\u0002\u0000\u0000\u0001\u0000\u0000\u000EApplyCharStyleYvoid (RichPara::CharFormat &, const RichPara::CharFormat &, const RichPara::CharFormat &)bUpp::ApplyCharStyle(RichPara::CharFormat&,const RichPara::CharFormat&,const RichPara::CharFormat&)wvoid ApplyCharStyle(RichPara::CharFormat& format, const RichPara::CharFormat& f0, const RichPara::CharFormat& newstyle)\u0003Upp\u000EAPPLYCHARSTYLE\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000ø\u0002\u0000\u0000\u0000\u0000\u0000\u0000ø\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0003\u0000\u0000\u0001\u0000\u0000\nApplyStyle\u0015void (const Format &)(Upp::RichPara::ApplyStyle(const Format&)'void ApplyStyle(const Format& newstyle)\u0003Upp\nAPPLYSTYLE\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0003\u0000\u0000\u0001\u0000\u0000\u0000\u0018\u0003\u0000\u0000\u0001\u0000\u0000\u0004Dump\avoid ()\u0015Upp::RichPara::Dump()\vvoid Dump()\u0003Upp\u0004DUMP\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u001B\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u001B\u0003\u0000\u0000\u0001\u0000\u0000\u00000\u0003\u0000\u0000\u0001\u0000\u0000\bToString\u000FString () const*Upp::RichPara::CharFormat::ToString()const\u0017String ToString() const\u0003Upp\bTOSTRING\u0019Upp::RichPara::CharFormat\u0019UPP::RICHPARA::CHARFORMAT\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u00002\u0003\u0000\u0000\u0000\u0000\u0000\u00002\u0003\u0000\u0000\u0001\u0000\u0000\u0000M\u0003\u0000\u0000\u0001\u0000\u0000\bToString\u000FString () const&Upp::RichPara::Format::ToString()const\u0017String ToString() const\u0003Upp\bTOSTRING\u0015Upp::RichPara::Format\u0015UPP::RICHPARA::FORMAT\u0000\u0000end\u0000\u001A!\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\ParaType.cpp","value":"data\u0014\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000'\u0000\u0000\u0000\u0001\u0000\u0000\u0003Smh'void (Lines &, HeightInfo *, int) const/Upp::RichPara::Smh(Lines&,HeightInfo*,int)const4void Smh(Lines& lines, HeightInfo *th, int cx) const\u0003Upp\u0003SMH\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u0018\u0000\u0000\u0000)\u0000\u0000\u0000\u0000\u0000\u0000\u0000)\u0000\u0000\u0000\u0001\u0000\u0000\u0000J\u0000\u0000\u0000\u0001\u0000\u0000\nGetNextTab\u001ERichPara::Tab (int, int) const'Upp::RichPara::GetNextTab(int,int)const/RichPara::Tab GetNextTab(int pos, int cx) const\u0003Upp\nGETNEXTTAB\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0002\u0000\u0000\u0000\u0011\u0000\u0000\u0000L\u0000\u0000\u0000\u0000\u0000\u0000\u0000L\u0000\u0000\u0000\u0001\u0000\u0000\u0000V\u0000\u0000\u0000\u0001\u0000\u0000\tStorePart\u0018Upp::RichPara::StorePart\u0018Upp::RichPara::StorePart\u0013RichPara::StorePart\u0003Upp\tSTOREPART\u0018Upp::RichPara::StorePart\u0018UPP::RICHPARA::STOREPART\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000M\u0000\u0000\u0000\u0001\u0000\u0000\u0000M\u0000\u0000\u0000\u0015\u0000\u0000\u0000M\u0000\u0000\u0000\u0001\u0000\u0000\u0001t\awchar *\u001BUpp::RichPara::StorePart::t\bwchar *t\u0003Upp\u0001T\u0018Upp::RichPara::StorePart\u0018UPP::RICHPARA::STOREPART\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000N\u0000\u0000\u0000\u0001\u0000\u0000\u0000N\u0000\u0000\u0000\u0015\u0000\u0000\u0000N\u0000\u0000\u0000\u0001\u0000\u0000\u0001w\u0005int *\u001BUpp::RichPara::StorePart::w\u0006int *w\u0003Upp\u0001W\u0018Upp::RichPara::StorePart\u0018UPP::RICHPARA::STOREPART\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000O\u0000\u0000\u0000\u0001\u0000\u0000\u0000O\u0000\u0000\u0000\u0015\u0000\u0000\u0000O\u0000\u0000\u0000\u0001\u0000\u0000\u0001p\u0005int *\u001BUpp::RichPara::StorePart::p\u0006int *p\u0003Upp\u0001P\u0018Upp::RichPara::StorePart\u0018UPP::RICHPARA::STOREPART\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000P\u0000\u0000\u0000\u0001\u0000\u0000\u0000P\u0000\u0000\u0000\u0015\u0000\u0000\u0000P\u0000\u0000\u0000\u0001\u0000\u0000\u0001f\u0013const CharFormat **\u001BUpp::RichPara::StorePart::f\u0014const CharFormat **f\u0003Upp\u0001F\u0018Upp::RichPara::StorePart\u0018UPP::RICHPARA::STOREPART\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000Q\u0000\u0000\u0000\u0001\u0000\u0000\u0000Q\u0000\u0000\u0000\u0015\u0000\u0000\u0000Q\u0000\u0000\u0000\u0001\u0000\u0000\u0001h\fHeightInfo *\u001BUpp::RichPara::StorePart::h\rHeightInfo *h\u0003Upp\u0001H\u0018Upp::RichPara::StorePart\u0018UPP::RICHPARA::STOREPART\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000R\u0000\u0000\u0000\u0001\u0000\u0000\u0000R\u0000\u0000\u0000\u0017\u0000\u0000\u0000R\u0000\u0000\u0000\u0001\u0000\u0000\u0003pos\u0003int\u001DUpp::RichPara::StorePart::pos\aint pos\u0003Upp\u0003POS\u0018Upp::RichPara::StorePart\u0018UPP::RICHPARA::STOREPART\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000S\u0000\u0000\u0000\u0001\u0000\u0000\u0000S\u0000\u0000\u0000\u0018\u0000\u0000\u0000S\u0000\u0000\u0000\u0001\u0000\u0000\u0004font\u0004Font\u001EUpp::RichPara::StorePart::font\tFont font\u0003Upp\u0004FONT\u0018Upp::RichPara::StorePart\u0018UPP::RICHPARA::STOREPART\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000U\u0000\u0000\u0000\u0001\u0000\u0000\u0000U\u0000\u0000\u00002\u0000\u0000\u0000U\u0000\u0000\u0000\u0000\u0000\u0000\u0005Store!void (Lines &, const Part &, int)7Upp::RichPara::StorePart::Store(Lines&,const Part&,int)1void Store(Lines& lines, const Part& p, int pinc)\u0003Upp\u0005STORE\u0018Upp::RichPara::StorePart\u0018UPP::RICHPARA::STOREPART\u0000\u0000\u0015\u0000\u0000\u0000\u001A\u0000\u0000\u0000X\u0000\u0000\u0000\u0000\u0000\u0000\u0000X\u0000\u0000\u0000\u0001\u0000\u0000\u0000½\u0000\u0000\u0000\u0001\u0000\u0000\u0005Store!void (Lines &, const Part &, int)7Upp::RichPara::StorePart::Store(Lines&,const Part&,int)4void Store(Lines& lines, const Part& part, int pinc)\u0003Upp\u0005STORE\u0018Upp::RichPara::StorePart\u0018UPP::RICHPARA::STOREPART\u0000\u0000\b\u0000\u0000\u0000\v\u0000\u0000\u0000¿\u0000\u0000\u0000\u0000\u0000\u0000\u0000¿\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ê\u0000\u0000\u0000\u0001\u0000\u0001\nCountChars#int (const Array<RichPara::Part> &)\u001DUpp::CountChars(const Array&)8static int CountChars(const Array<RichPara::Part>& part)\u0003Upp\nCOUNTCHARS\u0003Upp\u0003UPP\u0000\u0000\u0018\u0000\u0000\u0000\u0011\u0000\u0000\u0000Ì\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ì\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ò\u0000\u0000\u0000\u0001\u0000\u0000\u0005Lines\avoid ()\u001DUpp::RichPara::Lines::Lines()\aLines()\u0003Upp\u0005LINES\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0015\u0000\u0000\u0000)\u0000\u0000\u0000Ô\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ô\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ø\u0000\u0000\u0000\u0001\u0000\u0000\u0005Cache\u001AArray<RichPara::Lines> &()\u001DUpp::RichPara::Lines::Cache()\u001FArray<RichPara::Lines>& Cache()\u0003Upp\u0005CACHE\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0019\u0000\u0000\u0000\u0011\u0000\u0000\u0000Ú\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ú\u0000\u0000\u0000\u0001\u0000\u0000\u0000ë\u0000\u0000\u0000\u0001\u0000\u0000\u0006~Lines\u0010void () noexcept\u0019Upp::RichPara::Lines::~()\b~Lines()\u0003Upp\u0006~LINES\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0015\u0000\u0000\u0000\u001A\u0000\u0000\u0000í\u0000\u0000\u0000\u0000\u0000\u0000\u0000í\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\vFormatLines+RichPara::Lines (int, const Number &) const2Upp::RichPara::FormatLines(int,const Number&)const;RichPara::Lines FormatLines(int acx, const Number& n) const\u0003Upp\vFORMATLINES\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000¿\u0001\u0000\u0000\u0001\u0000\u0000\aJustify\u001Fvoid (const RichPara::Format &)6Upp::RichPara::Lines::Justify(const RichPara::Format&),void Justify(const RichPara::Format& format)\u0003Upp\aJUSTIFY\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000Á\u0001\u0000\u0000\u0000\u0000\u0000\u0000Á\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ç\u0001\u0000\u0000\u0001\u0000\u0000\nBodyHeight\fint () const'Upp::RichPara::Lines::BodyHeight()const\u0016int BodyHeight() const\u0003Upp\nBODYHEIGHT\u0014Upp::RichPara::Lines\u0014UPP::RICHPARA::LINES\u0000\u0000end\u0000-\r\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\ParaPaint.cpp","value":"data\u001Cõ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0004\u0000\u0000\u0000\b\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\nIMAGECLASS\u0000\nIMAGECLASS\nIMAGECLASS\u0000\nIMAGECLASS\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000)\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\tIMAGEFILE\u0000\tIMAGEFILE\tIMAGEFILE\u0000\tIMAGEFILE\u0000\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\v\u0000\u0000\u0000\u0001\u0000\u0000\nResolveInk\u0013Color (Color) const&Upp::PaintInfo::ResolveInk(Color)const!Color ResolveInk(Color ink) const\u0003Upp\nRESOLVEINK\u000EUpp::PaintInfo\u000EUPP::PAINTINFO\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\fResolvePaper\u0013Color (Color) const(Upp::PaintInfo::ResolvePaper(Color)const%Color ResolvePaper(Color paper) const\u0003Upp\fRESOLVEPAPER\u000EUpp::PaintInfo\u000EUPP::PAINTINFO\u0000\u0000\u0015\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0005Begin%RichPara::Lines (RichContext &) const'Upp::RichPara::Begin(RichContext&)const,RichPara::Lines Begin(RichContext& rc) const\u0003Upp\u0005BEGIN\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\u0000r\u0000\u0000\u0000\u0001\u0000\u0000\u0005Flushyvoid (Draw &, const PaintInfo &, wchar *, const CharFormat **, int *, int, int, int, int, int, int, int, int, Zoom, bool)uUpp::RichPara::Flush(Draw&,const PaintInfo&,wchar*,const CharFormat**,int*,int,int,int,int,int,int,int,int,Zoom,bool)ÿ¼\u0000\u0000\u0000void Flush(Draw& draw, const PaintInfo& pi, wchar *text, const CharFormat **i0, int *wd, int pos, int len, int x0, int x, int y0, int y, int linecy, int lineascent, Zoom z, bool highlight)\u0003Upp\u0005FLUSH\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000t\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\u0000\u0000\u0000\u0001\u0000\u0000\u0000~\u0000\u0000\u0000\u0001\u0000\u0000\nBreaksPage4bool (const RichContext &, const Lines &, int) constCUpp::RichPara::BreaksPage(const RichContext&,const Lines&,int)constDbool BreaksPage(const RichContext& rc, const Lines& pl, int i) const\u0003Upp\nBREAKSPAGE\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0014RichObjectImageMaker\u0019Upp::RichObjectImageMaker\u0019Upp::RichObjectImageMaker!RichObjectImageMaker : ImageMaker\u0003Upp\u0014RICHOBJECTIMAGEMAKER\u0019Upp::RichObjectImageMaker\u0019UPP::RICHOBJECTIMAGEMAKER\u000FUpp::ImageMaker\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0006object\nRichObject!Upp::RichObjectImageMaker::object\u0011RichObject object\u0003Upp\u0006OBJECT\u0019Upp::RichObjectImageMaker\u0019UPP::RICHOBJECTIMAGEMAKER\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0002sz\u0004Size\u001DUpp::RichObjectImageMaker::sz\aSize sz\u0003Upp\u0002SZ\u0019Upp::RichObjectImageMaker\u0019UPP::RICHOBJECTIMAGEMAKER\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\acontext\u0006void *\"Upp::RichObjectImageMaker::context\rvoid *context\u0003Upp\aCONTEXT\u0019Upp::RichObjectImageMaker\u0019UPP::RICHOBJECTIMAGEMAKER\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0003Key\u000FString () const%Upp::RichObjectImageMaker::Key()const\u0012String Key() const\u0003Upp\u0003KEY\u0019Upp::RichObjectImageMaker\u0019UPP::RICHOBJECTIMAGEMAKER\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0004Make\u000EImage () const&Upp::RichObjectImageMaker::Make()const\u0012Image Make() const\u0003Upp\u0004MAKE\u0019Upp::RichObjectImageMaker\u0019UPP::RICHOBJECTIMAGEMAKER\u0000\u0000\u0015\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0001\u0000\u0003Key\u000FString () const%Upp::RichObjectImageMaker::Key()const\u0012String Key() const\u0003Upp\u0003KEY\u0019Upp::RichObjectImageMaker\u0019UPP::RICHOBJECTIMAGEMAKER\u0000\u0000\u0015\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0001\u0000\u0004Make\u000EImage () const&Upp::RichObjectImageMaker::Make()const\u0012Image Make() const\u0003Upp\u0004MAKE\u0019Upp::RichObjectImageMaker\u0019UPP::RICHOBJECTIMAGEMAKER\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000¨\u0000\u0000\u0000\u0001\u0000\u0000\tDrawRuler-void (Draw &, int, int, int, int, Color, int)9Upp::RichPara::DrawRuler(Draw&,int,int,int,int,Color,int)Kvoid DrawRuler(Draw& w, int x, int y, int cx, int cy, Color ink, int style)\u0003Upp\tDRAWRULER\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000ª\u0000\u0000\u0000\u0000\u0000\u0000\u0000ª\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0005Paint[void (PageDraw &, RichContext, const PaintInfo &, const Number &, const Bits &, bool) const`Upp::RichPara::Paint(PageDraw&,RichContext,const PaintInfo&,const Number&,const Bits&,bool)const|void Paint(PageDraw& pw, RichContext rc, const PaintInfo& pi, const Number& n, const Bits& spellerror, bool baselevel) const\u0003Upp\u0005PAINT\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000¶\u0001\u0000\u0000\u0001\u0000\u0000\nGetRichPos\u001Bvoid (RichPos &, int) const,Upp::RichPara::GetRichPos(RichPos&,int)const+void GetRichPos(RichPos& rp, int pos) const\u0003Upp\nGETRICHPOS\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000¸\u0001\u0000\u0000\u0000\u0000\u0000\u0000¸\u0001\u0000\u0000\u0001\u0000\u0000\u0000ñ\u0001\u0000\u0000\u0001\u0000\u0000\bGetCaret\"RichCaret (int, RichContext) const-Upp::RichPara::GetCaret(int,RichContext)const1RichCaret GetCaret(int pos, RichContext rc) const\u0003Upp\bGETCARET\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000ó\u0001\u0000\u0000\u0000\u0000\u0000\u0000ó\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0005\u0002\u0000\u0000\u0001\u0000\u0000\tPosInLine1int (int, const Rect &, const Lines &, int) const?Upp::RichPara::PosInLine(int,const Rect&,const Lines&,int)constFint PosInLine(int x, const Rect& page, const Lines& pl, int lni) const\u0003Upp\tPOSINLINE\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\a\u0002\u0000\u0000\u0000\u0000\u0000\u0000\a\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0015\u0002\u0000\u0000\u0001\u0000\u0000\u0006GetPos#int (int, PageY, RichContext) const1Upp::RichPara::GetPos(int,PageY,RichContext)const0int GetPos(int x, PageY y, RichContext rc) const\u0003Upp\u0006GETPOS\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0017\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0002\u0000\u0000\u0001\u0000\u0000\u0000(\u0002\u0000\u0000\u0001\u0000\u0000\vGetVertMove<int (int, int, const Rect &, int, const RichContext &) constKUpp::RichPara::GetVertMove(int,int,const Rect&,int,const RichContext&)constXint GetVertMove(int pos, int gx, const Rect& page, int dir, const RichContext& rc) const\u0003Upp\vGETVERTMOVE\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000*\u0002\u0000\u0000\u0000\u0000\u0000\u0000*\u0002\u0000\u0000\u0001\u0000\u0000\u00008\u0002\u0000\u0000\u0001\u0000\u0000\fGatherLabels3void (Vector<RichValPos> &, RichContext, int) const9Upp::RichPara::GatherLabels(Vector&,RichContext,int)constJvoid GatherLabels(Vector<RichValPos>& info, RichContext rc, int pos) const\u0003Upp\fGATHERLABELS\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000:\u0002\u0000\u0000\u0000\u0000\u0000\u0000:\u0002\u0000\u0000\u0001\u0000\u0000\u0000T\u0002\u0000\u0000\u0001\u0000\u0000\rGatherIndexes3void (Vector<RichValPos> &, RichContext, int) const:Upp::RichPara::GatherIndexes(Vector&,RichContext,int)constKvoid GatherIndexes(Vector<RichValPos>& info, RichContext rc, int pos) const\u0003Upp\rGATHERINDEXES\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000V\u0002\u0000\u0000\u0000\u0000\u0000\u0000V\u0002\u0000\u0000\u0001\u0000\u0000\u0000Y\u0002\u0000\u0000\u0001\u0000\u0000\u000FFontHeightRound\u0013void (Font &, Zoom) Upp::FontHeightRound(Font&,Zoom)'void FontHeightRound(Font& fnt, Zoom z)\u0003Upp\u000FFONTHEIGHTROUND\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000[\u0002\u0000\u0000\u0000\u0000\u0000\u0000[\u0002\u0000\u0000\u0001\u0000\u0000\u0000n\u0002\u0000\u0000\u0001\u0000\u0000\noperator*=\u001Fvoid (RichPara::Format &, Zoom)'Upp::operator*=(RichPara::Format&,Zoom)\u000Evoid operator*\u0003Upp\nOPERATOR*=\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000p\u0002\u0000\u0000\u0000\u0000\u0000\u0000p\u0002\u0000\u0000\u0001\u0000\u0000\u0000y\u0002\u0000\u0000\u0001\u0000\u0000\tApplyZoom\vvoid (Zoom)\u001EUpp::RichPara::ApplyZoom(Zoom)\u0016void ApplyZoom(Zoom z)\u0003Upp\tAPPLYZOOM\rUpp::RichPara\rUPP::RICHPARA\u0000\u0000end\u0000µ\u0016\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\HeaderFooter.cpp","value":"data\u0011\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u000FRichNumberField\u0014Upp::RichNumberField\u0014Upp::RichNumberField%RichNumberField : RichPara::FieldType\u0003Upp\u000FRICHNUMBERFIELD\u0014Upp::RichNumberField\u0014UPP::RICHNUMBERFIELD\u0018Upp::RichPara::FieldType\u0000\u0015\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0001\u0000\bEvaluate`Array<RichPara::Part> (const String &, VectorMap<String, Value> &, const RichPara::CharFormat &)TUpp::RichNumberField::Evaluate(const String&,VectorMap&,const RichPara::CharFormat&)tArray<RichPara::Part> Evaluate(const String& param, VectorMap<String, Value>& vars, const RichPara::CharFormat& fmt)\u0003Upp\bEVALUATE\u0014Upp::RichNumberField\u0014UPP::RICHNUMBERFIELD\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0001\u0000\u0001\fs__sF5_19_fn\avoid ()\u0013Upp::s__sF5_19_fn()\u001Astatic void s__sF5_19_fn()\u0003Upp\fS__SF5_19_FN\u0003Upp\u0003UPP\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\t\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0001\ts__sF5_19\rUpp::Callinit\u000EUpp::s__sF5_19ostatic Upp::Callinit s__sF5_19(s__sF5_19_fn, \"C:\\\\Users\\\\sblo\\\\ai-upp\\\\uppsrc\\\\RichText\\\\HeaderFooter.cpp\", 19)\u0003Upp\tS__SF5_19\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\t\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0001\fs__sF5_19_fn\avoid ()\u0013Upp::s__sF5_19_fn()\u001Astatic void s__sF5_19_fn()\u0003Upp\fS__SF5_19_FN\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\n\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0000\u0000\u0013GetHeaderFooterText RichText &(RichText *, int, int)+Upp::GetHeaderFooterText(RichText*,int,int)FRichText& GetHeaderFooterText(RichText *text, int page, int pagecount)\u0003Upp\u0013GETHEADERFOOTERTEXT\u0003Upp\u0003UPP\u0000\u0000\u0018\u0000\u0000\u0000\r\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0001\u0000\u0000\u0000$\u0000\u0000\u0000\u0001\u0000\u0000\vRichContext+void (const RichStyles &, const RichText *)@Upp::RichContext::RichContext(const RichStyles&,const RichText*);RichContext(const RichStyles& styles, const RichText *text)\u0003Upp\vRICHCONTEXT\u0010Upp::RichContext\u0010UPP::RICHCONTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000&\u0000\u0000\u0000\u0000\u0000\u0000\u0000&\u0000\u0000\u0000\u0001\u0000\u0000\u00002\u0000\u0000\u0000\u0001\u0000\u0000\fHeaderFooter\u001Dvoid (RichText *, RichText *)3Upp::RichContext::HeaderFooter(RichText*,RichText*)7void HeaderFooter(RichText *header_, RichText *footer_)\u0003Upp\fHEADERFOOTER\u0010Upp::RichContext\u0010UPP::RICHCONTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u00004\u0000\u0000\u0000\u0000\u0000\u0000\u00004\u0000\u0000\u0000\u0001\u0000\u0000\u0000:\u0000\u0000\u0000\u0001\u0000\u0000\nAdjustPage\avoid ()\u001EUpp::RichContext::AdjustPage()\u0011void AdjustPage()\u0003Upp\nADJUSTPAGE\u0010Upp::RichContext\u0010UPP::RICHCONTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000<\u0000\u0000\u0000\u0000\u0000\u0000\u0000<\u0000\u0000\u0000\u0001\u0000\u0000\u0000I\u0000\u0000\u0000\u0001\u0000\u0000\u0003Set/void (PageY, const Rect &, const Rect &, PageY):Upp::RichContext::Set(PageY,const Rect&,const Rect&,PageY)Jvoid Set(PageY p0, const Rect& first_page, const Rect& next_page, PageY p)\u0003Upp\u0003SET\u0010Upp::RichContext\u0010UPP::RICHCONTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000K\u0000\u0000\u0000\u0000\u0000\u0000\u0000K\u0000\u0000\u0000\u0001\u0000\u0000\u0000P\u0000\u0000\u0000\u0001\u0000\u0000\u0004Page\avoid ()\u0018Upp::RichContext::Page()\vvoid Page()\u0003Upp\u0004PAGE\u0010Upp::RichContext\u0010UPP::RICHCONTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0016\u0000\u0000\u0000R\u0000\u0000\u0000\u0000\u0000\u0000\u0000R\u0000\u0000\u0000\u0001\u0000\u0000\u0000\\\u0000\u0000\u0000\u0001\u0000\u0000\aContext?RichContext (const Rect &, PageY, RichText *, RichText *) constBUpp::RichText::Context(const Rect&,PageY,RichText*,RichText*)constYRichContext Context(const Rect& page, PageY py, RichText *header, RichText *footer) const\u0003Upp\aCONTEXT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000^\u0000\u0000\u0000\u0000\u0000\u0000\u0000^\u0000\u0000\u0000\u0001\u0000\u0000\u0000v\u0000\u0000\u0000\u0001\u0000\u0000\u0011PaintHeaderFooterIvoid (PageDraw &, const Rect &, PageY, const PaintInfo &, int, int) const[Upp::RichText::PaintHeaderFooter(PageDraw&,const Rect&,PageY,const PaintInfo&,int,int)constxvoid PaintHeaderFooter(PageDraw& pw, const Rect& page, PageY py, const PaintInfo& pi_, int from_page, int to_page) const\u0003Upp\u0011PAINTHEADERFOOTER\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000x\u0000\u0000\u0000\u0000\u0000\u0000\u0000x\u0000\u0000\u0000\u0001\u0000\u0000\u0000}\u0000\u0000\u0000\u0001\u0000\u0000\u0006SetQTF&void (One<RichText> &, const String &)\u001FUpp::SetQTF(One&,const String&)2void SetQTF(One<RichText>& txt, const String& qtf)\u0003Upp\u0006SETQTF\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u007F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u007F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\fSetHeaderQtf\u0013void (const char *)'Upp::RichTxt::SetHeaderQtf(const char*)\"void SetHeaderQtf(const char *qtf)\u0003Upp\fSETHEADERQTF\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\fSetFooterQtf\u0013void (const char *)'Upp::RichTxt::SetFooterQtf(const char*)\"void SetFooterQtf(const char *qtf)\u0003Upp\fSETFOOTERQTF\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000end\u0000\u0002\u000E\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\TxtData.cpp","value":"data/\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\v\u0000\u0000\u0000\u0001\u0000\u0000\nInvalidate\rvoid () const%Upp::RichTxt::Para::Invalidate()const\u0017void Invalidate() const\u0003Upp\nINVALIDATE\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0018\u0000\u0000\u0000\u000F\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0004Para\u0018void (const Para &, int))Upp::RichTxt::Para::Para(const Para&,int)\u001APara(const Para& src, int)\u0003Upp\u0004PARA\u0012Upp::RichTxt::Para\u0012UPP::RICHTXT::PARA\u0000\u0000\u0018\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0001\u0000\u0000\u0004Part\u0018void (const Part &, int))Upp::RichTxt::Part::Part(const Part&,int)\u001APart(const Part& src, int)\u0003Upp\u0004PART\u0012Upp::RichTxt::Part\u0012UPP::RICHTXT::PART\u0000\u0000\u0018\u0000\u0000\u0000\u000F\u0000\u0000\u0000!\u0000\u0000\u0000\u0000\u0000\u0000\u0000!\u0000\u0000\u0000\u0018\u0000\u0000\u0000!\u0000\u0000\u0000\u0001\u0000\u0000\u0004Part\avoid ()\u001AUpp::RichTxt::Part::Part()\u0006Part()\u0003Upp\u0004PART\u0012Upp::RichTxt::Part\u0012UPP::RICHTXT::PART\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000#\u0000\u0000\u0000\u0000\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\u0000'\u0000\u0000\u0000\u0001\u0000\u0000\nInvalidate\avoid ()\u001AUpp::RichTxt::Invalidate()\u0011void Invalidate()\u0003Upp\nINVALIDATE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000)\u0000\u0000\u0000\u0000\u0000\u0000\u0000)\u0000\u0000\u0000\u0001\u0000\u0000\u0000,\u0000\u0000\u0000\u0001\u0000\u0000\rGetPartLength\u000Fint (int) const%Upp::RichTxt::GetPartLength(int)const\u001Fint GetPartLength(int pi) const\u0003Upp\rGETPARTLENGTH\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u001A\u0000\u0000\u0000.\u0000\u0000\u0000\u0000\u0000\u0000\u0000.\u0000\u0000\u0000S\u0000\u0000\u0000.\u0000\u0000\u0000\u0001\u0000\u0000\aIsTable\u0010bool (int) const\u001FUpp::RichTxt::IsTable(int)const\u0019bool IsTable(int i) const\u0003Upp\aISTABLE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u001A\u0000\u0000\u0000/\u0000\u0000\u0000\u0000\u0000\u0000\u0000/\u0000\u0000\u0000T\u0000\u0000\u0000/\u0000\u0000\u0000\u0001\u0000\u0000\bGetTable\u001Cconst RichTable &(int) const Upp::RichTxt::GetTable(int)const&const RichTable& GetTable(int i) const\u0003Upp\bGETTABLE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u00002\u0000\u0000\u0000\u0000\u0000\u0000\u00002\u0000\u0000\u0000\u0001\u0000\u0000\u0000?\u0000\u0000\u0000\u0001\u0000\u0000\bFindPart\u0011int (int &) const!Upp::RichTxt::FindPart(int&)const\u001Cint FindPart(int& pos) const\u0003Upp\bFINDPART\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000A\u0000\u0000\u0000\u0000\u0000\u0000\u0000A\u0000\u0000\u0000\u0001\u0000\u0000\u0000G\u0000\u0000\u0000\u0001\u0000\u0000\nGetPartPos\u000Fint (int) const\"Upp::RichTxt::GetPartPos(int)const\u001Cint GetPartPos(int pi) const\u0003Upp\nGETPARTPOS\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000I\u0000\u0000\u0000\u0000\u0000\u0000\u0000I\u0000\u0000\u0000\u0001\u0000\u0000\u0000e\u0000\u0000\u0000\u0001\u0000\u0000\nSetRefresh\nvoid (int)\u001DUpp::RichTxt::SetRefresh(int)\u001Avoid SetRefresh(int parti)\u0003Upp\nSETREFRESH\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000g\u0000\u0000\u0000\u0000\u0000\u0000\u0000g\u0000\u0000\u0000\u0001\u0000\u0000\u0000n\u0000\u0000\u0000\u0001\u0000\u0000\u000ESetRefreshFrom\nvoid (int)!Upp::RichTxt::SetRefreshFrom(int)\u001Evoid SetRefreshFrom(int parti)\u0003Upp\u000ESETREFRESHFROM\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000p\u0000\u0000\u0000\u0000\u0000\u0000\u0000p\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0003Put/void (int, const RichPara &, const RichStyle &)7Upp::RichTxt::Put(int,const RichPara&,const RichStyle&)6void Put(int i, const RichPara& p, const RichStyle& s)\u0003Upp\u0003PUT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0003Put0void (int, const RichPara &, const RichStyles &)8Upp::RichTxt::Put(int,const RichPara&,const RichStyles&)7void Put(int i, const RichPara& p, const RichStyles& s)\u0003Upp\u0003PUT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0003Set0void (int, const RichPara &, const RichStyles &)8Upp::RichTxt::Set(int,const RichPara&,const RichStyles&)7void Set(int i, const RichPara& p, const RichStyles& s)\u0003Upp\u0003SET\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\nRemovePart\nvoid (int)\u001DUpp::RichTxt::RemovePart(int)\u001Avoid RemovePart(int parti)\u0003Upp\nREMOVEPART\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\aSetPick\u0018void (int, RichTable &&)&Upp::RichTxt::SetPick(int,RichTable&&)\"void SetPick(int i, RichTable&& p)\u0003Upp\aSETPICK\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\u0000©\u0000\u0000\u0000\u0001\u0000\u0000\u0003Get-RichPara (int, const RichStyle &, bool) const1Upp::RichTxt::Get(int,const RichStyle&,bool)constDRichPara Get(int parai, const RichStyle& style, bool usecache) const\u0003Upp\u0003GET\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000«\u0000\u0000\u0000\u0000\u0000\u0000\u0000«\u0000\u0000\u0000\u0001\u0000\u0000\u0000°\u0000\u0000\u0000\u0001\u0000\u0000\u0003Get<RichPara (int, const Uuid &, const RichStyles &, bool) const>Upp::RichTxt::Get(int,const Uuid&,const RichStyles&,bool)constVRichPara Get(int parai, const Uuid& styleid, const RichStyles& s, bool usecache) const\u0003Upp\u0003GET\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000²\u0000\u0000\u0000\u0000\u0000\u0000\u0000²\u0000\u0000\u0000\u0001\u0000\u0000\u0000µ\u0000\u0000\u0000\u0001\u0000\u0000\u0003Get.RichPara (int, const RichStyles &, bool) const2Upp::RichTxt::Get(int,const RichStyles&,bool)constARichPara Get(int parti, const RichStyles& s, bool usecache) const\u0003Upp\u0003GET\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000·\u0000\u0000\u0000\u0000\u0000\u0000\u0000·\u0000\u0000\u0000\u0001\u0000\u0000\u0000º\u0000\u0000\u0000\u0001\u0000\u0000\u0003Get'RichPara (int, const RichStyle &) const,Upp::RichTxt::Get(int,const RichStyle&)const5RichPara Get(int parai, const RichStyle& style) const\u0003Upp\u0003GET\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000¼\u0000\u0000\u0000\u0000\u0000\u0000\u0000¼\u0000\u0000\u0000\u0001\u0000\u0000\u0000¿\u0000\u0000\u0000\u0001\u0000\u0000\u0003Get6RichPara (int, const Uuid &, const RichStyles &) const9Upp::RichTxt::Get(int,const Uuid&,const RichStyles&)constGRichPara Get(int parai, const Uuid& styleid, const RichStyles& s) const\u0003Upp\u0003GET\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000Á\u0000\u0000\u0000\u0000\u0000\u0000\u0000Á\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ä\u0000\u0000\u0000\u0001\u0000\u0000\u0003Get(RichPara (int, const RichStyles &) const-Upp::RichTxt::Get(int,const RichStyles&)const.RichPara Get(int i, const RichStyles& s) const\u0003Upp\u0003GET\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000Æ\u0000\u0000\u0000\u0000\u0000\u0000\u0000Æ\u0000\u0000\u0000\u0001\u0000\u0000\u0000É\u0000\u0000\u0000\u0001\u0000\u0000\aIsEmpty\rbool () const\u001CUpp::RichTxt::IsEmpty()const\u0014bool IsEmpty() const\u0003Upp\aISEMPTY\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000Ë\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ë\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ñ\u0000\u0000\u0000\u0001\u0000\u0000\rComputeLength\fint () const\"Upp::RichTxt::ComputeLength()const\u0019int ComputeLength() const\u0003Upp\rCOMPUTELENGTH\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000Ó\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ó\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ø\u0000\u0000\u0000\u0001\u0000\u0000\tGetLength\fint () const\u001EUpp::RichTxt::GetLength()const\u0015int GetLength() const\u0003Upp\tGETLENGTH\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000Ú\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ú\u0000\u0000\u0000\u0001\u0000\u0000\u0000ä\u0000\u0000\u0000\u0001\u0000\u0000\rGetTableCount\fint () const\"Upp::RichTxt::GetTableCount()const\u0019int GetTableCount() const\u0003Upp\rGETTABLECOUNT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000æ\u0000\u0000\u0000\u0000\u0000\u0000\u0000æ\u0000\u0000\u0000\u0001\u0000\u0000\u0000û\u0000\u0000\u0000\u0001\u0000\u0000\u000EEvaluateFields5bool (const RichStyles &, VectorMap<String, Value> &):Upp::RichTxt::EvaluateFields(const RichStyles&,VectorMap&)Hbool EvaluateFields(const RichStyles& s, VectorMap<String, Value>& vars)\u0003Upp\u000EEVALUATEFIELDS\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000ý\u0000\u0000\u0000\u0000\u0000\u0000\u0000ý\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000F\u0001\u0000\u0000\u0001\u0000\u0000\rClearSpelling\avoid ()\u001DUpp::RichTxt::ClearSpelling()\u0014void ClearSpelling()\u0003Upp\rCLEARSPELLING\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0018\u0001\u0000\u0000\u0001\u0000\u0000\fSetParaStyle\u0018void (int, const Uuid &)+Upp::RichTxt::SetParaStyle(int,const Uuid&)(void SetParaStyle(int i, const Uuid& id)\u0003Upp\fSETPARASTYLE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u001A\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u001A\u0001\u0000\u0000\u0001\u0000\u0000\u0000F\u0001\u0000\u0000\u0001\u0000\u0000\nGetRichPos9void (int, RichPos &, int, int, const RichStyles &) constEUpp::RichTxt::GetRichPos(int,RichPos&,int,int,const RichStyles&)constWvoid GetRichPos(int pos, RichPos& rp, int ti, int maxlevel, const RichStyles& st) const\u0003Upp\nGETRICHPOS\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u001A\u0000\u0000\u0000H\u0001\u0000\u0000\u0000\u0000\u0000\u0000H\u0001\u0000\u0000\u0001\u0000\u0000\u0000S\u0001\u0000\u0000\u0001\u0000\u0000\u000EGetFirstFormat+RichPara::Format (const RichStyles &) const4Upp::RichTxt::GetFirstFormat(const RichStyles&)const>RichPara::Format GetFirstFormat(const RichStyles& style) const\u0003Upp\u000EGETFIRSTFORMAT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000U\u0001\u0000\u0000\u0000\u0000\u0000\u0000U\u0001\u0000\u0000\u0001\u0000\u0000\u0000}\u0001\u0000\u0000\u0001\u0000\u0000\nGetCellPos!RichCellPos (int, int, int) const*Upp::RichTxt::GetCellPos(int,int,int)const<RichCellPos GetCellPos(int table, int row, int column) const\u0003Upp\nGETCELLPOS\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u007F\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u007F\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\nGetCellPos\u001ERichCellPos (int, Point) const(Upp::RichTxt::GetCellPos(int,Point)const0RichCellPos GetCellPos(int table, Point p) const\u0003Upp\nGETCELLPOS\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\aIterate0bool (UpdateIterator &, int, const RichStyles &)<Upp::RichTxt::Iterate(UpdateIterator&,int,const RichStyles&)>bool Iterate(UpdateIterator& r, int gpos, const RichStyles& s)\u0003Upp\aITERATE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000¢\u0001\u0000\u0000\u0001\u0000\u0000\asIter__\fUpp::sIter__\fUpp::sIter__!sIter__ : RichTxt::UpdateIterator\u0003Upp\aSITER__\fUpp::sIter__\fUPP::SITER__\u001CUpp::RichTxt::UpdateIterator\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0004iter\u0013RichTxt::Iterator *\u0012Upp::sIter__::iter\u0017RichTxt::Iterator *iter\u0003Upp\u0004ITER\fUpp::sIter__\fUPP::SITER__\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0002\u0000\u0000\u0000¡\u0001\u0000\u0000\u0001\u0001\u0000\noperator()\u0015int (int, RichPara &)'Upp::sIter__::operator()(int,RichPara&)'int operator()(int pos, RichPara& para)\u0003Upp\nOPERATOR()\fUpp::sIter__\fUPP::SITER__\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000¤\u0001\u0000\u0000\u0000\u0000\u0000\u0000¤\u0001\u0000\u0000\u0001\u0000\u0000\u0000©\u0001\u0000\u0000\u0001\u0000\u0000\aIterate0bool (Iterator &, int, const RichStyles &) const;Upp::RichTxt::Iterate(Iterator&,int,const RichStyles&)const>bool Iterate(Iterator& r, int gpos, const RichStyles& s) const\u0003Upp\aITERATE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000«\u0001\u0000\u0000\u0000\u0000\u0000\u0000«\u0001\u0000\u0000\u0001\u0000\u0000\u0000±\u0001\u0000\u0000\u0001\u0000\u0000\u0004Init\avoid ()\u0014Upp::RichTxt::Init()\vvoid Init()\u0003Upp\u0004INIT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000³\u0001\u0000\u0000\u0000\u0000\u0000\u0000³\u0001\u0000\u0000\u0001\u0000\u0000\u0000·\u0001\u0000\u0000\u0001\u0000\u0000\u0005Clear\avoid ()\u0015Upp::RichTxt::Clear()\fvoid Clear()\u0003Upp\u0005CLEAR\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0018\u0000\u0000\u0000\t\u0000\u0000\u0000¹\u0001\u0000\u0000\u0000\u0000\u0000\u0000¹\u0001\u0000\u0000\u0001\u0000\u0000\u0000¼\u0001\u0000\u0000\u0001\u0000\u0000\aRichTxt\avoid ()\u0017Upp::RichTxt::RichTxt()\tRichTxt()\u0003Upp\aRICHTXT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0018\u0000\u0000\u0000\t\u0000\u0000\u0000¾\u0001\u0000\u0000\u0000\u0000\u0000\u0000¾\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ä\u0001\u0000\u0000\u0001\u0000\u0000\aRichTxt\u001Bvoid (const RichTxt &, int))Upp::RichTxt::RichTxt(const RichTxt&,int) RichTxt(const RichTxt& src, int)\u0003Upp\aRICHTXT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000È\u0001\u0000\u0000\b\u0000\u0000\u0000È\u0001\u0000\u0000,\u0000\u0000\u0000È\u0001\u0000\u0000\u0000\u0000\u0000\u0003DMP\u0000\u0003DMP\u0003DMP\u0000\u0003DMP\u0000\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000Ê\u0001\u0000\u0000\u0000\u0000\u0000\u0000Ê\u0001\u0000\u0000\u0001\u0000\u0000\u0000à\u0001\u0000\u0000\u0001\u0000\u0000\bToString\u000FString () const\u001DUpp::RichPos::ToString()const\u0017String ToString() const\u0003Upp\bTOSTRING\fUpp::RichPos\fUPP::RICHPOS\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000â\u0001\u0000\u0000\u0000\u0000\u0000\u0000â\u0001\u0000\u0000\u0001\u0000\u0000\u0000è\u0001\u0000\u0000\u0001\u0000\u0000\bToString\u000FString () const!Upp::RichCellPos::ToString()const\u0017String ToString() const\u0003Upp\bTOSTRING\u0010Upp::RichCellPos\u0010UPP::RICHCELLPOS\u0000\u0000end\u0000b!\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\TxtPaint.cpp","value":"data\u0012\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0001\u0000\u0000\bGetWidth\u001Eint (const RichStyles &) const.Upp::RichTxt::GetWidth(const RichStyles&)const(int GetWidth(const RichStyles& st) const\u0003Upp\bGETWIDTH\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0000\u00004\u0000\u0000\u0000\u0001\u0000\u0000\u0005Sync03void (const Para &, int, const RichContext &) const<Upp::RichTxt::Sync0(const Para&,int,const RichContext&)constBvoid Sync0(const Para& pp, int parti, const RichContext& rc) const\u0003Upp\u0005SYNC0\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u00006\u0000\u0000\u0000\u0000\u0000\u0000\u00006\u0000\u0000\u0000\u0001\u0000\u0000\u0000;\u0000\u0000\u0000\u0001\u0000\u0000\u0004Sync%void (int, const RichContext &) const/Upp::RichTxt::Sync(int,const RichContext&)const1void Sync(int parti, const RichContext& rc) const\u0003Upp\u0004SYNC\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000=\u0000\u0000\u0000\u0000\u0000\u0000\u0000=\u0000\u0000\u0000\u0001\u0000\u0000\u0000G\u0000\u0000\u0000\u0001\u0000\u0000\nBreaksPage3bool (PageY, const Para &, int, const Rect &) const@Upp::RichTxt::BreaksPage(PageY,const Para&,int,const Rect&)constHbool BreaksPage(PageY py, const Para& pp, int i, const Rect& page) const\u0003Upp\nBREAKSPAGE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000I\u0000\u0000\u0000\u0000\u0000\u0000\u0000I\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\aAdvance.void (int, RichContext &, RichContext &) const9Upp::RichTxt::Advance(int,RichContext&,RichContext&)constBvoid Advance(int parti, RichContext& rc, RichContext& begin) const\u0003Upp\aADVANCE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\vGetAdvanced;RichContext (int, const RichContext &, RichContext &) constCUpp::RichTxt::GetAdvanced(int,const RichContext&,RichContext&)constSRichContext GetAdvanced(int parti, const RichContext& rc, RichContext& begin) const\u0003Upp\vGETADVANCED\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u000EGetPartContext,RichContext (int, const RichContext &) const9Upp::RichTxt::GetPartContext(int,const RichContext&)constCRichContext GetPartContext(int parti, const RichContext& rc0) const\u0003Upp\u000EGETPARTCONTEXT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\nIsPainting3bool (PageDraw &, Zoom, const Rect &, PageY, PageY)7Upp::IsPainting(PageDraw&,Zoom,const Rect&,PageY,PageY)Pbool IsPainting(PageDraw& pw, Zoom z, const Rect& page, PageY top, PageY bottom)\u0003Upp\nISPAINTING\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000¢\u0000\u0000\u0000\u0000\u0000\u0000\u0000¢\u0000\u0000\u0000\u0001\u0000\u0000\u0000¨\u0000\u0000\u0000\u0001\u0000\u0000\tGetHeight\u0019PageY (RichContext) const)Upp::RichTxt::GetHeight(RichContext)const%PageY GetHeight(RichContext rc) const\u0003Upp\tGETHEIGHT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000ª\u0000\u0000\u0000\u0000\u0000\u0000\u0000ª\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ö\u0000\u0000\u0000\u0001\u0000\u0000\u0005Paint9void (PageDraw &, RichContext &, const PaintInfo &) constAUpp::RichTxt::Paint(PageDraw&,RichContext&,const PaintInfo&)constEvoid Paint(PageDraw& pw, RichContext& rc, const PaintInfo& _pi) const\u0003Upp\u0005PAINT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000Ø\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ø\u0000\u0000\u0000\u0001\u0000\u0000\u0000ï\u0000\u0000\u0000\u0001\u0000\u0000\bGetCaret\"RichCaret (int, RichContext) const,Upp::RichTxt::GetCaret(int,RichContext)const1RichCaret GetCaret(int pos, RichContext rc) const\u0003Upp\bGETCARET\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000ñ\u0000\u0000\u0000\u0000\u0000\u0000\u0000ñ\u0000\u0000\u0000\u0001\u0000\u0000\u0000\b\u0001\u0000\u0000\u0001\u0000\u0000\u0006GetPos#int (int, PageY, RichContext) const0Upp::RichTxt::GetPos(int,PageY,RichContext)const0int GetPos(int x, PageY y, RichContext rc) const\u0003Upp\u0006GETPOS\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000\n\u0001\u0000\u0000\u0000\u0000\u0000\u0000\n\u0001\u0000\u0000\u0001\u0000\u0000\u0000%\u0001\u0000\u0000\u0001\u0000\u0000\tGetHotPos/RichHotPos (int, PageY, int, RichContext) const7Upp::RichTxt::GetHotPos(int,PageY,int,RichContext)constIRichHotPos GetHotPos(int x, PageY y, int tolerance, RichContext rc) const\u0003Upp\tGETHOTPOS\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\r\u0000\u0000\u0000'\u0001\u0000\u0000\u0000\u0000\u0000\u0000'\u0001\u0000\u0000\u0001\u0000\u0000\u0000M\u0001\u0000\u0000\u0001\u0000\u0000\vGetVertMove&int (int, int, RichContext, int) const7Upp::RichTxt::GetVertMove(int,int,RichContext,int)const?int GetVertMove(int pos, int gx, RichContext rc, int dir) const\u0003Upp\vGETVERTMOVE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000O\u0001\u0000\u0000\u0000\u0000\u0000\u0000O\u0001\u0000\u0000\u0001\u0000\u0000\u0000e\u0001\u0000\u0000\u0001\u0000\u0000\fGatherValPos8void (Vector<RichValPos> &, RichContext, int, int) const<Upp::RichTxt::GatherValPos(Vector&,RichContext,int,int)constQvoid GatherValPos(Vector<RichValPos>& f, RichContext rc, int pos, int type) const\u0003Upp\fGATHERVALPOS\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000g\u0001\u0000\u0000\u0000\u0000\u0000\u0000g\u0001\u0000\u0000\u0001\u0000\u0000\u0000u\u0001\u0000\u0000\u0001\u0000\u0000\u0006GetTop\u0019PageY (RichContext) const&Upp::RichTxt::GetTop(RichContext)const\"PageY GetTop(RichContext rc) const\u0003Upp\u0006GETTOP\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000w\u0001\u0000\u0000\u0000\u0000\u0000\u0000w\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\tApplyZoom3void (Zoom, const RichStyles &, const RichStyles &)AUpp::RichTxt::ApplyZoom(Zoom,const RichStyles&,const RichStyles&)Jvoid ApplyZoom(Zoom z, const RichStyles& ostyle, const RichStyles& zstyle)\u0003Upp\tAPPLYZOOM\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000end\u00003\u0010\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\TxtOp.cpp","value":"data\u0013\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0001\u0000\u0000\u000FGetAllLanguages\u0019void (Index<int> &) const*Upp::RichTxt::GetAllLanguages(Index&)const+void GetAllLanguages(Index<int>& all) const\u0003Upp\u000FGETALLLANGUAGES\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0001\u0000\u0000\u000FGetAllLanguages\u0014Vector<int> () const$Upp::RichTxt::GetAllLanguages()const#Vector<int> GetAllLanguages() const\u0003Upp\u000FGETALLLANGUAGES\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0000\u00001\u0000\u0000\u0000\u0001\u0000\u0000\u0006Update\u000Fbool (ParaOp &)\u001DUpp::RichTxt::Update(ParaOp&)\u0017bool Update(ParaOp& op)\u0003Upp\u0006UPDATE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u00003\u0000\u0000\u0000\u0000\u0000\u0000\u00003\u0000\u0000\u0000\u0001\u0000\u0000\u0000D\u0000\u0000\u0000\u0001\u0000\u0000\bGetText0\u0016RichTxt &(int &, bool)!Upp::RichTxt::GetText0(int&,bool)(RichTxt& GetText0(int& pos, bool update)\u0003Upp\bGETTEXT0\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000F\u0000\u0000\u0000\u0000\u0000\u0000\u0000F\u0000\u0000\u0000\u0001\u0000\u0000\u0000I\u0000\u0000\u0000\u0001\u0000\u0000\rGetUpdateText\u0010RichTxt &(int &)!Upp::RichTxt::GetUpdateText(int&) RichTxt& GetUpdateText(int& pos)\u0003Upp\rGETUPDATETEXT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0018\u0000\u0000\u0000K\u0000\u0000\u0000\u0000\u0000\u0000\u0000K\u0000\u0000\u0000\u0001\u0000\u0000\u0000N\u0000\u0000\u0000\u0001\u0000\u0000\fGetConstText\u001Cconst RichTxt &(int &) const%Upp::RichTxt::GetConstText(int&)const+const RichTxt& GetConstText(int& pos) const\u0003Upp\fGETCONSTTEXT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000P\u0000\u0000\u0000\u0000\u0000\u0000\u0000P\u0000\u0000\u0000\u0001\u0000\u0000\u0000m\u0000\u0000\u0000\u0001\u0000\u0000\tGetTable0\u0016RichTable &(int, bool)!Upp::RichTxt::GetTable0(int,bool),RichTable& GetTable0(int table, bool update)\u0003Upp\tGETTABLE0\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000o\u0000\u0000\u0000\u0000\u0000\u0000\u0000o\u0000\u0000\u0000\u0001\u0000\u0000\u0000r\u0000\u0000\u0000\u0001\u0000\u0000\u000EGetUpdateTable\u0010RichTable &(int)!Upp::RichTxt::GetUpdateTable(int)$RichTable& GetUpdateTable(int table)\u0003Upp\u000EGETUPDATETABLE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u001A\u0000\u0000\u0000t\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\u0000\u0000\u0000\u0001\u0000\u0000\u0000v\u0000\u0000\u0000\u0001\u0000\u0000\rGetConstTable\u001Cconst RichTable &(int) const%Upp::RichTxt::GetConstTable(int)const/const RichTable& GetConstTable(int table) const\u0003Upp\rGETCONSTTABLE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000x\u0000\u0000\u0000\u0000\u0000\u0000\u0000x\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\rCombineFormat?void (FormatInfo &, int, int, bool &, const RichStyles &) constMUpp::RichTxt::CombineFormat(FormatInfo&,int,int,bool&,const RichStyles&)const_void CombineFormat(FormatInfo& fi, int pi, int pi2, bool& first, const RichStyles& style) const\u0003Upp\rCOMBINEFORMAT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\nApplyStyleCvoid (const RichText::FormatInfo &, RichPara &, const RichStyles &)QUpp::RichTxt::ApplyStyle(const RichText::FormatInfo&,RichPara&,const RichStyles&)Vvoid ApplyStyle(const RichText::FormatInfo& fi, RichPara& pa, const RichStyles& style)\u0003Upp\nAPPLYSTYLE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\u0000¦\u0000\u0000\u0000\u0001\u0000\u0000\u0005ApplyCvoid (const RichText::FormatInfo &, RichPara &, const RichStyles &)LUpp::RichTxt::Apply(const RichText::FormatInfo&,RichPara&,const RichStyles&)Qvoid Apply(const RichText::FormatInfo& fi, RichPara& pa, const RichStyles& style)\u0003Upp\u0005APPLY\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000¨\u0000\u0000\u0000\u0000\u0000\u0000\u0000¨\u0000\u0000\u0000\u0001\u0000\u0000\u0000À\u0000\u0000\u0000\u0001\u0000\u0000\vApplyFormat7void (const FormatInfo &, int, int, const RichStyles &)FUpp::RichTxt::ApplyFormat(const FormatInfo&,int,int,const RichStyles&)Pvoid ApplyFormat(const FormatInfo& fi, int pi, int pi2, const RichStyles& style)\u0003Upp\vAPPLYFORMAT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000Â\u0000\u0000\u0000\u0000\u0000\u0000\u0000Â\u0000\u0000\u0000\u0001\u0000\u0000\u0000á\u0000\u0000\u0000\u0001\u0000\u0000\nSaveFormat6void (Formating &, int, int, const RichStyles &) constCUpp::RichTxt::SaveFormat(Formating&,int,int,const RichStyles&)constLvoid SaveFormat(Formating& r, int p1, int p2, const RichStyles& style) const\u0003Upp\nSAVEFORMAT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000ã\u0000\u0000\u0000\u0000\u0000\u0000\u0000ã\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001D\u0001\u0000\u0000\u0001\u0000\u0000\rRestoreFormat8void (int, const Formating &, int &, const RichStyles &)HUpp::RichTxt::RestoreFormat(int,const Formating&,int&,const RichStyles&)Svoid RestoreFormat(int pi, const Formating& info, int& ii, const RichStyles& style)\u0003Upp\rRESTOREFORMAT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u001F\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u001F\u0001\u0000\u0000\u0001\u0000\u0000\u0000H\u0001\u0000\u0000\u0001\u0000\u0000\fGetPlainText\u001AWString (bool, bool) const*Upp::RichTxt::GetPlainText(bool,bool)constGWString GetPlainText(bool withcr = true, bool allow_tabs = false) const\u0003Upp\fGETPLAINTEXT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000J\u0001\u0000\u0000\u0000\u0000\u0000\u0000J\u0001\u0000\u0000\u0001\u0000\u0000\u0000g\u0001\u0000\u0000\u0001\u0000\u0000\u0012GetTableUpdateText)RichTxt &(int, const RichStyles &, int &)<Upp::RichTxt::GetTableUpdateText(int,const RichStyles&,int&)HRichTxt& GetTableUpdateText(int table, const RichStyles& style, int& pi)\u0003Upp\u0012GETTABLEUPDATETEXT\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000i\u0001\u0000\u0000\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0001\u0000\u0000\u0000u\u0001\u0000\u0000\u0001\u0000\u0000\tNormalize\avoid ()\u0019Upp::RichTxt::Normalize()\u0010void Normalize()\u0003Upp\tNORMALIZE\fUpp::RichTxt\fUPP::RICHTXT\u0000\u0000end\u0000?\u0010\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Format.cpp","value":"data\a\u0015\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0003Set\u001Fvoid (const RichPara::Format &)6Upp::RichTxt::FormatInfo::Set(const RichPara::Format&)%void Set(const RichPara::Format& fmt)\u0003Upp\u0003SET\u0018Upp::RichTxt::FormatInfo\u0018UPP::RICHTXT::FORMATINFO\u0000\u0000\u0015\u0000\u0000\u0000\u001A\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0001\u0000\u0000\u0003Set#void (const RichPara::CharFormat &):Upp::RichTxt::FormatInfo::Set(const RichPara::CharFormat&))void Set(const RichPara::CharFormat& fmt)\u0003Upp\u0003SET\u0018Upp::RichTxt::FormatInfo\u0018UPP::RICHTXT::FORMATINFO\u0000\u0000\u0015\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000J\u0000\u0000\u0000\u0001\u0000\u0000\aCombine#void (const RichPara::CharFormat &)>Upp::RichTxt::FormatInfo::Combine(const RichPara::CharFormat&)-void Combine(const RichPara::CharFormat& fmt)\u0003Upp\aCOMBINE\u0018Upp::RichTxt::FormatInfo\u0018UPP::RICHTXT::FORMATINFO\u0000\u0000\u0015\u0000\u0000\u0000\u001A\u0000\u0000\u0000L\u0000\u0000\u0000\u0000\u0000\u0000\u0000L\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\aCombine\u001Fvoid (const RichPara::Format &):Upp::RichTxt::FormatInfo::Combine(const RichPara::Format&))void Combine(const RichPara::Format& fmt)\u0003Upp\aCOMBINE\u0018Upp::RichTxt::FormatInfo\u0018UPP::RICHTXT::FORMATINFO\u0000\u0000\u0015\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000¨\u0000\u0000\u0000\u0001\u0000\u0000\aApplyTo#void (RichPara::CharFormat &) const=Upp::RichTxt::FormatInfo::ApplyTo(RichPara::CharFormat&)const-void ApplyTo(RichPara::CharFormat& fmt) const\u0003Upp\aAPPLYTO\u0018Upp::RichTxt::FormatInfo\u0018UPP::RICHTXT::FORMATINFO\u0000\u0000\u0015\u0000\u0000\u0000\u001A\u0000\u0000\u0000ª\u0000\u0000\u0000\u0000\u0000\u0000\u0000ª\u0000\u0000\u0000\u0001\u0000\u0000\u0000à\u0000\u0000\u0000\u0001\u0000\u0000\aApplyTo\u001Fvoid (RichPara::Format &) const9Upp::RichTxt::FormatInfo::ApplyTo(RichPara::Format&)const)void ApplyTo(RichPara::Format& fmt) const\u0003Upp\aAPPLYTO\u0018Upp::RichTxt::FormatInfo\u0018UPP::RICHTXT::FORMATINFO\u0000\u0000end\u0000\u0005\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\TableCell.cpp","value":"data\u0014\b\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\bLineZoom\u000Fint (Zoom, int)\u0017Upp::LineZoom(Zoom,int)\u001Bint LineZoom(Zoom z, int a)\u0003Upp\bLINEZOOM\u0003Upp\u0003UPP\u0000\u0000\u0018\u0000\u0000\u0000\u0012\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0000\u0000\u0006Format\avoid ()\u001FUpp::RichCell::Format::Format()\bFormat()\u0003Upp\u0006FORMAT\u0015Upp::RichCell::Format\u0015UPP::RICHCELL::FORMAT\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\tClearText\avoid ()\u001AUpp::RichCell::ClearText()\u0010void ClearText()\u0003Upp\tCLEARTEXT\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0001\u0000\u0000\u0000\"\u0000\u0000\u0000\u0001\u0000\u0000\tClearText3void (const RichPara::Format &, const RichStyles &)CUpp::RichCell::ClearText(const RichPara::Format&,const RichStyles&)Gvoid ClearText(const RichPara::Format& format, const RichStyles& style)\u0003Upp\tCLEARTEXT\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000$\u0000\u0000\u0000\u0000\u0000\u0000\u0000$\u0000\u0000\u0000\u0001\u0000\u0000\u0000)\u0000\u0000\u0000\u0001\u0000\u0000\u0005Clear\avoid ()\u0016Upp::RichCell::Clear()\fvoid Clear()\u0003Upp\u0005CLEAR\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000+\u0000\u0000\u0000\u0000\u0000\u0000\u0000+\u0000\u0000\u0000\u0001\u0000\u0000\u00007\u0000\u0000\u0000\u0001\u0000\u0000\u0006Reduce\u001Abool (RichContext &) const(Upp::RichCell::Reduce(RichContext&)const\"bool Reduce(RichContext& rc) const\u0003Upp\u0006REDUCE\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u00009\u0000\u0000\u0000\u0000\u0000\u0000\u00009\u0000\u0000\u0000\u0001\u0000\u0000\u0000?\u0000\u0000\u0000\u0001\u0000\u0000\u0006GetTop\u0019PageY (RichContext) const'Upp::RichCell::GetTop(RichContext)const\"PageY GetTop(RichContext rc) const\u0003Upp\u0006GETTOP\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000A\u0000\u0000\u0000\u0000\u0000\u0000\u0000A\u0000\u0000\u0000\u0001\u0000\u0000\u0000W\u0000\u0000\u0000\u0001\u0000\u0000\tGetHeight\u0019PageY (RichContext) const*Upp::RichCell::GetHeight(RichContext)const%PageY GetHeight(RichContext rc) const\u0003Upp\tGETHEIGHT\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000Y\u0000\u0000\u0000\u0000\u0000\u0000\u0000Y\u0000\u0000\u0000\u0001\u0000\u0000\u0000l\u0000\u0000\u0000\u0001\u0000\u0000\u000FDrawRoundCorner2void (Draw &, int, int, int, int, int, int, Color)9Upp::DrawRoundCorner(Draw&,int,int,int,int,int,int,Color)\\void DrawRoundCorner(Draw& w, int x, int y, int rx1, int ry1, int rx2, int ry2, Color color)\u0003Upp\u000FDRAWROUNDCORNER\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000n\u0000\u0000\u0000\u0000\u0000\u0000\u0000n\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u000EDrawCellBorderDvoid (Draw &, const Rect &, const Rect &, const Rect &, Color, bool)IUpp::DrawCellBorder(Draw&,const Rect&,const Rect&,const Rect&,Color,bool)ovoid DrawCellBorder(Draw& w, const Rect& rect, const Rect& border, const Rect& margin, Color color, bool round)\u0003Upp\u000EDRAWCELLBORDER\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\bDrawCellVvoid (Draw &, int, int, int, int, const Rect &, const Rect &, const PaintInfo &) const\\Upp::RichCell::DrawCell(Draw&,int,int,int,int,const Rect&,const Rect&,const PaintInfo&)constvvoid DrawCell(Draw& w, int l, int r, int y, int yy, const Rect& border, const Rect& margin, const PaintInfo& pi) const\u0003Upp\bDRAWCELL\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000¦\u0000\u0000\u0000\u0001\u0000\u0000\u0005Align(PageY (const RichContext &, PageY) const3Upp::RichCell::Align(const RichContext&,PageY)const3PageY Align(const RichContext& rc, PageY npy) const\u0003Upp\u0005ALIGN\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000¨\u0000\u0000\u0000\u0000\u0000\u0000\u0000¨\u0000\u0000\u0000\u0001\u0000\u0000\u0000É\u0000\u0000\u0000\u0001\u0000\u0000\u0005Paintjvoid (PageDraw &, RichContext, PageY, const Rect &, const Rect &, int, int, const PaintInfo &, bool) constlUpp::RichCell::Paint(PageDraw&,RichContext,PageY,const Rect&,const Rect&,int,int,const PaintInfo&,bool)constÿ\u0000\u0000\u0000void Paint(PageDraw& pw, RichContext rc, PageY npy, const Rect& xpg, const Rect& nxpg, int y, int ny, const PaintInfo& pi, bool select) const\u0003Upp\u0005PAINT\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000Ë\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ë\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ñ\u0000\u0000\u0000\u0001\u0000\u0000\bGetCaret)RichCaret (int, RichContext, PageY) const3Upp::RichCell::GetCaret(int,RichContext,PageY)const<RichCaret GetCaret(int pos, RichContext rc, PageY pyy) const\u0003Upp\bGETCARET\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000Ó\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ó\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ù\u0000\u0000\u0000\u0001\u0000\u0000\u0006GetPos*int (int, PageY, RichContext, PageY) const7Upp::RichCell::GetPos(int,PageY,RichContext,PageY)const;int GetPos(int x, PageY y, RichContext rc, PageY pyy) const\u0003Upp\u0006GETPOS\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0015\u0000\u0000\u0000\u0016\u0000\u0000\u0000Û\u0000\u0000\u0000\u0000\u0000\u0000\u0000Û\u0000\u0000\u0000\u0001\u0000\u0000\u0000á\u0000\u0000\u0000\u0001\u0000\u0000\tGetHotPos6RichHotPos (int, PageY, int, RichContext, PageY) const>Upp::RichCell::GetHotPos(int,PageY,int,RichContext,PageY)constTRichHotPos GetHotPos(int x, PageY y, int tolerance, RichContext rc, PageY pyy) const\u0003Upp\tGETHOTPOS\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000ã\u0000\u0000\u0000\u0000\u0000\u0000\u0000ã\u0000\u0000\u0000\u0001\u0000\u0000\u0000é\u0000\u0000\u0000\u0001\u0000\u0000\fGatherValPos?void (Vector<RichValPos> &, RichContext, PageY, int, int) constCUpp::RichCell::GatherValPos(Vector&,RichContext,PageY,int,int)const\\void GatherValPos(Vector<RichValPos>& f, RichContext rc, PageY pyy, int pos, int type) const\u0003Upp\fGATHERVALPOS\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0018\u0000\u0000\u0000\n\u0000\u0000\u0000ë\u0000\u0000\u0000\u0000\u0000\u0000\u0000ë\u0000\u0000\u0000\u0001\u0000\u0000\u0000ï\u0000\u0000\u0000\u0001\u0000\u0000\bRichCell\avoid ()\u0019Upp::RichCell::RichCell()\nRichCell()\u0003Upp\bRICHCELL\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000\u0018\u0000\u0000\u0000\n\u0000\u0000\u0000ñ\u0000\u0000\u0000\u0000\u0000\u0000\u0000ñ\u0000\u0000\u0000\u0001\u0000\u0000\u0000÷\u0000\u0000\u0000\u0001\u0000\u0000\bRichCell\u001Cvoid (const RichCell &, int),Upp::RichCell::RichCell(const RichCell&,int)\"RichCell(const RichCell& src, int)\u0003Upp\bRICHCELL\rUpp::RichCell\rUPP::RICHCELL\u0000\u0000end\u0000I\u0011\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\TableLayout.cpp","value":"data\t\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\u0006Reduce\u0013bool (Rect &) const\"Upp::RichTable::Reduce(Rect&)const\u001Abool Reduce(Rect& r) const\u0003Upp\u0006REDUCE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0006Reduce(bool (RichContext, Rect &, Rect &) const4Upp::RichTable::Reduce(RichContext,Rect&,Rect&)constDbool Reduce(RichContext rc, Rect& first_page, Rect& next_page) const\u0003Upp\u0006REDUCE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0000\u0000\vGetPageRect\u0012Rect (PageY) const'Upp::RichTable::GetPageRect(PageY)const Rect GetPageRect(PageY py) const\u0003Upp\vGETPAGERECT\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0001\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\bNextPage\u001Avoid (PageY &, bool) const*Upp::RichTable::NextPage(PageY&,bool)const3void NextPage(PageY& py, bool header = false) const\u0003Upp\bNEXTPAGE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0000%\u0000\u0000\u0000\u0001\u0000\u0000\u0000,\u0000\u0000\u0000\u0001\u0000\u0000\u000FMakeRichContext,RichContext (RichContext, PageY, bool) const<Upp::RichTable::MakeRichContext(RichContext,PageY,bool)constPRichContext MakeRichContext(RichContext rc, PageY py, bool header = false) const\u0003Upp\u000FMAKERICHCONTEXT\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000'\u0000\u0000\u0000.\u0000\u0000\u0000\u0000\u0000\u0000\u0000.\u0000\u0000\u0000\u0001\u0000\u0000\u0000T\u0000\u0000\u0000\u0001\u0000\u0000\aRealize/const RichTable::TabLayout &(RichContext) const)Upp::RichTable::Realize(RichContext)const9const RichTable::TabLayout& Realize(RichContext rc) const\u0003Upp\aREALIZE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\"\u0000\u0000\u0000V\u0000\u0000\u0000\u0000\u0000\u0000\u0000V\u0000\u0000\u0000\u0001\u0000\u0000\u0000[\u0000\u0000\u0000\u0001\u0000\u0000\u000FMakeRichContext\u001FRichContext (RichContext) const<Upp::RichTable::PaintCell::MakeRichContext(RichContext)const1RichContext MakeRichContext(RichContext rc) const\u0003Upp\u000FMAKERICHCONTEXT\u0019Upp::RichTable::PaintCell\u0019UPP::RICHTABLE::PAINTCELL\u0000\u0000\u0015\u0000\u0000\u0000\u001D\u0000\u0000\u0000]\u0000\u0000\u0000\u0000\u0000\u0000\u0000]\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ì\u0000\u0000\u0000\u0001\u0000\u0000\aRealize7RichTable::Layout (PageY, RichContext, int, bool) const8Upp::RichTable::Realize(PageY,RichContext,int,bool)constORichTable::Layout Realize(PageY py, RichContext arc, int ny, bool header) const\u0003Upp\aREALIZE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000end\u0000G\a\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\TablePaint.cpp","value":"data\u000E\u0018\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0006Format\avoid () Upp::RichTable::Format::Format()\bFormat()\u0003Upp\u0006FORMAT\u0016Upp::RichTable::Format\u0016UPP::RICHTABLE::FORMAT\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\tExpandFrr6void (VectorMap<int, Rect> &, int, int, int, int, int)9Upp::RichTable::ExpandFrr(VectorMap&,int,int,int,int,int)Mvoid ExpandFrr(VectorMap<int, Rect>& frr, int pi, int l, int r, int t, int b)\u0003Upp\tEXPANDFRR\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\u0000k\u0000\u0000\u0000\u0001\u0000\u0000\bRowPaintÿ\u0000\u0000\u0000bool (PageDraw &, RichContext, const Layout &, bool, int, int, Rect, Rect, VectorMap<int, Rect> &, PaintInfo &, int, bool) constxUpp::RichTable::RowPaint(PageDraw&,RichContext,const Layout&,bool,int,int,Rect,Rect,VectorMap&,PaintInfo&,int,bool)constÿ¯\u0000\u0000\u0000bool RowPaint(PageDraw& pw, RichContext rc, const Layout& tab, bool header, int i, int ny, Rect pg, Rect npg, VectorMap<int, Rect>& frr, PaintInfo& pi, int pd, bool sel) const\u0003Upp\bROWPAINT\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000m\u0000\u0000\u0000\u0000\u0000\u0000\u0000m\u0000\u0000\u0000\u0001\u0000\u0000\u0000Á\u0000\u0000\u0000\u0001\u0000\u0000\u0005Paint=void (PageDraw &, RichContext, const PaintInfo &, bool) constGUpp::RichTable::Paint(PageDraw&,RichContext,const PaintInfo&,bool)constTvoid Paint(PageDraw& pw, RichContext rc, const PaintInfo& _pi, bool baselevel) const\u0003Upp\u0005PAINT\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000Ã\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ã\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ø\u0000\u0000\u0000\u0001\u0000\u0000\bGetWidth\u001Eint (const RichStyles &) const0Upp::RichTable::GetWidth(const RichStyles&)const(int GetWidth(const RichStyles& st) const\u0003Upp\bGETWIDTH\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000Ú\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ú\u0000\u0000\u0000\u0001\u0000\u0000\u0000â\u0000\u0000\u0000\u0001\u0000\u0000\tGetHeight\u0019PageY (RichContext) const+Upp::RichTable::GetHeight(RichContext)const%PageY GetHeight(RichContext rc) const\u0003Upp\tGETHEIGHT\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000ä\u0000\u0000\u0000\u0000\u0000\u0000\u0000ä\u0000\u0000\u0000\u0001\u0000\u0000\u0000ë\u0000\u0000\u0000\u0001\u0000\u0000\u0006GetTop\u0019PageY (RichContext) const(Upp::RichTable::GetTop(RichContext)const\"PageY GetTop(RichContext rc) const\u0003Upp\u0006GETTOP\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000í\u0000\u0000\u0000\u0000\u0000\u0000\u0000í\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0001\u0000\u0000\bGetCaret\"RichCaret (int, RichContext) const.Upp::RichTable::GetCaret(int,RichContext)const1RichCaret GetCaret(int pos, RichContext rc) const\u0003Upp\bGETCARET\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u001B\u0001\u0000\u0000\u0001\u0000\u0000\u0006GetPos#int (int, PageY, RichContext) const2Upp::RichTable::GetPos(int,PageY,RichContext)const0int GetPos(int x, PageY y, RichContext rc) const\u0003Upp\u0006GETPOS\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u001D\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u001D\u0001\u0000\u0000\u0001\u0000\u0000\u0000O\u0001\u0000\u0000\u0001\u0000\u0000\tGetHotPos/RichHotPos (int, PageY, int, RichContext) const9Upp::RichTable::GetHotPos(int,PageY,int,RichContext)constIRichHotPos GetHotPos(int x, PageY y, int tolerance, RichContext rc) const\u0003Upp\tGETHOTPOS\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000Q\u0001\u0000\u0000\u0000\u0000\u0000\u0000Q\u0001\u0000\u0000\u0001\u0000\u0000\u0000s\u0001\u0000\u0000\u0001\u0000\u0000\vGetVertMove&int (int, int, RichContext, int) const9Upp::RichTable::GetVertMove(int,int,RichContext,int)const?int GetVertMove(int pos, int gx, RichContext rc, int dir) const\u0003Upp\vGETVERTMOVE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000u\u0001\u0000\u0000\u0000\u0000\u0000\u0000u\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\fGatherValPos8void (Vector<RichValPos> &, RichContext, int, int) const>Upp::RichTable::GatherValPos(Vector&,RichContext,int,int)constQvoid GatherValPos(Vector<RichValPos>& f, RichContext rc, int pos, int type) const\u0003Upp\fGATHERVALPOS\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\tApplyZoom3void (Zoom, const RichStyles &, const RichStyles &)CUpp::RichTable::ApplyZoom(Zoom,const RichStyles&,const RichStyles&)Jvoid ApplyZoom(Zoom z, const RichStyles& ostyle, const RichStyles& zstyle)\u0003Upp\tAPPLYZOOM\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000end\u0000%\r\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\TableData.cpp","value":"data)\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\nInvalidate\avoid ()\u001CUpp::RichTable::Invalidate()\u0011void Invalidate()\u0003Upp\nINVALIDATE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0001\u0000\u0000\u0011InvalidateRefresh\u000Fvoid (int, int)*Upp::RichTable::InvalidateRefresh(int,int)$void InvalidateRefresh(int i, int j)\u0003Upp\u0011INVALIDATEREFRESH\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0000\u0000.\u0000\u0000\u0000\u0001\u0000\u0000\nGetInvalid)int (PageY &, PageY &, RichContext) const:Upp::RichTable::GetInvalid(PageY&,PageY&,RichContext)const?int GetInvalid(PageY& top, PageY& bottom, RichContext rc) const\u0003Upp\nGETINVALID\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u00000\u0000\u0000\u0000\u0000\u0000\u0000\u00000\u0000\u0000\u0000\u0001\u0000\u0000\u0000R\u0000\u0000\u0000\u0001\u0000\u0000\nNormalize0\avoid ()\u001CUpp::RichTable::Normalize0()\u0011void Normalize0()\u0003Upp\nNORMALIZE0\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000T\u0000\u0000\u0000\u0000\u0000\u0000\u0000T\u0000\u0000\u0000\u0001\u0000\u0000\u0000Z\u0000\u0000\u0000\u0001\u0000\u0000\nIsRowEmpty\nbool (int)\u001FUpp::RichTable::IsRowEmpty(int)\u0018bool IsRowEmpty(int row)\u0003Upp\nISROWEMPTY\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\\\u0000\u0000\u0000\u0000\u0000\u0000\u0000\\\u0000\u0000\u0000\u0001\u0000\u0000\u0000b\u0000\u0000\u0000\u0001\u0000\u0000\rIsColumnEmpty\nbool (int)\"Upp::RichTable::IsColumnEmpty(int)\u001Ebool IsColumnEmpty(int column)\u0003Upp\rISCOLUMNEMPTY\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000d\u0000\u0000\u0000\u0000\u0000\u0000\u0000d\u0000\u0000\u0000\u0001\u0000\u0000\u0000n\u0000\u0000\u0000\u0001\u0000\u0000\nRemoveRow0\nvoid (int)\u001FUpp::RichTable::RemoveRow0(int)\u0019void RemoveRow0(int rowi)\u0003Upp\nREMOVEROW0\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000p\u0000\u0000\u0000\u0000\u0000\u0000\u0000p\u0000\u0000\u0000\u0001\u0000\u0000\u0000y\u0000\u0000\u0000\u0001\u0000\u0000\rRemoveColumn0\nvoid (int)\"Upp::RichTable::RemoveColumn0(int)\u001Evoid RemoveColumn0(int column)\u0003Upp\rREMOVECOLUMN0\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000{\u0000\u0000\u0000\u0000\u0000\u0000\u0000{\u0000\u0000\u0000\u0001\u0000\u0000\u0000«\u0000\u0000\u0000\u0001\u0000\u0000\tNormalize\avoid ()\u001BUpp::RichTable::Normalize()\u0010void Normalize()\u0003Upp\tNORMALIZE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000­\u0000\u0000\u0000\u0000\u0000\u0000\u0000­\u0000\u0000\u0000\u0001\u0000\u0000\u0000·\u0000\u0000\u0000\u0001\u0000\u0000\tGetLength\fint () const Upp::RichTable::GetLength()const\u0015int GetLength() const\u0003Upp\tGETLENGTH\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000¹\u0000\u0000\u0000\u0000\u0000\u0000\u0000¹\u0000\u0000\u0000\u0001\u0000\u0000\u0000Å\u0000\u0000\u0000\u0001\u0000\u0000\bFindCell\u0013Point (int &) const#Upp::RichTable::FindCell(int&)const\u001EPoint FindCell(int& pos) const\u0003Upp\bFINDCELL\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000Ç\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ç\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ò\u0000\u0000\u0000\u0001\u0000\u0000\nGetCellPos\u0014int (int, int) const(Upp::RichTable::GetCellPos(int,int)const$int GetCellPos(int ii, int jj) const\u0003Upp\nGETCELLPOS\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000Ô\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ô\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ú\u0000\u0000\u0000\u0001\u0000\u0000\rGetMasterCell\u0016Point (int, int) const+Upp::RichTable::GetMasterCell(int,int)const'Point GetMasterCell(int i, int j) const\u0003Upp\rGETMASTERCELL\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u001B\u0000\u0000\u0000Ü\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ü\u0000\u0000\u0000\u0001\u0000\u0000\u0000à\u0000\u0000\u0000\u0001\u0000\u0000\tGetMaster const RichCell &(int, int) const'Upp::RichTable::GetMaster(int,int)const-const RichCell& GetMaster(int i, int j) const\u0003Upp\tGETMASTER\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000â\u0000\u0000\u0000\u0000\u0000\u0000\u0000â\u0000\u0000\u0000\u0001\u0000\u0000\u0000í\u0000\u0000\u0000\u0001\u0000\u0000\rGetTableCount\u0014int (int, int) const+Upp::RichTable::GetTableCount(int,int)const'int GetTableCount(int ii, int jj) const\u0003Upp\rGETTABLECOUNT\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000ð\u0000\u0000\u0000\u0000\u0000\u0000\u0000ð\u0000\u0000\u0000\u0001\u0000\u0000\u0000ö\u0000\u0000\u0000\u0001\u0000\u0000\rClearSpelling\avoid ()\u001FUpp::RichTable::ClearSpelling()\u0014void ClearSpelling()\u0003Upp\rCLEARSPELLING\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000ø\u0000\u0000\u0000\u0000\u0000\u0000\u0000ø\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0001\u0000\u0000\rGetTableCount\fint () const$Upp::RichTable::GetTableCount()const\u0019int GetTableCount() const\u0003Upp\rGETTABLECOUNT\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0001\u0000\u0000\u0000\b\u0001\u0000\u0000\u0001\u0000\u0000\bValidate\avoid ()\u001AUpp::RichTable::Validate()\u000Fvoid Validate()\u0003Upp\bVALIDATE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\n\u0001\u0000\u0000\u0000\u0000\u0000\u0000\n\u0001\u0000\u0000\u0001\u0000\u0000\u0000\r\u0001\u0000\u0000\u0001\u0000\u0000\tAddColumn\nvoid (int)\u001EUpp::RichTable::AddColumn(int)\u0016void AddColumn(int cx)\u0003Upp\tADDCOLUMN\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u000F\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u000F\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0012\u0001\u0000\u0000\u0001\u0000\u0000\aSetPick\u001Bvoid (int, int, RichTxt &&)*Upp::RichTable::SetPick(int,int,RichTxt&&)*void SetPick(int i, int j, RichTxt&& text)\u0003Upp\aSETPICK\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0014\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0001\u0000\u0000\aGetPick\u0012RichTxt (int, int) Upp::RichTable::GetPick(int,int)\u001DRichTxt GetPick(int i, int j)\u0003Upp\aGETPICK\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u001C\u0001\u0000\u0000\u0001\u0000\u0000\u0006SetQTF\u001Dvoid (int, int, const char *)+Upp::RichTable::SetQTF(int,int,const char*)*void SetQTF(int i, int j, const char *qtf)\u0003Upp\u0006SETQTF\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0001\u0000\u0000\u0000!\u0001\u0000\u0000\u0001\u0000\u0000\tSetFormat)void (int, int, const RichCell::Format &):Upp::RichTable::SetFormat(int,int,const RichCell::Format&)9void SetFormat(int i, int j, const RichCell::Format& fmt)\u0003Upp\tSETFORMAT\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0001\u0000\u0000\u0000(\u0001\u0000\u0000\u0001\u0000\u0000\aSetSpan\u0019void (int, int, int, int)(Upp::RichTable::SetSpan(int,int,int,int)0void SetSpan(int i, int j, int vspan, int hspan)\u0003Upp\aSETSPAN\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000*\u0001\u0000\u0000\u0000\u0000\u0000\u0000*\u0001\u0000\u0000\u0001\u0000\u0000\u0000.\u0001\u0000\u0000\u0001\u0000\u0000\aGetSpan\u0015Size (int, int) const%Upp::RichTable::GetSpan(int,int)const Size GetSpan(int i, int j) const\u0003Upp\aGETSPAN\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u00000\u0001\u0000\u0000\u0000\u0000\u0000\u00000\u0001\u0000\u0000\u0001\u0000\u0000\u00005\u0001\u0000\u0000\u0001\u0000\u0000\tSetFormat\u0015void (const Format &)(Upp::RichTable::SetFormat(const Format&)!void SetFormat(const Format& fmt)\u0003Upp\tSETFORMAT\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u00007\u0001\u0000\u0000\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0001\u0000\u0000\u0000C\u0001\u0000\u0000\u0001\u0000\u0000\u0004Copy\u001ERichTable (const Rect &) const&Upp::RichTable::Copy(const Rect&)const%RichTable Copy(const Rect& sel) const\u0003Upp\u0004COPY\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000E\u0001\u0000\u0000\u0000\u0000\u0000\u0000E\u0001\u0000\u0000\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0001\u0000\u0000\tRemoveRow\nvoid (int)\u001EUpp::RichTable::RemoveRow(int)\u0018void RemoveRow(int rowi)\u0003Upp\tREMOVEROW\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000K\u0001\u0000\u0000\u0000\u0000\u0000\u0000K\u0001\u0000\u0000\u0001\u0000\u0000\u0000e\u0001\u0000\u0000\u0001\u0000\u0000\tInsertRow\u001Evoid (int, const RichStyles &)0Upp::RichTable::InsertRow(int,const RichStyles&)1void InsertRow(int rowi, const RichStyles& style)\u0003Upp\tINSERTROW\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000g\u0001\u0000\u0000\u0000\u0000\u0000\u0000g\u0001\u0000\u0000\u0001\u0000\u0000\u0000k\u0001\u0000\u0000\u0001\u0000\u0000\fRemoveColumn\nvoid (int)!Upp::RichTable::RemoveColumn(int)\u001Dvoid RemoveColumn(int column)\u0003Upp\fREMOVECOLUMN\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000m\u0001\u0000\u0000\u0000\u0000\u0000\u0000m\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u007F\u0001\u0000\u0000\u0001\u0000\u0000\fInsertColumn\u001Evoid (int, const RichStyles &)3Upp::RichTable::InsertColumn(int,const RichStyles&)6void InsertColumn(int column, const RichStyles& style)\u0003Upp\fINSERTCOLUMN\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000Õ\u0001\u0000\u0000\u0001\u0000\u0000\tSplitCell&void (Point, Size, const RichStyles &)7Upp::RichTable::SplitCell(Point,Size,const RichStyles&):void SplitCell(Point cl, Size sz, const RichStyles& style)\u0003Upp\tSPLITCELL\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000×\u0001\u0000\u0000\u0000\u0000\u0000\u0000×\u0001\u0000\u0000\u0001\u0000\u0000\u0000á\u0001\u0000\u0000\u0001\u0000\u0000\nsMatchRect\u001Bvoid (Rect &, const Rect &)\"Upp::sMatchRect(Rect&,const Rect&)'void sMatchRect(Rect& t, const Rect& s)\u0003Upp\nSMATCHRECT\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000\u001C\u0000\u0000\u0000ã\u0001\u0000\u0000\u0000\u0000\u0000\u0000ã\u0001\u0000\u0000\u0001\u0000\u0000\u0000÷\u0001\u0000\u0000\u0001\u0000\u0000\rGetCellFormat%RichCell::Format (const Rect &) const/Upp::RichTable::GetCellFormat(const Rect&)const5RichCell::Format GetCellFormat(const Rect& sel) const\u0003Upp\rGETCELLFORMAT\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000ù\u0001\u0000\u0000\u0000\u0000\u0000\u0000ù\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0002\u0000\u0000\u0001\u0000\u0000\bsSetRect\u001Bvoid (Rect &, const Rect &) Upp::sSetRect(Rect&,const Rect&)%void sSetRect(Rect& t, const Rect& s)\u0003Upp\bSSETRECT\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0005\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u001D\u0002\u0000\u0000\u0001\u0000\u0000\rSetCellFormat9void (const Rect &, const RichCell::Format &, bool, bool)LUpp::RichTable::SetCellFormat(const Rect&,const RichCell::Format&,bool,bool)]void SetCellFormat(const Rect& sel, const RichCell::Format& fmt, bool setkeep, bool setround)\u0003Upp\rSETCELLFORMAT\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u001F\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u001F\u0002\u0000\u0000\u0001\u0000\u0000\u0000%\u0002\u0000\u0000\u0001\u0000\u0000\u0005Paste\u001Fvoid (Point, const RichTable &)-Upp::RichTable::Paste(Point,const RichTable&)+void Paste(Point pos, const RichTable& tab)\u0003Upp\u0005PASTE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000'\u0002\u0000\u0000\u0000\u0000\u0000\u0000'\u0002\u0000\u0000\u0001\u0000\u0000\u0000@\u0002\u0000\u0000\u0001\u0000\u0000\tAdjustSel\u0013void (Rect &) const%Upp::RichTable::AdjustSel(Rect&)const\u001Fvoid AdjustSel(Rect& sel) const\u0003Upp\tADJUSTSEL\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0018\u0000\u0000\u0000\v\u0000\u0000\u0000B\u0002\u0000\u0000\u0000\u0000\u0000\u0000B\u0002\u0000\u0000\u0001\u0000\u0000\u0000H\u0002\u0000\u0000\u0001\u0000\u0000\tRichTable\u001Dvoid (const RichTable &, int)/Upp::RichTable::RichTable(const RichTable&,int)$RichTable(const RichTable& src, int)\u0003Upp\tRICHTABLE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000\u0018\u0000\u0000\u0000\v\u0000\u0000\u0000J\u0002\u0000\u0000\u0000\u0000\u0000\u0000J\u0002\u0000\u0000\u0001\u0000\u0000\u0000O\u0002\u0000\u0000\u0001\u0000\u0000\tRichTable\avoid ()\u001BUpp::RichTable::RichTable()\vRichTable()\u0003Upp\tRICHTABLE\u000EUpp::RichTable\u000EUPP::RICHTABLE\u0000\u0000end\u0000\u001E\u001D\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\TextPaint.cpp","value":"data\u0012\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\tGetHeight\u001APageY (const Rect &) const*Upp::RichText::GetHeight(const Rect&)const'PageY GetHeight(const Rect& page) const\u0003Upp\tGETHEIGHT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\tGetHeight!PageY (PageY, const Rect &) const0Upp::RichText::GetHeight(PageY,const Rect&)const1PageY GetHeight(PageY py, const Rect& page) const\u0003Upp\tGETHEIGHT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0001\u0000\u0000\bGetWidth\fint () const\u001EUpp::RichText::GetWidth()const\u0014int GetWidth() const\u0003Upp\bGETWIDTH\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0000\u0005Paint?void (PageDraw &, PageY, const Rect &, const PaintInfo &) constGUpp::RichText::Paint(PageDraw&,PageY,const Rect&,const PaintInfo&)constNvoid Paint(PageDraw& w, PageY py, const Rect& page, const PaintInfo& pi) const\u0003Upp\u0005PAINT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\u0005Paint8void (PageDraw &, const Rect &, const PaintInfo &) constAUpp::RichText::Paint(PageDraw&,const Rect&,const PaintInfo&)constDvoid Paint(PageDraw& w, const Rect& page, const PaintInfo& pi) const\u0003Upp\u0005PAINT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0000%\u0000\u0000\u0000\u0001\u0000\u0000\u0000)\u0000\u0000\u0000\u0001\u0000\u0000\bGetCaret#RichCaret (int, const Rect &) const-Upp::RichText::GetCaret(int,const Rect&)const3RichCaret GetCaret(int pos, const Rect& page) const\u0003Upp\bGETCARET\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000+\u0000\u0000\u0000\u0000\u0000\u0000\u0000+\u0000\u0000\u0000\u0001\u0000\u0000\u0000/\u0000\u0000\u0000\u0001\u0000\u0000\u0006GetPos$int (int, PageY, const Rect &) const1Upp::RichText::GetPos(int,PageY,const Rect&)const2int GetPos(int x, PageY y, const Rect& page) const\u0003Upp\u0006GETPOS\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u00001\u0000\u0000\u0000\u0000\u0000\u0000\u00001\u0000\u0000\u0000\u0001\u0000\u0000\u00005\u0000\u0000\u0000\u0001\u0000\u0000\vGetVertMove'int (int, int, const Rect &, int) const8Upp::RichText::GetVertMove(int,int,const Rect&,int)constAint GetVertMove(int pos, int gx, const Rect& page, int dir) const\u0003Upp\vGETVERTMOVE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0016\u0000\u0000\u00007\u0000\u0000\u0000\u0000\u0000\u0000\u00007\u0000\u0000\u0000\u0001\u0000\u0000\u0000>\u0000\u0000\u0000\u0001\u0000\u0000\tGetHotPos0RichHotPos (int, PageY, int, const Rect &) const8Upp::RichText::GetHotPos(int,PageY,int,const Rect&)constKRichHotPos GetHotPos(int x, PageY y, int tolerance, const Rect& page) const\u0003Upp\tGETHOTPOS\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u001D\u0000\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0000\u0000\u0000\u0001\u0000\u0000\u0000F\u0000\u0000\u0000\u0001\u0000\u0000\tGetValPos,Vector<RichValPos> (const Rect &, int) const.Upp::RichText::GetValPos(const Rect&,int)const>Vector<RichValPos> GetValPos(const Rect& page, int type) const\u0003Upp\tGETVALPOS\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000H\u0000\u0000\u0000\u0000\u0000\u0000\u0000H\u0000\u0000\u0000\u0001\u0000\u0000\u0000N\u0000\u0000\u0000\u0001\u0000\u0000\bValidate\avoid ()\u0019Upp::RichText::Validate()\u000Fvoid Validate()\u0003Upp\bVALIDATE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000P\u0000\u0000\u0000\u0000\u0000\u0000\u0000P\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\nGetInvalid?bool (PageY &, PageY &, const Rect &, int, int, int, int) constIUpp::RichText::GetInvalid(PageY&,PageY&,const Rect&,int,int,int,int)constlbool GetInvalid(PageY& top, PageY& bottom, const Rect& page, int sell, int selh, int osell, int oselh) const\u0003Upp\nGETINVALID\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\tGetHeight\u0015int (Zoom, int) const'Upp::RichText::GetHeight(Zoom,int)const&int GetHeight(Zoom zoom, int cx) const\u0003Upp\tGETHEIGHT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\tGetHeight\u000Fint (int) const\"Upp::RichText::GetHeight(int)const\u001Bint GetHeight(int cx) const\u0003Upp\tGETHEIGHT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000¡\u0000\u0000\u0000\u0000\u0000\u0000\u0000¡\u0000\u0000\u0000\u0001\u0000\u0000\u0000®\u0000\u0000\u0000\u0001\u0000\u0000\u0005Paint5void (Draw &, int, int, int, const PaintInfo &) const=Upp::RichText::Paint(Draw&,int,int,int,const PaintInfo&)constGvoid Paint(Draw& w, int x, int y, int cx, const PaintInfo& pinit) const\u0003Upp\u0005PAINT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000°\u0000\u0000\u0000\u0000\u0000\u0000\u0000°\u0000\u0000\u0000\u0001\u0000\u0000\u0000·\u0000\u0000\u0000\u0001\u0000\u0000\u0005Paint(void (Zoom, Draw &, int, int, int) const1Upp::RichText::Paint(Zoom,Draw&,int,int,int)const:void Paint(Zoom zoom, Draw& w, int x, int y, int cx) const\u0003Upp\u0005PAINT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000¹\u0000\u0000\u0000\u0000\u0000\u0000\u0000¹\u0000\u0000\u0000\u0001\u0000\u0000\u0000¼\u0000\u0000\u0000\u0001\u0000\u0000\u0005Paint\"void (Draw &, int, int, int) const,Upp::RichText::Paint(Draw&,int,int,int)const/void Paint(Draw& w, int x, int y, int cx) const\u0003Upp\u0005PAINT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000end\u0000þ\u000E\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\TextStyle.cpp","value":"data\u0019\u0015\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\nGetDefault\u0013const RichStyle &()\u001CUpp::RichStyle::GetDefault()\u001Dconst RichStyle& GetDefault()\u0003Upp\nGETDEFAULT\u000EUpp::RichStyle\u000EUPP::RICHSTYLE\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0001\u0000\u0000\fGetDefaultId\aUuid ()\u001EUpp::RichStyle::GetDefaultId()\u0013Uuid GetDefaultId()\u0003Upp\fGETDEFAULTID\u000EUpp::RichStyle\u000EUPP::RICHSTYLE\u0000\u0000\b\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0000\u0000\bGetStyle3const RichStyle &(const RichStyles &, const Uuid &),Upp::GetStyle(const RichStyles&,const Uuid&)>const RichStyle& GetStyle(const RichStyles& s, const Uuid& id)\u0003Upp\bGETSTYLE\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0001\u0000\u0000\u0011FindStyleWithName(int (const RichStyles &, const String &)7Upp::FindStyleWithName(const RichStyles&,const String&)Bint FindStyleWithName(const RichStyles& style, const String& name)\u0003Upp\u0011FINDSTYLEWITHNAME\u0003Upp\u0003UPP\u0000\u0000\u0002\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0000\u0000\u0000(\u0000\u0000\u0000\u0001\u0000\u0000\rStyleChangeOp\u001CUpp::RichText::StyleChangeOp\u001CUpp::RichText::StyleChangeOp)RichText::StyleChangeOp : RichTxt::ParaOp\u0003Upp\rSTYLECHANGEOP\u001CUpp::RichText::StyleChangeOp\u001CUPP::RICHTEXT::STYLECHANGEOP\u0014Upp::RichTxt::ParaOp\u0000\u0006\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001E\u0000\u0000\u0000\b\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0000\u0002id\u0004Uuid Upp::RichText::StyleChangeOp::id\aUuid id\u0003Upp\u0002ID\u001CUpp::RichText::StyleChangeOp\u001CUPP::RICHTEXT::STYLECHANGEOP\u0000\u0000\u0006\u0000\u0000\u0000\n\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001E\u0000\u0000\u0000\r\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0000\u0003nid\u0004Uuid!Upp::RichText::StyleChangeOp::nid\bUuid nid\u0003Upp\u0003NID\u001CUpp::RichText::StyleChangeOp\u001CUPP::RICHTEXT::STYLECHANGEOP\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\u0000 \u0000\u0000\u0000\u0002\u0000\u0000\u0000'\u0000\u0000\u0000\u0001\u0001\u0000\noperator()\u0016bool (RichTxt::Para &)8Upp::RichText::StyleChangeOp::operator()(RichTxt::Para&)!bool operator()(RichTxt::Para& p)\u0003Upp\nOPERATOR()\u001CUpp::RichText::StyleChangeOp\u001CUPP::RICHTEXT::STYLECHANGEOP\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000*\u0000\u0000\u0000\u0000\u0000\u0000\u0000*\u0000\u0000\u0000\u0001\u0000\u0000\u00005\u0000\u0000\u0000\u0001\u0000\u0000\bSetStyle&void (const Uuid &, const RichStyle &)5Upp::RichText::SetStyle(const Uuid&,const RichStyle&)6void SetStyle(const Uuid& id, const RichStyle& _style)\u0003Upp\bSETSTYLE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0002\u0000\u0000\u0000\u0011\u0000\u0000\u00007\u0000\u0000\u0000\u0000\u0000\u0000\u00007\u0000\u0000\u0000\u0001\u0000\u0000\u0000@\u0000\u0000\u0000\u0001\u0000\u0000\vSetStylesOp\u001AUpp::RichText::SetStylesOp\u001AUpp::RichText::SetStylesOp'RichText::SetStylesOp : RichTxt::ParaOp\u0003Upp\vSETSTYLESOP\u001AUpp::RichText::SetStylesOp\u001AUPP::RICHTEXT::SETSTYLESOP\u0014Upp::RichTxt::ParaOp\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u00008\u0000\u0000\u0000\u0001\u0000\u0000\u00008\u0000\u0000\u0000\u0012\u0000\u0000\u00008\u0000\u0000\u0000\u0001\u0000\u0000\u0005style\fRichStyles *!Upp::RichText::SetStylesOp::style\u0011RichStyles *style\u0003Upp\u0005STYLE\u001AUpp::RichText::SetStylesOp\u001AUPP::RICHTEXT::SETSTYLESOP\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000:\u0000\u0000\u0000\u0001\u0000\u0000\u0000:\u0000\u0000\u0000\u0002\u0000\u0000\u0000?\u0000\u0000\u0000\u0001\u0001\u0000\noperator()\u0016bool (RichTxt::Para &)6Upp::RichText::SetStylesOp::operator()(RichTxt::Para&)!bool operator()(RichTxt::Para& p)\u0003Upp\nOPERATOR()\u001AUpp::RichText::SetStylesOp\u001AUPP::RICHTEXT::SETSTYLESOP\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000B\u0000\u0000\u0000\u0000\u0000\u0000\u0000B\u0000\u0000\u0000\u0001\u0000\u0000\u0000I\u0000\u0000\u0000\u0001\u0000\u0000\tSetStyles\u0019void (const RichStyles &)+Upp::RichText::SetStyles(const RichStyles&)(void SetStyles(const RichStyles& _style)\u0003Upp\tSETSTYLES\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000K\u0000\u0000\u0000\u0000\u0000\u0000\u0000K\u0000\u0000\u0000\u0001\u0000\u0000\u0000O\u0000\u0000\u0000\u0001\u0000\u0000\nGetStyleId\u001BUuid (const String &) const-Upp::RichText::GetStyleId(const String&)const)Uuid GetStyleId(const String& name) const\u0003Upp\nGETSTYLEID\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000Q\u0000\u0000\u0000\u0000\u0000\u0000\u0000Q\u0000\u0000\u0000\u0001\u0000\u0000\u0000Z\u0000\u0000\u0000\u0001\u0000\u0000\vRemoveStyle\u0013void (const Uuid &)'Upp::RichText::RemoveStyle(const Uuid&) void RemoveStyle(const Uuid& id)\u0003Upp\vREMOVESTYLE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0002\u0000\u0000\u0000\u0011\u0000\u0000\u0000\\\u0000\u0000\u0000\u0000\u0000\u0000\u0000\\\u0000\u0000\u0000\u0001\u0000\u0000\u0000h\u0000\u0000\u0000\u0001\u0000\u0000\rMergeStylesOp\u001CUpp::RichText::MergeStylesOp\u001CUpp::RichText::MergeStylesOp)RichText::MergeStylesOp : RichTxt::ParaOp\u0003Upp\rMERGESTYLESOP\u001CUpp::RichText::MergeStylesOp\u001CUPP::RICHTEXT::MERGESTYLESOP\u0014Upp::RichTxt::ParaOp\u0000\u0006\u0000\u0000\u0000\u0011\u0000\u0000\u0000]\u0000\u0000\u0000\u0001\u0000\u0000\u0000]\u0000\u0000\u0000\u0015\u0000\u0000\u0000]\u0000\u0000\u0000\u0001\u0000\u0000\u0004text\nRichText *\"Upp::RichText::MergeStylesOp::text\u000ERichText *text\u0003Upp\u0004TEXT\u001CUpp::RichText::MergeStylesOp\u001CUPP::RICHTEXT::MERGESTYLESOP\u0000\u0000\u0006\u0000\u0000\u0000\u0011\u0000\u0000\u0000^\u0000\u0000\u0000\u0001\u0000\u0000\u0000^\u0000\u0000\u0000\u0015\u0000\u0000\u0000^\u0000\u0000\u0000\u0001\u0000\u0000\u0004stxt\u0010const RichText *\"Upp::RichText::MergeStylesOp::stxt\u0014const RichText *stxt\u0003Upp\u0004STXT\u001CUpp::RichText::MergeStylesOp\u001CUPP::RICHTEXT::MERGESTYLESOP\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000`\u0000\u0000\u0000\u0001\u0000\u0000\u0000`\u0000\u0000\u0000\u0002\u0000\u0000\u0000g\u0000\u0000\u0000\u0001\u0001\u0000\noperator()\u0016bool (RichTxt::Para &)8Upp::RichText::MergeStylesOp::operator()(RichTxt::Para&)!bool operator()(RichTxt::Para& p)\u0003Upp\nOPERATOR()\u001CUpp::RichText::MergeStylesOp\u001CUPP::RICHTEXT::MERGESTYLESOP\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000j\u0000\u0000\u0000\u0000\u0000\u0000\u0000j\u0000\u0000\u0000\u0001\u0000\u0000\u0000q\u0000\u0000\u0000\u0001\u0000\u0000\vMergeStyles\u0017void (const RichText &)+Upp::RichText::MergeStyles(const RichText&)&void MergeStyles(const RichText& text)\u0003Upp\vMERGESTYLES\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0002\u0000\u0000\u0000\u0011\u0000\u0000\u0000s\u0000\u0000\u0000\u0000\u0000\u0000\u0000s\u0000\u0000\u0000\u0001\u0000\u0000\u0000{\u0000\u0000\u0000\u0001\u0000\u0000\u0010OverrideStylesOp\u001FUpp::RichText::OverrideStylesOp\u001FUpp::RichText::OverrideStylesOp,RichText::OverrideStylesOp : RichTxt::ParaOp\u0003Upp\u0010OVERRIDESTYLESOP\u001FUpp::RichText::OverrideStylesOp\u001FUPP::RICHTEXT::OVERRIDESTYLESOP\u0014Upp::RichTxt::ParaOp\u0000\u0006\u0000\u0000\u0000\u0017\u0000\u0000\u0000t\u0000\u0000\u0000\u0001\u0000\u0000\u0000t\u0000\u0000\u0000\u0019\u0000\u0000\u0000t\u0000\u0000\u0000\u0001\u0000\u0000\u0002cs\u0015VectorMap<Uuid, Uuid>#Upp::RichText::OverrideStylesOp::cs\u0018VectorMap<Uuid, Uuid> cs\u0003Upp\u0002CS\u001FUpp::RichText::OverrideStylesOp\u001FUPP::RICHTEXT::OVERRIDESTYLESOP\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000v\u0000\u0000\u0000\u0001\u0000\u0000\u0000v\u0000\u0000\u0000\u0002\u0000\u0000\u0000z\u0000\u0000\u0000\u0001\u0001\u0000\noperator()\u0016bool (RichTxt::Para &);Upp::RichText::OverrideStylesOp::operator()(RichTxt::Para&)!bool operator()(RichTxt::Para& p)\u0003Upp\nOPERATOR()\u001FUpp::RichText::OverrideStylesOp\u001FUPP::RICHTEXT::OVERRIDESTYLESOP\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000}\u0000\u0000\u0000\u0000\u0000\u0000\u0000}\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u000EOverrideStyles%void (const RichStyles &, bool, bool):Upp::RichText::OverrideStyles(const RichStyles&,bool,bool)Xvoid OverrideStyles(const RichStyles& ms, bool matchname = true, bool addmissing = true)\u0003Upp\u000EOVERRIDESTYLES\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000end\u0000\u0013\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\TextData.cpp","value":"data\u001C\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\aCatPick\u0012void (RichText &&)\"Upp::RichText::CatPick(RichText&&)\u001Avoid CatPick(RichText&& p)\u0003Upp\aCATPICK\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0018\u0000\u0000\u0000\t\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\aRichPos\avoid ()\u0017Upp::RichPos::RichPos()\tRichPos()\u0003Upp\aRICHPOS\fUpp::RichPos\fUPP::RICHPOS\u0000\u0000\u0015\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\nGetRichPos\u0018RichPos (int, int) const'Upp::RichText::GetRichPos(int,int)const<RichPos GetRichPos(int pos, int maxlevel = 2147483647) const\u0003Upp\nGETRICHPOS\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0000%\u0000\u0000\u0000\u0001\u0000\u0000\u0000D\u0000\u0000\u0000\u0001\u0000\u0000\fAdjustCursor\u0014int (int, int) const)Upp::RichText::AdjustCursor(int,int)const.int AdjustCursor(int anchor, int cursor) const\u0003Upp\fADJUSTCURSOR\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000F\u0000\u0000\u0000\u0000\u0000\u0000\u0000F\u0000\u0000\u0000\u0001\u0000\u0000\u0000d\u0000\u0000\u0000\u0001\u0000\u0000\u0006Remove\u000Fvoid (int, int)\u001EUpp::RichText::Remove(int,int)\u001Fvoid Remove(int pos, int count)\u0003Upp\u0006REMOVE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000f\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0006Insert\u001Cvoid (int, const RichText &)*Upp::RichText::Insert(int,const RichText&)'void Insert(int pos, const RichText& p)\u0003Upp\u0006INSERT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000·\u0000\u0000\u0000\u0001\u0000\u0000\u0004Copy\u0019RichText (int, int) const!Upp::RichText::Copy(int,int)const'RichText Copy(int pos, int count) const\u0003Upp\u0004COPY\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u001F\u0000\u0000\u0000¹\u0000\u0000\u0000\u0000\u0000\u0000\u0000¹\u0000\u0000\u0000\u0001\u0000\u0000\u0000ä\u0000\u0000\u0000\u0001\u0000\u0000\rGetFormatInfo%RichText::FormatInfo (int, int) const*Upp::RichText::GetFormatInfo(int,int)const<RichText::FormatInfo GetFormatInfo(int pos, int count) const\u0003Upp\rGETFORMATINFO\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000æ\u0000\u0000\u0000\u0000\u0000\u0000\u0000æ\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001C\u0001\u0000\u0000\u0001\u0000\u0000\u000FApplyFormatInfo#void (int, const FormatInfo &, int)9Upp::RichText::ApplyFormatInfo(int,const FormatInfo&,int)>void ApplyFormatInfo(int pos, const FormatInfo& fi, int count)\u0003Upp\u000FAPPLYFORMATINFO\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0001\u0000\u0000\u0000$\u0001\u0000\u0000\u0001\u0000\u0000\fReplaceStyle\u0018void (int, const Uuid &),Upp::RichText::ReplaceStyle(int,const Uuid&)*void ReplaceStyle(int pos, const Uuid& id)\u0003Upp\fREPLACESTYLE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000&\u0001\u0000\u0000\u0000\u0000\u0000\u0000&\u0001\u0000\u0000\u0001\u0000\u0000\u0000-\u0001\u0000\u0000\u0001\u0000\u0000\aReStyle\u0018void (int, const Uuid &)'Upp::RichText::ReStyle(int,const Uuid&)%void ReStyle(int pos, const Uuid& id)\u0003Upp\aRESTYLE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u001E\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0001\u0000\u0000\u00007\u0001\u0000\u0000\u0001\u0000\u0000\nSaveFormat$RichText::Formating (int, int) const'Upp::RichText::SaveFormat(int,int)const8RichText::Formating SaveFormat(int pos, int count) const\u0003Upp\nSAVEFORMAT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0001\u0000\u0000\u0000>\u0001\u0000\u0000\u0001\u0000\u0000\rRestoreFormat'void (int, const RichText::Formating &)<Upp::RichText::RestoreFormat(int,const RichText::Formating&)<void RestoreFormat(int pos, const RichText::Formating& info)\u0003Upp\rRESTOREFORMAT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000@\u0001\u0000\u0000\u0000\u0000\u0000\u0000@\u0001\u0000\u0000\u0001\u0000\u0000\u0000F\u0001\u0000\u0000\u0001\u0000\u0000\u0004Init\avoid ()\u0015Upp::RichText::Init()\vvoid Init()\u0003Upp\u0004INIT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000H\u0001\u0000\u0000\u0000\u0000\u0000\u0000H\u0001\u0000\u0000\u0001\u0000\u0000\u0000M\u0001\u0000\u0000\u0001\u0000\u0000\u0005Clear\avoid ()\u0016Upp::RichText::Clear()\fvoid Clear()\u0003Upp\u0005CLEAR\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0018\u0000\u0000\u0000\n\u0000\u0000\u0000O\u0001\u0000\u0000\u0000\u0000\u0000\u0000O\u0001\u0000\u0000\u0001\u0000\u0000\u0000T\u0001\u0000\u0000\u0001\u0000\u0000\bRichText\u001Cvoid (const RichText &, int),Upp::RichText::RichText(const RichText&,int) RichText(const RichText& x, int)\u0003Upp\bRICHTEXT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0018\u0000\u0000\u0000\n\u0000\u0000\u0000V\u0001\u0000\u0000\u0000\u0000\u0000\u0000V\u0001\u0000\u0000\u0001\u0000\u0000\u0000[\u0001\u0000\u0000\u0001\u0000\u0000\bRichText\u0012void (RichText &&)#Upp::RichText::RichText(RichText&&)\u0016RichText(RichText&& x)\u0003Upp\bRICHTEXT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000]\u0001\u0000\u0000\u0000\u0000\u0000\u0000]\u0001\u0000\u0000\u0001\u0000\u0000\u0000d\u0001\u0000\u0000\u0001\u0000\u0000\toperator=\u0017RichText &(RichText &&)$Upp::RichText::operator=(RichText&&)\u0012RichText& operator\u0003Upp\tOPERATOR=\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0018\u0000\u0000\u0000\n\u0000\u0000\u0000f\u0001\u0000\u0000\u0000\u0000\u0000\u0000f\u0001\u0000\u0000\u0001\u0000\u0000\u0000j\u0001\u0000\u0000\u0001\u0000\u0000\bRichText void (RichTxt &&, RichStyles &&)/Upp::RichText::RichText(RichTxt&&,RichStyles&&)&RichText(RichTxt&& x, RichStyles&& st)\u0003Upp\bRICHTEXT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u001B\u0000\u0000\u0000l\u0001\u0000\u0000\u0000\u0000\u0000\u0000l\u0001\u0000\u0000X\u0000\u0000\u0000l\u0001\u0000\u0000\u0001\u0001\u0000\tParagraph,void (const Rect &, PageY, const RichPara &)GUpp::RichTextLayoutTracer::Paragraph(const Rect&,PageY,const RichPara&)?void Paragraph(const Rect& page, PageY y, const RichPara& para)\u0003Upp\tPARAGRAPH\u0019Upp::RichTextLayoutTracer\u0019UPP::RICHTEXTLAYOUTTRACER\u0000\u0000\u0015\u0000\u0000\u0000\u001B\u0000\u0000\u0000m\u0001\u0000\u0000\u0000\u0000\u0000\u0000m\u0001\u0000\u00003\u0000\u0000\u0000m\u0001\u0000\u0000\u0001\u0001\u0000\fEndParagraph\fvoid (PageY).Upp::RichTextLayoutTracer::EndParagraph(PageY)\u001Avoid EndParagraph(PageY y)\u0003Upp\fENDPARAGRAPH\u0019Upp::RichTextLayoutTracer\u0019UPP::RICHTEXTLAYOUTTRACER\u0000\u0000\u0015\u0000\u0000\u0000\u001B\u0000\u0000\u0000n\u0001\u0000\u0000\u0000\u0000\u0000\u0000n\u0001\u0000\u0000V\u0000\u0000\u0000n\u0001\u0000\u0000\u0001\u0001\u0000\u0005Table-void (const Rect &, PageY, const RichTable &)DUpp::RichTextLayoutTracer::Table(const Rect&,PageY,const RichTable&)=void Table(const Rect& page, PageY y, const RichTable& table)\u0003Upp\u0005TABLE\u0019Upp::RichTextLayoutTracer\u0019UPP::RICHTEXTLAYOUTTRACER\u0000\u0000\u0015\u0000\u0000\u0000\u001B\u0000\u0000\u0000o\u0001\u0000\u0000\u0000\u0000\u0000\u0000o\u0001\u0000\u0000/\u0000\u0000\u0000o\u0001\u0000\u0000\u0001\u0001\u0000\bEndTable\fvoid (PageY)*Upp::RichTextLayoutTracer::EndTable(PageY)\u0016void EndTable(PageY y)\u0003Upp\bENDTABLE\u0019Upp::RichTextLayoutTracer\u0019UPP::RICHTEXTLAYOUTTRACER\u0000\u0000\u0015\u0000\u0000\u0000\u001B\u0000\u0000\u0000p\u0001\u0000\u0000\u0000\u0000\u0000\u0000p\u0001\u0000\u0000`\u0000\u0000\u0000p\u0001\u0000\u0000\u0001\u0001\u0000\bTableRow2void (const Rect &, PageY, int, const RichTable &)KUpp::RichTextLayoutTracer::TableRow(const Rect&,PageY,int,const RichTable&)Gvoid TableRow(const Rect& page, PageY y, int i, const RichTable& table)\u0003Upp\bTABLEROW\u0019Upp::RichTextLayoutTracer\u0019UPP::RICHTEXTLAYOUTTRACER\u0000\u0000\u0015\u0000\u0000\u0000\u001B\u0000\u0000\u0000q\u0001\u0000\u0000\u0000\u0000\u0000\u0000q\u0001\u0000\u00002\u0000\u0000\u0000q\u0001\u0000\u0000\u0001\u0001\u0000\vEndTableRow\fvoid (PageY)-Upp::RichTextLayoutTracer::EndTableRow(PageY)\u0019void EndTableRow(PageY y)\u0003Upp\vENDTABLEROW\u0019Upp::RichTextLayoutTracer\u0019UPP::RICHTEXTLAYOUTTRACER\u0000\u0000\u0015\u0000\u0000\u0000\u001B\u0000\u0000\u0000r\u0001\u0000\u0000\u0000\u0000\u0000\u0000r\u0001\u0000\u0000s\u0000\u0000\u0000r\u0001\u0000\u0000\u0001\u0001\u0000\tTableCell>void (const Rect &, PageY, int, int, const RichTable &, PageY)VUpp::RichTextLayoutTracer::TableCell(const Rect&,PageY,int,int,const RichTable&,PageY)Zvoid TableCell(const Rect& page, PageY y, int i, int j, const RichTable& table, PageY npy)\u0003Upp\tTABLECELL\u0019Upp::RichTextLayoutTracer\u0019UPP::RICHTEXTLAYOUTTRACER\u0000\u0000\u0015\u0000\u0000\u0000\u001B\u0000\u0000\u0000s\u0001\u0000\u0000\u0000\u0000\u0000\u0000s\u0001\u0000\u00003\u0000\u0000\u0000s\u0001\u0000\u0000\u0001\u0001\u0000\fEndTableCell\fvoid (PageY).Upp::RichTextLayoutTracer::EndTableCell(PageY)\u001Avoid EndTableCell(PageY y)\u0003Upp\fENDTABLECELL\u0019Upp::RichTextLayoutTracer\u0019UPP::RICHTEXTLAYOUTTRACER\u0000\u0000end\u0000°\u0015\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\TextTable.cpp","value":"data\u0019\u0015\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u000EGetTableFormat\u001DRichTable::Format (int) const'Upp::RichText::GetTableFormat(int)const1RichTable::Format GetTableFormat(int table) const\u0003Upp\u000EGETTABLEFORMAT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\u000ESetTableFormat%void (int, const RichTable::Format &);Upp::RichText::SetTableFormat(int,const RichTable::Format&)<void SetTableFormat(int table, const RichTable::Format& fmt)\u0003Upp\u000ESETTABLEFORMAT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0001\u0000\u0000\bSetTable\u001Cint (int, const RichTable &)-Upp::RichText::SetTable(int,const RichTable&)-int SetTable(int pos, const RichTable& table)\u0003Upp\bSETTABLE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\tCopyTable\u0015RichTable (int) const\"Upp::RichText::CopyTable(int)const$RichTable CopyTable(int table) const\u0003Upp\tCOPYTABLE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0000%\u0000\u0000\u0000\u0001\u0000\u0000\u0000)\u0000\u0000\u0000\u0001\u0000\u0000\fReplaceTable\u001Dvoid (int, const RichTable &)1Upp::RichText::ReplaceTable(int,const RichTable&)2void ReplaceTable(int table, const RichTable& tab)\u0003Upp\fREPLACETABLE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000+\u0000\u0000\u0000\u0000\u0000\u0000\u0000+\u0000\u0000\u0000\u0001\u0000\u0000\u00002\u0000\u0000\u0000\u0001\u0000\u0000\fDestroyTable\nvoid (int) Upp::RichText::DestroyTable(int)\u001Cvoid DestroyTable(int table)\u0003Upp\fDESTROYTABLE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u00004\u0000\u0000\u0000\u0000\u0000\u0000\u00004\u0000\u0000\u0000\u0001\u0000\u0000\u0000?\u0000\u0000\u0000\u0001\u0000\u0000\u0011RemoveParaSpecial\u0010void (int, bool)*Upp::RichText::RemoveParaSpecial(int,bool).void RemoveParaSpecial(int table, bool before)\u0003Upp\u0011REMOVEPARASPECIAL\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000A\u0000\u0000\u0000\u0000\u0000\u0000\u0000A\u0000\u0000\u0000\u0001\u0000\u0000\u0000L\u0000\u0000\u0000\u0001\u0000\u0000\u0014CanRemoveParaSpecial\u0010bool (int, bool)-Upp::RichText::CanRemoveParaSpecial(int,bool)1bool CanRemoveParaSpecial(int table, bool before)\u0003Upp\u0014CANREMOVEPARASPECIAL\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000N\u0000\u0000\u0000\u0000\u0000\u0000\u0000N\u0000\u0000\u0000\u0001\u0000\u0000\u0000U\u0000\u0000\u0000\u0001\u0000\u0000\u0017ShouldInsertParaSpecial\u0010bool (int, bool)0Upp::RichText::ShouldInsertParaSpecial(int,bool)4bool ShouldInsertParaSpecial(int table, bool before)\u0003Upp\u0017SHOULDINSERTPARASPECIAL\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000X\u0000\u0000\u0000\u0000\u0000\u0000\u0000X\u0000\u0000\u0000\u0001\u0000\u0000\u0000d\u0000\u0000\u0000\u0001\u0000\u0000\u0011InsertParaSpecial*void (int, bool, const RichPara::Format &)BUpp::RichText::InsertParaSpecial(int,bool,const RichPara::Format&)Kvoid InsertParaSpecial(int table, bool before, const RichPara::Format& fmt)\u0003Upp\u0011INSERTPARASPECIAL\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000f\u0000\u0000\u0000\u0001\u0000\u0000\u0000j\u0000\u0000\u0000\u0001\u0000\u0000\tCopyTable#RichTable (int, const Rect &) const.Upp::RichText::CopyTable(int,const Rect&)const5RichTable CopyTable(int table, const Rect& sel) const\u0003Upp\tCOPYTABLE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000l\u0000\u0000\u0000\u0000\u0000\u0000\u0000l\u0000\u0000\u0000\u0001\u0000\u0000\u0000o\u0000\u0000\u0000\u0001\u0000\u0000\rGetMasterCell\u0015Point (int, int, int))Upp::RichText::GetMasterCell(int,int,int)3Point GetMasterCell(int table, int row, int column)\u0003Upp\rGETMASTERCELL\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000q\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000\u0000\u0000\u0001\u0000\u0000\u0000u\u0000\u0000\u0000\u0001\u0000\u0000\nPasteTable$void (int, Point, const RichTable &)5Upp::RichText::PasteTable(int,Point,const RichTable&);void PasteTable(int table, Point pos, const RichTable& tab)\u0003Upp\nPASTETABLE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000w\u0000\u0000\u0000\u0000\u0000\u0000\u0000w\u0000\u0000\u0000\u0001\u0000\u0000\u0000{\u0000\u0000\u0000\u0001\u0000\u0000\u000EInsertTableRow\u000Fvoid (int, int)&Upp::RichText::InsertTableRow(int,int)'void InsertTableRow(int table, int row)\u0003Upp\u000EINSERTTABLEROW\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000}\u0000\u0000\u0000\u0000\u0000\u0000\u0000}\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u000ERemoveTableRow\u000Fvoid (int, int)&Upp::RichText::RemoveTableRow(int,int)'void RemoveTableRow(int table, int row)\u0003Upp\u000EREMOVETABLEROW\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0011InsertTableColumn\u000Fvoid (int, int))Upp::RichText::InsertTableColumn(int,int)-void InsertTableColumn(int table, int column)\u0003Upp\u0011INSERTTABLECOLUMN\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0011RemoveTableColumn\u000Fvoid (int, int))Upp::RichText::RemoveTableColumn(int,int)-void RemoveTableColumn(int table, int column)\u0003Upp\u0011REMOVETABLECOLUMN\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\tSplitCell\u0017void (int, Point, Size)(Upp::RichText::SplitCell(int,Point,Size).void SplitCell(int table, Point cell, Size sz)\u0003Upp\tSPLITCELL\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000ª\u0000\u0000\u0000\u0001\u0000\u0000\bJoinCell\u0018void (int, const Rect &)(Upp::RichText::JoinCell(int,const Rect&))void JoinCell(int table, const Rect& sel)\u0003Upp\bJOINCELL\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u001B\u0000\u0000\u0000¬\u0000\u0000\u0000\u0000\u0000\u0000\u0000¬\u0000\u0000\u0000\u0001\u0000\u0000\u0000°\u0000\u0000\u0000\u0001\u0000\u0000\rGetCellFormat*RichCell::Format (int, const Rect &) const2Upp::RichText::GetCellFormat(int,const Rect&)const@RichCell::Format GetCellFormat(int table, const Rect& sel) const\u0003Upp\rGETCELLFORMAT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000²\u0000\u0000\u0000\u0000\u0000\u0000\u0000²\u0000\u0000\u0000\u0001\u0000\u0000\u0000¶\u0000\u0000\u0000\u0001\u0000\u0000\rSetCellFormat>void (int, const Rect &, const RichCell::Format &, bool, bool)OUpp::RichText::SetCellFormat(int,const Rect&,const RichCell::Format&,bool,bool)hvoid SetCellFormat(int table, const Rect& sel, const RichCell::Format& fmt, bool setkeep, bool setround)\u0003Upp\rSETCELLFORMAT\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000¸\u0000\u0000\u0000\u0000\u0000\u0000\u0000¸\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ä\u0000\u0000\u0000\u0001\u0000\u0000\nClearTable\u0018void (int, const Rect &)*Upp::RichText::ClearTable(int,const Rect&)+void ClearTable(int table, const Rect& sel)\u0003Upp\nCLEARTABLE\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u001F\u0000\u0000\u0000Æ\u0000\u0000\u0000\u0000\u0000\u0000\u0000Æ\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ô\u0000\u0000\u0000\u0001\u0000\u0000\u0012GetTableFormatInfo.RichText::FormatInfo (int, const Rect &) const7Upp::RichText::GetTableFormatInfo(int,const Rect&)constIRichText::FormatInfo GetTableFormatInfo(int table, const Rect& sel) const\u0003Upp\u0012GETTABLEFORMATINFO\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000Ö\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ö\u0000\u0000\u0000\u0001\u0000\u0000\u0000ã\u0000\u0000\u0000\u0001\u0000\u0000\u0014ApplyTableFormatInfo6void (int, const Rect &, const RichText::FormatInfo &)PUpp::RichText::ApplyTableFormatInfo(int,const Rect&,const RichText::FormatInfo&)Uvoid ApplyTableFormatInfo(int table, const Rect& sel, const RichText::FormatInfo& fi)\u0003Upp\u0014APPLYTABLEFORMATINFO\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000end\u0000B\u0015\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\EncodeQtf.cpp","value":"data\u0013\t\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\bQTFColor\rColor (*[])()\rUpp::QTFColor\u0015Color (*QTFColor[])()\u0003Upp\bQTFCOLOR\u0003Upp\u0003UPP\u0000\u0000\t\u0000\u0000\u0000\r\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\rQTFFontHeight\u0005int[]\u0012Upp::QTFFontHeight\u0013int QTFFontHeight[]\u0003Upp\rQTFFONTHEIGHT\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000\v\u0000\u0000\u0000\u0001\u0000\u0000\u000ESeparateNumber\u000Fvoid (String &)\u001CUpp::SeparateNumber(String&)\u001Evoid SeparateNumber(String& s)\u0003Upp\u000ESEPARATENUMBER\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0000\tQtfFormat\u000EString (Color)\u0015Upp::QtfFormat(Color)\u0019String QtfFormat(Color c)\u0003Upp\tQTFFORMAT\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\u0006LngFmt\u001Dvoid (String &, dword, dword) Upp::LngFmt(String&,dword,dword)-void LngFmt(String& fmt, dword l, dword lang)\u0003Upp\u0006LNGFMT\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0000%\u0000\u0000\u0000\u0001\u0000\u0000\u0000N\u0000\u0000\u0000\u0001\u0000\u0000\aCharFmtKvoid (String &, const RichPara::CharFormat &, const RichPara::CharFormat &)MUpp::CharFmt(String&,const RichPara::CharFormat&,const RichPara::CharFormat&)Wvoid CharFmt(String& fmt, const RichPara::CharFormat& a, const RichPara::CharFormat& b)\u0003Upp\aCHARFMT\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000P\u0000\u0000\u0000\u0000\u0000\u0000\u0000P\u0000\u0000\u0000\u0001\u0000\u0000\u0000S\u0000\u0000\u0000\u0001\u0000\u0000\tFmtNumber\u001Fvoid (String &, char, int, int)$Upp::FmtNumber(String&,char,int,int)<void FmtNumber(String& qtf, char c, int former, int current)\u0003Upp\tFMTNUMBER\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000U\u0000\u0000\u0000\u0000\u0000\u0000\u0000U\u0000\u0000\u0000\u0001\u0000\u0000\u0000»\u0000\u0000\u0000\u0001\u0000\u0000\u0013QTFEncodeParaFormatCvoid (String &, const RichPara::Format &, const RichPara::Format &)QUpp::QTFEncodeParaFormat(String&,const RichPara::Format&,const RichPara::Format&)dvoid QTFEncodeParaFormat(String& qtf, const RichPara::Format& format, const RichPara::Format& style)\u0003Upp\u0013QTFENCODEPARAFORMAT\u0003Upp\u0003UPP\u0000\u0000\t\u0000\u0000\u0000\u0005\u0000\u0000\u0000½\u0000\u0000\u0000\u0000\u0000\u0000\u0000½\u0000\u0000\u0000\u0013\u0000\u0000\u0000½\u0000\u0000\u0000\u0001\u0000\u0000\ts_nodeqtf\tbool[128]\u000EUpp::s_nodeqtf\u0013bool s_nodeqtf[128]\u0003Upp\tS_NODEQTF\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000¿\u0000\u0000\u0000\u0000\u0000\u0000\u0000¿\u0000\u0000\u0000\u0001\u0000\u0000\u0000`\u0001\u0000\u0000\u0001\u0000\u0000\rQTFEncodeParaNvoid (String &, const RichPara &, const RichPara::Format &, byte, dword, bool)SUpp::QTFEncodePara(String&,const RichPara&,const RichPara::Format&,byte,dword,bool)vvoid QTFEncodePara(String& qtf, const RichPara& p, const RichPara::Format& style, byte charset, dword lang, bool crlf)\u0003Upp\rQTFENCODEPARA\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000b\u0001\u0000\u0000\u0000\u0000\u0000\u0000b\u0001\u0000\u0000\u0001\u0000\u0000\u0000k\u0001\u0000\u0000\u0001\u0000\u0000\nFmtNumber2)void (String &, char, int, int, int, int)-Upp::FmtNumber2(String&,char,int,int,int,int)Bvoid FmtNumber2(String& qtf, char c, int da, int a, int db, int b)\u0003Upp\nFMTNUMBER2\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000n\u0001\u0000\u0000\u0000\u0000\u0000\u0000n\u0001\u0000\u0000\u0001\u0000\u0000\u0000Í\u0001\u0000\u0000\u0001\u0000\u0000\fQTFEncodeTxtpvoid (String &, const RichTxt &, const RichStyles &, const RichStyle &, dword, const Index<Uuid> &, byte, dword)jUpp::QTFEncodeTxt(String&,const RichTxt&,const RichStyles&,const RichStyle&,dword,const Index&,byte,dword)ÿ¨\u0000\u0000\u0000void QTFEncodeTxt(String& qtf, const RichTxt& text, const RichStyles& styles, const RichStyle& defstyle, dword options, const Index<Uuid>& sm, byte charset, dword lang)\u0003Upp\fQTFENCODETXT\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000Ï\u0001\u0000\u0000\u0000\u0000\u0000\u0000Ï\u0001\u0000\u0000\u0001\u0000\u0000\u0000Õ\u0001\u0000\u0000\u0001\u0000\u0000\u000Einit_s_nodeqtf\avoid ()\u0015Upp::init_s_nodeqtf()\u0015void init_s_nodeqtf()\u0003Upp\u000EINIT_S_NODEQTF\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000\u0000×\u0001\u0000\u0000\u0000\u0000\u0000\u0000×\u0001\u0000\u0000\u0001\u0000\u0000\u0000/\u0002\u0000\u0000\u0001\u0000\u0000\u0005AsQTF&String (const RichText &, byte, dword)&Upp::AsQTF(const RichText&,byte,dword)lString AsQTF(const RichText& text, byte charset = 255, dword options = QTF_BODY | QTF_ALL_STYLES | QTF_CRLF)\u0003Upp\u0005ASQTF\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u00001\u0002\u0000\u0000\u0000\u0000\u0000\u00001\u0002\u0000\u0000\u0001\u0000\u0000\u0000=\u0002\u0000\u0000\u0001\u0000\u0000\u0005DeQtf\u0015String (const char *)\u0017Upp::DeQtf(const char*)\u001BString DeQtf(const char *s)\u0003Upp\u0005DEQTF\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000?\u0002\u0000\u0000\u0000\u0000\u0000\u0000?\u0002\u0000\u0000\u0001\u0000\u0000\u0000O\u0002\u0000\u0000\u0001\u0000\u0000\aDeQtfLf\u0015String (const char *)\u0019Upp::DeQtfLf(const char*)\u001DString DeQtfLf(const char *s)\u0003Upp\aDEQTFLF\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000\u0000Q\u0002\u0000\u0000\u0000\u0000\u0000\u0000Q\u0002\u0000\u0000\u0001\u0000\u0000\u0000Y\u0002\u0000\u0000\u0001\u0000\u0000\nAsRichText\u001DRichText (const RichObject &)\"Upp::AsRichText(const RichObject&)*RichText AsRichText(const RichObject& obj)\u0003Upp\nASRICHTEXT\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000\\\u0002\u0000\u0000\u0000\u0000\u0000\u0000\\\u0002\u0000\u0000\u0001\u0000\u0000\u0000_\u0002\u0000\u0000\u0001\u0000\u0000\u0005AsQTF\u001BString (const RichObject &)\u001DUpp::AsQTF(const RichObject&)#String AsQTF(const RichObject& obj)\u0003Upp\u0005ASQTF\u0003Upp\u0003UPP\u0000\u0000end\u00007\u000E\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\ParseQtf.cpp","value":"dataY\t\u0000\u0000\u0000\b\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\bQTFColor\u000FColor (*[10])()\rUpp::QTFColor\u0015Color (*QTFColor[])()\u0003Upp\bQTFCOLOR\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\v\u0000\u0000\u0000\u0001\u0000\u0000\nNullColorF\bColor ()\u0011Upp::NullColorF()\u0012Color NullColorF()\u0003Upp\nNULLCOLORF\u0003Upp\u0003UPP\u0000\u0000\t\u0000\u0000\u0000\u000F\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0001\tQTFColorl\u000FColor (*[26])()\u000EUpp::QTFColorl\u001Dstatic Color (*QTFColorl[])()\u0003Upp\tQTFCOLORL\u0003Upp\u0003UPP\u0000\u0000\t\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0001\tQTFColorL\u000FColor (*[26])()\u000EUpp::QTFColorL\u001Dstatic Color (*QTFColorL[])()\u0003Upp\tQTFCOLORL\u0003Upp\u0003UPP\u0000\u0000\t\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0000\u0000\rQTFFontHeight\aint[10]\u0012Upp::QTFFontHeight\u0013int QTFFontHeight[]\u0003Upp\rQTFFONTHEIGHT\u0003Upp\u0003UPP\u0000\u0000\u0004\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0001\u0000\u0000\u0000e\u0000\u0000\u0000\u0001\u0000\u0000\rRichQtfParser\u0012Upp::RichQtfParser\u0012Upp::RichQtfParser\rRichQtfParser\u0003Upp\rRICHQTFPARSER\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\u0000 \u0000\u0000\u0000\u0014\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\acontext\u0006void *\u001BUpp::RichQtfParser::context\rvoid *context\u0003Upp\aCONTEXT\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000!\u0000\u0000\u0000\u0001\u0000\u0000\u0000!\u0000\u0000\u0000\u0011\u0000\u0000\u0000!\u0000\u0000\u0000\u0001\u0000\u0000\u0004term\fconst char *\u0018Upp::RichQtfParser::term\u0010const char *term\u0003Upp\u0004TERM\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000\"\u0000\u0000\u0000\u0001\u0000\u0000\u0000\"\u0000\u0000\u0000\u0011\u0000\u0000\u0000\"\u0000\u0000\u0000\u0001\u0000\u0000\u0004text\aWString\u0018Upp::RichQtfParser::text\fWString text\u0003Upp\u0004TEXT\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\u0000#\u0000\u0000\u0000\u0016\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\tparagraph\bRichPara\u001DUpp::RichQtfParser::paragraph\u0012RichPara paragraph\u0003Upp\tPARAGRAPH\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000$\u0000\u0000\u0000\u0001\u0000\u0000\u0000$\u0000\u0000\u0000\u0016\u0000\u0000\u0000$\u0000\u0000\u0000\u0001\u0000\u0000\ttablepart\tRichTable\u001DUpp::RichQtfParser::tablepart\u0013RichTable tablepart\u0003Upp\tTABLEPART\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000%\u0000\u0000\u0000\u0001\u0000\u0000\u0000%\u0000\u0000\u0000\u0014\u0000\u0000\u0000%\u0000\u0000\u0000\u0001\u0000\u0000\aistable\u0004bool\u001BUpp::RichQtfParser::istable\fbool istable\u0003Upp\aISTABLE\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000&\u0000\u0000\u0000\u0001\u0000\u0000\u0000&\u0000\u0000\u0000\u0016\u0000\u0000\u0000&\u0000\u0000\u0000\u0001\u0000\u0000\tbreakpage\u0004bool\u001DUpp::RichQtfParser::breakpage\u000Ebool breakpage\u0003Upp\tBREAKPAGE\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000'\u0000\u0000\u0000\u0001\u0000\u0000\u0000'\u0000\u0000\u0000\u0016\u0000\u0000\u0000'\u0000\u0000\u0000\u0001\u0000\u0000\taccesskey\u0003int\u001DUpp::RichQtfParser::accesskey\rint accesskey\u0003Upp\tACCESSKEY\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000)\u0000\u0000\u0000\u0001\u0000\u0000\u0000)\u0000\u0000\u0000\u0002\u0000\u0000\u0000+\u0000\u0000\u0000\u0001\u0000\u0000\aPFormat\u001BUpp::RichQtfParser::PFormat\u001BUpp::RichQtfParser::PFormat!PFormat : public RichPara::Format\u0003Upp\aPFORMAT\u001BUpp::RichQtfParser::PFormat\u001BUPP::RICHQTFPARSER::PFORMAT\u0015Upp::RichPara::Format\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000*\u0000\u0000\u0000\u0002\u0000\u0000\u0000*\u0000\u0000\u0000\u001F\u0000\u0000\u0000*\u0000\u0000\u0000\u0001\u0000\u0000\acharset\u0004byte$Upp::RichQtfParser::PFormat::charset\fbyte charset\u0003Upp\aCHARSET\u001BUpp::RichQtfParser::PFormat\u001BUPP::RICHQTFPARSER::PFORMAT\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000-\u0000\u0000\u0000\u0001\u0000\u0000\u0000-\u0000\u0000\u0000\u0002\u0000\u0000\u00008\u0000\u0000\u0000\u0001\u0000\u0000\u0003Tab\u0017Upp::RichQtfParser::Tab\u0017Upp::RichQtfParser::Tab\u0003Tab\u0003Upp\u0003TAB\u0017Upp::RichQtfParser::Tab\u0017UPP::RICHQTFPARSER::TAB\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000.\u0000\u0000\u0000\u0002\u0000\u0000\u0000.\u0000\u0000\u0000\u0019\u0000\u0000\u0000.\u0000\u0000\u0000\u0001\u0000\u0000\u0006format\u0010RichCell::Format\u001FUpp::RichQtfParser::Tab::format\u0017RichCell::Format format\u0003Upp\u0006FORMAT\u0017Upp::RichQtfParser::Tab\u0017UPP::RICHQTFPARSER::TAB\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000/\u0000\u0000\u0000\u0002\u0000\u0000\u0000/\u0000\u0000\u0000\u0018\u0000\u0000\u0000/\u0000\u0000\u0000\u0001\u0000\u0000\u0005vspan\u0003int\u001EUpp::RichQtfParser::Tab::vspan\tint vspan\u0003Upp\u0005VSPAN\u0017Upp::RichQtfParser::Tab\u0017UPP::RICHQTFPARSER::TAB\u0000\u0000\u0006\u0000\u0000\u0000\u001A\u0000\u0000\u0000/\u0000\u0000\u0000\u0002\u0000\u0000\u0000/\u0000\u0000\u0000\u001F\u0000\u0000\u0000/\u0000\u0000\u0000\u0001\u0000\u0000\u0005hspan\u0003int\u001EUpp::RichQtfParser::Tab::hspan\tint hspan\u0003Upp\u0005HSPAN\u0017Upp::RichQtfParser::Tab\u0017UPP::RICHQTFPARSER::TAB\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u00000\u0000\u0000\u0000\u0002\u0000\u0000\u00000\u0000\u0000\u0000\u0017\u0000\u0000\u00000\u0000\u0000\u0000\u0001\u0000\u0000\u0004text\aRichTxt\u001DUpp::RichQtfParser::Tab::text\fRichTxt text\u0003Upp\u0004TEXT\u0017Upp::RichQtfParser::Tab\u0017UPP::RICHQTFPARSER::TAB\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u00001\u0000\u0000\u0000\u0002\u0000\u0000\u00001\u0000\u0000\u0000\u0018\u0000\u0000\u00001\u0000\u0000\u0000\u0001\u0000\u0000\u0005table\tRichTable\u001EUpp::RichQtfParser::Tab::table\u000FRichTable table\u0003Upp\u0005TABLE\u0017Upp::RichQtfParser::Tab\u0017UPP::RICHQTFPARSER::TAB\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u00002\u0000\u0000\u0000\u0002\u0000\u0000\u00002\u0000\u0000\u0000\u0017\u0000\u0000\u00002\u0000\u0000\u0000\u0001\u0000\u0000\u0004cell\u0003int\u001DUpp::RichQtfParser::Tab::cell\bint cell\u0003Upp\u0004CELL\u0017Upp::RichQtfParser::Tab\u0017UPP::RICHQTFPARSER::TAB\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u00003\u0000\u0000\u0000\u0002\u0000\u0000\u00003\u0000\u0000\u0000\u0017\u0000\u0000\u00003\u0000\u0000\u0000\u0001\u0000\u0000\u0004rown\vVector<int>\u001DUpp::RichQtfParser::Tab::rown\u0010Vector<int> rown\u0003Upp\u0004ROWN\u0017Upp::RichQtfParser::Tab\u0017UPP::RICHQTFPARSER::TAB\u0000\u0000\u0015\u0000\u0000\u0000\a\u0000\u0000\u00005\u0000\u0000\u0000\u0002\u0000\u0000\u00005\u0000\u0000\u0000_\u0000\u0000\u00005\u0000\u0000\u0000\u0001\u0000\u0000\u0003Old\avoid ()\u001EUpp::RichQtfParser::Tab::Old()\nvoid Old()\u0003Upp\u0003OLD\u0017Upp::RichQtfParser::Tab\u0017UPP::RICHQTFPARSER::TAB\u0000\u0000\u0018\u0000\u0000\u0000\u0002\u0000\u0000\u00007\u0000\u0000\u0000\u0002\u0000\u0000\u00007\u0000\u0000\u0000@\u0000\u0000\u00007\u0000\u0000\u0000\u0001\u0000\u0000\u0003Tab\avoid ()\u001EUpp::RichQtfParser::Tab::Tab()\u0005Tab()\u0003Upp\u0003TAB\u0017Upp::RichQtfParser::Tab\u0017UPP::RICHQTFPARSER::TAB\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000:\u0000\u0000\u0000\u0001\u0000\u0000\u0000:\u0000\u0000\u0000\u0018\u0000\u0000\u0000:\u0000\u0000\u0000\u0001\u0000\u0000\u0006format\aPFormat\u001AUpp::RichQtfParser::format\u000EPFormat format\u0003Upp\u0006FORMAT\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000;\u0000\u0000\u0000\u0001\u0000\u0000\u0000;\u0000\u0000\u0000\u0018\u0000\u0000\u0000;\u0000\u0000\u0000\u0001\u0000\u0000\u0006fstack\u000EArray<PFormat>\u001AUpp::RichQtfParser::fstack\u0015Array<PFormat> fstack\u0003Upp\u0006FSTACK\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000<\u0000\u0000\u0000\u0001\u0000\u0000\u0000<\u0000\u0000\u0000\u0019\u0000\u0000\u0000<\u0000\u0000\u0000\u0001\u0000\u0000\astyleid\fVector<Uuid>\u001BUpp::RichQtfParser::styleid\u0014Vector<Uuid> styleid\u0003Upp\aSTYLEID\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000=\u0000\u0000\u0000\u0001\u0000\u0000\u0000=\u0000\u0000\u0000\u001B\u0000\u0000\u0000=\u0000\u0000\u0000\u0001\u0000\u0000\tstylenext\vVector<int>\u001DUpp::RichQtfParser::stylenext\u0015Vector<int> stylenext\u0003Upp\tSTYLENEXT\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000>\u0000\u0000\u0000\u0001\u0000\u0000\u0000>\u0000\u0000\u0000\u0017\u0000\u0000\u0000>\u0000\u0000\u0000\u0001\u0000\u0000\u0005table\nArray<Tab>\u0019Upp::RichQtfParser::table\u0010Array<Tab> table\u0003Upp\u0005TABLE\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0006\u0000\u0000\u0000\u0012\u0000\u0000\u0000?\u0000\u0000\u0000\u0001\u0000\u0000\u0000?\u0000\u0000\u0000\u0018\u0000\u0000\u0000?\u0000\u0000\u0000\u0001\u0000\u0000\u0006oldtab\u0004bool\u001AUpp::RichQtfParser::oldtab\vbool oldtab\u0003Upp\u0006OLDTAB\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000A\u0000\u0000\u0000\u0001\u0000\u0000\u0000A\u0000\u0000\u0000\\\u0000\u0000\u0000A\u0000\u0000\u0000\u0001\u0000\u0000\u0003Key\nbool (int)\u001CUpp::RichQtfParser::Key(int)\u000Fbool Key(int c)\u0003Upp\u0003KEY\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000B\u0000\u0000\u0000\u0001\u0000\u0000\u0000B\u0000\u0000\u0000\u001A\u0000\u0000\u0000B\u0000\u0000\u0000\u0000\u0000\u0000\u0004Key2\u000Fbool (int, int)!Upp::RichQtfParser::Key2(int,int)\u0017bool Key2(int c, int d)\u0003Upp\u0004KEY2\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000C\u0000\u0000\u0000\u0001\u0000\u0000\u0000C\u0000\u0000\u00009\u0000\u0000\u0000C\u0000\u0000\u0000\u0001\u0000\u0000\u0004Key2\nbool (int)\u001DUpp::RichQtfParser::Key2(int)\u0010bool Key2(int c)\u0003Upp\u0004KEY2\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000D\u0000\u0000\u0000\u0001\u0000\u0000\u0000D\u0000\u0000\u0000\u0013\u0000\u0000\u0000D\u0000\u0000\u0000\u0000\u0000\u0000\tGetNumber\u0006int ()\u001FUpp::RichQtfParser::GetNumber()\u000Fint GetNumber()\u0003Upp\tGETNUMBER\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000E\u0000\u0000\u0000\u0001\u0000\u0000\u0000E\u0000\u0000\u0000\u0014\u0000\u0000\u0000E\u0000\u0000\u0000\u0000\u0000\u0000\nReadNumber\u0006int () Upp::RichQtfParser::ReadNumber()\u0010int ReadNumber()\u0003Upp\nREADNUMBER\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000F\u0000\u0000\u0000\u0001\u0000\u0000\u0000F\u0000\u0000\u0000\u001A\u0000\u0000\u0000F\u0000\u0000\u0000\u0000\u0000\u0000\aGetText\fString (int) Upp::RichQtfParser::GetText(int)\u0019String GetText(int delim)\u0003Upp\aGETTEXT\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000G\u0000\u0000\u0000\u0001\u0000\u0000\u0000G\u0000\u0000\u0000(\u0000\u0000\u0000G\u0000\u0000\u0000\u0000\u0000\u0000\bGetText2\u0011String (int, int)%Upp::RichQtfParser::GetText2(int,int)'String GetText2(int delim1, int delim2)\u0003Upp\bGETTEXT2\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000H\u0000\u0000\u0000\u0001\u0000\u0000\u0000H\u0000\u0000\u0000\u0012\u0000\u0000\u0000H\u0000\u0000\u0000\u0000\u0000\u0000\bGetColor\bColor ()\u001EUpp::RichQtfParser::GetColor()\u0010Color GetColor()\u0003Upp\bGETCOLOR\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000I\u0000\u0000\u0000\u0001\u0000\u0000\u0000I\u0000\u0000\u0000\u001F\u0000\u0000\u0000I\u0000\u0000\u0000\u0000\u0000\u0000\aNumber2\u0013void (int &, int &)&Upp::RichQtfParser::Number2(int&,int&)\u001Cvoid Number2(int& a, int& b)\u0003Upp\aNUMBER2\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000K\u0000\u0000\u0000\u0001\u0000\u0000\u0000K\u0000\u0000\u0000\u000F\u0000\u0000\u0000K\u0000\u0000\u0000\u0000\u0000\u0000\u0005Flush\avoid ()\u001BUpp::RichQtfParser::Flush()\fvoid Flush()\u0003Upp\u0005FLUSH\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000L\u0000\u0000\u0000\u0001\u0000\u0000\u0000L\u0000\u0000\u0000\u0013\u0000\u0000\u0000L\u0000\u0000\u0000\u0000\u0000\u0000\tSetFormat\avoid ()\u001FUpp::RichQtfParser::SetFormat()\u0010void SetFormat()\u0003Upp\tSETFORMAT\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000M\u0000\u0000\u0000\u0001\u0000\u0000\u0000M\u0000\u0000\u0000\u0015\u0000\u0000\u0000M\u0000\u0000\u0000\u0000\u0000\u0000\vFlushStyles\avoid ()!Upp::RichQtfParser::FlushStyles()\u0012void FlushStyles()\u0003Upp\vFLUSHSTYLES\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000N\u0000\u0000\u0000\u0001\u0000\u0000\u0000N\u0000\u0000\u0000\u001C\u0000\u0000\u0000N\u0000\u0000\u0000\u0000\u0000\u0000\u0005Error\u0013void (const char *)&Upp::RichQtfParser::Error(const char*)\u0019void Error(const char *s)\u0003Upp\u0005ERROR\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000P\u0000\u0000\u0000\u0001\u0000\u0000\u0000P\u0000\u0000\u0000\u0014\u0000\u0000\u0000P\u0000\u0000\u0000\u0000\u0000\u0000\nReadObject\avoid () Upp::RichQtfParser::ReadObject()\u0011void ReadObject()\u0003Upp\nREADOBJECT\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\f\u0000\u0000\u0000R\u0000\u0000\u0000\u0001\u0000\u0000\u0000R\u0000\u0000\u0000\u0013\u0000\u0000\u0000R\u0000\u0000\u0000\u0000\u0000\u0000\u0005Table\rRichTable &()\u001BUpp::RichQtfParser::Table()\u0012RichTable& Table()\u0003Upp\u0005TABLE\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\f\u0000\u0000\u0000S\u0000\u0000\u0000\u0001\u0000\u0000\u0000S\u0000\u0000\u0000(\u0000\u0000\u0000S\u0000\u0000\u0000\u0000\u0000\u0000\vTableFormat\vvoid (bool)%Upp::RichQtfParser::TableFormat(bool)!void TableFormat(bool bw = false)\u0003Upp\vTABLEFORMAT\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\f\u0000\u0000\u0000T\u0000\u0000\u0000\u0001\u0000\u0000\u0000T\u0000\u0000\u0000\u0018\u0000\u0000\u0000T\u0000\u0000\u0000\u0000\u0000\u0000\nFinishCell\avoid () Upp::RichQtfParser::FinishCell()\u0011void FinishCell()\u0003Upp\nFINISHCELL\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\f\u0000\u0000\u0000U\u0000\u0000\u0000\u0001\u0000\u0000\u0000U\u0000\u0000\u0000\u0019\u0000\u0000\u0000U\u0000\u0000\u0000\u0000\u0000\u0000\vFinishTable\avoid ()!Upp::RichQtfParser::FinishTable()\u0012void FinishTable()\u0003Upp\vFINISHTABLE\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\f\u0000\u0000\u0000V\u0000\u0000\u0000\u0001\u0000\u0000\u0000V\u0000\u0000\u0000\u001C\u0000\u0000\u0000V\u0000\u0000\u0000\u0000\u0000\u0000\u000EFinishOldTable\avoid ()$Upp::RichQtfParser::FinishOldTable()\u0015void FinishOldTable()\u0003Upp\u000EFINISHOLDTABLE\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\f\u0000\u0000\u0000W\u0000\u0000\u0000\u0001\u0000\u0000\u0000W\u0000\u0000\u0000\u001C\u0000\u0000\u0000W\u0000\u0000\u0000\u0000\u0000\u0000\u0001S\u0011void (int &, int)\u001FUpp::RichQtfParser::S(int&,int)\u0015void S(int& x, int a)\u0003Upp\u0001S\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\f\u0000\u0000\u0000Y\u0000\u0000\u0000\u0001\u0000\u0000\u0000Y\u0000\u0000\u0000\u0015\u0000\u0000\u0000Y\u0000\u0000\u0000\u0000\u0000\u0000\aEndPart\avoid ()\u001DUpp::RichQtfParser::EndPart()\u000Evoid EndPart()\u0003Upp\aENDPART\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\f\u0000\u0000\u0000[\u0000\u0000\u0000\u0001\u0000\u0000\u0000[\u0000\u0000\u0000\u0018\u0000\u0000\u0000[\u0000\u0000\u0000\u0000\u0000\u0000\u0003Cat\nvoid (int)\u001CUpp::RichQtfParser::Cat(int)\u0011void Cat(int chr)\u0003Upp\u0003CAT\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000^\u0000\u0000\u0000\u0001\u0000\u0000\u0000^\u0000\u0000\u0000\u000E\u0000\u0000\u0000^\u0000\u0000\u0000\u0001\u0000\u0000\u0003Exc\u0017Upp::RichQtfParser::Exc\u0017Upp::RichQtfParser::Exc\u0003Exc\u0003Upp\u0003EXC\u0017Upp::RichQtfParser::Exc\u0017UPP::RICHQTFPARSER::EXC\u0000\u0000\u0006\u0000\u0000\u0000\n\u0000\u0000\u0000`\u0000\u0000\u0000\u0001\u0000\u0000\u0000`\u0000\u0000\u0000\u0010\u0000\u0000\u0000`\u0000\u0000\u0000\u0001\u0000\u0000\u0006target\bRichText\u001AUpp::RichQtfParser::target\u000FRichText target\u0003Upp\u0006TARGET\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\n\u0000\u0000\u0000b\u0000\u0000\u0000\u0001\u0000\u0000\u0000b\u0000\u0000\u0000/\u0000\u0000\u0000b\u0000\u0000\u0000\u0000\u0000\u0000\u0005Parse\u0018void (const char *, int)*Upp::RichQtfParser::Parse(const char*,int)*void Parse(const char *qtf, int accesskey)\u0003Upp\u0005PARSE\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000d\u0000\u0000\u0000\u0001\u0000\u0000\u0000d\u0000\u0000\u0000\u001D\u0000\u0000\u0000d\u0000\u0000\u0000\u0000\u0000\u0000\rRichQtfParser\rvoid (void *)(Upp::RichQtfParser::RichQtfParser(void*)\u001CRichQtfParser(void *context)\u0003Upp\rRICHQTFPARSER\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000g\u0000\u0000\u0000\u0000\u0000\u0000\u0000g\u0000\u0000\u0000\u0015\u0000\u0000\u0000g\u0000\u0000\u0000\u0000\u0000\u0000\u000Einit_s_nodeqtf\avoid ()\u0015Upp::init_s_nodeqtf()\u0015void init_s_nodeqtf()\u0003Upp\u000EINIT_S_NODEQTF\u0003Upp\u0003UPP\u0000\u0000\u0018\u0000\u0000\u0000\u000F\u0000\u0000\u0000i\u0000\u0000\u0000\u0000\u0000\u0000\u0000i\u0000\u0000\u0000\u0001\u0000\u0000\u0000t\u0000\u0000\u0000\u0001\u0000\u0000\rRichQtfParser\rvoid (void *)(Upp::RichQtfParser::RichQtfParser(void*)\u001DRichQtfParser(void *context_)\u0003Upp\rRICHQTFPARSER\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000v\u0000\u0000\u0000\u0000\u0000\u0000\u0000v\u0000\u0000\u0000\u0001\u0000\u0000\u0000}\u0000\u0000\u0000\u0001\u0000\u0000\u0004Key2\u000Fbool (int, int)!Upp::RichQtfParser::Key2(int,int)\u0017bool Key2(int c, int d)\u0003Upp\u0004KEY2\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u007F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u007F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\tGetNumber\u0006int ()\u001FUpp::RichQtfParser::GetNumber()\u000Fint GetNumber()\u0003Upp\tGETNUMBER\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\aGetText\fString (int) Upp::RichQtfParser::GetText(int)\u0019String GetText(int delim)\u0003Upp\aGETTEXT\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000°\u0000\u0000\u0000\u0001\u0000\u0000\bGetText2\u0011String (int, int)%Upp::RichQtfParser::GetText2(int,int)'String GetText2(int delim1, int delim2)\u0003Upp\bGETTEXT2\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\u0013\u0000\u0000\u0000²\u0000\u0000\u0000\u0000\u0000\u0000\u0000²\u0000\u0000\u0000\u0001\u0000\u0000\u0000·\u0000\u0000\u0000\u0001\u0000\u0000\nReadNumber\u0006int () Upp::RichQtfParser::ReadNumber()\u0010int ReadNumber()\u0003Upp\nREADNUMBER\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000¹\u0000\u0000\u0000\u0000\u0000\u0000\u0000¹\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ã\u0000\u0000\u0000\u0001\u0000\u0000\aNumber2\u0013void (int &, int &)&Upp::RichQtfParser::Number2(int&,int&)\u001Cvoid Number2(int& a, int& b)\u0003Upp\aNUMBER2\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000Å\u0000\u0000\u0000\u0000\u0000\u0000\u0000Å\u0000\u0000\u0000\u0001\u0000\u0000\u0000à\u0000\u0000\u0000\u0001\u0000\u0000\bGetColor\bColor ()\u001EUpp::RichQtfParser::GetColor()\u0010Color GetColor()\u0003Upp\bGETCOLOR\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000â\u0000\u0000\u0000\u0000\u0000\u0000\u0000â\u0000\u0000\u0000\u0001\u0000\u0000\u0000å\u0000\u0000\u0000\u0001\u0000\u0000\tSetFormat\avoid ()\u001FUpp::RichQtfParser::SetFormat()\u0010void SetFormat()\u0003Upp\tSETFORMAT\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000ç\u0000\u0000\u0000\u0000\u0000\u0000\u0000ç\u0000\u0000\u0000\u0001\u0000\u0000\u0000í\u0000\u0000\u0000\u0001\u0000\u0000\u0005Flush\avoid ()\u001BUpp::RichQtfParser::Flush()\fvoid Flush()\u0003Upp\u0005FLUSH\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000ï\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï\u0000\u0000\u0000\u0001\u0000\u0000\u0000\n\u0001\u0000\u0000\u0001\u0000\u0000\aEndPart\avoid ()\u001DUpp::RichQtfParser::EndPart()\u000Evoid EndPart()\u0003Upp\aENDPART\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000\f\u0001\u0000\u0000\u0000\u0000\u0000\u0000\f\u0001\u0000\u0000\u0001\u0000\u0000\u0000W\u0001\u0000\u0000\u0001\u0000\u0000\nReadObject\avoid () Upp::RichQtfParser::ReadObject()\u0011void ReadObject()\u0003Upp\nREADOBJECT\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\b\u0000\u0000\u0000\u0004\u0000\u0000\u0000Y\u0001\u0000\u0000\u0000\u0000\u0000\u0000Y\u0001\u0000\u0000\u0001\u0000\u0000\u0000[\u0001\u0000\u0000\u0001\u0000\u0000\u0005NoLow\tint (int)\u000FUpp::NoLow(int)\u0010int NoLow(int c)\u0003Upp\u0005NOLOW\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000]\u0001\u0000\u0000\u0000\u0000\u0000\u0000]\u0001\u0000\u0000\u0001\u0000\u0000\u0000k\u0001\u0000\u0000\u0001\u0000\u0000\u0005Error\u0013void (const char *)&Upp::RichQtfParser::Error(const char*)\u0019void Error(const char *s)\u0003Upp\u0005ERROR\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000m\u0001\u0000\u0000\u0000\u0000\u0000\u0000m\u0001\u0000\u0000\u0001\u0000\u0000\u0000u\u0001\u0000\u0000\u0001\u0000\u0000\vFlushStyles\avoid ()!Upp::RichQtfParser::FlushStyles()\u0012void FlushStyles()\u0003Upp\vFLUSHSTYLES\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\u001A\u0000\u0000\u0000w\u0001\u0000\u0000\u0000\u0000\u0000\u0000w\u0001\u0000\u0000\u0001\u0000\u0000\u0000|\u0001\u0000\u0000\u0001\u0000\u0000\u0005Table\rRichTable &()\u001BUpp::RichQtfParser::Table()\u0012RichTable& Table()\u0003Upp\u0005TABLE\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000~\u0001\u0000\u0000\u0000\u0000\u0000\u0000~\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0001S\u0011void (int &, int)\u001FUpp::RichQtfParser::S(int&,int)\u0015void S(int& x, int a)\u0003Upp\u0001S\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000É\u0001\u0000\u0000\u0001\u0000\u0000\vTableFormat\vvoid (bool)%Upp::RichQtfParser::TableFormat(bool)!void TableFormat(bool bw = false)\u0003Upp\vTABLEFORMAT\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000Ë\u0001\u0000\u0000\u0000\u0000\u0000\u0000Ë\u0001\u0000\u0000\u0001\u0000\u0000\u0000ç\u0001\u0000\u0000\u0001\u0000\u0000\nFinishCell\avoid () Upp::RichQtfParser::FinishCell()\u0011void FinishCell()\u0003Upp\nFINISHCELL\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000é\u0001\u0000\u0000\u0000\u0000\u0000\u0000é\u0001\u0000\u0000\u0001\u0000\u0000\u0000ñ\u0001\u0000\u0000\u0001\u0000\u0000\vFinishTable\avoid ()!Upp::RichQtfParser::FinishTable()\u0012void FinishTable()\u0003Upp\vFINISHTABLE\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000ó\u0001\u0000\u0000\u0000\u0000\u0000\u0000ó\u0001\u0000\u0000\u0001\u0000\u0000\u0000&\u0002\u0000\u0000\u0001\u0000\u0000\u000EFinishOldTable\avoid ()$Upp::RichQtfParser::FinishOldTable()\u0015void FinishOldTable()\u0003Upp\u000EFINISHOLDTABLE\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000(\u0002\u0000\u0000\u0000\u0000\u0000\u0000(\u0002\u0000\u0000\u0001\u0000\u0000\u00005\u0002\u0000\u0000\u0001\u0000\u0000\u0003Cat\nvoid (int)\u001CUpp::RichQtfParser::Cat(int)\u0011void Cat(int chr)\u0003Upp\u0003CAT\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\t\u0000\u0000\u0000\f\u0000\u0000\u00007\u0002\u0000\u0000\u0000\u0000\u0000\u00007\u0002\u0000\u0000\u001A\u0000\u0000\u00007\u0002\u0000\u0000\u0000\u0000\u0000\ts_nodeqtf\tbool[128]\u000EUpp::s_nodeqtf\u0013bool s_nodeqtf[128]\u0003Upp\tS_NODEQTF\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0004\u0000\u0000\u00009\u0002\u0000\u0000\u0000\u0000\u0000\u00009\u0002\u0000\u0000\u0001\u0000\u0000\u0000F\u0002\u0000\u0000\u0001\u0000\u0000\u001EGetRichTextScreenStdFontHeight\u0006int ()%Upp::GetRichTextScreenStdFontHeight()$int GetRichTextScreenStdFontHeight()\u0003Upp\u001EGETRICHTEXTSCREENSTDFONTHEIGHT\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000H\u0002\u0000\u0000\u0000\u0000\u0000\u0000H\u0002\u0000\u0000\u0001\u0000\u0000\u0000\v\u0004\u0000\u0000\u0001\u0000\u0000\u0005Parse\u0018void (const char *, int)*Upp::RichQtfParser::Parse(const char*,int)+void Parse(const char *qtf, int _accesskey)\u0003Upp\u0005PARSE\u0012Upp::RichQtfParser\u0012UPP::RICHQTFPARSER\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000\r\u0004\u0000\u0000\u0000\u0000\u0000\u0000\r\u0004\u0000\u0000\u0001\u0000\u0000\u0000\u0018\u0004\u0000\u0000\u0001\u0000\u0000\bParseQTF,bool (RichText &, const char *, int, void *).Upp::ParseQTF(RichText&,const char*,int,void*)Sbool ParseQTF(RichText& txt, const char *qtf, int accesskey = 0, void *context = 0)\u0003Upp\bPARSEQTF\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000\u0000\u001A\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u001A\u0004\u0000\u0000\u0001\u0000\u0000\u0000\"\u0004\u0000\u0000\u0001\u0000\u0000\bParseQTF$RichText (const char *, int, void *)$Upp::ParseQTF(const char*,int,void*)HRichText ParseQTF(const char *qtf, int accesskey = 0, void *context = 0)\u0003Upp\bPARSEQTF\u0003Upp\u0003UPP\u0000\u0000\u0015\u0000\u0000\u0000\u0016\u0000\u0000\u0000$\u0004\u0000\u0000\u0000\u0000\u0000\u0000$\u0004\u0000\u0000\u0001\u0000\u0000\u0000'\u0004\u0000\u0000\u0001\u0000\u0000\bToString\u000FString () const#Upp::QtfRichObject::ToString()const\u0017String ToString() const\u0003Upp\bTOSTRING\u0012Upp::QtfRichObject\u0012UPP::QTFRICHOBJECT\u0000\u0000\u0018\u0000\u0000\u0000\u000F\u0000\u0000\u0000)\u0004\u0000\u0000\u0000\u0000\u0000\u0000)\u0004\u0000\u0000\u0002\u0000\u0000\u0000+\u0004\u0000\u0000\u0001\u0000\u0000\rQtfRichObject\u0019void (const RichObject &)4Upp::QtfRichObject::QtfRichObject(const RichObject&)\"QtfRichObject(const RichObject& o)\u0003Upp\rQTFRICHOBJECT\u0012Upp::QtfRichObject\u0012UPP::QTFRICHOBJECT\u0000\u0000end\u0000\u007F5\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\EncodeHTML.cpp","value":"data\u0018\b\u0000\u0000\u0000\a\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0001\u0000\u0000\rHtmlFontStyle\u0013String (Font, Font)\u001DUpp::HtmlFontStyle(Font,Font)'String HtmlFontStyle(Font f, Font base)\u0003Upp\rHTMLFONTSTYLE\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0000\u0000\"\u0000\u0000\u0000\u0001\u0000\u0000\rHtmlFontStyle\rString (Font)\u0018Upp::HtmlFontStyle(Font)\u001CString HtmlFontStyle(Font f)\u0003Upp\rHTMLFONTSTYLE\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000$\u0000\u0000\u0000\u0000\u0000\u0000\u0000$\u0000\u0000\u0000\u0001\u0000\u0000\u0000'\u0000\u0000\u0000\u0001\u0000\u0000\aHtmlDot\u0012String (int, Zoom)\u0016Upp::HtmlDot(int,Zoom)\u001DString HtmlDot(int q, Zoom z)\u0003Upp\aHTMLDOT\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000)\u0000\u0000\u0000\u0000\u0000\u0000\u0000)\u0000\u0000\u0000\u0001\u0000\u0000\u0000,\u0000\u0000\u0000\u0001\u0000\u0000\bHtmlDotl\u0012String (int, Zoom)\u0017Upp::HtmlDotl(int,Zoom)\u001EString HtmlDotl(int q, Zoom z)\u0003Upp\bHTMLDOTL\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000.\u0000\u0000\u0000\u0000\u0000\u0000\u0000.\u0000\u0000\u0000\u0001\u0000\u0000\u00001\u0000\u0000\u0000\u0001\u0000\u0000\u000EHtmlStyleColor\u001CString (Color, const char *)&Upp::HtmlStyleColor(Color,const char*)8String HtmlStyleColor(Color c, const char *cl = \"color\")\u0003Upp\u000EHTMLSTYLECOLOR\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u00003\u0000\u0000\u0000\u0000\u0000\u0000\u00003\u0000\u0000\u0000\u0001\u0000\u0000\u00009\u0000\u0000\u0000\u0001\u0000\u0000\rHtmlCharStyleCString (const RichPara::CharFormat &, const RichPara::CharFormat &)KUpp::HtmlCharStyle(const RichPara::CharFormat&,const RichPara::CharFormat&)TString HtmlCharStyle(const RichPara::CharFormat& cf, const RichPara::CharFormat& sf)\u0003Upp\rHTMLCHARSTYLE\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000;\u0000\u0000\u0000\u0000\u0000\u0000\u0000;\u0000\u0000\u0000\u0001\u0000\u0000\u0000a\u0000\u0000\u0000\u0001\u0000\u0000\rHtmlParaStyle'String (const RichPara::Format &, Zoom)0Upp::HtmlParaStyle(const RichPara::Format&,Zoom)7String HtmlParaStyle(const RichPara::Format& f, Zoom z)\u0003Upp\rHTMLPARASTYLE\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000c\u0000\u0000\u0000\u0001\u0000\u0000\u0000f\u0000\u0000\u0000\u0001\u0000\u0000\vFormatClass(String (Index<String> &, const String &)&Upp::FormatClass(Index&,const String&)9String FormatClass(Index<String>& css, const String& fmt)\u0003Upp\vFORMATCLASS\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000h\u0000\u0000\u0000\u0000\u0000\u0000\u0000h\u0000\u0000\u0000\u0001\u0000\u0000\u0000l\u0000\u0000\u0000\u0001\u0000\u0000\tTabBorderJvoid (String &, const char *, int, Color, const RichTable::Format &, Zoom)KUpp::TabBorder(String&,const char*,int,Color,const RichTable::Format&,Zoom)rvoid TabBorder(String& style, const char *txt, int border, Color bordercolor, const RichTable::Format& tf, Zoom z)\u0003Upp\tTABBORDER\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000n\u0000\u0000\u0000\u0000\u0000\u0000\u0000n\u0000\u0000\u0000\u0001\u0000\u0000\u0000Q\u0001\u0000\u0000\u0001\u0000\u0000\u0006AsHtmlÿÓ\u0000\u0000\u0000String (const RichTxt &, const RichStyles &, Index<String> &, const VectorMap<String, String> &, const VectorMap<String, String> &, Zoom, const VectorMap<String, String> &, HtmlObjectSaver &, RichPara::Number &)ÿ\u0000\u0000\u0000Upp::AsHtml(const RichTxt&,const RichStyles&,Index&,const VectorMap&,const VectorMap&,Zoom,const VectorMap&,HtmlObjectSaver&,RichPara::Number&)ÿ\u0006\u0001\u0000\u0000String AsHtml(const RichTxt& text, const RichStyles& styles, Index<String>& css, const VectorMap<String, String>& links, const VectorMap<String, String>& labels, Zoom z, const VectorMap<String, String>& escape, HtmlObjectSaver& object_saver, RichPara::Number& n)\u0003Upp\u0006ASHTML\u0003Upp\u0003UPP\u0000\u0000\u0004\u0000\u0000\u0000\u0006\u0000\u0000\u0000S\u0001\u0000\u0000\u0000\u0000\u0000\u0000S\u0001\u0000\u0000\u0001\u0000\u0000\u0000a\u0001\u0000\u0000\u0001\u0000\u0000\u0016DefaultHtmlObjectSaver\u001BUpp::DefaultHtmlObjectSaver\u001BUpp::DefaultHtmlObjectSaver/DefaultHtmlObjectSaver : public HtmlObjectSaver\u0003Upp\u0016DEFAULTHTMLOBJECTSAVER\u001BUpp::DefaultHtmlObjectSaver\u001BUPP::DEFAULTHTMLOBJECTSAVER\u0014Upp::HtmlObjectSaver\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000V\u0001\u0000\u0000\u0001\u0000\u0000\u0000V\u0001\u0000\u0000S\u0000\u0000\u0000W\u0001\u0000\u0000\u0001\u0000\u0000\u0016DefaultHtmlObjectSaver0void (const String &, const String &, int, Zoom)YUpp::DefaultHtmlObjectSaver::DefaultHtmlObjectSaver(const String&,const String&,int,Zoom)aDefaultHtmlObjectSaver(const String& outdir_, const String& namebase_, int imtolerance_, Zoom z_)\u0003Upp\u0016DEFAULTHTMLOBJECTSAVER\u001BUpp::DefaultHtmlObjectSaver\u001BUPP::DEFAULTHTMLOBJECTSAVER\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000Y\u0001\u0000\u0000\u0001\u0000\u0000\u0000Y\u0001\u0000\u0000E\u0000\u0000\u0000Y\u0001\u0000\u0000\u0000\u0001\u0000\aGetHtml+String (const RichObject &, const String &)EUpp::DefaultHtmlObjectSaver::GetHtml(const RichObject&,const String&)<String GetHtml(const RichObject& object, const String& link)\u0003Upp\aGETHTML\u001BUpp::DefaultHtmlObjectSaver\u001BUPP::DEFAULTHTMLOBJECTSAVER\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000\\\u0001\u0000\u0000\u0001\u0000\u0000\u0000\\\u0001\u0000\u0000\u000E\u0000\u0000\u0000\\\u0001\u0000\u0000\u0001\u0000\u0000\u0006outdir\u0006String#Upp::DefaultHtmlObjectSaver::outdir\rString outdir\u0003Upp\u0006OUTDIR\u001BUpp::DefaultHtmlObjectSaver\u001BUPP::DEFAULTHTMLOBJECTSAVER\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000]\u0001\u0000\u0000\u0001\u0000\u0000\u0000]\u0001\u0000\u0000\u0010\u0000\u0000\u0000]\u0001\u0000\u0000\u0001\u0000\u0000\bnamebase\u0006String%Upp::DefaultHtmlObjectSaver::namebase\u000FString namebase\u0003Upp\bNAMEBASE\u001BUpp::DefaultHtmlObjectSaver\u001BUPP::DEFAULTHTMLOBJECTSAVER\u0000\u0000\u0006\u0000\u0000\u0000\u0006\u0000\u0000\u0000^\u0001\u0000\u0000\u0001\u0000\u0000\u0000^\u0001\u0000\u0000\a\u0000\u0000\u0000^\u0001\u0000\u0000\u0001\u0000\u0000\u0001z\u0004Zoom\u001EUpp::DefaultHtmlObjectSaver::z\u0006Zoom z\u0003Upp\u0001Z\u001BUpp::DefaultHtmlObjectSaver\u001BUPP::DEFAULTHTMLOBJECTSAVER\u0000\u0000\u0006\u0000\u0000\u0000\u0005\u0000\u0000\u0000_\u0001\u0000\u0000\u0001\u0000\u0000\u0000_\u0001\u0000\u0000\u0010\u0000\u0000\u0000_\u0001\u0000\u0000\u0001\u0000\u0000\vimtolerance\u0003int(Upp::DefaultHtmlObjectSaver::imtolerance\u000Fint imtolerance\u0003Upp\vIMTOLERANCE\u001BUpp::DefaultHtmlObjectSaver\u001BUPP::DEFAULTHTMLOBJECTSAVER\u0000\u0000\u0006\u0000\u0000\u0000\u0005\u0000\u0000\u0000`\u0001\u0000\u0000\u0001\u0000\u0000\u0000`\u0001\u0000\u0000\a\u0000\u0000\u0000`\u0001\u0000\u0000\u0001\u0000\u0000\u0002im\u0003int\u001FUpp::DefaultHtmlObjectSaver::im\u0006int im\u0003Upp\u0002IM\u001BUpp::DefaultHtmlObjectSaver\u001BUPP::DEFAULTHTMLOBJECTSAVER\u0000\u0000\u0015\u0000\u0000\u0000\u001F\u0000\u0000\u0000c\u0001\u0000\u0000\u0000\u0000\u0000\u0000c\u0001\u0000\u0000\u0001\u0000\u0000\u0000{\u0001\u0000\u0000\u0001\u0001\u0000\aGetHtml+String (const RichObject &, const String &)EUpp::DefaultHtmlObjectSaver::GetHtml(const RichObject&,const String&)<String GetHtml(const RichObject& object, const String& link)\u0003Upp\aGETHTML\u001BUpp::DefaultHtmlObjectSaver\u001BUPP::DEFAULTHTMLOBJECTSAVER\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000}\u0001\u0000\u0000\u0000\u0000\u0000\u0000}\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\nEncodeHtmlÿ¾\u0000\u0000\u0000String (const RichText &, Index<String> &, const VectorMap<String, String> &, const VectorMap<String, String> &, const String &, const String &, Zoom, const VectorMap<String, String> &, int)ÿ\u007F\u0000\u0000\u0000Upp::EncodeHtml(const RichText&,Index&,const VectorMap&,const VectorMap&,const String&,const String&,Zoom,const VectorMap&,int)ÿ+\u0001\u0000\u0000String EncodeHtml(const RichText& text, Index<String>& css, const VectorMap<String, String>& links, const VectorMap<String, String>& labels, const String& outdir, const String& namebase = Null, Zoom z = Zoom(8, 40), const VectorMap<String, String>& escape = VectorMap<String, String>(), int imt = 0)\u0003Upp\nENCODEHTML\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\nEncodeHtmlÿ¬\u0000\u0000\u0000String (const RichText &, Index<String> &, const VectorMap<String, String> &, const VectorMap<String, String> &, HtmlObjectSaver &, Zoom, const VectorMap<String, String> &)pUpp::EncodeHtml(const RichText&,Index&,const VectorMap&,const VectorMap&,HtmlObjectSaver&,Zoom,const VectorMap&)ÿ\b\u0001\u0000\u0000String EncodeHtml(const RichText& text, Index<String>& css, const VectorMap<String, String>& links, const VectorMap<String, String>& labels, HtmlObjectSaver& object_saver, Zoom z = Zoom(8, 40), const VectorMap<String, String>& escape = VectorMap<String, String>())\u0003Upp\nENCODEHTML\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0005AsCss\u0018String (Index<String> &)\u0012Upp::AsCss(Index&)\u001FString AsCss(Index<String>& ss)\u0003Upp\u0005ASCSS\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000ª\u0001\u0000\u0000\u0001\u0000\u0000\bMakeHtml5String (const char *, const String &, const String &)6Upp::MakeHtml(const char*,const String&,const String&)IString MakeHtml(const char *title, const String& css, const String& body)\u0003Upp\bMAKEHTML\u0003Upp\u0003UPP\u0000\u0000end\u0000]\u0018\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\ParseHTML.cpp","value":"data õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0004LLOG\u0000\u0004LLOG\u0004LLOG\u0000\u0004LLOG\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\v\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\f\u0000\u0000\u0000\u0001\u0000\u0000\rhtml_colors_z\u0010const byte[1222]\u0012Upp::html_colors_z\u001Aconst byte html_colors_z[]\u0003Upp\rHTML_COLORS_Z\u0003Upp\u0003UPP\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0001\u0000\u0000\u0000(\u0000\u0000\u0000\u0001\u0000\u0000\u0011TrivialHtmlParser\u0016Upp::TrivialHtmlParser\u0016Upp::TrivialHtmlParser\u0011TrivialHtmlParser\u0003Upp\u0011TRIVIALHTMLPARSER\u0016Upp::TrivialHtmlParser\u0016UPP::TRIVIALHTMLPARSER\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000F\u0000\u0000\u0000\r\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\u0001p\tXmlParser\u0019Upp::TrivialHtmlParser::p\vXmlParser p\u0003Upp\u0001P\u0016Upp::TrivialHtmlParser\u0016UPP::TRIVIALHTMLPARSER\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\tbase_font\u0004Font!Upp::TrivialHtmlParser::base_font\u000EFont base_font\u0003Upp\tBASE_FONT\u0016Upp::TrivialHtmlParser\u0016UPP::TRIVIALHTMLPARSER\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0004para\bRichPara\u001CUpp::TrivialHtmlParser::para\rRichPara para\u0003Upp\u0004PARA\u0016Upp::TrivialHtmlParser\u0016UPP::TRIVIALHTMLPARSER\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0000\brichtext\bRichText Upp::TrivialHtmlParser::richtext\u0011RichText richtext\u0003Upp\bRICHTEXT\u0016Upp::TrivialHtmlParser\u0016UPP::TRIVIALHTMLPARSER\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0000\u0000\vprev_margin\u0003int#Upp::TrivialHtmlParser::prev_margin\u000Fint prev_margin\u0003Upp\vPREV_MARGIN\u0016Upp::TrivialHtmlParser\u0016UPP::TRIVIALHTMLPARSER\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0014\u0000\u0000\u0000!\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0001\u0000\u0000\u0011parent_tag_margin\u0003int)Upp::TrivialHtmlParser::parent_tag_margin\u0015int parent_tag_margin\u0003Upp\u0011PARENT_TAG_MARGIN\u0016Upp::TrivialHtmlParser\u0016UPP::TRIVIALHTMLPARSER\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0001\u0000\u0000\awastext\u0004bool\u001FUpp::TrivialHtmlParser::wastext\fbool wastext\u0003Upp\aWASTEXT\u0016Upp::TrivialHtmlParser\u0016UPP::TRIVIALHTMLPARSER\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0000\u0000\u0005Style\u001DUpp::TrivialHtmlParser::Style\u001DUpp::TrivialHtmlParser::Style\u0018Style : RichPara::Format\u0003Upp\u0005STYLE\u001DUpp::TrivialHtmlParser::Style\u001DUPP::TRIVIALHTMLPARSER::STYLE\u0015Upp::RichPara::Format\u0000\u0006\u0000\u0000\u0000\a\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0006border\u0003int%Upp::TrivialHtmlParser::Style::border\nint border\u0003Upp\u0006BORDER\u001DUpp::TrivialHtmlParser::Style\u001DUPP::TRIVIALHTMLPARSER::STYLE\u0000\u0000\u0006\u0000\u0000\u0000\a\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0019\u0000\u0000\u0000!\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0000\apadding\u0004Rect&Upp::TrivialHtmlParser::Style::padding\fRect padding\u0003Upp\aPADDING\u001DUpp::TrivialHtmlParser::Style\u001DUPP::TRIVIALHTMLPARSER::STYLE\u0000\u0000\u0006\u0000\u0000\u0000\a\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u001A\u0000\u0000\u0000 \u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\u0006margin\u0004Rect%Upp::TrivialHtmlParser::Style::margin\vRect margin\u0003Upp\u0006MARGIN\u001DUpp::TrivialHtmlParser::Style\u001DUPP::TRIVIALHTMLPARSER::STYLE\u0000\u0000\u0006\u0000\u0000\u0000\a\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u001B\u0000\u0000\u0000,\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0001\u0000\u0000\fbullet_style\u0003int+Upp::TrivialHtmlParser::Style::bullet_style\u0010int bullet_style\u0003Upp\fBULLET_STYLE\u001DUpp::TrivialHtmlParser::Style\u001DUPP::TRIVIALHTMLPARSER::STYLE\u0000\u0000\u0006\u0000\u0000\u0000\a\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0001\u0000\u0000\u0003pre\u0004bool\"Upp::TrivialHtmlParser::Style::pre\bbool pre\u0003Upp\u0003PRE\u001DUpp::TrivialHtmlParser::Style\u001DUPP::TRIVIALHTMLPARSER::STYLE\u0000\u0000\t\u0000\u0000\u0000\"\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001F\u0000\u0000\u0000-\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0000\u0000\u0001\vnamed_color\u0018VectorMap<String, Color>#Upp::TrivialHtmlParser::named_color+static VectorMap<String, Color> named_color\u0003Upp\vNAMED_COLOR\u0016Upp::TrivialHtmlParser\u0016UPP::TRIVIALHTMLPARSER\u0000\u0000\t\u0000\u0000\u0000\"\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\u0000 \u0000\u0000\u0000%\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0001\u0003div\u0019VectorMap<String, String>\u001BUpp::TrivialHtmlParser::div$static VectorMap<String, String> div\u0003Upp\u0003DIV\u0016Upp::TrivialHtmlParser\u0016UPP::TRIVIALHTMLPARSER\u0000\u0000\t\u0000\u0000\u0000\"\u0000\u0000\u0000!\u0000\u0000\u0000\u0001\u0000\u0000\u0000!\u0000\u0000\u0000&\u0000\u0000\u0000!\u0000\u0000\u0000\u0000\u0000\u0001\u0004span\u0019VectorMap<String, String>\u001CUpp::TrivialHtmlParser::span%static VectorMap<String, String> span\u0003Upp\u0004SPAN\u0016Upp::TrivialHtmlParser\u0016UPP::TRIVIALHTMLPARSER\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\u0000#\u0000\u0000\u00000\u0000\u0000\u0000#\u0000\u0000\u0000\u0000\u0000\u0000\tReadStyle\u001Evoid (Style &, const String &)7Upp::TrivialHtmlParser::ReadStyle(Style&,const String&)/void ReadStyle(Style& fmt, const String& style)\u0003Upp\tREADSTYLE\u0016Upp::TrivialHtmlParser\u0016UPP::TRIVIALHTMLPARSER\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000$\u0000\u0000\u0000\u0001\u0000\u0000\u0000$\u0000\u0000\u0000\u001F\u0000\u0000\u0000$\u0000\u0000\u0000\u0000\u0000\u0000\aAddPara\u0014void (const Style &)-Upp::TrivialHtmlParser::AddPara(const Style&)\u001Evoid AddPara(const Style& fmt)\u0003Upp\aADDPARA\u0016Upp::TrivialHtmlParser\u0016UPP::TRIVIALHTMLPARSER\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000%\u0000\u0000\u0000\u0001\u0000\u0000\u0000%\u0000\u0000\u0000\u0016\u0000\u0000\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0005Parse\fvoid (Style)$Upp::TrivialHtmlParser::Parse(Style)\u0015void Parse(Style fmt)\u0003Upp\u0005PARSE\u0016Upp::TrivialHtmlParser\u0016UPP::TRIVIALHTMLPARSER\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000'\u0000\u0000\u0000\u0001\u0000\u0000\u0000'\u0000\u0000\u0000$\u0000\u0000\u0000'\u0000\u0000\u0000\u0000\u0000\u0000\u0011TrivialHtmlParser\u0013void (const char *)6Upp::TrivialHtmlParser::TrivialHtmlParser(const char*)#TrivialHtmlParser(const char *html)\u0003Upp\u0011TRIVIALHTMLPARSER\u0016Upp::TrivialHtmlParser\u0016UPP::TRIVIALHTMLPARSER\u0000\u0000\t\u0000\u0000\u0000,\u0000\u0000\u0000*\u0000\u0000\u0000\u0000\u0000\u0000\u0000*\u0000\u0000\u00007\u0000\u0000\u0000*\u0000\u0000\u0000\u0001\u0000\u0000\vnamed_color\u0018VectorMap<String, Color>#Upp::TrivialHtmlParser::named_color$VectorMap<String, Color> named_color\u0003Upp\vNAMED_COLOR\u0016Upp::TrivialHtmlParser\u0016UPP::TRIVIALHTMLPARSER\u0000\u0000\t\u0000\u0000\u0000-\u0000\u0000\u0000+\u0000\u0000\u0000\u0000\u0000\u0000\u0000+\u0000\u0000\u00000\u0000\u0000\u0000+\u0000\u0000\u0000\u0001\u0000\u0000\u0003div\u0019VectorMap<String, String>\u001BUpp::TrivialHtmlParser::div\u001DVectorMap<String, String> div\u0003Upp\u0003DIV\u0016Upp::TrivialHtmlParser\u0016UPP::TRIVIALHTMLPARSER\u0000\u0000\t\u0000\u0000\u0000-\u0000\u0000\u0000,\u0000\u0000\u0000\u0000\u0000\u0000\u0000,\u0000\u0000\u00001\u0000\u0000\u0000,\u0000\u0000\u0000\u0001\u0000\u0000\u0004span\u0019VectorMap<String, String>\u001CUpp::TrivialHtmlParser::span\u001EVectorMap<String, String> span\u0003Upp\u0004SPAN\u0016Upp::TrivialHtmlParser\u0016UPP::TRIVIALHTMLPARSER\u0000\u0000\u0018\u0000\u0000\u0000\u0013\u0000\u0000\u0000.\u0000\u0000\u0000\u0000\u0000\u0000\u0000.\u0000\u0000\u0000\u0001\u0000\u0000\u0000a\u0000\u0000\u0000\u0001\u0000\u0000\u0011TrivialHtmlParser\u0013void (const char *)6Upp::TrivialHtmlParser::TrivialHtmlParser(const char*)#TrivialHtmlParser(const char *html)\u0003Upp\u0011TRIVIALHTMLPARSER\u0016Upp::TrivialHtmlParser\u0016UPP::TRIVIALHTMLPARSER\u0000\u0000\u0015\u0000\u0000\u0000\u0018\u0000\u0000\u0000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000c\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ò\u0001\u0000\u0000\u0001\u0000\u0000\tReadStyle\u001Evoid (Style &, const String &)7Upp::TrivialHtmlParser::ReadStyle(Style&,const String&)/void ReadStyle(Style& fmt, const String& style)\u0003Upp\tREADSTYLE\u0016Upp::TrivialHtmlParser\u0016UPP::TRIVIALHTMLPARSER\u0000\u0000\u0015\u0000\u0000\u0000\u0018\u0000\u0000\u0000Ô\u0001\u0000\u0000\u0000\u0000\u0000\u0000Ô\u0001\u0000\u0000\u0001\u0000\u0000\u0000ä\u0001\u0000\u0000\u0001\u0000\u0000\aAddPara\u0014void (const Style &)-Upp::TrivialHtmlParser::AddPara(const Style&)\u001Evoid AddPara(const Style& fmt)\u0003Upp\aADDPARA\u0016Upp::TrivialHtmlParser\u0016UPP::TRIVIALHTMLPARSER\u0000\u0000\u0015\u0000\u0000\u0000\u0018\u0000\u0000\u0000æ\u0001\u0000\u0000\u0000\u0000\u0000\u0000æ\u0001\u0000\u0000\u0001\u0000\u0000\u0000P\u0002\u0000\u0000\u0001\u0000\u0000\u0005Parse\fvoid (Style)$Upp::TrivialHtmlParser::Parse(Style)\u0016void Parse(Style tfmt)\u0003Upp\u0005PARSE\u0016Upp::TrivialHtmlParser\u0016UPP::TRIVIALHTMLPARSER\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000\u0000R\u0002\u0000\u0000\u0000\u0000\u0000\u0000R\u0002\u0000\u0000\u0001\u0000\u0000\u0000^\u0002\u0000\u0000\u0001\u0000\u0000\u0010ParseTrivialHtml\u001DRichText (const char *, Font)'Upp::ParseTrivialHtml(const char*,Font)WRichText ParseTrivialHtml(const char *html, Font base_font = Serif(int(15 *600 / 96.)))\u0003Upp\u0010PARSETRIVIALHTML\u0003Upp\u0003UPP\u0000\u0000end\u0000Ì\u0015\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\RichText\\Util.cpp","value":"data\u001E\u0015\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0001\u0000\u0004Page\vDraw &(int)\u001EUpp::SimplePageDraw::Page(int)\u000FDraw& Page(int)\u0003Upp\u0004PAGE\u0013Upp::SimplePageDraw\u0013UPP::SIMPLEPAGEDRAW\u0000\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0000\tApplyZoom\vvoid (Zoom)\u001EUpp::RichText::ApplyZoom(Zoom)\u0016void ApplyZoom(Zoom z)\u0003Upp\tAPPLYZOOM\rUpp::RichText\rUPP::RICHTEXT\u0000\u0000\b\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0001\u0000\u0000\u0016sRichTextStdScreenZoom\bZoom &()\u001DUpp::sRichTextStdScreenZoom()\u001EZoom& sRichTextStdScreenZoom()\u0003Upp\u0016SRICHTEXTSTDSCREENZOOM\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0000\u0000!\u0000\u0000\u0000\u0001\u0000\u0000\u0018SetRichTextStdScreenZoom\u000Fvoid (int, int)&Upp::SetRichTextStdScreenZoom(int,int)+void SetRichTextStdScreenZoom(int m, int d)\u0003Upp\u0018SETRICHTEXTSTDSCREENZOOM\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000#\u0000\u0000\u0000\u0000\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\u0000&\u0000\u0000\u0000\u0001\u0000\u0000\u0018GetRichTextStdScreenZoom\aZoom ()\u001FUpp::GetRichTextStdScreenZoom()\u001FZoom GetRichTextStdScreenZoom()\u0003Upp\u0018GETRICHTEXTSTDSCREENZOOM\u0003Upp\u0003UPP\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000(\u0000\u0000\u0000\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0001\u0000\u0000\u0000.\u0000\u0000\u0000\u0001\u0000\u0000\rQTFDisplayCls\u0012Upp::QTFDisplayCls\u0012Upp::QTFDisplayCls\u0017QTFDisplayCls : Display\u0003Upp\rQTFDISPLAYCLS\u0012Upp::QTFDisplayCls\u0012UPP::QTFDISPLAYCLS\fUpp::Display\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000)\u0000\u0000\u0000\u0001\u0000\u0000\u0000)\u0000\u0000\u0000;\u0000\u0000\u0000*\u0000\u0000\u0000\u0000\u0001\u0000\u0005PaintEvoid (Draw &, const Rect &, const Value &, Color, Color, dword) constPUpp::QTFDisplayCls::Paint(Draw&,const Rect&,const Value&,Color,Color,dword)const]void Paint(Draw& w, const Rect& r, const Value& q, Color ink, Color paper, dword style) const\u0003Upp\u0005PAINT\u0012Upp::QTFDisplayCls\u0012UPP::QTFDISPLAYCLS\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000+\u0000\u0000\u0000\u0001\u0000\u0000\u0000+\u0000\u0000\u0000.\u0000\u0000\u0000+\u0000\u0000\u0000\u0000\u0001\u0000\nGetStdSize\u001ASize (const Value &) const1Upp::QTFDisplayCls::GetStdSize(const Value&)const%Size GetStdSize(const Value& q) const\u0003Upp\nGETSTDSIZE\u0012Upp::QTFDisplayCls\u0012UPP::QTFDISPLAYCLS\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000,\u0000\u0000\u0000\u0001\u0000\u0000\u0000,\u0000\u0000\u0000=\u0000\u0000\u0000,\u0000\u0000\u0000\u0000\u0001\u0000\tRatioSize$Size (const Value &, int, int) const8Upp::QTFDisplayCls::RatioSize(const Value&,int,int)const4Size RatioSize(const Value& q, int cx, int cy) const\u0003Upp\tRATIOSIZE\u0012Upp::QTFDisplayCls\u0012UPP::QTFDISPLAYCLS\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000-\u0000\u0000\u0000\u0001\u0000\u0000\u0000-\u0000\u0000\u0000/\u0000\u0000\u0000-\u0000\u0000\u0000\u0001\u0001\u0000\aVcenter\rbool () const\"Upp::QTFDisplayCls::Vcenter()const\u0014bool Vcenter() const\u0003Upp\aVCENTER\u0012Upp::QTFDisplayCls\u0012UPP::QTFDISPLAYCLS\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u00000\u0000\u0000\u0000\u0000\u0000\u0000\u00000\u0000\u0000\u0000\u0001\u0000\u0000\u00008\u0000\u0000\u0000\u0001\u0001\u0000\nGetStdSize\u001ASize (const Value &) const1Upp::QTFDisplayCls::GetStdSize(const Value&)const%Size GetStdSize(const Value& q) const\u0003Upp\nGETSTDSIZE\u0012Upp::QTFDisplayCls\u0012UPP::QTFDISPLAYCLS\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000:\u0000\u0000\u0000\u0000\u0000\u0000\u0000:\u0000\u0000\u0000\u0001\u0000\u0000\u0000B\u0000\u0000\u0000\u0001\u0001\u0000\tRatioSize$Size (const Value &, int, int) const8Upp::QTFDisplayCls::RatioSize(const Value&,int,int)const4Size RatioSize(const Value& q, int cx, int cy) const\u0003Upp\tRATIOSIZE\u0012Upp::QTFDisplayCls\u0012UPP::QTFDISPLAYCLS\u0000\u0000\u0015\u0000\u0000\u0000\u0014\u0000\u0000\u0000D\u0000\u0000\u0000\u0000\u0000\u0000\u0000D\u0000\u0000\u0000\u0001\u0000\u0000\u0000W\u0000\u0000\u0000\u0001\u0001\u0000\u0005PaintEvoid (Draw &, const Rect &, const Value &, Color, Color, dword) constPUpp::QTFDisplayCls::Paint(Draw&,const Rect&,const Value&,Color,Color,dword)const`void Paint(Draw& draw, const Rect& r, const Value& v, Color ink, Color paper, dword style) const\u0003Upp\u0005PAINT\u0012Upp::QTFDisplayCls\u0012UPP::QTFDISPLAYCLS\u0000\u0000\b\u0000\u0000\u0000\u000F\u0000\u0000\u0000Y\u0000\u0000\u0000\u0000\u0000\u0000\u0000Y\u0000\u0000\u0000\u0001\u0000\u0000\u0000\\\u0000\u0000\u0000\u0001\u0000\u0000\nQTFDisplay\u0011const Display &()\u0011Upp::QTFDisplay()\u001Bconst Display& QTFDisplay()\u0003Upp\nQTFDISPLAY\u0003Upp\u0003UPP\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000^\u0000\u0000\u0000\u0000\u0000\u0000\u0000^\u0000\u0000\u0000\u0001\u0000\u0000\u0000`\u0000\u0000\u0000\u0001\u0000\u0000\u000EQTFDisplayCCls\u0013Upp::QTFDisplayCCls\u0013Upp::QTFDisplayCCls\u001EQTFDisplayCCls : QTFDisplayCls\u0003Upp\u000EQTFDISPLAYCCLS\u0013Upp::QTFDisplayCCls\u0013UPP::QTFDISPLAYCCLS\u0012Upp::QTFDisplayCls\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000_\u0000\u0000\u0000\u0001\u0000\u0000\u0000_\u0000\u0000\u0000.\u0000\u0000\u0000_\u0000\u0000\u0000\u0001\u0001\u0000\aVcenter\rbool () const#Upp::QTFDisplayCCls::Vcenter()const\u0014bool Vcenter() const\u0003Upp\aVCENTER\u0013Upp::QTFDisplayCCls\u0013UPP::QTFDISPLAYCCLS\u0000\u0000\b\u0000\u0000\u0000\u000F\u0000\u0000\u0000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000b\u0000\u0000\u0000\u0001\u0000\u0000\u0000e\u0000\u0000\u0000\u0001\u0000\u0000\u0011QTFDisplayVCenter\u0011const Display &()\u0018Upp::QTFDisplayVCenter()\"const Display& QTFDisplayVCenter()\u0003Upp\u0011QTFDISPLAYVCENTER\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000\u0000g\u0000\u0000\u0000\u0000\u0000\u0000\u0000g\u0000\u0000\u0000\u0001\u0000\u0000\u0000y\u0000\u0000\u0000\u0001\u0000\u0000\nAsRichText2RichText (const wchar *, const RichPara::Format &)5Upp::AsRichText(const wchar*,const RichPara::Format&)SRichText AsRichText(const wchar *s, const RichPara::Format& f = RichPara::Format())\u0003Upp\nASRICHTEXT\u0003Upp\u0003UPP\u0000\u0000\u0002\u0000\u0000\u0000\a\u0000\u0000\u0000{\u0000\u0000\u0000\u0000\u0000\u0000\u0000{\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0011DrawingPageDraw__\u0016Upp::DrawingPageDraw__\u0016Upp::DrawingPageDraw__7DrawingPageDraw__ : public DrawingDraw, public PageDraw\u0003Upp\u0011DRAWINGPAGEDRAW__\u0016Upp::DrawingPageDraw__\u0016UPP::DRAWINGPAGEDRAW__\u001EUpp::DrawingDraw;Upp::PageDraw\u0000\u0015\u0000\u0000\u0000\u000F\u0000\u0000\u0000|\u0000\u0000\u0000\u0001\u0000\u0000\u0000|\u0000\u0000\u0000\u001A\u0000\u0000\u0000|\u0000\u0000\u0000\u0000\u0001\u0000\u0004Page\vDraw &(int)!Upp::DrawingPageDraw__::Page(int)\u0011Draw& Page(int i)\u0003Upp\u0004PAGE\u0016Upp::DrawingPageDraw__\u0016UPP::DRAWINGPAGEDRAW__\u0000\u0000\u0006\u0000\u0000\u0000\u0011\u0000\u0000\u0000~\u0000\u0000\u0000\u0001\u0000\u0000\u0000~\u0000\u0000\u0000\u0015\u0000\u0000\u0000~\u0000\u0000\u0000\u0001\u0000\u0000\u0004page\u000EArray<Drawing>\u001CUpp::DrawingPageDraw__::page\u0013Array<Drawing> page\u0003Upp\u0004PAGE\u0016Upp::DrawingPageDraw__\u0016UPP::DRAWINGPAGEDRAW__\u0000\u0000\u0006\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u007F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u007F\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u007F\u0000\u0000\u0000\u0001\u0000\u0000\u0005pagei\u0003int\u001DUpp::DrawingPageDraw__::pagei\tint pagei\u0003Upp\u0005PAGEI\u0016Upp::DrawingPageDraw__\u0016UPP::DRAWINGPAGEDRAW__\u0000\u0000\u0006\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0004size\u0004Size\u001CUpp::DrawingPageDraw__::size\tSize size\u0003Upp\u0004SIZE\u0016Upp::DrawingPageDraw__\u0016UPP::DRAWINGPAGEDRAW__\u0000\u0000\u0015\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005Flush\avoid ()\u001FUpp::DrawingPageDraw__::Flush()\fvoid Flush()\u0003Upp\u0005FLUSH\u0016Upp::DrawingPageDraw__\u0016UPP::DRAWINGPAGEDRAW__\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000$\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0011DrawingPageDraw__\avoid ()+Upp::DrawingPageDraw__::DrawingPageDraw__()\u0013DrawingPageDraw__()\u0003Upp\u0011DRAWINGPAGEDRAW__\u0016Upp::DrawingPageDraw__\u0016UPP::DRAWINGPAGEDRAW__\u0000\u0000\u0015\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0001\u0000\u0004Page\vDraw &(int)!Upp::DrawingPageDraw__::Page(int)\u0011Draw& Page(int i)\u0003Upp\u0004PAGE\u0016Upp::DrawingPageDraw__\u0016UPP::DRAWINGPAGEDRAW__\u0000\u0000\u0015\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0005Flush\avoid ()\u001FUpp::DrawingPageDraw__::Flush()\fvoid Flush()\u0003Upp\u0005FLUSH\u0016Upp::DrawingPageDraw__\u0016UPP::DRAWINGPAGEDRAW__\u0000\u0000\b\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000§\u0000\u0000\u0000\u0001\u0000\u0000\vRenderPages'Array<Drawing> (const RichText &, Size)&Upp::RenderPages(const RichText&,Size)QArray<Drawing> RenderPages(const RichText& txt, Size pagesize = Size(3968, 6074))\u0003Upp\vRENDERPAGES\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000©\u0000\u0000\u0000\u0000\u0000\u0000\u0000©\u0000\u0000\u0000\u0001\u0000\u0000\u0000¯\u0000\u0000\u0000\u0001\u0000\u0000\u0003PdfDString (const RichText &, Size, int, bool, const PdfSignatureInfo *)?Upp::Pdf(const RichText&,Size,int,bool,const PdfSignatureInfo*)ÿ\u0000\u0000\u0000String Pdf(const RichText& txt, Size pagesize = Size(3968, 6074), int margin = 200, bool pdfa = false, const PdfSignatureInfo *sign = 0)\u0003Upp\u0003PDF\u0003Upp\u0003UPP\u0000\u0000end\u00009\u0016\u0000\u0000"}]}