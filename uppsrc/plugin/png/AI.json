{"source_files":[{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\png.h","value":"data õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0014__nDraw_plugin_png__\u0000\u0014__nDraw_plugin_png__\u0014__nDraw_plugin_png__\u0000\u0014__NDRAW_PLUGIN_PNG__\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0015\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0001\u001BPNGRaster__initialize_dummy#struct PNGRaster__initialize_struct Upp::PNGRaster__initialize_dummy?static PNGRaster__initialize_struct PNGRaster__initialize_dummy\u0003Upp\u001BPNGRASTER__INITIALIZE_DUMMY\u0003Upp\u0003UPP\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0015\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u001CPNGRaster__initialize_struct!Upp::PNGRaster__initialize_struct!Upp::PNGRaster__initialize_struct\u001CPNGRaster__initialize_struct\u0003Upp\u001CPNGRASTER__INITIALIZE_STRUCT!Upp::PNGRaster__initialize_struct!UPP::PNGRASTER__INITIALIZE_STRUCT\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0015\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u001CPNGRaster__initialize_struct\avoid ()AUpp::PNGRaster__initialize_struct::PNGRaster__initialize_struct()\u001EPNGRaster__initialize_struct()\u0003Upp\u001CPNGRASTER__INITIALIZE_STRUCT!Upp::PNGRaster__initialize_struct!UPP::PNGRASTER__INITIALIZE_STRUCT\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0015\u0000\u0000\u0000\a\u0000\u0000\u0000\u0001\u0000\u0000\u001CPNGRaster__initialize_struct!Upp::PNGRaster__initialize_struct!Upp::PNGRaster__initialize_struct\u001CPNGRaster__initialize_struct\u0003Upp\u001CPNGRASTER__INITIALIZE_STRUCT!Upp::PNGRaster__initialize_struct!UPP::PNGRASTER__INITIALIZE_STRUCT\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0015\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\u0016PNGRaster__initializer\avoid ()\u001DUpp::PNGRaster__initializer()\u001Dvoid PNGRaster__initializer()\u0003Upp\u0016PNGRASTER__INITIALIZER\u0003Upp\u0003UPP\u0000\u0000\u0004\u0000\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\tPNGRaster\u000EUpp::PNGRaster\u000EUpp::PNGRaster\u001FPNGRaster : public StreamRaster\u0003Upp\tPNGRASTER\u000EUpp::PNGRaster\u000EUPP::PNGRASTER\u0011Upp::StreamRaster\u0000\u0004\u0000\u0000\u0000\a\u0000\u0000\u0000\n\u0000\u0000\u0000\u0001\u0000\u0000\u0000\n\u0000\u0000\u0000\v\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0004Data\u0014Upp::PNGRaster::Data\u0014Upp::PNGRaster::Data\u0004Data\u0003Upp\u0004DATA\u0014Upp::PNGRaster::Data\u0014UPP::PNGRASTER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\v\u0000\u0000\u0000\v\u0000\u0000\u0000\u0001\u0000\u0000\u0000\v\u0000\u0000\u0000\u000F\u0000\u0000\u0000\v\u0000\u0000\u0000\u0001\u0000\u0000\u0004data\tOne<Data>\u0014Upp::PNGRaster::data\u000EOne<Data> data\u0003Upp\u0004DATA\u000EUpp::PNGRaster\u000EUPP::PNGRASTER\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000E\u0000\u0000\u0000\f\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\tPNGRaster\avoid ()\u001BUpp::PNGRaster::PNGRaster()\vPNGRaster()\u0003Upp\tPNGRASTER\u000EUpp::PNGRaster\u000EUPP::PNGRASTER\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000F\u0000\u0000\u0000\r\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0000\u0000\u0000\n~PNGRaster\u0010void () noexcept\u0013Upp::PNGRaster::~()\f~PNGRaster()\u0003Upp\n~PNGRASTER\u000EUpp::PNGRaster\u000EUPP::PNGRASTER\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0000\u0001\u0000\u0006Create\abool ()\u0018Upp::PNGRaster::Create()\rbool Create()\u0003Upp\u0006CREATE\u000EUpp::PNGRaster\u000EUPP::PNGRASTER\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0001\u0000\aGetSize\aSize ()\u0019Upp::PNGRaster::GetSize()\u000ESize GetSize()\u0003Upp\aGETSIZE\u000EUpp::PNGRaster\u000EUPP::PNGRASTER\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0000\u0001\u0000\aGetInfo\aInfo ()\u0019Upp::PNGRaster::GetInfo()\u000EInfo GetInfo()\u0003Upp\aGETINFO\u000EUpp::PNGRaster\u000EUPP::PNGRASTER\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0014\u0000\u0000\u0000\"\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0000\u0001\u0000\aGetLine\nLine (int)\u001CUpp::PNGRaster::GetLine(int)\u0016Line GetLine(int line)\u0003Upp\aGETLINE\u000EUpp::PNGRaster\u000EUPP::PNGRASTER\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0015\u0000\u0000\u0000!\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0001\u0000\nGetPalette\u000Econst RGBA *()\u001CUpp::PNGRaster::GetPalette()\u0018const RGBA *GetPalette()\u0003Upp\nGETPALETTE\u000EUpp::PNGRaster\u000EUPP::PNGRASTER\u0000\u0000\u0015\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0016\u0000\u0000\u0000(\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0001\u0000\tGetFormat\u0016const RasterFormat *()\u001BUpp::PNGRaster::GetFormat()\u001Fconst RasterFormat *GetFormat()\u0003Upp\tGETFORMAT\u000EUpp::PNGRaster\u000EUPP::PNGRASTER\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0000\u0000\u0000\u0004Init\abool ()\u0016Upp::PNGRaster::Init()\vbool Init()\u0003Upp\u0004INIT\u000EUpp::PNGRaster\u000EUPP::PNGRASTER\u0000\u0000\u0004\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0001\u0000\u0000\u0000/\u0000\u0000\u0000\u0001\u0000\u0000\nPNGEncoder\u000FUpp::PNGEncoder\u000FUpp::PNGEncoder'PNGEncoder : public StreamRasterEncoder\u0003Upp\nPNGENCODER\u000FUpp::PNGEncoder\u000FUPP::PNGENCODER\u0018Upp::StreamRasterEncoder\u0000\u0004\u0000\u0000\u0000\a\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001D\u0000\u0000\u0000\v\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0000\u0000\u0000\u0004Data\u0015Upp::PNGEncoder::Data\u0015Upp::PNGEncoder::Data\u0004Data\u0003Upp\u0004DATA\u0015Upp::PNGEncoder::Data\u0015UPP::PNGENCODER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\v\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0000\u0004data\tOne<Data>\u0015Upp::PNGEncoder::data\u000EOne<Data> data\u0003Upp\u0004DATA\u000FUpp::PNGEncoder\u000FUPP::PNGENCODER\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000!\u0000\u0000\u0000\u0001\u0000\u0000\u0000!\u0000\u0000\u0000Q\u0000\u0000\u0000!\u0000\u0000\u0000\u0000\u0000\u0000\nPNGEncoder\u001Bvoid (int, ImageKind, bool)/Upp::PNGEncoder::PNGEncoder(int,ImageKind,bool)PPNGEncoder(int bpp = 32, ImageKind kind = IMAGE_UNKNOWN, bool interlace = false)\u0003Upp\nPNGENCODER\u000FUpp::PNGEncoder\u000FUPP::PNGENCODER\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000\"\u0000\u0000\u0000\u0001\u0000\u0000\u0000\"\u0000\u0000\u0000\u000E\u0000\u0000\u0000\"\u0000\u0000\u0000\u0000\u0000\u0000\v~PNGEncoder\u0010void () noexcept\u0014Upp::PNGEncoder::~()\r~PNGEncoder()\u0003Upp\v~PNGENCODER\u000FUpp::PNGEncoder\u000FUPP::PNGENCODER\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000$\u0000\u0000\u0000\u0001\u0000\u0000\u0000$\u0000\u0000\u0000\u001F\u0000\u0000\u0000$\u0000\u0000\u0000\u0000\u0001\u0000\u000FGetPaletteCount\u0006int ()\"Upp::PNGEncoder::GetPaletteCount()\u0015int GetPaletteCount()\u0003Upp\u000FGETPALETTECOUNT\u000FUpp::PNGEncoder\u000FUPP::PNGENCODER\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000%\u0000\u0000\u0000\u0001\u0000\u0000\u0000%\u0000\u0000\u0000\u001C\u0000\u0000\u0000%\u0000\u0000\u0000\u0000\u0001\u0000\u0005Start\vvoid (Size)\u001CUpp::PNGEncoder::Start(Size)\u0013void Start(Size sz)\u0003Upp\u0005START\u000FUpp::PNGEncoder\u000FUPP::PNGENCODER\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000&\u0000\u0000\u0000\u0001\u0000\u0000\u0000&\u0000\u0000\u0000,\u0000\u0000\u0000&\u0000\u0000\u0000\u0000\u0001\u0000\fWriteLineRaw\u0013void (const byte *)*Upp::PNGEncoder::WriteLineRaw(const byte*)#void WriteLineRaw(const byte *data)\u0003Upp\fWRITELINERAW\u000FUpp::PNGEncoder\u000FUPP::PNGENCODER\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000(\u0000\u0000\u0000\u0001\u0000\u0000\u0000(\u0000\u0000\u0000H\u0000\u0000\u0000(\u0000\u0000\u0000\u0001\u0000\u0000\u0003Bpp\u0011PNGEncoder &(int)\u0019Upp::PNGEncoder::Bpp(int)\u0016PNGEncoder& Bpp(int b)\u0003Upp\u0003BPP\u000FUpp::PNGEncoder\u000FUPP::PNGENCODER\u0000\u0000\u0015\u0000\u0000\u0000\u000E\u0000\u0000\u0000)\u0000\u0000\u0000\u0001\u0000\u0000\u0000)\u0000\u0000\u0000N\u0000\u0000\u0000)\u0000\u0000\u0000\u0001\u0000\u0000\tInterlace\u0011PNGEncoder &(int)\u001FUpp::PNGEncoder::Interlace(int)#PNGEncoder& Interlace(int b = true)\u0003Upp\tINTERLACE\u000FUpp::PNGEncoder\u000FUPP::PNGENCODER\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000,\u0000\u0000\u0000\u0001\u0000\u0000\u0000,\u0000\u0000\u0000\u0011\u0000\u0000\u0000,\u0000\u0000\u0000\u0001\u0000\u0000\u0003bpp\u0003int\u0014Upp::PNGEncoder::bpp\aint bpp\u0003Upp\u0003BPP\u000FUpp::PNGEncoder\u000FUPP::PNGENCODER\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000-\u0000\u0000\u0000\u0001\u0000\u0000\u0000-\u0000\u0000\u0000\u0012\u0000\u0000\u0000-\u0000\u0000\u0000\u0001\u0000\u0000\u0004kind\tImageKind\u0015Upp::PNGEncoder::kind\u000EImageKind kind\u0003Upp\u0004KIND\u000FUpp::PNGEncoder\u000FUPP::PNGENCODER\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000.\u0000\u0000\u0000\u0001\u0000\u0000\u0000.\u0000\u0000\u0000\u0017\u0000\u0000\u0000.\u0000\u0000\u0000\u0001\u0000\u0000\tinterlace\u0004bool\u001AUpp::PNGEncoder::interlace\u000Ebool interlace\u0003Upp\tINTERLACE\u000FUpp::PNGEncoder\u000FUPP::PNGENCODER\u0000\u0000end\u0000ª\u0013\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\pnglib.c","value":"data\u0003õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u000FPNG_NO_MMX_CODE\u0000\u000FPNG_NO_MMX_CODE\u000FPNG_NO_MMX_CODE\u0000\u000FPNG_NO_MMX_CODE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0003\u0000\u0000\u0000\b\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0015PNG_USE_GLOBAL_ARRAYS\u0000\u0015PNG_USE_GLOBAL_ARRAYS\u0015PNG_USE_GLOBAL_ARRAYS\u0000\u0015PNG_USE_GLOBAL_ARRAYS\u0000\u0000\u0000\u0000end\u0000ë\u0000\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\png.h","value":"dataÿ\u0002\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\a\u0001\u0000\u0000\b\u0000\u0000\u0000\a\u0001\u0000\u0000\r\u0000\u0000\u0000\a\u0001\u0000\u0000\u0000\u0000\u0000\u0005PNG_H\u0000\u0005PNG_H\u0005PNG_H\u0000\u0005PNG_H\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0015\u0001\u0000\u0000\b\u0000\u0000\u0000\u0015\u0001\u0000\u0000&\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0000\u0015PNG_LIBPNG_VER_STRING\u0000\u0015PNG_LIBPNG_VER_STRING\u0015PNG_LIBPNG_VER_STRING\u0000\u0015PNG_LIBPNG_VER_STRING\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0016\u0001\u0000\u0000\b\u0000\u0000\u0000\u0016\u0001\u0000\u0000O\u0000\u0000\u0000\u0016\u0001\u0000\u0000\u0000\u0000\u0000\u0019PNG_HEADER_VERSION_STRING\u0000\u0019PNG_HEADER_VERSION_STRING\u0019PNG_HEADER_VERSION_STRING\u0000\u0019PNG_HEADER_VERSION_STRING\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0019\u0001\u0000\u0000\b\u0000\u0000\u0000\u0019\u0001\u0000\u0000#\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u0000\u0018PNG_LIBPNG_VER_SHAREDLIB\u0000\u0018PNG_LIBPNG_VER_SHAREDLIB\u0018PNG_LIBPNG_VER_SHAREDLIB\u0000\u0018PNG_LIBPNG_VER_SHAREDLIB\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u001A\u0001\u0000\u0000\b\u0000\u0000\u0000\u001A\u0001\u0000\u00009\u0000\u0000\u0000\u001A\u0001\u0000\u0000\u0000\u0000\u0000\u0014PNG_LIBPNG_VER_SONUM\u0000\u0014PNG_LIBPNG_VER_SONUM\u0014PNG_LIBPNG_VER_SONUM\u0000\u0014PNG_LIBPNG_VER_SONUM\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u001B\u0001\u0000\u0000\b\u0000\u0000\u0000\u001B\u0001\u0000\u00009\u0000\u0000\u0000\u001B\u0001\u0000\u0000\u0000\u0000\u0000\u0015PNG_LIBPNG_VER_DLLNUM\u0000\u0015PNG_LIBPNG_VER_DLLNUM\u0015PNG_LIBPNG_VER_DLLNUM\u0000\u0015PNG_LIBPNG_VER_DLLNUM\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u001E\u0001\u0000\u0000\b\u0000\u0000\u0000\u001E\u0001\u0000\u0000 \u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0000\u0000\u0000\u0014PNG_LIBPNG_VER_MAJOR\u0000\u0014PNG_LIBPNG_VER_MAJOR\u0014PNG_LIBPNG_VER_MAJOR\u0000\u0014PNG_LIBPNG_VER_MAJOR\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u001F\u0001\u0000\u0000\b\u0000\u0000\u0000\u001F\u0001\u0000\u0000 \u0000\u0000\u0000\u001F\u0001\u0000\u0000\u0000\u0000\u0000\u0014PNG_LIBPNG_VER_MINOR\u0000\u0014PNG_LIBPNG_VER_MINOR\u0014PNG_LIBPNG_VER_MINOR\u0000\u0014PNG_LIBPNG_VER_MINOR\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000 \u0001\u0000\u0000\b\u0000\u0000\u0000 \u0001\u0000\u0000!\u0000\u0000\u0000 \u0001\u0000\u0000\u0000\u0000\u0000\u0016PNG_LIBPNG_VER_RELEASE\u0000\u0016PNG_LIBPNG_VER_RELEASE\u0016PNG_LIBPNG_VER_RELEASE\u0000\u0016PNG_LIBPNG_VER_RELEASE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000%\u0001\u0000\u0000\b\u0000\u0000\u0000%\u0001\u0000\u0000\u001F\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\u0000\u0014PNG_LIBPNG_VER_BUILD\u0000\u0014PNG_LIBPNG_VER_BUILD\u0014PNG_LIBPNG_VER_BUILD\u0000\u0014PNG_LIBPNG_VER_BUILD\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000(\u0001\u0000\u0000\b\u0000\u0000\u0000(\u0001\u0000\u0000#\u0000\u0000\u0000(\u0001\u0000\u0000\u0000\u0000\u0000\u0016PNG_LIBPNG_BUILD_ALPHA\u0000\u0016PNG_LIBPNG_BUILD_ALPHA\u0016PNG_LIBPNG_BUILD_ALPHA\u0000\u0016PNG_LIBPNG_BUILD_ALPHA\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000)\u0001\u0000\u0000\b\u0000\u0000\u0000)\u0001\u0000\u0000#\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000\u0000\u0015PNG_LIBPNG_BUILD_BETA\u0000\u0015PNG_LIBPNG_BUILD_BETA\u0015PNG_LIBPNG_BUILD_BETA\u0000\u0015PNG_LIBPNG_BUILD_BETA\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000*\u0001\u0000\u0000\b\u0000\u0000\u0000*\u0001\u0000\u0000#\u0000\u0000\u0000*\u0001\u0000\u0000\u0000\u0000\u0000\u0013PNG_LIBPNG_BUILD_RC\u0000\u0013PNG_LIBPNG_BUILD_RC\u0013PNG_LIBPNG_BUILD_RC\u0000\u0013PNG_LIBPNG_BUILD_RC\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000+\u0001\u0000\u0000\b\u0000\u0000\u0000+\u0001\u0000\u0000#\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000\u0000\u0017PNG_LIBPNG_BUILD_STABLE\u0000\u0017PNG_LIBPNG_BUILD_STABLE\u0017PNG_LIBPNG_BUILD_STABLE\u0000\u0017PNG_LIBPNG_BUILD_STABLE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000,\u0001\u0000\u0000\b\u0000\u0000\u0000,\u0001\u0000\u0000.\u0000\u0000\u0000,\u0001\u0000\u0000\u0000\u0000\u0000$PNG_LIBPNG_BUILD_RELEASE_STATUS_MASK\u0000$PNG_LIBPNG_BUILD_RELEASE_STATUS_MASK$PNG_LIBPNG_BUILD_RELEASE_STATUS_MASK\u0000$PNG_LIBPNG_BUILD_RELEASE_STATUS_MASK\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000/\u0001\u0000\u0000\b\u0000\u0000\u0000/\u0001\u0000\u0000#\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u0000\u0000\u0016PNG_LIBPNG_BUILD_PATCH\u0000\u0016PNG_LIBPNG_BUILD_PATCH\u0016PNG_LIBPNG_BUILD_PATCH\u0000\u0016PNG_LIBPNG_BUILD_PATCH\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u00001\u0001\u0000\u0000\b\u0000\u0000\u00001\u0001\u0000\u0000#\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u0000\u0000\u0018PNG_LIBPNG_BUILD_PRIVATE\u0000\u0018PNG_LIBPNG_BUILD_PRIVATE\u0018PNG_LIBPNG_BUILD_PRIVATE\u0000\u0018PNG_LIBPNG_BUILD_PRIVATE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u00003\u0001\u0000\u0000\b\u0000\u0000\u00003\u0001\u0000\u0000#\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u0000\u0000\u0018PNG_LIBPNG_BUILD_SPECIAL\u0000\u0018PNG_LIBPNG_BUILD_SPECIAL\u0018PNG_LIBPNG_BUILD_SPECIAL\u0000\u0018PNG_LIBPNG_BUILD_SPECIAL\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u00006\u0001\u0000\u0000\b\u0000\u0000\u00006\u0001\u0000\u0000:\u0000\u0000\u00006\u0001\u0000\u0000\u0000\u0000\u0000\u001APNG_LIBPNG_BUILD_BASE_TYPE\u0000\u001APNG_LIBPNG_BUILD_BASE_TYPE\u001APNG_LIBPNG_BUILD_BASE_TYPE\u0000\u001APNG_LIBPNG_BUILD_BASE_TYPE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000?\u0001\u0000\u0000\b\u0000\u0000\u0000?\u0001\u0000\u0000\u001C\u0000\u0000\u0000?\u0001\u0000\u0000\u0000\u0000\u0000\u000EPNG_LIBPNG_VER\u0000\u000EPNG_LIBPNG_VER\u000EPNG_LIBPNG_VER\u0000\u000EPNG_LIBPNG_VER\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\f\u0000\u0000\u0000f\u0001\u0000\u0000\f\u0000\u0000\u0000f\u0001\u0000\u0000>\u0000\u0000\u0000f\u0001\u0000\u0000\u0000\u0000\u0000\u0015PNG_LIBPNG_BUILD_TYPE\u0000\u0015PNG_LIBPNG_BUILD_TYPE\u0015PNG_LIBPNG_BUILD_TYPE\u0000\u0015PNG_LIBPNG_BUILD_TYPE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000t\u0001\u0000\u0000\b\u0000\u0000\u0000t\u0001\u0000\u0000/\u0000\u0000\u0000t\u0001\u0000\u0000\u0000\u0000\u0000\u000Epng_libpng_ver\u0000\u000Epng_libpng_ver\u000Epng_libpng_ver\u0000\u000EPNG_LIBPNG_VER\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u000E\u0000\u0000\u0000­\u0001\u0000\u0000\u0000\u0000\u0000\u0000­\u0001\u0000\u0000'\u0000\u0000\u0000­\u0001\u0000\u0000\u0001\u0000\u0000\u0019png_libpng_version_1_6_43\u0019png_libpng_version_1_6_43\u0019png_libpng_version_1_6_43'typedef char *png_libpng_version_1_6_43\u0000\u0019PNG_LIBPNG_VERSION_1_6_43\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u000F\u0000\u0000\u0000µ\u0001\u0000\u0000\b\u0000\u0000\u0000µ\u0001\u0000\u0000\u001D\u0000\u0000\u0000µ\u0001\u0000\u0000\u0000\u0000\u0000\u000Epng_struct_def\u000Epng_struct_def\u000Epng_struct_def\u000Epng_struct_def\u0000\u000EPNG_STRUCT_DEF\u000Epng_struct_def\u000EPNG_STRUCT_DEF\u0000\u0000\u0014\u0000\u0000\u0000\u001E\u0000\u0000\u0000µ\u0001\u0000\u0000\u0000\u0000\u0000\u0000µ\u0001\u0000\u0000(\u0000\u0000\u0000µ\u0001\u0000\u0000\u0001\u0000\u0000\npng_struct\npng_struct\npng_struct!typedef png_struct_def png_struct\u0000\nPNG_STRUCT\u0000\u0000\u000Epng_struct_def\u0000\u0014\u0000\u0000\u0000\u001B\u0000\u0000\u0000¶\u0001\u0000\u0000\u0000\u0000\u0000\u0000¶\u0001\u0000\u0000,\u0000\u0000\u0000¶\u0001\u0000\u0000\u0001\u0000\u0000\u0011png_const_structp\u0011png_const_structp\u0011png_const_structp+typedef const png_struct *png_const_structp\u0000\u0011PNG_CONST_STRUCTP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0015\u0000\u0000\u0000·\u0001\u0000\u0000\u0000\u0000\u0000\u0000·\u0001\u0000\u0000 \u0000\u0000\u0000·\u0001\u0000\u0000\u0001\u0000\u0000\vpng_structp\vpng_structp\vpng_structp\u001Ftypedef png_struct *png_structp\u0000\vPNG_STRUCTP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0017\u0000\u0000\u0000¸\u0001\u0000\u0000\u0000\u0000\u0000\u0000¸\u0001\u0000\u0000#\u0000\u0000\u0000¸\u0001\u0000\u0000\u0001\u0000\u0000\fpng_structpp\fpng_structpp\fpng_structpp!typedef png_struct **png_structpp\u0000\fPNG_STRUCTPP\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u000F\u0000\u0000\u0000Ã\u0001\u0000\u0000\b\u0000\u0000\u0000Ã\u0001\u0000\u0000\u001B\u0000\u0000\u0000Ã\u0001\u0000\u0000\u0000\u0000\u0000\fpng_info_def\fpng_info_def\fpng_info_def\fpng_info_def\u0000\fPNG_INFO_DEF\fpng_info_def\fPNG_INFO_DEF\u0000\u0000\u0014\u0000\u0000\u0000\u001C\u0000\u0000\u0000Ã\u0001\u0000\u0000\u0000\u0000\u0000\u0000Ã\u0001\u0000\u0000$\u0000\u0000\u0000Ã\u0001\u0000\u0000\u0001\u0000\u0000\bpng_info\bpng_info\bpng_info\u001Dtypedef png_info_def png_info\u0000\bPNG_INFO\u0000\u0000\fpng_info_def\u0000\u0014\u0000\u0000\u0000\u0013\u0000\u0000\u0000Ä\u0001\u0000\u0000\u0000\u0000\u0000\u0000Ä\u0001\u0000\u0000\u001C\u0000\u0000\u0000Ä\u0001\u0000\u0000\u0001\u0000\u0000\tpng_infop\tpng_infop\tpng_infop\u001Btypedef png_info *png_infop\u0000\tPNG_INFOP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0019\u0000\u0000\u0000Å\u0001\u0000\u0000\u0000\u0000\u0000\u0000Å\u0001\u0000\u0000(\u0000\u0000\u0000Å\u0001\u0000\u0000\u0001\u0000\u0000\u000Fpng_const_infop\u000Fpng_const_infop\u000Fpng_const_infop'typedef const png_info *png_const_infop\u0000\u000FPNG_CONST_INFOP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0015\u0000\u0000\u0000Æ\u0001\u0000\u0000\u0000\u0000\u0000\u0000Æ\u0001\u0000\u0000\u001F\u0000\u0000\u0000Æ\u0001\u0000\u0000\u0001\u0000\u0000\npng_infopp\npng_infopp\npng_infopp\u001Dtypedef png_info **png_infopp\u0000\nPNG_INFOPP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\"\u0000\u0000\u0000Ó\u0001\u0000\u0000\u0000\u0000\u0000\u0000Ó\u0001\u0000\u0000.\u0000\u0000\u0000Ó\u0001\u0000\u0000\u0001\u0000\u0000\fpng_structrp\fpng_structrp\fpng_structrp+typedef png_struct *__restrict png_structrp\u0000\fPNG_STRUCTRP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000(\u0000\u0000\u0000Ô\u0001\u0000\u0000\u0000\u0000\u0000\u0000Ô\u0001\u0000\u0000:\u0000\u0000\u0000Ô\u0001\u0000\u0000\u0001\u0000\u0000\u0012png_const_structrp\u0012png_const_structrp\u0012png_const_structrp7typedef const png_struct *__restrict png_const_structrp\u0000\u0012PNG_CONST_STRUCTRP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000 \u0000\u0000\u0000Õ\u0001\u0000\u0000\u0000\u0000\u0000\u0000Õ\u0001\u0000\u0000*\u0000\u0000\u0000Õ\u0001\u0000\u0000\u0001\u0000\u0000\npng_inforp\npng_inforp\npng_inforp'typedef png_info *__restrict png_inforp\u0000\nPNG_INFORP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000&\u0000\u0000\u0000Ö\u0001\u0000\u0000\u0000\u0000\u0000\u0000Ö\u0001\u0000\u00006\u0000\u0000\u0000Ö\u0001\u0000\u0000\u0001\u0000\u0000\u0010png_const_inforp\u0010png_const_inforp\u0010png_const_inforp3typedef const png_info *__restrict png_const_inforp\u0000\u0010PNG_CONST_INFORP\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u000F\u0000\u0000\u0000Ü\u0001\u0000\u0000\b\u0000\u0000\u0000Ü\u0001\u0000\u0000\u0001\u0000\u0000\u0000á\u0001\u0000\u0000\u0001\u0000\u0000\u0010png_color_struct\u0010png_color_struct\u0010png_color_struct\u0010png_color_struct\u0000\u0010PNG_COLOR_STRUCT\u0010png_color_struct\u0010PNG_COLOR_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000Þ\u0001\u0000\u0000\u0003\u0000\u0000\u0000Þ\u0001\u0000\u0000\u000F\u0000\u0000\u0000Þ\u0001\u0000\u0000\u0001\u0000\u0000\u0003red\bpng_byte\u0015png_color_struct::red\fpng_byte red\u0000\u0003RED\u0010png_color_struct\u0010PNG_COLOR_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000ß\u0001\u0000\u0000\u0003\u0000\u0000\u0000ß\u0001\u0000\u0000\u0011\u0000\u0000\u0000ß\u0001\u0000\u0000\u0001\u0000\u0000\u0005green\bpng_byte\u0017png_color_struct::green\u000Epng_byte green\u0000\u0005GREEN\u0010png_color_struct\u0010PNG_COLOR_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000à\u0001\u0000\u0000\u0003\u0000\u0000\u0000à\u0001\u0000\u0000\u0010\u0000\u0000\u0000à\u0001\u0000\u0000\u0001\u0000\u0000\u0004blue\bpng_byte\u0016png_color_struct::blue\rpng_byte blue\u0000\u0004BLUE\u0010png_color_struct\u0010PNG_COLOR_STRUCT\u0000\u0000\u0014\u0000\u0000\u0000\u0002\u0000\u0000\u0000á\u0001\u0000\u0000\u0000\u0000\u0000\u0000Ü\u0001\u0000\u0000\v\u0000\u0000\u0000á\u0001\u0000\u0000\u0001\u0000\u0000\tpng_color\tpng_color\tpng_color\"typedef png_color_struct png_color\u0000\tPNG_COLOR\u0000\u0000\u0010png_color_struct\u0000\u0014\u0000\u0000\u0000\u0014\u0000\u0000\u0000â\u0001\u0000\u0000\u0000\u0000\u0000\u0000â\u0001\u0000\u0000\u001E\u0000\u0000\u0000â\u0001\u0000\u0000\u0001\u0000\u0000\npng_colorp\npng_colorp\npng_colorp\u001Dtypedef png_color *png_colorp\u0000\nPNG_COLORP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u001A\u0000\u0000\u0000ã\u0001\u0000\u0000\u0000\u0000\u0000\u0000ã\u0001\u0000\u0000*\u0000\u0000\u0000ã\u0001\u0000\u0000\u0001\u0000\u0000\u0010png_const_colorp\u0010png_const_colorp\u0010png_const_colorp)typedef const png_color *png_const_colorp\u0000\u0010PNG_CONST_COLORP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0016\u0000\u0000\u0000ä\u0001\u0000\u0000\u0000\u0000\u0000\u0000ä\u0001\u0000\u0000!\u0000\u0000\u0000ä\u0001\u0000\u0000\u0001\u0000\u0000\vpng_colorpp\vpng_colorpp\vpng_colorpp\u001Ftypedef png_color **png_colorpp\u0000\vPNG_COLORPP\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u000F\u0000\u0000\u0000æ\u0001\u0000\u0000\b\u0000\u0000\u0000æ\u0001\u0000\u0000\u0001\u0000\u0000\u0000í\u0001\u0000\u0000\u0001\u0000\u0000\u0013png_color_16_struct\u0013png_color_16_struct\u0013png_color_16_struct\u0013png_color_16_struct\u0000\u0013PNG_COLOR_16_STRUCT\u0013png_color_16_struct\u0013PNG_COLOR_16_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000è\u0001\u0000\u0000\u0003\u0000\u0000\u0000è\u0001\u0000\u0000\u0011\u0000\u0000\u0000è\u0001\u0000\u0000\u0001\u0000\u0000\u0005index\bpng_byte\u001Apng_color_16_struct::index\u000Epng_byte index\u0000\u0005INDEX\u0013png_color_16_struct\u0013PNG_COLOR_16_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000é\u0001\u0000\u0000\u0003\u0000\u0000\u0000é\u0001\u0000\u0000\u0012\u0000\u0000\u0000é\u0001\u0000\u0000\u0001\u0000\u0000\u0003red\vpng_uint_16\u0018png_color_16_struct::red\u000Fpng_uint_16 red\u0000\u0003RED\u0013png_color_16_struct\u0013PNG_COLOR_16_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000ê\u0001\u0000\u0000\u0003\u0000\u0000\u0000ê\u0001\u0000\u0000\u0014\u0000\u0000\u0000ê\u0001\u0000\u0000\u0001\u0000\u0000\u0005green\vpng_uint_16\u001Apng_color_16_struct::green\u0011png_uint_16 green\u0000\u0005GREEN\u0013png_color_16_struct\u0013PNG_COLOR_16_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000ë\u0001\u0000\u0000\u0003\u0000\u0000\u0000ë\u0001\u0000\u0000\u0013\u0000\u0000\u0000ë\u0001\u0000\u0000\u0001\u0000\u0000\u0004blue\vpng_uint_16\u0019png_color_16_struct::blue\u0010png_uint_16 blue\u0000\u0004BLUE\u0013png_color_16_struct\u0013PNG_COLOR_16_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000ì\u0001\u0000\u0000\u0003\u0000\u0000\u0000ì\u0001\u0000\u0000\u0013\u0000\u0000\u0000ì\u0001\u0000\u0000\u0001\u0000\u0000\u0004gray\vpng_uint_16\u0019png_color_16_struct::gray\u0010png_uint_16 gray\u0000\u0004GRAY\u0013png_color_16_struct\u0013PNG_COLOR_16_STRUCT\u0000\u0000\u0014\u0000\u0000\u0000\u0002\u0000\u0000\u0000í\u0001\u0000\u0000\u0000\u0000\u0000\u0000æ\u0001\u0000\u0000\u000E\u0000\u0000\u0000í\u0001\u0000\u0000\u0001\u0000\u0000\fpng_color_16\fpng_color_16\fpng_color_16(typedef png_color_16_struct png_color_16\u0000\fPNG_COLOR_16\u0000\u0000\u0013png_color_16_struct\u0000\u0014\u0000\u0000\u0000\u0017\u0000\u0000\u0000î\u0001\u0000\u0000\u0000\u0000\u0000\u0000î\u0001\u0000\u0000$\u0000\u0000\u0000î\u0001\u0000\u0000\u0001\u0000\u0000\rpng_color_16p\rpng_color_16p\rpng_color_16p#typedef png_color_16 *png_color_16p\u0000\rPNG_COLOR_16P\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u001D\u0000\u0000\u0000ï\u0001\u0000\u0000\u0000\u0000\u0000\u0000ï\u0001\u0000\u00000\u0000\u0000\u0000ï\u0001\u0000\u0000\u0001\u0000\u0000\u0013png_const_color_16p\u0013png_const_color_16p\u0013png_const_color_16p/typedef const png_color_16 *png_const_color_16p\u0000\u0013PNG_CONST_COLOR_16P\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0019\u0000\u0000\u0000ð\u0001\u0000\u0000\u0000\u0000\u0000\u0000ð\u0001\u0000\u0000'\u0000\u0000\u0000ð\u0001\u0000\u0000\u0001\u0000\u0000\u000Epng_color_16pp\u000Epng_color_16pp\u000Epng_color_16pp%typedef png_color_16 **png_color_16pp\u0000\u000EPNG_COLOR_16PP\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u000F\u0000\u0000\u0000ò\u0001\u0000\u0000\b\u0000\u0000\u0000ò\u0001\u0000\u0000\u0001\u0000\u0000\u0000ù\u0001\u0000\u0000\u0001\u0000\u0000\u0012png_color_8_struct\u0012png_color_8_struct\u0012png_color_8_struct\u0012png_color_8_struct\u0000\u0012PNG_COLOR_8_STRUCT\u0012png_color_8_struct\u0012PNG_COLOR_8_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000ô\u0001\u0000\u0000\u0003\u0000\u0000\u0000ô\u0001\u0000\u0000\u000F\u0000\u0000\u0000ô\u0001\u0000\u0000\u0001\u0000\u0000\u0003red\bpng_byte\u0017png_color_8_struct::red\fpng_byte red\u0000\u0003RED\u0012png_color_8_struct\u0012PNG_COLOR_8_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000õ\u0001\u0000\u0000\u0003\u0000\u0000\u0000õ\u0001\u0000\u0000\u0011\u0000\u0000\u0000õ\u0001\u0000\u0000\u0001\u0000\u0000\u0005green\bpng_byte\u0019png_color_8_struct::green\u000Epng_byte green\u0000\u0005GREEN\u0012png_color_8_struct\u0012PNG_COLOR_8_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000ö\u0001\u0000\u0000\u0003\u0000\u0000\u0000ö\u0001\u0000\u0000\u0010\u0000\u0000\u0000ö\u0001\u0000\u0000\u0001\u0000\u0000\u0004blue\bpng_byte\u0018png_color_8_struct::blue\rpng_byte blue\u0000\u0004BLUE\u0012png_color_8_struct\u0012PNG_COLOR_8_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000÷\u0001\u0000\u0000\u0003\u0000\u0000\u0000÷\u0001\u0000\u0000\u0010\u0000\u0000\u0000÷\u0001\u0000\u0000\u0001\u0000\u0000\u0004gray\bpng_byte\u0018png_color_8_struct::gray\rpng_byte gray\u0000\u0004GRAY\u0012png_color_8_struct\u0012PNG_COLOR_8_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000ø\u0001\u0000\u0000\u0003\u0000\u0000\u0000ø\u0001\u0000\u0000\u0011\u0000\u0000\u0000ø\u0001\u0000\u0000\u0001\u0000\u0000\u0005alpha\bpng_byte\u0019png_color_8_struct::alpha\u000Epng_byte alpha\u0000\u0005ALPHA\u0012png_color_8_struct\u0012PNG_COLOR_8_STRUCT\u0000\u0000\u0014\u0000\u0000\u0000\u0002\u0000\u0000\u0000ù\u0001\u0000\u0000\u0000\u0000\u0000\u0000ò\u0001\u0000\u0000\r\u0000\u0000\u0000ù\u0001\u0000\u0000\u0001\u0000\u0000\vpng_color_8\vpng_color_8\vpng_color_8&typedef png_color_8_struct png_color_8\u0000\vPNG_COLOR_8\u0000\u0000\u0012png_color_8_struct\u0000\u0014\u0000\u0000\u0000\u0016\u0000\u0000\u0000ú\u0001\u0000\u0000\u0000\u0000\u0000\u0000ú\u0001\u0000\u0000\"\u0000\u0000\u0000ú\u0001\u0000\u0000\u0001\u0000\u0000\fpng_color_8p\fpng_color_8p\fpng_color_8p!typedef png_color_8 *png_color_8p\u0000\fPNG_COLOR_8P\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u001C\u0000\u0000\u0000û\u0001\u0000\u0000\u0000\u0000\u0000\u0000û\u0001\u0000\u0000.\u0000\u0000\u0000û\u0001\u0000\u0000\u0001\u0000\u0000\u0012png_const_color_8p\u0012png_const_color_8p\u0012png_const_color_8p-typedef const png_color_8 *png_const_color_8p\u0000\u0012PNG_CONST_COLOR_8P\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0018\u0000\u0000\u0000ü\u0001\u0000\u0000\u0000\u0000\u0000\u0000ü\u0001\u0000\u0000%\u0000\u0000\u0000ü\u0001\u0000\u0000\u0001\u0000\u0000\rpng_color_8pp\rpng_color_8pp\rpng_color_8pp#typedef png_color_8 **png_color_8pp\u0000\rPNG_COLOR_8PP\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0002\u0002\u0000\u0000\b\u0000\u0000\u0000\u0002\u0002\u0000\u0000\u0001\u0000\u0000\u0000\t\u0002\u0000\u0000\u0001\u0000\u0000\u0015png_sPLT_entry_struct\u0015png_sPLT_entry_struct\u0015png_sPLT_entry_struct\u0015png_sPLT_entry_struct\u0000\u0015PNG_SPLT_ENTRY_STRUCT\u0015png_sPLT_entry_struct\u0015PNG_SPLT_ENTRY_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0004\u0002\u0000\u0000\u0003\u0000\u0000\u0000\u0004\u0002\u0000\u0000\u0012\u0000\u0000\u0000\u0004\u0002\u0000\u0000\u0001\u0000\u0000\u0003red\vpng_uint_16\u001Apng_sPLT_entry_struct::red\u000Fpng_uint_16 red\u0000\u0003RED\u0015png_sPLT_entry_struct\u0015PNG_SPLT_ENTRY_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0005\u0002\u0000\u0000\u0003\u0000\u0000\u0000\u0005\u0002\u0000\u0000\u0014\u0000\u0000\u0000\u0005\u0002\u0000\u0000\u0001\u0000\u0000\u0005green\vpng_uint_16\u001Cpng_sPLT_entry_struct::green\u0011png_uint_16 green\u0000\u0005GREEN\u0015png_sPLT_entry_struct\u0015PNG_SPLT_ENTRY_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0006\u0002\u0000\u0000\u0003\u0000\u0000\u0000\u0006\u0002\u0000\u0000\u0013\u0000\u0000\u0000\u0006\u0002\u0000\u0000\u0001\u0000\u0000\u0004blue\vpng_uint_16\u001Bpng_sPLT_entry_struct::blue\u0010png_uint_16 blue\u0000\u0004BLUE\u0015png_sPLT_entry_struct\u0015PNG_SPLT_ENTRY_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000\a\u0002\u0000\u0000\u0003\u0000\u0000\u0000\a\u0002\u0000\u0000\u0014\u0000\u0000\u0000\a\u0002\u0000\u0000\u0001\u0000\u0000\u0005alpha\vpng_uint_16\u001Cpng_sPLT_entry_struct::alpha\u0011png_uint_16 alpha\u0000\u0005ALPHA\u0015png_sPLT_entry_struct\u0015PNG_SPLT_ENTRY_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000\b\u0002\u0000\u0000\u0003\u0000\u0000\u0000\b\u0002\u0000\u0000\u0018\u0000\u0000\u0000\b\u0002\u0000\u0000\u0001\u0000\u0000\tfrequency\vpng_uint_16 png_sPLT_entry_struct::frequency\u0015png_uint_16 frequency\u0000\tFREQUENCY\u0015png_sPLT_entry_struct\u0015PNG_SPLT_ENTRY_STRUCT\u0000\u0000\u0014\u0000\u0000\u0000\u0002\u0000\u0000\u0000\t\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0002\u0000\u0000\u0010\u0000\u0000\u0000\t\u0002\u0000\u0000\u0001\u0000\u0000\u000Epng_sPLT_entry\u000Epng_sPLT_entry\u000Epng_sPLT_entry,typedef png_sPLT_entry_struct png_sPLT_entry\u0000\u000EPNG_SPLT_ENTRY\u0000\u0000\u0015png_sPLT_entry_struct\u0000\u0014\u0000\u0000\u0000\u0019\u0000\u0000\u0000\n\u0002\u0000\u0000\u0000\u0000\u0000\u0000\n\u0002\u0000\u0000(\u0000\u0000\u0000\n\u0002\u0000\u0000\u0001\u0000\u0000\u000Fpng_sPLT_entryp\u000Fpng_sPLT_entryp\u000Fpng_sPLT_entryp'typedef png_sPLT_entry *png_sPLT_entryp\u0000\u000FPNG_SPLT_ENTRYP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u001F\u0000\u0000\u0000\v\u0002\u0000\u0000\u0000\u0000\u0000\u0000\v\u0002\u0000\u00004\u0000\u0000\u0000\v\u0002\u0000\u0000\u0001\u0000\u0000\u0015png_const_sPLT_entryp\u0015png_const_sPLT_entryp\u0015png_const_sPLT_entryp3typedef const png_sPLT_entry *png_const_sPLT_entryp\u0000\u0015PNG_CONST_SPLT_ENTRYP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u001B\u0000\u0000\u0000\f\u0002\u0000\u0000\u0000\u0000\u0000\u0000\f\u0002\u0000\u0000+\u0000\u0000\u0000\f\u0002\u0000\u0000\u0001\u0000\u0000\u0010png_sPLT_entrypp\u0010png_sPLT_entrypp\u0010png_sPLT_entrypp)typedef png_sPLT_entry **png_sPLT_entrypp\u0000\u0010PNG_SPLT_ENTRYPP\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0013\u0002\u0000\u0000\b\u0000\u0000\u0000\u0013\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0019\u0002\u0000\u0000\u0001\u0000\u0000\u000Fpng_sPLT_struct\u000Fpng_sPLT_struct\u000Fpng_sPLT_struct\u000Fpng_sPLT_struct\u0000\u000FPNG_SPLT_STRUCT\u000Fpng_sPLT_struct\u000FPNG_SPLT_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000\u0015\u0002\u0000\u0000\u0003\u0000\u0000\u0000\u0015\u0002\u0000\u0000\u0011\u0000\u0000\u0000\u0015\u0002\u0000\u0000\u0001\u0000\u0000\u0004name\tpng_charp\u0015png_sPLT_struct::name\u000Epng_charp name\u0000\u0004NAME\u000Fpng_sPLT_struct\u000FPNG_SPLT_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000\u0016\u0002\u0000\u0000\u0003\u0000\u0000\u0000\u0016\u0002\u0000\u0000\u0011\u0000\u0000\u0000\u0016\u0002\u0000\u0000\u0001\u0000\u0000\u0005depth\bpng_byte\u0016png_sPLT_struct::depth\u000Epng_byte depth\u0000\u0005DEPTH\u000Fpng_sPLT_struct\u000FPNG_SPLT_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0017\u0002\u0000\u0000\u0003\u0000\u0000\u0000\u0017\u0002\u0000\u0000\u001A\u0000\u0000\u0000\u0017\u0002\u0000\u0000\u0001\u0000\u0000\aentries\u000Fpng_sPLT_entryp\u0018png_sPLT_struct::entries\u0017png_sPLT_entryp entries\u0000\aENTRIES\u000Fpng_sPLT_struct\u000FPNG_SPLT_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u0018\u0002\u0000\u0000\u0003\u0000\u0000\u0000\u0018\u0002\u0000\u0000\u0016\u0000\u0000\u0000\u0018\u0002\u0000\u0000\u0001\u0000\u0000\bnentries\npng_int_32\u0019png_sPLT_struct::nentries\u0013png_int_32 nentries\u0000\bNENTRIES\u000Fpng_sPLT_struct\u000FPNG_SPLT_STRUCT\u0000\u0000\u0014\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0019\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0013\u0002\u0000\u0000\f\u0000\u0000\u0000\u0019\u0002\u0000\u0000\u0001\u0000\u0000\npng_sPLT_t\npng_sPLT_t\npng_sPLT_t\"typedef png_sPLT_struct png_sPLT_t\u0000\nPNG_SPLT_T\u0000\u0000\u000Fpng_sPLT_struct\u0000\u0014\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u001A\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u001A\u0002\u0000\u0000 \u0000\u0000\u0000\u001A\u0002\u0000\u0000\u0001\u0000\u0000\vpng_sPLT_tp\vpng_sPLT_tp\vpng_sPLT_tp\u001Ftypedef png_sPLT_t *png_sPLT_tp\u0000\vPNG_SPLT_TP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u001B\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u001B\u0002\u0000\u0000,\u0000\u0000\u0000\u001B\u0002\u0000\u0000\u0001\u0000\u0000\u0011png_const_sPLT_tp\u0011png_const_sPLT_tp\u0011png_const_sPLT_tp+typedef const png_sPLT_t *png_const_sPLT_tp\u0000\u0011PNG_CONST_SPLT_TP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u001C\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u001C\u0002\u0000\u0000#\u0000\u0000\u0000\u001C\u0002\u0000\u0000\u0001\u0000\u0000\fpng_sPLT_tpp\fpng_sPLT_tpp\fpng_sPLT_tpp!typedef png_sPLT_t **png_sPLT_tpp\u0000\fPNG_SPLT_TPP\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u000F\u0000\u0000\u00000\u0002\u0000\u0000\b\u0000\u0000\u00000\u0002\u0000\u0000\u0001\u0000\u0000\u0000@\u0002\u0000\u0000\u0001\u0000\u0000\u000Fpng_text_struct\u000Fpng_text_struct\u000Fpng_text_struct\u000Fpng_text_struct\u0000\u000FPNG_TEXT_STRUCT\u000Fpng_text_struct\u000FPNG_TEXT_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u00002\u0002\u0000\u0000\u0003\u0000\u0000\u00002\u0002\u0000\u0000\u0013\u0000\u0000\u00002\u0002\u0000\u0000\u0001\u0000\u0000\vcompression\u0003int\u001Cpng_text_struct::compression\u000Fint compression\u0000\vCOMPRESSION\u000Fpng_text_struct\u000FPNG_TEXT_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u00007\u0002\u0000\u0000\u0003\u0000\u0000\u00007\u0002\u0000\u0000\u0010\u0000\u0000\u00007\u0002\u0000\u0000\u0001\u0000\u0000\u0003key\tpng_charp\u0014png_text_struct::key\rpng_charp key\u0000\u0003KEY\u000Fpng_text_struct\u000FPNG_TEXT_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u00008\u0002\u0000\u0000\u0003\u0000\u0000\u00008\u0002\u0000\u0000\u0011\u0000\u0000\u00008\u0002\u0000\u0000\u0001\u0000\u0000\u0004text\tpng_charp\u0015png_text_struct::text\u000Epng_charp text\u0000\u0004TEXT\u000Fpng_text_struct\u000FPNG_TEXT_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\n\u0000\u0000\u0000:\u0002\u0000\u0000\u0003\u0000\u0000\u0000:\u0002\u0000\u0000\u0015\u0000\u0000\u0000:\u0002\u0000\u0000\u0001\u0000\u0000\vtext_length\u0006size_t\u001Cpng_text_struct::text_length\u0012size_t text_length\u0000\vTEXT_LENGTH\u000Fpng_text_struct\u000FPNG_TEXT_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\n\u0000\u0000\u0000;\u0002\u0000\u0000\u0003\u0000\u0000\u0000;\u0002\u0000\u0000\u0015\u0000\u0000\u0000;\u0002\u0000\u0000\u0001\u0000\u0000\vitxt_length\u0006size_t\u001Cpng_text_struct::itxt_length\u0012size_t itxt_length\u0000\vITXT_LENGTH\u000Fpng_text_struct\u000FPNG_TEXT_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000<\u0002\u0000\u0000\u0003\u0000\u0000\u0000<\u0002\u0000\u0000\u0011\u0000\u0000\u0000<\u0002\u0000\u0000\u0001\u0000\u0000\u0004lang\tpng_charp\u0015png_text_struct::lang\u000Epng_charp lang\u0000\u0004LANG\u000Fpng_text_struct\u000FPNG_TEXT_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000>\u0002\u0000\u0000\u0003\u0000\u0000\u0000>\u0002\u0000\u0000\u0015\u0000\u0000\u0000>\u0002\u0000\u0000\u0001\u0000\u0000\blang_key\tpng_charp\u0019png_text_struct::lang_key\u0012png_charp lang_key\u0000\bLANG_KEY\u000Fpng_text_struct\u000FPNG_TEXT_STRUCT\u0000\u0000\u0014\u0000\u0000\u0000\u0002\u0000\u0000\u0000@\u0002\u0000\u0000\u0000\u0000\u0000\u00000\u0002\u0000\u0000\n\u0000\u0000\u0000@\u0002\u0000\u0000\u0001\u0000\u0000\bpng_text\bpng_text\bpng_text typedef png_text_struct png_text\u0000\bPNG_TEXT\u0000\u0000\u000Fpng_text_struct\u0000\u0014\u0000\u0000\u0000\u0013\u0000\u0000\u0000A\u0002\u0000\u0000\u0000\u0000\u0000\u0000A\u0002\u0000\u0000\u001C\u0000\u0000\u0000A\u0002\u0000\u0000\u0001\u0000\u0000\tpng_textp\tpng_textp\tpng_textp\u001Btypedef png_text *png_textp\u0000\tPNG_TEXTP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0019\u0000\u0000\u0000B\u0002\u0000\u0000\u0000\u0000\u0000\u0000B\u0002\u0000\u0000(\u0000\u0000\u0000B\u0002\u0000\u0000\u0001\u0000\u0000\u000Fpng_const_textp\u000Fpng_const_textp\u000Fpng_const_textp'typedef const png_text *png_const_textp\u0000\u000FPNG_CONST_TEXTP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0015\u0000\u0000\u0000C\u0002\u0000\u0000\u0000\u0000\u0000\u0000C\u0002\u0000\u0000\u001F\u0000\u0000\u0000C\u0002\u0000\u0000\u0001\u0000\u0000\npng_textpp\npng_textpp\npng_textpp\u001Dtypedef png_text **png_textpp\u0000\nPNG_TEXTPP\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000H\u0002\u0000\u0000\b\u0000\u0000\u0000H\u0002\u0000\u0000'\u0000\u0000\u0000H\u0002\u0000\u0000\u0000\u0000\u0000\u001CPNG_TEXT_COMPRESSION_NONE_WR\u0000\u001CPNG_TEXT_COMPRESSION_NONE_WR\u001CPNG_TEXT_COMPRESSION_NONE_WR\u0000\u001CPNG_TEXT_COMPRESSION_NONE_WR\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000I\u0002\u0000\u0000\b\u0000\u0000\u0000I\u0002\u0000\u0000'\u0000\u0000\u0000I\u0002\u0000\u0000\u0000\u0000\u0000\u001CPNG_TEXT_COMPRESSION_zTXt_WR\u0000\u001CPNG_TEXT_COMPRESSION_zTXt_WR\u001CPNG_TEXT_COMPRESSION_zTXt_WR\u0000\u001CPNG_TEXT_COMPRESSION_ZTXT_WR\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000J\u0002\u0000\u0000\b\u0000\u0000\u0000J\u0002\u0000\u0000'\u0000\u0000\u0000J\u0002\u0000\u0000\u0000\u0000\u0000\u0019PNG_TEXT_COMPRESSION_NONE\u0000\u0019PNG_TEXT_COMPRESSION_NONE\u0019PNG_TEXT_COMPRESSION_NONE\u0000\u0019PNG_TEXT_COMPRESSION_NONE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000K\u0002\u0000\u0000\b\u0000\u0000\u0000K\u0002\u0000\u0000'\u0000\u0000\u0000K\u0002\u0000\u0000\u0000\u0000\u0000\u0019PNG_TEXT_COMPRESSION_zTXt\u0000\u0019PNG_TEXT_COMPRESSION_zTXt\u0019PNG_TEXT_COMPRESSION_zTXt\u0000\u0019PNG_TEXT_COMPRESSION_ZTXT\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000L\u0002\u0000\u0000\b\u0000\u0000\u0000L\u0002\u0000\u0000'\u0000\u0000\u0000L\u0002\u0000\u0000\u0000\u0000\u0000\u0019PNG_ITXT_COMPRESSION_NONE\u0000\u0019PNG_ITXT_COMPRESSION_NONE\u0019PNG_ITXT_COMPRESSION_NONE\u0000\u0019PNG_ITXT_COMPRESSION_NONE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000M\u0002\u0000\u0000\b\u0000\u0000\u0000M\u0002\u0000\u0000'\u0000\u0000\u0000M\u0002\u0000\u0000\u0000\u0000\u0000\u0019PNG_ITXT_COMPRESSION_zTXt\u0000\u0019PNG_ITXT_COMPRESSION_zTXt\u0019PNG_ITXT_COMPRESSION_zTXt\u0000\u0019PNG_ITXT_COMPRESSION_ZTXT\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000N\u0002\u0000\u0000\b\u0000\u0000\u0000N\u0002\u0000\u0000'\u0000\u0000\u0000N\u0002\u0000\u0000\u0000\u0000\u0000\u0019PNG_TEXT_COMPRESSION_LAST\u0000\u0019PNG_TEXT_COMPRESSION_LAST\u0019PNG_TEXT_COMPRESSION_LAST\u0000\u0019PNG_TEXT_COMPRESSION_LAST\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u000F\u0000\u0000\u0000V\u0002\u0000\u0000\b\u0000\u0000\u0000V\u0002\u0000\u0000\u0001\u0000\u0000\u0000^\u0002\u0000\u0000\u0001\u0000\u0000\u000Fpng_time_struct\u000Fpng_time_struct\u000Fpng_time_struct\u000Fpng_time_struct\u0000\u000FPNG_TIME_STRUCT\u000Fpng_time_struct\u000FPNG_TIME_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000X\u0002\u0000\u0000\u0003\u0000\u0000\u0000X\u0002\u0000\u0000\u0013\u0000\u0000\u0000X\u0002\u0000\u0000\u0001\u0000\u0000\u0004year\vpng_uint_16\u0015png_time_struct::year\u0010png_uint_16 year\u0000\u0004YEAR\u000Fpng_time_struct\u000FPNG_TIME_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000Y\u0002\u0000\u0000\u0003\u0000\u0000\u0000Y\u0002\u0000\u0000\u0011\u0000\u0000\u0000Y\u0002\u0000\u0000\u0001\u0000\u0000\u0005month\bpng_byte\u0016png_time_struct::month\u000Epng_byte month\u0000\u0005MONTH\u000Fpng_time_struct\u000FPNG_TIME_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000Z\u0002\u0000\u0000\u0003\u0000\u0000\u0000Z\u0002\u0000\u0000\u000F\u0000\u0000\u0000Z\u0002\u0000\u0000\u0001\u0000\u0000\u0003day\bpng_byte\u0014png_time_struct::day\fpng_byte day\u0000\u0003DAY\u000Fpng_time_struct\u000FPNG_TIME_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000[\u0002\u0000\u0000\u0003\u0000\u0000\u0000[\u0002\u0000\u0000\u0010\u0000\u0000\u0000[\u0002\u0000\u0000\u0001\u0000\u0000\u0004hour\bpng_byte\u0015png_time_struct::hour\rpng_byte hour\u0000\u0004HOUR\u000Fpng_time_struct\u000FPNG_TIME_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000\\\u0002\u0000\u0000\u0003\u0000\u0000\u0000\\\u0002\u0000\u0000\u0012\u0000\u0000\u0000\\\u0002\u0000\u0000\u0001\u0000\u0000\u0006minute\bpng_byte\u0017png_time_struct::minute\u000Fpng_byte minute\u0000\u0006MINUTE\u000Fpng_time_struct\u000FPNG_TIME_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000]\u0002\u0000\u0000\u0003\u0000\u0000\u0000]\u0002\u0000\u0000\u0012\u0000\u0000\u0000]\u0002\u0000\u0000\u0001\u0000\u0000\u0006second\bpng_byte\u0017png_time_struct::second\u000Fpng_byte second\u0000\u0006SECOND\u000Fpng_time_struct\u000FPNG_TIME_STRUCT\u0000\u0000\u0014\u0000\u0000\u0000\u0002\u0000\u0000\u0000^\u0002\u0000\u0000\u0000\u0000\u0000\u0000V\u0002\u0000\u0000\n\u0000\u0000\u0000^\u0002\u0000\u0000\u0001\u0000\u0000\bpng_time\bpng_time\bpng_time typedef png_time_struct png_time\u0000\bPNG_TIME\u0000\u0000\u000Fpng_time_struct\u0000\u0014\u0000\u0000\u0000\u0013\u0000\u0000\u0000_\u0002\u0000\u0000\u0000\u0000\u0000\u0000_\u0002\u0000\u0000\u001C\u0000\u0000\u0000_\u0002\u0000\u0000\u0001\u0000\u0000\tpng_timep\tpng_timep\tpng_timep\u001Btypedef png_time *png_timep\u0000\tPNG_TIMEP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0019\u0000\u0000\u0000`\u0002\u0000\u0000\u0000\u0000\u0000\u0000`\u0002\u0000\u0000(\u0000\u0000\u0000`\u0002\u0000\u0000\u0001\u0000\u0000\u000Fpng_const_timep\u000Fpng_const_timep\u000Fpng_const_timep'typedef const png_time *png_const_timep\u0000\u000FPNG_CONST_TIMEP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0015\u0000\u0000\u0000a\u0002\u0000\u0000\u0000\u0000\u0000\u0000a\u0002\u0000\u0000\u001F\u0000\u0000\u0000a\u0002\u0000\u0000\u0001\u0000\u0000\npng_timepp\npng_timepp\npng_timepp\u001Dtypedef png_time **png_timepp\u0000\nPNG_TIMEPP\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u000F\u0000\u0000\u0000l\u0002\u0000\u0000\b\u0000\u0000\u0000l\u0002\u0000\u0000\u0001\u0000\u0000\u0000y\u0002\u0000\u0000\u0001\u0000\u0000\u0013png_unknown_chunk_t\u0013png_unknown_chunk_t\u0013png_unknown_chunk_t\u0013png_unknown_chunk_t\u0000\u0013PNG_UNKNOWN_CHUNK_T\u0013png_unknown_chunk_t\u0013PNG_UNKNOWN_CHUNK_T\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000n\u0002\u0000\u0000\u0003\u0000\u0000\u0000n\u0002\u0000\u0000\u0013\u0000\u0000\u0000n\u0002\u0000\u0000\u0001\u0000\u0000\u0004name\vpng_byte[5]\u0019png_unknown_chunk_t::name\u0010png_byte name[5]\u0000\u0004NAME\u0013png_unknown_chunk_t\u0013PNG_UNKNOWN_CHUNK_T\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000o\u0002\u0000\u0000\u0003\u0000\u0000\u0000o\u0002\u0000\u0000\u0011\u0000\u0000\u0000o\u0002\u0000\u0000\u0001\u0000\u0000\u0004data\npng_byte *\u0019png_unknown_chunk_t::data\u000Epng_byte *data\u0000\u0004DATA\u0013png_unknown_chunk_t\u0013PNG_UNKNOWN_CHUNK_T\u0000\u0000\u0006\u0000\u0000\u0000\n\u0000\u0000\u0000p\u0002\u0000\u0000\u0003\u0000\u0000\u0000p\u0002\u0000\u0000\u000E\u0000\u0000\u0000p\u0002\u0000\u0000\u0001\u0000\u0000\u0004size\u0006size_t\u0019png_unknown_chunk_t::size\vsize_t size\u0000\u0004SIZE\u0013png_unknown_chunk_t\u0013PNG_UNKNOWN_CHUNK_T\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000x\u0002\u0000\u0000\u0003\u0000\u0000\u0000x\u0002\u0000\u0000\u0014\u0000\u0000\u0000x\u0002\u0000\u0000\u0001\u0000\u0000\blocation\bpng_byte\u001Dpng_unknown_chunk_t::location\u0011png_byte location\u0000\bLOCATION\u0013png_unknown_chunk_t\u0013PNG_UNKNOWN_CHUNK_T\u0000\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000z\u0002\u0000\u0000\u0000\u0000\u0000\u0000l\u0002\u0000\u0000\u0011\u0000\u0000\u0000z\u0002\u0000\u0000\u0001\u0000\u0000\u0011png_unknown_chunk\u0011png_unknown_chunk\u0011png_unknown_chunk-typedef png_unknown_chunk_t png_unknown_chunk\u0000\u0011PNG_UNKNOWN_CHUNK\u0000\u0000\u0013png_unknown_chunk_t\u0000\u0014\u0000\u0000\u0000\u001C\u0000\u0000\u0000|\u0002\u0000\u0000\u0000\u0000\u0000\u0000|\u0002\u0000\u0000.\u0000\u0000\u0000|\u0002\u0000\u0000\u0001\u0000\u0000\u0012png_unknown_chunkp\u0012png_unknown_chunkp\u0012png_unknown_chunkp-typedef png_unknown_chunk *png_unknown_chunkp\u0000\u0012PNG_UNKNOWN_CHUNKP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\"\u0000\u0000\u0000}\u0002\u0000\u0000\u0000\u0000\u0000\u0000}\u0002\u0000\u0000:\u0000\u0000\u0000}\u0002\u0000\u0000\u0001\u0000\u0000\u0018png_const_unknown_chunkp\u0018png_const_unknown_chunkp\u0018png_const_unknown_chunkp9typedef const png_unknown_chunk *png_const_unknown_chunkp\u0000\u0018PNG_CONST_UNKNOWN_CHUNKP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u001E\u0000\u0000\u0000~\u0002\u0000\u0000\u0000\u0000\u0000\u0000~\u0002\u0000\u00001\u0000\u0000\u0000~\u0002\u0000\u0000\u0001\u0000\u0000\u0013png_unknown_chunkpp\u0013png_unknown_chunkpp\u0013png_unknown_chunkpp/typedef png_unknown_chunk **png_unknown_chunkpp\u0000\u0013PNG_UNKNOWN_CHUNKPP\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\u001B\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\rPNG_HAVE_IHDR\u0000\rPNG_HAVE_IHDR\rPNG_HAVE_IHDR\u0000\rPNG_HAVE_IHDR\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\u001B\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\rPNG_HAVE_PLTE\u0000\rPNG_HAVE_PLTE\rPNG_HAVE_PLTE\u0000\rPNG_HAVE_PLTE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\u001B\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u000EPNG_AFTER_IDAT\u0000\u000EPNG_AFTER_IDAT\u000EPNG_AFTER_IDAT\u0000\u000EPNG_AFTER_IDAT\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u00002\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u000FPNG_UINT_31_MAX\u0000\u000FPNG_UINT_31_MAX\u000FPNG_UINT_31_MAX\u0000\u000FPNG_UINT_31_MAX\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000+\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u000FPNG_UINT_32_MAX\u0000\u000FPNG_UINT_32_MAX\u000FPNG_UINT_32_MAX\u0000\u000FPNG_UINT_32_MAX\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000#\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\fPNG_SIZE_MAX\u0000\fPNG_SIZE_MAX\fPNG_SIZE_MAX\u0000\fPNG_SIZE_MAX\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\u001A\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\bPNG_FP_1\u0000\bPNG_FP_1\bPNG_FP_1\u0000\bPNG_FP_1\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\u001A\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\vPNG_FP_HALF\u0000\vPNG_FP_HALF\vPNG_FP_HALF\u0000\vPNG_FP_HALF\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u00002\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\nPNG_FP_MAX\u0000\nPNG_FP_MAX\nPNG_FP_MAX\u0000\nPNG_FP_MAX\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000!\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\nPNG_FP_MIN\u0000\nPNG_FP_MIN\nPNG_FP_MIN\u0000\nPNG_FP_MIN\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000#\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0016PNG_COLOR_MASK_PALETTE\u0000\u0016PNG_COLOR_MASK_PALETTE\u0016PNG_COLOR_MASK_PALETTE\u0000\u0016PNG_COLOR_MASK_PALETTE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000#\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0014PNG_COLOR_MASK_COLOR\u0000\u0014PNG_COLOR_MASK_COLOR\u0014PNG_COLOR_MASK_COLOR\u0000\u0014PNG_COLOR_MASK_COLOR\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000#\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0014PNG_COLOR_MASK_ALPHA\u0000\u0014PNG_COLOR_MASK_ALPHA\u0014PNG_COLOR_MASK_ALPHA\u0000\u0014PNG_COLOR_MASK_ALPHA\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\u001D\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0013PNG_COLOR_TYPE_GRAY\u0000\u0013PNG_COLOR_TYPE_GRAY\u0013PNG_COLOR_TYPE_GRAY\u0000\u0013PNG_COLOR_TYPE_GRAY\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000O\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0016PNG_COLOR_TYPE_PALETTE\u0000\u0016PNG_COLOR_TYPE_PALETTE\u0016PNG_COLOR_TYPE_PALETTE\u0000\u0016PNG_COLOR_TYPE_PALETTE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u00008\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0012PNG_COLOR_TYPE_RGB\u0000\u0012PNG_COLOR_TYPE_RGB\u0012PNG_COLOR_TYPE_RGB\u0000\u0012PNG_COLOR_TYPE_RGB\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000O\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0018PNG_COLOR_TYPE_RGB_ALPHA\u0000\u0018PNG_COLOR_TYPE_RGB_ALPHA\u0018PNG_COLOR_TYPE_RGB_ALPHA\u0000\u0018PNG_COLOR_TYPE_RGB_ALPHA\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u00008\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0019PNG_COLOR_TYPE_GRAY_ALPHA\u0000\u0019PNG_COLOR_TYPE_GRAY_ALPHA\u0019PNG_COLOR_TYPE_GRAY_ALPHA\u0000\u0019PNG_COLOR_TYPE_GRAY_ALPHA\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000 \u0002\u0000\u0000\b\u0000\u0000\u0000 \u0002\u0000\u00005\u0000\u0000\u0000 \u0002\u0000\u0000\u0000\u0000\u0000\u0013PNG_COLOR_TYPE_RGBA\u0000\u0013PNG_COLOR_TYPE_RGBA\u0013PNG_COLOR_TYPE_RGBA\u0000\u0013PNG_COLOR_TYPE_RGBA\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000¡\u0002\u0000\u0000\b\u0000\u0000\u0000¡\u0002\u0000\u00004\u0000\u0000\u0000¡\u0002\u0000\u0000\u0000\u0000\u0000\u0011PNG_COLOR_TYPE_GA\u0000\u0011PNG_COLOR_TYPE_GA\u0011PNG_COLOR_TYPE_GA\u0000\u0011PNG_COLOR_TYPE_GA\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000¤\u0002\u0000\u0000\b\u0000\u0000\u0000¤\u0002\u0000\u0000#\u0000\u0000\u0000¤\u0002\u0000\u0000\u0000\u0000\u0000\u0019PNG_COMPRESSION_TYPE_BASE\u0000\u0019PNG_COMPRESSION_TYPE_BASE\u0019PNG_COMPRESSION_TYPE_BASE\u0000\u0019PNG_COMPRESSION_TYPE_BASE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000¥\u0002\u0000\u0000\b\u0000\u0000\u0000¥\u0002\u0000\u0000>\u0000\u0000\u0000¥\u0002\u0000\u0000\u0000\u0000\u0000\u001CPNG_COMPRESSION_TYPE_DEFAULT\u0000\u001CPNG_COMPRESSION_TYPE_DEFAULT\u001CPNG_COMPRESSION_TYPE_DEFAULT\u0000\u001CPNG_COMPRESSION_TYPE_DEFAULT\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000¨\u0002\u0000\u0000\b\u0000\u0000\u0000¨\u0002\u0000\u0000#\u0000\u0000\u0000¨\u0002\u0000\u0000\u0000\u0000\u0000\u0014PNG_FILTER_TYPE_BASE\u0000\u0014PNG_FILTER_TYPE_BASE\u0014PNG_FILTER_TYPE_BASE\u0000\u0014PNG_FILTER_TYPE_BASE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000©\u0002\u0000\u0000\b\u0000\u0000\u0000©\u0002\u0000\u0000&\u0000\u0000\u0000©\u0002\u0000\u0000\u0000\u0000\u0000\u001BPNG_INTRAPIXEL_DIFFERENCING\u0000\u001BPNG_INTRAPIXEL_DIFFERENCING\u001BPNG_INTRAPIXEL_DIFFERENCING\u0000\u001BPNG_INTRAPIXEL_DIFFERENCING\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000ª\u0002\u0000\u0000\b\u0000\u0000\u0000ª\u0002\u0000\u00006\u0000\u0000\u0000ª\u0002\u0000\u0000\u0000\u0000\u0000\u0017PNG_FILTER_TYPE_DEFAULT\u0000\u0017PNG_FILTER_TYPE_DEFAULT\u0017PNG_FILTER_TYPE_DEFAULT\u0000\u0017PNG_FILTER_TYPE_DEFAULT\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000­\u0002\u0000\u0000\b\u0000\u0000\u0000­\u0002\u0000\u0000#\u0000\u0000\u0000­\u0002\u0000\u0000\u0000\u0000\u0000\u0012PNG_INTERLACE_NONE\u0000\u0012PNG_INTERLACE_NONE\u0012PNG_INTERLACE_NONE\u0000\u0012PNG_INTERLACE_NONE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000®\u0002\u0000\u0000\b\u0000\u0000\u0000®\u0002\u0000\u0000#\u0000\u0000\u0000®\u0002\u0000\u0000\u0000\u0000\u0000\u0013PNG_INTERLACE_ADAM7\u0000\u0013PNG_INTERLACE_ADAM7\u0013PNG_INTERLACE_ADAM7\u0000\u0013PNG_INTERLACE_ADAM7\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000¯\u0002\u0000\u0000\b\u0000\u0000\u0000¯\u0002\u0000\u0000#\u0000\u0000\u0000¯\u0002\u0000\u0000\u0000\u0000\u0000\u0012PNG_INTERLACE_LAST\u0000\u0012PNG_INTERLACE_LAST\u0012PNG_INTERLACE_LAST\u0000\u0012PNG_INTERLACE_LAST\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000²\u0002\u0000\u0000\b\u0000\u0000\u0000²\u0002\u0000\u0000#\u0000\u0000\u0000²\u0002\u0000\u0000\u0000\u0000\u0000\u0010PNG_OFFSET_PIXEL\u0000\u0010PNG_OFFSET_PIXEL\u0010PNG_OFFSET_PIXEL\u0000\u0010PNG_OFFSET_PIXEL\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000³\u0002\u0000\u0000\b\u0000\u0000\u0000³\u0002\u0000\u0000#\u0000\u0000\u0000³\u0002\u0000\u0000\u0000\u0000\u0000\u0015PNG_OFFSET_MICROMETER\u0000\u0015PNG_OFFSET_MICROMETER\u0015PNG_OFFSET_MICROMETER\u0000\u0015PNG_OFFSET_MICROMETER\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000´\u0002\u0000\u0000\b\u0000\u0000\u0000´\u0002\u0000\u0000#\u0000\u0000\u0000´\u0002\u0000\u0000\u0000\u0000\u0001\u000FPNG_OFFSET_LAST\u0000\u000FPNG_OFFSET_LAST\u000FPNG_OFFSET_LAST\u0000\u000FPNG_OFFSET_LAST\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000·\u0002\u0000\u0000\b\u0000\u0000\u0000·\u0002\u0000\u0000#\u0000\u0000\u0000·\u0002\u0000\u0000\u0000\u0000\u0000\u0013PNG_EQUATION_LINEAR\u0000\u0013PNG_EQUATION_LINEAR\u0013PNG_EQUATION_LINEAR\u0000\u0013PNG_EQUATION_LINEAR\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000¸\u0002\u0000\u0000\b\u0000\u0000\u0000¸\u0002\u0000\u0000#\u0000\u0000\u0000¸\u0002\u0000\u0000\u0000\u0000\u0000\u0013PNG_EQUATION_BASE_E\u0000\u0013PNG_EQUATION_BASE_E\u0013PNG_EQUATION_BASE_E\u0000\u0013PNG_EQUATION_BASE_E\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000¹\u0002\u0000\u0000\b\u0000\u0000\u0000¹\u0002\u0000\u0000#\u0000\u0000\u0000¹\u0002\u0000\u0000\u0000\u0000\u0000\u0016PNG_EQUATION_ARBITRARY\u0000\u0016PNG_EQUATION_ARBITRARY\u0016PNG_EQUATION_ARBITRARY\u0000\u0016PNG_EQUATION_ARBITRARY\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000º\u0002\u0000\u0000\b\u0000\u0000\u0000º\u0002\u0000\u0000#\u0000\u0000\u0000º\u0002\u0000\u0000\u0000\u0000\u0000\u0017PNG_EQUATION_HYPERBOLIC\u0000\u0017PNG_EQUATION_HYPERBOLIC\u0017PNG_EQUATION_HYPERBOLIC\u0000\u0017PNG_EQUATION_HYPERBOLIC\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000»\u0002\u0000\u0000\b\u0000\u0000\u0000»\u0002\u0000\u0000#\u0000\u0000\u0000»\u0002\u0000\u0000\u0000\u0000\u0000\u0011PNG_EQUATION_LAST\u0000\u0011PNG_EQUATION_LAST\u0011PNG_EQUATION_LAST\u0000\u0011PNG_EQUATION_LAST\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000¾\u0002\u0000\u0000\b\u0000\u0000\u0000¾\u0002\u0000\u0000#\u0000\u0000\u0000¾\u0002\u0000\u0000\u0000\u0000\u0000\u0011PNG_SCALE_UNKNOWN\u0000\u0011PNG_SCALE_UNKNOWN\u0011PNG_SCALE_UNKNOWN\u0000\u0011PNG_SCALE_UNKNOWN\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000¿\u0002\u0000\u0000\b\u0000\u0000\u0000¿\u0002\u0000\u0000#\u0000\u0000\u0000¿\u0002\u0000\u0000\u0000\u0000\u0000\u000FPNG_SCALE_METER\u0000\u000FPNG_SCALE_METER\u000FPNG_SCALE_METER\u0000\u000FPNG_SCALE_METER\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000À\u0002\u0000\u0000\b\u0000\u0000\u0000À\u0002\u0000\u0000#\u0000\u0000\u0000À\u0002\u0000\u0000\u0000\u0000\u0000\u0010PNG_SCALE_RADIAN\u0000\u0010PNG_SCALE_RADIAN\u0010PNG_SCALE_RADIAN\u0000\u0010PNG_SCALE_RADIAN\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Á\u0002\u0000\u0000\b\u0000\u0000\u0000Á\u0002\u0000\u0000#\u0000\u0000\u0000Á\u0002\u0000\u0000\u0000\u0000\u0000\u000EPNG_SCALE_LAST\u0000\u000EPNG_SCALE_LAST\u000EPNG_SCALE_LAST\u0000\u000EPNG_SCALE_LAST\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ä\u0002\u0000\u0000\b\u0000\u0000\u0000Ä\u0002\u0000\u0000#\u0000\u0000\u0000Ä\u0002\u0000\u0000\u0000\u0000\u0000\u0016PNG_RESOLUTION_UNKNOWN\u0000\u0016PNG_RESOLUTION_UNKNOWN\u0016PNG_RESOLUTION_UNKNOWN\u0000\u0016PNG_RESOLUTION_UNKNOWN\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Å\u0002\u0000\u0000\b\u0000\u0000\u0000Å\u0002\u0000\u0000#\u0000\u0000\u0000Å\u0002\u0000\u0000\u0000\u0000\u0000\u0014PNG_RESOLUTION_METER\u0000\u0014PNG_RESOLUTION_METER\u0014PNG_RESOLUTION_METER\u0000\u0014PNG_RESOLUTION_METER\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Æ\u0002\u0000\u0000\b\u0000\u0000\u0000Æ\u0002\u0000\u0000#\u0000\u0000\u0000Æ\u0002\u0000\u0000\u0000\u0000\u0001\u0013PNG_RESOLUTION_LAST\u0000\u0013PNG_RESOLUTION_LAST\u0013PNG_RESOLUTION_LAST\u0000\u0013PNG_RESOLUTION_LAST\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000É\u0002\u0000\u0000\b\u0000\u0000\u0000É\u0002\u0000\u0000$\u0000\u0000\u0000É\u0002\u0000\u0000\u0000\u0000\u0000\u001APNG_sRGB_INTENT_PERCEPTUAL\u0000\u001APNG_sRGB_INTENT_PERCEPTUAL\u001APNG_sRGB_INTENT_PERCEPTUAL\u0000\u001APNG_SRGB_INTENT_PERCEPTUAL\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ê\u0002\u0000\u0000\b\u0000\u0000\u0000Ê\u0002\u0000\u0000$\u0000\u0000\u0000Ê\u0002\u0000\u0000\u0000\u0000\u0000\u0018PNG_sRGB_INTENT_RELATIVE\u0000\u0018PNG_sRGB_INTENT_RELATIVE\u0018PNG_sRGB_INTENT_RELATIVE\u0000\u0018PNG_SRGB_INTENT_RELATIVE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ë\u0002\u0000\u0000\b\u0000\u0000\u0000Ë\u0002\u0000\u0000$\u0000\u0000\u0000Ë\u0002\u0000\u0000\u0000\u0000\u0000\u001APNG_sRGB_INTENT_SATURATION\u0000\u001APNG_sRGB_INTENT_SATURATION\u001APNG_sRGB_INTENT_SATURATION\u0000\u001APNG_SRGB_INTENT_SATURATION\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ì\u0002\u0000\u0000\b\u0000\u0000\u0000Ì\u0002\u0000\u0000$\u0000\u0000\u0000Ì\u0002\u0000\u0000\u0000\u0000\u0000\u0018PNG_sRGB_INTENT_ABSOLUTE\u0000\u0018PNG_sRGB_INTENT_ABSOLUTE\u0018PNG_sRGB_INTENT_ABSOLUTE\u0000\u0018PNG_SRGB_INTENT_ABSOLUTE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Í\u0002\u0000\u0000\b\u0000\u0000\u0000Í\u0002\u0000\u0000$\u0000\u0000\u0000Í\u0002\u0000\u0000\u0000\u0000\u0000\u0014PNG_sRGB_INTENT_LAST\u0000\u0014PNG_sRGB_INTENT_LAST\u0014PNG_sRGB_INTENT_LAST\u0000\u0014PNG_SRGB_INTENT_LAST\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ð\u0002\u0000\u0000\b\u0000\u0000\u0000Ð\u0002\u0000\u0000%\u0000\u0000\u0000Ð\u0002\u0000\u0000\u0000\u0000\u0000\u0016PNG_KEYWORD_MAX_LENGTH\u0000\u0016PNG_KEYWORD_MAX_LENGTH\u0016PNG_KEYWORD_MAX_LENGTH\u0000\u0016PNG_KEYWORD_MAX_LENGTH\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ó\u0002\u0000\u0000\b\u0000\u0000\u0000Ó\u0002\u0000\u0000%\u0000\u0000\u0000Ó\u0002\u0000\u0000\u0000\u0000\u0000\u0016PNG_MAX_PALETTE_LENGTH\u0000\u0016PNG_MAX_PALETTE_LENGTH\u0016PNG_MAX_PALETTE_LENGTH\u0000\u0016PNG_MAX_PALETTE_LENGTH\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ú\u0002\u0000\u0000\b\u0000\u0000\u0000Ú\u0002\u0000\u0000\u001D\u0000\u0000\u0000Ú\u0002\u0000\u0000\u0000\u0000\u0000\rPNG_INFO_gAMA\u0000\rPNG_INFO_gAMA\rPNG_INFO_gAMA\u0000\rPNG_INFO_GAMA\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Û\u0002\u0000\u0000\b\u0000\u0000\u0000Û\u0002\u0000\u0000\u001D\u0000\u0000\u0000Û\u0002\u0000\u0000\u0000\u0000\u0000\rPNG_INFO_sBIT\u0000\rPNG_INFO_sBIT\rPNG_INFO_sBIT\u0000\rPNG_INFO_SBIT\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ü\u0002\u0000\u0000\b\u0000\u0000\u0000Ü\u0002\u0000\u0000\u001D\u0000\u0000\u0000Ü\u0002\u0000\u0000\u0000\u0000\u0000\rPNG_INFO_cHRM\u0000\rPNG_INFO_cHRM\rPNG_INFO_cHRM\u0000\rPNG_INFO_CHRM\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ý\u0002\u0000\u0000\b\u0000\u0000\u0000Ý\u0002\u0000\u0000\u001D\u0000\u0000\u0000Ý\u0002\u0000\u0000\u0000\u0000\u0000\rPNG_INFO_PLTE\u0000\rPNG_INFO_PLTE\rPNG_INFO_PLTE\u0000\rPNG_INFO_PLTE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Þ\u0002\u0000\u0000\b\u0000\u0000\u0000Þ\u0002\u0000\u0000\u001D\u0000\u0000\u0000Þ\u0002\u0000\u0000\u0000\u0000\u0000\rPNG_INFO_tRNS\u0000\rPNG_INFO_tRNS\rPNG_INFO_tRNS\u0000\rPNG_INFO_TRNS\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000ß\u0002\u0000\u0000\b\u0000\u0000\u0000ß\u0002\u0000\u0000\u001D\u0000\u0000\u0000ß\u0002\u0000\u0000\u0000\u0000\u0000\rPNG_INFO_bKGD\u0000\rPNG_INFO_bKGD\rPNG_INFO_bKGD\u0000\rPNG_INFO_BKGD\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000à\u0002\u0000\u0000\b\u0000\u0000\u0000à\u0002\u0000\u0000\u001D\u0000\u0000\u0000à\u0002\u0000\u0000\u0000\u0000\u0001\rPNG_INFO_hIST\u0000\rPNG_INFO_hIST\rPNG_INFO_hIST\u0000\rPNG_INFO_HIST\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000á\u0002\u0000\u0000\b\u0000\u0000\u0000á\u0002\u0000\u0000\u001D\u0000\u0000\u0000á\u0002\u0000\u0000\u0000\u0000\u0000\rPNG_INFO_pHYs\u0000\rPNG_INFO_pHYs\rPNG_INFO_pHYs\u0000\rPNG_INFO_PHYS\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000â\u0002\u0000\u0000\b\u0000\u0000\u0000â\u0002\u0000\u0000\u001D\u0000\u0000\u0000â\u0002\u0000\u0000\u0000\u0000\u0000\rPNG_INFO_oFFs\u0000\rPNG_INFO_oFFs\rPNG_INFO_oFFs\u0000\rPNG_INFO_OFFS\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000ã\u0002\u0000\u0000\b\u0000\u0000\u0000ã\u0002\u0000\u0000\u001D\u0000\u0000\u0000ã\u0002\u0000\u0000\u0000\u0000\u0000\rPNG_INFO_tIME\u0000\rPNG_INFO_tIME\rPNG_INFO_tIME\u0000\rPNG_INFO_TIME\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000ä\u0002\u0000\u0000\b\u0000\u0000\u0000ä\u0002\u0000\u0000\u001D\u0000\u0000\u0000ä\u0002\u0000\u0000\u0000\u0000\u0001\rPNG_INFO_pCAL\u0000\rPNG_INFO_pCAL\rPNG_INFO_pCAL\u0000\rPNG_INFO_PCAL\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000å\u0002\u0000\u0000\b\u0000\u0000\u0000å\u0002\u0000\u0000\u001D\u0000\u0000\u0000å\u0002\u0000\u0000\u0000\u0000\u0000\rPNG_INFO_sRGB\u0000\rPNG_INFO_sRGB\rPNG_INFO_sRGB\u0000\rPNG_INFO_SRGB\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000æ\u0002\u0000\u0000\b\u0000\u0000\u0000æ\u0002\u0000\u0000\u001D\u0000\u0000\u0000æ\u0002\u0000\u0000\u0000\u0000\u0000\rPNG_INFO_iCCP\u0000\rPNG_INFO_iCCP\rPNG_INFO_iCCP\u0000\rPNG_INFO_ICCP\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000ç\u0002\u0000\u0000\b\u0000\u0000\u0000ç\u0002\u0000\u0000\u001D\u0000\u0000\u0000ç\u0002\u0000\u0000\u0000\u0000\u0000\rPNG_INFO_sPLT\u0000\rPNG_INFO_sPLT\rPNG_INFO_sPLT\u0000\rPNG_INFO_SPLT\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000è\u0002\u0000\u0000\b\u0000\u0000\u0000è\u0002\u0000\u0000\u001D\u0000\u0000\u0000è\u0002\u0000\u0000\u0000\u0000\u0000\rPNG_INFO_sCAL\u0000\rPNG_INFO_sCAL\rPNG_INFO_sCAL\u0000\rPNG_INFO_SCAL\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000é\u0002\u0000\u0000\b\u0000\u0000\u0000é\u0002\u0000\u0000\u001D\u0000\u0000\u0000é\u0002\u0000\u0000\u0000\u0000\u0000\rPNG_INFO_IDAT\u0000\rPNG_INFO_IDAT\rPNG_INFO_IDAT\u0000\rPNG_INFO_IDAT\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000ê\u0002\u0000\u0000\b\u0000\u0000\u0000ê\u0002\u0000\u0000\u001E\u0000\u0000\u0000ê\u0002\u0000\u0000\u0000\u0000\u0000\rPNG_INFO_eXIf\u0000\rPNG_INFO_eXIf\rPNG_INFO_eXIf\u0000\rPNG_INFO_EXIF\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u000F\u0000\u0000\u0000ð\u0002\u0000\u0000\b\u0000\u0000\u0000ð\u0002\u0000\u0000\u0001\u0000\u0000\u0000ø\u0002\u0000\u0000\u0001\u0000\u0000\u0013png_row_info_struct\u0013png_row_info_struct\u0013png_row_info_struct\u0013png_row_info_struct\u0000\u0013PNG_ROW_INFO_STRUCT\u0013png_row_info_struct\u0013PNG_ROW_INFO_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000ò\u0002\u0000\u0000\u0003\u0000\u0000\u0000ò\u0002\u0000\u0000\u0014\u0000\u0000\u0000ò\u0002\u0000\u0000\u0001\u0000\u0000\u0005width\vpng_uint_32\u001Apng_row_info_struct::width\u0011png_uint_32 width\u0000\u0005WIDTH\u0013png_row_info_struct\u0013PNG_ROW_INFO_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\n\u0000\u0000\u0000ó\u0002\u0000\u0000\u0003\u0000\u0000\u0000ó\u0002\u0000\u0000\u0012\u0000\u0000\u0000ó\u0002\u0000\u0000\u0001\u0000\u0000\browbytes\u0006size_t\u001Dpng_row_info_struct::rowbytes\u000Fsize_t rowbytes\u0000\bROWBYTES\u0013png_row_info_struct\u0013PNG_ROW_INFO_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000ô\u0002\u0000\u0000\u0003\u0000\u0000\u0000ô\u0002\u0000\u0000\u0016\u0000\u0000\u0000ô\u0002\u0000\u0000\u0001\u0000\u0000\ncolor_type\bpng_byte\u001Fpng_row_info_struct::color_type\u0013png_byte color_type\u0000\nCOLOR_TYPE\u0013png_row_info_struct\u0013PNG_ROW_INFO_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000õ\u0002\u0000\u0000\u0003\u0000\u0000\u0000õ\u0002\u0000\u0000\u0015\u0000\u0000\u0000õ\u0002\u0000\u0000\u0001\u0000\u0000\tbit_depth\bpng_byte\u001Epng_row_info_struct::bit_depth\u0012png_byte bit_depth\u0000\tBIT_DEPTH\u0013png_row_info_struct\u0013PNG_ROW_INFO_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000ö\u0002\u0000\u0000\u0003\u0000\u0000\u0000ö\u0002\u0000\u0000\u0014\u0000\u0000\u0000ö\u0002\u0000\u0000\u0001\u0000\u0000\bchannels\bpng_byte\u001Dpng_row_info_struct::channels\u0011png_byte channels\u0000\bCHANNELS\u0013png_row_info_struct\u0013PNG_ROW_INFO_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000÷\u0002\u0000\u0000\u0003\u0000\u0000\u0000÷\u0002\u0000\u0000\u0017\u0000\u0000\u0000÷\u0002\u0000\u0000\u0001\u0000\u0000\vpixel_depth\bpng_byte png_row_info_struct::pixel_depth\u0014png_byte pixel_depth\u0000\vPIXEL_DEPTH\u0013png_row_info_struct\u0013PNG_ROW_INFO_STRUCT\u0000\u0000\u0014\u0000\u0000\u0000\u0002\u0000\u0000\u0000ø\u0002\u0000\u0000\u0000\u0000\u0000\u0000ð\u0002\u0000\u0000\u000E\u0000\u0000\u0000ø\u0002\u0000\u0000\u0001\u0000\u0000\fpng_row_info\fpng_row_info\fpng_row_info(typedef png_row_info_struct png_row_info\u0000\fPNG_ROW_INFO\u0000\u0000\u0013png_row_info_struct\u0000\u0014\u0000\u0000\u0000\u0017\u0000\u0000\u0000ú\u0002\u0000\u0000\u0000\u0000\u0000\u0000ú\u0002\u0000\u0000$\u0000\u0000\u0000ú\u0002\u0000\u0000\u0001\u0000\u0000\rpng_row_infop\rpng_row_infop\rpng_row_infop#typedef png_row_info *png_row_infop\u0000\rPNG_ROW_INFOP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0019\u0000\u0000\u0000û\u0002\u0000\u0000\u0000\u0000\u0000\u0000û\u0002\u0000\u0000'\u0000\u0000\u0000û\u0002\u0000\u0000\u0001\u0000\u0000\u000Epng_row_infopp\u000Epng_row_infopp\u000Epng_row_infopp%typedef png_row_info **png_row_infopp\u0000\u000EPNG_ROW_INFOPP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\b\u0000\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0003\u0000\u0000\b\u0000\u0000\u0000\u0005\u0003\u0000\u0000\u0001\u0000\u0000\rpng_error_ptr\rpng_error_ptr\rpng_error_ptrRtypedef void (*png_error_ptr)(png_structp, png_const_charp) __attribute__((cdecl))\u0000\rPNG_ERROR_PTR\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\b\u0000\u0000\u0000\u0006\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0003\u0000\u0000\b\u0000\u0000\u0000\u0006\u0003\u0000\u0000\u0001\u0000\u0000\npng_rw_ptr\npng_rw_ptr\npng_rw_ptrQtypedef void (*png_rw_ptr)(png_structp, png_bytep, size_t) __attribute__((cdecl))\u0000\nPNG_RW_PTR\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\b\u0000\u0000\u0000\a\u0003\u0000\u0000\u0000\u0000\u0000\u0000\a\u0003\u0000\u0000\b\u0000\u0000\u0000\a\u0003\u0000\u0000\u0001\u0000\u0000\rpng_flush_ptr\rpng_flush_ptr\rpng_flush_ptrAtypedef void (*png_flush_ptr)(png_structp) __attribute__((cdecl))\u0000\rPNG_FLUSH_PTR\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\b\u0000\u0000\u0000\b\u0003\u0000\u0000\u0000\u0000\u0000\u0000\b\u0003\u0000\u0000\b\u0000\u0000\u0000\b\u0003\u0000\u0000\u0001\u0000\u0000\u0013png_read_status_ptr\u0013png_read_status_ptr\u0013png_read_status_ptrYtypedef void (*png_read_status_ptr)(png_structp, png_uint_32, int) __attribute__((cdecl))\u0000\u0013PNG_READ_STATUS_PTR\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\b\u0000\u0000\u0000\n\u0003\u0000\u0000\u0000\u0000\u0000\u0000\n\u0003\u0000\u0000\b\u0000\u0000\u0000\n\u0003\u0000\u0000\u0001\u0000\u0000\u0014png_write_status_ptr\u0014png_write_status_ptr\u0014png_write_status_ptrZtypedef void (*png_write_status_ptr)(png_structp, png_uint_32, int) __attribute__((cdecl))\u0000\u0014PNG_WRITE_STATUS_PTR\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\b\u0000\u0000\u0000\u000E\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u000E\u0003\u0000\u0000\b\u0000\u0000\u0000\u000E\u0003\u0000\u0000\u0001\u0000\u0000\u0018png_progressive_info_ptr\u0018png_progressive_info_ptr\u0018png_progressive_info_ptrWtypedef void (*png_progressive_info_ptr)(png_structp, png_infop) __attribute__((cdecl))\u0000\u0018PNG_PROGRESSIVE_INFO_PTR\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\b\u0000\u0000\u0000\u000F\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u000F\u0003\u0000\u0000\b\u0000\u0000\u0000\u000F\u0003\u0000\u0000\u0001\u0000\u0000\u0017png_progressive_end_ptr\u0017png_progressive_end_ptr\u0017png_progressive_end_ptrVtypedef void (*png_progressive_end_ptr)(png_structp, png_infop) __attribute__((cdecl))\u0000\u0017PNG_PROGRESSIVE_END_PTR\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\b\u0000\u0000\u0000\u001B\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u001B\u0003\u0000\u0000\b\u0000\u0000\u0000\u001B\u0003\u0000\u0000\u0001\u0000\u0000\u0017png_progressive_row_ptr\u0017png_progressive_row_ptr\u0017png_progressive_row_ptrhtypedef void (*png_progressive_row_ptr)(png_structp, png_bytep, png_uint_32, int) __attribute__((cdecl))\u0000\u0017PNG_PROGRESSIVE_ROW_PTR\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\b\u0000\u0000\u0000!\u0003\u0000\u0000\u0000\u0000\u0000\u0000!\u0003\u0000\u0000\b\u0000\u0000\u0000!\u0003\u0000\u0000\u0001\u0000\u0000\u0016png_user_transform_ptr\u0016png_user_transform_ptr\u0016png_user_transform_ptrdtypedef void (*png_user_transform_ptr)(png_structp, png_row_infop, png_bytep) __attribute__((cdecl))\u0000\u0016PNG_USER_TRANSFORM_PTR\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\b\u0000\u0000\u0000&\u0003\u0000\u0000\u0000\u0000\u0000\u0000&\u0003\u0000\u0000\b\u0000\u0000\u0000&\u0003\u0000\u0000\u0001\u0000\u0000\u0012png_user_chunk_ptr\u0012png_user_chunk_ptr\u0012png_user_chunk_ptrYtypedef int (*png_user_chunk_ptr)(png_structp, png_unknown_chunkp) __attribute__((cdecl))\u0000\u0012PNG_USER_CHUNK_PTR\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000:\u0003\u0000\u0000\u0000\u0000\u0000\u0000:\u0003\u0000\u0000\u0000\u0000\u0000\u0000:\u0003\u0000\u0000\u0001\u0000\u0000\u000Fpng_longjmp_ptr\u000Fpng_longjmp_ptr\u000Fpng_longjmp_ptrFtypedef void (*png_longjmp_ptr)(_JBTYPE *, int) __attribute__((cdecl))\u0000\u000FPNG_LONGJMP_PTR\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000>\u0003\u0000\u0000\b\u0000\u0000\u0000>\u0003\u0000\u0000+\u0000\u0000\u0000>\u0003\u0000\u0000\u0000\u0000\u0000\u0016PNG_TRANSFORM_IDENTITY\u0000\u0016PNG_TRANSFORM_IDENTITY\u0016PNG_TRANSFORM_IDENTITY\u0000\u0016PNG_TRANSFORM_IDENTITY\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000?\u0003\u0000\u0000\b\u0000\u0000\u0000?\u0003\u0000\u0000+\u0000\u0000\u0000?\u0003\u0000\u0000\u0000\u0000\u0000\u0016PNG_TRANSFORM_STRIP_16\u0000\u0016PNG_TRANSFORM_STRIP_16\u0016PNG_TRANSFORM_STRIP_16\u0000\u0016PNG_TRANSFORM_STRIP_16\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000@\u0003\u0000\u0000\b\u0000\u0000\u0000@\u0003\u0000\u0000+\u0000\u0000\u0000@\u0003\u0000\u0000\u0000\u0000\u0000\u0019PNG_TRANSFORM_STRIP_ALPHA\u0000\u0019PNG_TRANSFORM_STRIP_ALPHA\u0019PNG_TRANSFORM_STRIP_ALPHA\u0000\u0019PNG_TRANSFORM_STRIP_ALPHA\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000A\u0003\u0000\u0000\b\u0000\u0000\u0000A\u0003\u0000\u0000+\u0000\u0000\u0000A\u0003\u0000\u0000\u0000\u0000\u0000\u0015PNG_TRANSFORM_PACKING\u0000\u0015PNG_TRANSFORM_PACKING\u0015PNG_TRANSFORM_PACKING\u0000\u0015PNG_TRANSFORM_PACKING\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000B\u0003\u0000\u0000\b\u0000\u0000\u0000B\u0003\u0000\u0000+\u0000\u0000\u0000B\u0003\u0000\u0000\u0000\u0000\u0000\u0016PNG_TRANSFORM_PACKSWAP\u0000\u0016PNG_TRANSFORM_PACKSWAP\u0016PNG_TRANSFORM_PACKSWAP\u0000\u0016PNG_TRANSFORM_PACKSWAP\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000C\u0003\u0000\u0000\b\u0000\u0000\u0000C\u0003\u0000\u0000+\u0000\u0000\u0000C\u0003\u0000\u0000\u0000\u0000\u0000\u0014PNG_TRANSFORM_EXPAND\u0000\u0014PNG_TRANSFORM_EXPAND\u0014PNG_TRANSFORM_EXPAND\u0000\u0014PNG_TRANSFORM_EXPAND\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000D\u0003\u0000\u0000\b\u0000\u0000\u0000D\u0003\u0000\u0000+\u0000\u0000\u0000D\u0003\u0000\u0000\u0000\u0000\u0000\u0019PNG_TRANSFORM_INVERT_MONO\u0000\u0019PNG_TRANSFORM_INVERT_MONO\u0019PNG_TRANSFORM_INVERT_MONO\u0000\u0019PNG_TRANSFORM_INVERT_MONO\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000E\u0003\u0000\u0000\b\u0000\u0000\u0000E\u0003\u0000\u0000+\u0000\u0000\u0000E\u0003\u0000\u0000\u0000\u0000\u0000\u0013PNG_TRANSFORM_SHIFT\u0000\u0013PNG_TRANSFORM_SHIFT\u0013PNG_TRANSFORM_SHIFT\u0000\u0013PNG_TRANSFORM_SHIFT\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000F\u0003\u0000\u0000\b\u0000\u0000\u0000F\u0003\u0000\u0000+\u0000\u0000\u0000F\u0003\u0000\u0000\u0000\u0000\u0001\u0011PNG_TRANSFORM_BGR\u0000\u0011PNG_TRANSFORM_BGR\u0011PNG_TRANSFORM_BGR\u0000\u0011PNG_TRANSFORM_BGR\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000G\u0003\u0000\u0000\b\u0000\u0000\u0000G\u0003\u0000\u0000+\u0000\u0000\u0000G\u0003\u0000\u0000\u0000\u0000\u0000\u0018PNG_TRANSFORM_SWAP_ALPHA\u0000\u0018PNG_TRANSFORM_SWAP_ALPHA\u0018PNG_TRANSFORM_SWAP_ALPHA\u0000\u0018PNG_TRANSFORM_SWAP_ALPHA\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000H\u0003\u0000\u0000\b\u0000\u0000\u0000H\u0003\u0000\u0000+\u0000\u0000\u0000H\u0003\u0000\u0000\u0000\u0000\u0000\u0019PNG_TRANSFORM_SWAP_ENDIAN\u0000\u0019PNG_TRANSFORM_SWAP_ENDIAN\u0019PNG_TRANSFORM_SWAP_ENDIAN\u0000\u0019PNG_TRANSFORM_SWAP_ENDIAN\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000I\u0003\u0000\u0000\b\u0000\u0000\u0000I\u0003\u0000\u0000+\u0000\u0000\u0000I\u0003\u0000\u0000\u0000\u0000\u0000\u001APNG_TRANSFORM_INVERT_ALPHA\u0000\u001APNG_TRANSFORM_INVERT_ALPHA\u001APNG_TRANSFORM_INVERT_ALPHA\u0000\u001APNG_TRANSFORM_INVERT_ALPHA\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000J\u0003\u0000\u0000\b\u0000\u0000\u0000J\u0003\u0000\u0000+\u0000\u0000\u0000J\u0003\u0000\u0000\u0000\u0000\u0000\u001APNG_TRANSFORM_STRIP_FILLER\u0000\u001APNG_TRANSFORM_STRIP_FILLER\u001APNG_TRANSFORM_STRIP_FILLER\u0000\u001APNG_TRANSFORM_STRIP_FILLER\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000L\u0003\u0000\u0000\b\u0000\u0000\u0000L\u0003\u0000\u0000D\u0000\u0000\u0000L\u0003\u0000\u0000\u0000\u0000\u0000!PNG_TRANSFORM_STRIP_FILLER_BEFORE\u0000!PNG_TRANSFORM_STRIP_FILLER_BEFORE!PNG_TRANSFORM_STRIP_FILLER_BEFORE\u0000!PNG_TRANSFORM_STRIP_FILLER_BEFORE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000M\u0003\u0000\u0000\b\u0000\u0000\u0000M\u0003\u0000\u0000/\u0000\u0000\u0000M\u0003\u0000\u0000\u0000\u0000\u0000 PNG_TRANSFORM_STRIP_FILLER_AFTER\u0000 PNG_TRANSFORM_STRIP_FILLER_AFTER PNG_TRANSFORM_STRIP_FILLER_AFTER\u0000 PNG_TRANSFORM_STRIP_FILLER_AFTER\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000O\u0003\u0000\u0000\b\u0000\u0000\u0000O\u0003\u0000\u0000*\u0000\u0000\u0000O\u0003\u0000\u0000\u0000\u0000\u0000\u0019PNG_TRANSFORM_GRAY_TO_RGB\u0000\u0019PNG_TRANSFORM_GRAY_TO_RGB\u0019PNG_TRANSFORM_GRAY_TO_RGB\u0000\u0019PNG_TRANSFORM_GRAY_TO_RGB\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Q\u0003\u0000\u0000\b\u0000\u0000\u0000Q\u0003\u0000\u0000*\u0000\u0000\u0000Q\u0003\u0000\u0000\u0000\u0000\u0000\u0017PNG_TRANSFORM_EXPAND_16\u0000\u0017PNG_TRANSFORM_EXPAND_16\u0017PNG_TRANSFORM_EXPAND_16\u0000\u0017PNG_TRANSFORM_EXPAND_16\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000S\u0003\u0000\u0000\b\u0000\u0000\u0000S\u0003\u0000\u0000*\u0000\u0000\u0000S\u0003\u0000\u0000\u0000\u0000\u0000\u0016PNG_TRANSFORM_SCALE_16\u0000\u0016PNG_TRANSFORM_SCALE_16\u0016PNG_TRANSFORM_SCALE_16\u0000\u0016PNG_TRANSFORM_SCALE_16\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000W\u0003\u0000\u0000\b\u0000\u0000\u0000W\u0003\u0000\u0000(\u0000\u0000\u0000W\u0003\u0000\u0000\u0000\u0000\u0000\u0017PNG_FLAG_MNG_EMPTY_PLTE\u0000\u0017PNG_FLAG_MNG_EMPTY_PLTE\u0017PNG_FLAG_MNG_EMPTY_PLTE\u0000\u0017PNG_FLAG_MNG_EMPTY_PLTE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000X\u0003\u0000\u0000\b\u0000\u0000\u0000X\u0003\u0000\u0000(\u0000\u0000\u0000X\u0003\u0000\u0000\u0000\u0000\u0000\u0016PNG_FLAG_MNG_FILTER_64\u0000\u0016PNG_FLAG_MNG_FILTER_64\u0016PNG_FLAG_MNG_FILTER_64\u0000\u0016PNG_FLAG_MNG_FILTER_64\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Y\u0003\u0000\u0000\b\u0000\u0000\u0000Y\u0003\u0000\u0000(\u0000\u0000\u0000Y\u0003\u0000\u0000\u0000\u0000\u0000\u0014PNG_ALL_MNG_FEATURES\u0000\u0014PNG_ALL_MNG_FEATURES\u0014PNG_ALL_MNG_FEATURES\u0000\u0014PNG_ALL_MNG_FEATURES\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\b\u0000\u0000\u0000a\u0003\u0000\u0000\u0000\u0000\u0000\u0000a\u0003\u0000\u0000\b\u0000\u0000\u0000a\u0003\u0000\u0000\u0001\u0000\u0000\u000Epng_malloc_ptr\u000Epng_malloc_ptr\u000Epng_malloc_ptrYtypedef png_voidp (*png_malloc_ptr)(png_structp, png_alloc_size_t) __attribute__((cdecl))\u0000\u000EPNG_MALLOC_PTR\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\b\u0000\u0000\u0000c\u0003\u0000\u0000\u0000\u0000\u0000\u0000c\u0003\u0000\u0000\b\u0000\u0000\u0000c\u0003\u0000\u0000\u0001\u0000\u0000\fpng_free_ptr\fpng_free_ptr\fpng_free_ptrKtypedef void (*png_free_ptr)(png_structp, png_voidp) __attribute__((cdecl))\u0000\fPNG_FREE_PTR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0019png_access_version_number\u000Epng_uint_32 ()\u001Bpng_access_version_number()'png_uint_32 png_access_version_number()\u0000\u0019PNG_ACCESS_VERSION_NUMBER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0011png_set_sig_bytes\u0018void (png_structrp, int)#png_set_sig_bytes(png_structrp,int);void png_set_sig_bytes(png_structrp png_ptr, int num_bytes)\u0000\u0011PNG_SET_SIG_BYTES\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\vpng_sig_cmp%int (png_const_bytep, size_t, size_t)*png_sig_cmp(png_const_bytep,size_t,size_t)Gint png_sig_cmp(png_const_bytep sig, size_t start, size_t num_to_check)\u0000\vPNG_SIG_CMP\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0003\u0000\u0000\b\u0000\u0000\u0000\u0003\u0000\u0000?\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\rpng_check_sig\u0000\rpng_check_sig\rpng_check_sig\u0000\rPNG_CHECK_SIG\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0016png_create_read_structFpng_structp (png_const_charp, png_voidp, png_error_ptr, png_error_ptr)Mpng_create_read_struct(png_const_charp,png_voidp,png_error_ptr,png_error_ptr)ÿ\u0000\u0000\u0000png_structp png_create_read_struct(png_const_charp user_png_ver, png_voidp error_ptr, png_error_ptr error_fn, png_error_ptr warn_fn) __attribute__((malloc))\u0000\u0016PNG_CREATE_READ_STRUCT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0017png_create_write_structFpng_structp (png_const_charp, png_voidp, png_error_ptr, png_error_ptr)Npng_create_write_struct(png_const_charp,png_voidp,png_error_ptr,png_error_ptr)ÿ\u0000\u0000\u0000png_structp png_create_write_struct(png_const_charp user_png_ver, png_voidp error_ptr, png_error_ptr error_fn, png_error_ptr warn_fn) __attribute__((malloc))\u0000\u0017PNG_CREATE_WRITE_STRUCT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000£\u0003\u0000\u0000\u0000\u0000\u0000\u0000£\u0003\u0000\u0000\u0000\u0000\u0000\u0000£\u0003\u0000\u0000\u0000\u0000\u0000\u001Fpng_get_compression_buffer_size\u001Bsize_t (png_const_structrp)3png_get_compression_buffer_size(png_const_structrp)Bsize_t png_get_compression_buffer_size(png_const_structrp png_ptr)\u0000\u001FPNG_GET_COMPRESSION_BUFFER_SIZE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¦\u0003\u0000\u0000\u0000\u0000\u0000\u0000¦\u0003\u0000\u0000\u0000\u0000\u0000\u0000¦\u0003\u0000\u0000\u0000\u0000\u0000\u001Fpng_set_compression_buffer_size\u001Bvoid (png_structrp, size_t)4png_set_compression_buffer_size(png_structrp,size_t)Gvoid png_set_compression_buffer_size(png_structrp png_ptr, size_t size)\u0000\u001FPNG_SET_COMPRESSION_BUFFER_SIZE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000´\u0003\u0000\u0000\u0000\u0000\u0000\u0000´\u0003\u0000\u0000\u0000\u0000\u0000\u0000´\u0003\u0000\u0000\u0000\u0000\u0000\u0012png_set_longjmp_fn0jmp_buf *(png_structrp, png_longjmp_ptr, size_t)7png_set_longjmp_fn(png_structrp,png_longjmp_ptr,size_t)bjmp_buf *png_set_longjmp_fn(png_structrp png_ptr, png_longjmp_ptr longjmp_fn, size_t jmp_buf_size)\u0000\u0012PNG_SET_LONGJMP_FN\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000¶\u0003\u0000\u0000\n\u0000\u0000\u0000¶\u0003\u0000\u0000C\u0000\u0000\u0000·\u0003\u0000\u0000\u0000\u0000\u0000\npng_jmpbuf\u0000\npng_jmpbuf\npng_jmpbuf\u0000\nPNG_JMPBUF\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Á\u0003\u0000\u0000\u0000\u0000\u0000\u0000Á\u0003\u0000\u0000\u0000\u0000\u0000\u0000Á\u0003\u0000\u0000\u0000\u0000\u0000\vpng_longjmp8void (png_const_structrp, int) __attribute__((noreturn))#png_longjmp(png_const_structrp,int)5void png_longjmp(png_const_structrp png_ptr, int val)\u0000\vPNG_LONGJMP\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Æ\u0003\u0000\u0000\u0000\u0000\u0000\u0000Æ\u0003\u0000\u0000\u0000\u0000\u0000\u0000Æ\u0003\u0000\u0000\u0000\u0000\u0000\u0011png_reset_zstream\u0012int (png_structrp)\u001Fpng_reset_zstream(png_structrp)Kint png_reset_zstream(png_structrp png_ptr) __attribute__((deprecated(\"\")))\u0000\u0011PNG_RESET_ZSTREAM\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ë\u0003\u0000\u0000\u0000\u0000\u0000\u0000Ë\u0003\u0000\u0000\u0000\u0000\u0000\u0000Ë\u0003\u0000\u0000\u0000\u0000\u0000\u0018png_create_read_struct_2opng_structp (png_const_charp, png_voidp, png_error_ptr, png_error_ptr, png_voidp, png_malloc_ptr, png_free_ptr)upng_create_read_struct_2(png_const_charp,png_voidp,png_error_ptr,png_error_ptr,png_voidp,png_malloc_ptr,png_free_ptr)ÿá\u0000\u0000\u0000png_structp png_create_read_struct_2(png_const_charp user_png_ver, png_voidp error_ptr, png_error_ptr error_fn, png_error_ptr warn_fn, png_voidp mem_ptr, png_malloc_ptr malloc_fn, png_free_ptr free_fn) __attribute__((malloc))\u0000\u0018PNG_CREATE_READ_STRUCT_2\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ð\u0003\u0000\u0000\u0000\u0000\u0000\u0000Ð\u0003\u0000\u0000\u0000\u0000\u0000\u0000Ð\u0003\u0000\u0000\u0000\u0000\u0000\u0019png_create_write_struct_2opng_structp (png_const_charp, png_voidp, png_error_ptr, png_error_ptr, png_voidp, png_malloc_ptr, png_free_ptr)vpng_create_write_struct_2(png_const_charp,png_voidp,png_error_ptr,png_error_ptr,png_voidp,png_malloc_ptr,png_free_ptr)ÿâ\u0000\u0000\u0000png_structp png_create_write_struct_2(png_const_charp user_png_ver, png_voidp error_ptr, png_error_ptr error_fn, png_error_ptr warn_fn, png_voidp mem_ptr, png_malloc_ptr malloc_fn, png_free_ptr free_fn) __attribute__((malloc))\u0000\u0019PNG_CREATE_WRITE_STRUCT_2\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ø\u0003\u0000\u0000\u0000\u0000\u0000\u0000Ø\u0003\u0000\u0000\u0000\u0000\u0000\u0000Ø\u0003\u0000\u0000\u0000\u0000\u0000\rpng_write_sig\u0013void (png_structrp)\u001Bpng_write_sig(png_structrp)(void png_write_sig(png_structrp png_ptr)\u0000\rPNG_WRITE_SIG\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Û\u0003\u0000\u0000\u0000\u0000\u0000\u0000Û\u0003\u0000\u0000\u0000\u0000\u0000\u0000Û\u0003\u0000\u0000\u0000\u0000\u0000\u000Fpng_write_chunk=void (png_structrp, png_const_bytep, png_const_bytep, size_t)Dpng_write_chunk(png_structrp,png_const_bytep,png_const_bytep,size_t)kvoid png_write_chunk(png_structrp png_ptr, png_const_bytep chunk_name, png_const_bytep data, size_t length)\u0000\u000FPNG_WRITE_CHUNK\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ß\u0003\u0000\u0000\u0000\u0000\u0000\u0000ß\u0003\u0000\u0000\u0000\u0000\u0000\u0000ß\u0003\u0000\u0000\u0000\u0000\u0000\u0015png_write_chunk_start1void (png_structrp, png_const_bytep, png_uint_32)?png_write_chunk_start(png_structrp,png_const_bytep,png_uint_32)`void png_write_chunk_start(png_structrp png_ptr, png_const_bytep chunk_name, png_uint_32 length)\u0000\u0015PNG_WRITE_CHUNK_START\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ã\u0003\u0000\u0000\u0000\u0000\u0000\u0000ã\u0003\u0000\u0000\u0000\u0000\u0000\u0000ã\u0003\u0000\u0000\u0000\u0000\u0000\u0014png_write_chunk_data,void (png_structrp, png_const_bytep, size_t)9png_write_chunk_data(png_structrp,png_const_bytep,size_t)Tvoid png_write_chunk_data(png_structrp png_ptr, png_const_bytep data, size_t length)\u0000\u0014PNG_WRITE_CHUNK_DATA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ç\u0003\u0000\u0000\u0000\u0000\u0000\u0000ç\u0003\u0000\u0000\u0000\u0000\u0000\u0000ç\u0003\u0000\u0000\u0000\u0000\u0000\u0013png_write_chunk_end\u0013void (png_structrp)!png_write_chunk_end(png_structrp).void png_write_chunk_end(png_structrp png_ptr)\u0000\u0013PNG_WRITE_CHUNK_END\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ê\u0003\u0000\u0000\u0000\u0000\u0000\u0000ê\u0003\u0000\u0000\u0000\u0000\u0000\u0000ê\u0003\u0000\u0000\u0000\u0000\u0000\u0016png_create_info_struct\u001Epng_infop (png_const_structrp)*png_create_info_struct(png_const_structrp)Tpng_infop png_create_info_struct(png_const_structrp png_ptr) __attribute__((malloc))\u0000\u0016PNG_CREATE_INFO_STRUCT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ñ\u0003\u0000\u0000\u0000\u0000\u0000\u0000ñ\u0003\u0000\u0000\u0000\u0000\u0000\u0000ñ\u0003\u0000\u0000\u0000\u0000\u0000\u000Fpng_info_init_3\u0019void (png_infopp, size_t)\"png_info_init_3(png_infopp,size_t)fvoid png_info_init_3(png_infopp info_ptr, size_t png_info_struct_size) __attribute__((deprecated(\"\")))\u0000\u000FPNG_INFO_INIT_3\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000õ\u0003\u0000\u0000\u0000\u0000\u0000\u0000õ\u0003\u0000\u0000\u0000\u0000\u0000\u0000õ\u0003\u0000\u0000\u0000\u0000\u0000\u001Apng_write_info_before_PLTE%void (png_structrp, png_const_inforp)9png_write_info_before_PLTE(png_structrp,png_const_inforp)Pvoid png_write_info_before_PLTE(png_structrp png_ptr, png_const_inforp info_ptr)\u0000\u001APNG_WRITE_INFO_BEFORE_PLTE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000÷\u0003\u0000\u0000\u0000\u0000\u0000\u0000÷\u0003\u0000\u0000\u0000\u0000\u0000\u0000÷\u0003\u0000\u0000\u0000\u0000\u0000\u000Epng_write_info%void (png_structrp, png_const_inforp)-png_write_info(png_structrp,png_const_inforp)Dvoid png_write_info(png_structrp png_ptr, png_const_inforp info_ptr)\u0000\u000EPNG_WRITE_INFO\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ü\u0003\u0000\u0000\u0000\u0000\u0000\u0000ü\u0003\u0000\u0000\u0000\u0000\u0000\u0000ü\u0003\u0000\u0000\u0000\u0000\u0000\rpng_read_info\u001Fvoid (png_structrp, png_inforp)&png_read_info(png_structrp,png_inforp)=void png_read_info(png_structrp png_ptr, png_inforp info_ptr)\u0000\rPNG_READ_INFO\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0004\u0000\u0000\u0000\u0000\u0000\u0000\a\u0004\u0000\u0000\u0000\u0000\u0000\u0000\a\u0004\u0000\u0000\u0000\u0000\u0000\u0016png_convert_to_rfc1123/png_const_charp (png_structrp, png_const_timep)4png_convert_to_rfc1123(png_structrp,png_const_timep)spng_const_charp png_convert_to_rfc1123(png_structrp png_ptr, png_const_timep ptime) __attribute__((deprecated(\"\")))\u0000\u0016PNG_CONVERT_TO_RFC1123\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n\u0004\u0000\u0000\u0000\u0000\u0000\u0000\n\u0004\u0000\u0000\u0000\u0000\u0000\u0000\n\u0004\u0000\u0000\u0000\u0000\u0000\u001Dpng_convert_to_rfc1123_buffer\u001Dint (char *, png_const_timep)7png_convert_to_rfc1123_buffer(char[29],png_const_timep)Fint png_convert_to_rfc1123_buffer(char out[29], png_const_timep ptime)\u0000\u001DPNG_CONVERT_TO_RFC1123_BUFFER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0004\u0000\u0000\u0000\u0000\u0000\u001Apng_convert_from_struct_tm#void (png_timep, const struct tm *)/png_convert_from_struct_tm(png_timep,const tm*)Avoid png_convert_from_struct_tm(png_timep ptime, const tm *ttime)\u0000\u001APNG_CONVERT_FROM_STRUCT_TM\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0004\u0000\u0000\u0000\u0000\u0000\u0017png_convert_from_time_t\u0018void (png_timep, time_t))png_convert_from_time_t(png_timep,time_t);void png_convert_from_time_t(png_timep ptime, time_t ttime)\u0000\u0017PNG_CONVERT_FROM_TIME_T\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0019\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0019\u0004\u0000\u0000\u0000\u0000\u0000\u000Epng_set_expand\u0013void (png_structrp)\u001Cpng_set_expand(png_structrp))void png_set_expand(png_structrp png_ptr)\u0000\u000EPNG_SET_EXPAND\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001A\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u001A\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u001A\u0004\u0000\u0000\u0000\u0000\u0000\u001Epng_set_expand_gray_1_2_4_to_8\u0013void (png_structrp),png_set_expand_gray_1_2_4_to_8(png_structrp)9void png_set_expand_gray_1_2_4_to_8(png_structrp png_ptr)\u0000\u001EPNG_SET_EXPAND_GRAY_1_2_4_TO_8\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001B\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u001B\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u001B\u0004\u0000\u0000\u0000\u0000\u0000\u0016png_set_palette_to_rgb\u0013void (png_structrp)$png_set_palette_to_rgb(png_structrp)1void png_set_palette_to_rgb(png_structrp png_ptr)\u0000\u0016PNG_SET_PALETTE_TO_RGB\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001C\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u001C\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u001C\u0004\u0000\u0000\u0000\u0000\u0000\u0015png_set_tRNS_to_alpha\u0013void (png_structrp)#png_set_tRNS_to_alpha(png_structrp)0void png_set_tRNS_to_alpha(png_structrp png_ptr)\u0000\u0015PNG_SET_TRNS_TO_ALPHA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000#\u0004\u0000\u0000\u0000\u0000\u0000\u0000#\u0004\u0000\u0000\u0000\u0000\u0000\u0000#\u0004\u0000\u0000\u0000\u0000\u0000\u0011png_set_expand_16\u0013void (png_structrp)\u001Fpng_set_expand_16(png_structrp),void png_set_expand_16(png_structrp png_ptr)\u0000\u0011PNG_SET_EXPAND_16\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000(\u0004\u0000\u0000\u0000\u0000\u0000\u0000(\u0004\u0000\u0000\u0000\u0000\u0000\u0000(\u0004\u0000\u0000\u0000\u0000\u0000\vpng_set_bgr\u0013void (png_structrp)\u0019png_set_bgr(png_structrp)&void png_set_bgr(png_structrp png_ptr)\u0000\vPNG_SET_BGR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000-\u0004\u0000\u0000\u0000\u0000\u0000\u0000-\u0004\u0000\u0000\u0000\u0000\u0000\u0000-\u0004\u0000\u0000\u0000\u0000\u0000\u0013png_set_gray_to_rgb\u0013void (png_structrp)!png_set_gray_to_rgb(png_structrp).void png_set_gray_to_rgb(png_structrp png_ptr)\u0000\u0013PNG_SET_GRAY_TO_RGB\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u00002\u0004\u0000\u0000\b\u0000\u0000\u00002\u0004\u0000\u0000 \u0000\u0000\u00002\u0004\u0000\u0000\u0000\u0000\u0000\u0015PNG_ERROR_ACTION_NONE\u0000\u0015PNG_ERROR_ACTION_NONE\u0015PNG_ERROR_ACTION_NONE\u0000\u0015PNG_ERROR_ACTION_NONE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u00003\u0004\u0000\u0000\b\u0000\u0000\u00003\u0004\u0000\u0000 \u0000\u0000\u00003\u0004\u0000\u0000\u0000\u0000\u0000\u0015PNG_ERROR_ACTION_WARN\u0000\u0015PNG_ERROR_ACTION_WARN\u0015PNG_ERROR_ACTION_WARN\u0000\u0015PNG_ERROR_ACTION_WARN\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u00004\u0004\u0000\u0000\b\u0000\u0000\u00004\u0004\u0000\u0000 \u0000\u0000\u00004\u0004\u0000\u0000\u0000\u0000\u0000\u0016PNG_ERROR_ACTION_ERROR\u0000\u0016PNG_ERROR_ACTION_ERROR\u0016PNG_ERROR_ACTION_ERROR\u0000\u0016PNG_ERROR_ACTION_ERROR\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u00005\u0004\u0000\u0000\b\u0000\u0000\u00005\u0004\u0000\u0000$\u0000\u0000\u00005\u0004\u0000\u0000\u0000\u0000\u0000\u0017PNG_RGB_TO_GRAY_DEFAULT\u0000\u0017PNG_RGB_TO_GRAY_DEFAULT\u0017PNG_RGB_TO_GRAY_DEFAULT\u0000\u0017PNG_RGB_TO_GRAY_DEFAULT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00007\u0004\u0000\u0000\u0000\u0000\u0000\u00007\u0004\u0000\u0000\u0000\u0000\u0000\u00007\u0004\u0000\u0000\u0000\u0000\u0000\u0013png_set_rgb_to_gray(void (png_structrp, int, double, double)3png_set_rgb_to_gray(png_structrp,int,double,double)Zvoid png_set_rgb_to_gray(png_structrp png_ptr, int error_action, double red, double green)\u0000\u0013PNG_SET_RGB_TO_GRAY\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00009\u0004\u0000\u0000\u0000\u0000\u0000\u00009\u0004\u0000\u0000\u0000\u0000\u0000\u00009\u0004\u0000\u0000\u0000\u0000\u0000\u0019png_set_rgb_to_gray_fixed:void (png_structrp, int, png_fixed_point, png_fixed_point)Kpng_set_rgb_to_gray_fixed(png_structrp,int,png_fixed_point,png_fixed_point)rvoid png_set_rgb_to_gray_fixed(png_structrp png_ptr, int error_action, png_fixed_point red, png_fixed_point green)\u0000\u0019PNG_SET_RGB_TO_GRAY_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000<\u0004\u0000\u0000\u0000\u0000\u0000\u0000<\u0004\u0000\u0000\u0000\u0000\u0000\u0000<\u0004\u0000\u0000\u0000\u0000\u0000\u001Apng_get_rgb_to_gray_status\u001Dpng_byte (png_const_structrp).png_get_rgb_to_gray_status(png_const_structrp)?png_byte png_get_rgb_to_gray_status(png_const_structrp png_ptr)\u0000\u001APNG_GET_RGB_TO_GRAY_STATUS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000A\u0004\u0000\u0000\u0000\u0000\u0000\u0000A\u0004\u0000\u0000\u0000\u0000\u0000\u0000A\u0004\u0000\u0000\u0000\u0000\u0000\u001Bpng_build_grayscale_palette\u0016void (int, png_colorp)+png_build_grayscale_palette(int,png_colorp)Cvoid png_build_grayscale_palette(int bit_depth, png_colorp palette)\u0000\u001BPNG_BUILD_GRAYSCALE_PALETTE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000h\u0004\u0000\u0000\b\u0000\u0000\u0000h\u0004\u0000\u0000!\u0000\u0000\u0000h\u0004\u0000\u0000\u0000\u0000\u0000\rPNG_ALPHA_PNG\u0000\rPNG_ALPHA_PNG\rPNG_ALPHA_PNG\u0000\rPNG_ALPHA_PNG\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000i\u0004\u0000\u0000\b\u0000\u0000\u0000i\u0004\u0000\u0000!\u0000\u0000\u0000i\u0004\u0000\u0000\u0000\u0000\u0000\u0012PNG_ALPHA_STANDARD\u0000\u0012PNG_ALPHA_STANDARD\u0012PNG_ALPHA_STANDARD\u0000\u0012PNG_ALPHA_STANDARD\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000j\u0004\u0000\u0000\b\u0000\u0000\u0000j\u0004\u0000\u0000!\u0000\u0000\u0000j\u0004\u0000\u0000\u0000\u0000\u0000\u0014PNG_ALPHA_ASSOCIATED\u0000\u0014PNG_ALPHA_ASSOCIATED\u0014PNG_ALPHA_ASSOCIATED\u0000\u0014PNG_ALPHA_ASSOCIATED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000k\u0004\u0000\u0000\b\u0000\u0000\u0000k\u0004\u0000\u0000!\u0000\u0000\u0000k\u0004\u0000\u0000\u0000\u0000\u0000\u0017PNG_ALPHA_PREMULTIPLIED\u0000\u0017PNG_ALPHA_PREMULTIPLIED\u0017PNG_ALPHA_PREMULTIPLIED\u0000\u0017PNG_ALPHA_PREMULTIPLIED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000l\u0004\u0000\u0000\b\u0000\u0000\u0000l\u0004\u0000\u0000!\u0000\u0000\u0000l\u0004\u0000\u0000\u0000\u0000\u0000\u0013PNG_ALPHA_OPTIMIZED\u0000\u0013PNG_ALPHA_OPTIMIZED\u0013PNG_ALPHA_OPTIMIZED\u0000\u0013PNG_ALPHA_OPTIMIZED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000m\u0004\u0000\u0000\b\u0000\u0000\u0000m\u0004\u0000\u0000!\u0000\u0000\u0000m\u0004\u0000\u0000\u0000\u0000\u0001\u0010PNG_ALPHA_BROKEN\u0000\u0010PNG_ALPHA_BROKEN\u0010PNG_ALPHA_BROKEN\u0000\u0010PNG_ALPHA_BROKEN\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000o\u0004\u0000\u0000\u0000\u0000\u0000\u0000o\u0004\u0000\u0000\u0000\u0000\u0000\u0000o\u0004\u0000\u0000\u0000\u0000\u0000\u0012png_set_alpha_mode void (png_structrp, int, double)+png_set_alpha_mode(png_structrp,int,double)Lvoid png_set_alpha_mode(png_structrp png_ptr, int mode, double output_gamma)\u0000\u0012PNG_SET_ALPHA_MODE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0004\u0000\u0000\u0000\u0000\u0000\u0000q\u0004\u0000\u0000\u0000\u0000\u0000\u0000q\u0004\u0000\u0000\u0000\u0000\u0000\u0018png_set_alpha_mode_fixed)void (png_structrp, int, png_fixed_point):png_set_alpha_mode_fixed(png_structrp,int,png_fixed_point)[void png_set_alpha_mode_fixed(png_structrp png_ptr, int mode, png_fixed_point output_gamma)\u0000\u0018PNG_SET_ALPHA_MODE_FIXED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000y\u0004\u0000\u0000\b\u0000\u0000\u0000y\u0004\u0000\u0000\u001B\u0000\u0000\u0000y\u0004\u0000\u0000\u0000\u0000\u0000\u0010PNG_DEFAULT_sRGB\u0000\u0010PNG_DEFAULT_sRGB\u0010PNG_DEFAULT_sRGB\u0000\u0010PNG_DEFAULT_SRGB\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000z\u0004\u0000\u0000\b\u0000\u0000\u0000z\u0004\u0000\u0000\u001B\u0000\u0000\u0000z\u0004\u0000\u0000\u0000\u0000\u0000\u0010PNG_GAMMA_MAC_18\u0000\u0010PNG_GAMMA_MAC_18\u0010PNG_GAMMA_MAC_18\u0000\u0010PNG_GAMMA_MAC_18\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000{\u0004\u0000\u0000\b\u0000\u0000\u0000{\u0004\u0000\u0000\u001F\u0000\u0000\u0000{\u0004\u0000\u0000\u0000\u0000\u0000\u000EPNG_GAMMA_sRGB\u0000\u000EPNG_GAMMA_sRGB\u000EPNG_GAMMA_sRGB\u0000\u000EPNG_GAMMA_SRGB\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000|\u0004\u0000\u0000\b\u0000\u0000\u0000|\u0004\u0000\u0000!\u0000\u0000\u0000|\u0004\u0000\u0000\u0000\u0000\u0000\u0010PNG_GAMMA_LINEAR\u0000\u0010PNG_GAMMA_LINEAR\u0010PNG_GAMMA_LINEAR\u0000\u0010PNG_GAMMA_LINEAR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ì\u0004\u0000\u0000\u0000\u0000\u0000\u0000Ì\u0004\u0000\u0000\u0000\u0000\u0000\u0000Ì\u0004\u0000\u0000\u0000\u0000\u0000\u0013png_set_strip_alpha\u0013void (png_structrp)!png_set_strip_alpha(png_structrp).void png_set_strip_alpha(png_structrp png_ptr)\u0000\u0013PNG_SET_STRIP_ALPHA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ñ\u0004\u0000\u0000\u0000\u0000\u0000\u0000Ñ\u0004\u0000\u0000\u0000\u0000\u0000\u0000Ñ\u0004\u0000\u0000\u0000\u0000\u0000\u0012png_set_swap_alpha\u0013void (png_structrp) png_set_swap_alpha(png_structrp)-void png_set_swap_alpha(png_structrp png_ptr)\u0000\u0012PNG_SET_SWAP_ALPHA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ö\u0004\u0000\u0000\u0000\u0000\u0000\u0000Ö\u0004\u0000\u0000\u0000\u0000\u0000\u0000Ö\u0004\u0000\u0000\u0000\u0000\u0000\u0014png_set_invert_alpha\u0013void (png_structrp)\"png_set_invert_alpha(png_structrp)/void png_set_invert_alpha(png_structrp png_ptr)\u0000\u0014PNG_SET_INVERT_ALPHA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Û\u0004\u0000\u0000\u0000\u0000\u0000\u0000Û\u0004\u0000\u0000\u0000\u0000\u0000\u0000Û\u0004\u0000\u0000\u0000\u0000\u0000\u000Epng_set_filler%void (png_structrp, png_uint_32, int),png_set_filler(png_structrp,png_uint_32,int)Hvoid png_set_filler(png_structrp png_ptr, png_uint_32 filler, int flags)\u0000\u000EPNG_SET_FILLER\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000Þ\u0004\u0000\u0000\n\u0000\u0000\u0000Þ\u0004\u0000\u0000\u001D\u0000\u0000\u0000Þ\u0004\u0000\u0000\u0000\u0000\u0000\u0011PNG_FILLER_BEFORE\u0000\u0011PNG_FILLER_BEFORE\u0011PNG_FILLER_BEFORE\u0000\u0011PNG_FILLER_BEFORE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000ß\u0004\u0000\u0000\n\u0000\u0000\u0000ß\u0004\u0000\u0000\u001C\u0000\u0000\u0000ß\u0004\u0000\u0000\u0000\u0000\u0000\u0010PNG_FILLER_AFTER\u0000\u0010PNG_FILLER_AFTER\u0010PNG_FILLER_AFTER\u0000\u0010PNG_FILLER_AFTER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000á\u0004\u0000\u0000\u0000\u0000\u0000\u0000á\u0004\u0000\u0000\u0000\u0000\u0000\u0000á\u0004\u0000\u0000\u0000\u0000\u0000\u0011png_set_add_alpha%void (png_structrp, png_uint_32, int)/png_set_add_alpha(png_structrp,png_uint_32,int)Kvoid png_set_add_alpha(png_structrp png_ptr, png_uint_32 filler, int flags)\u0000\u0011PNG_SET_ADD_ALPHA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ç\u0004\u0000\u0000\u0000\u0000\u0000\u0000ç\u0004\u0000\u0000\u0000\u0000\u0000\u0000ç\u0004\u0000\u0000\u0000\u0000\u0000\fpng_set_swap\u0013void (png_structrp)\u001Apng_set_swap(png_structrp)'void png_set_swap(png_structrp png_ptr)\u0000\fPNG_SET_SWAP\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ì\u0004\u0000\u0000\u0000\u0000\u0000\u0000ì\u0004\u0000\u0000\u0000\u0000\u0000\u0000ì\u0004\u0000\u0000\u0000\u0000\u0000\u000Fpng_set_packing\u0013void (png_structrp)\u001Dpng_set_packing(png_structrp)*void png_set_packing(png_structrp png_ptr)\u0000\u000FPNG_SET_PACKING\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ò\u0004\u0000\u0000\u0000\u0000\u0000\u0000ò\u0004\u0000\u0000\u0000\u0000\u0000\u0000ò\u0004\u0000\u0000\u0000\u0000\u0000\u0010png_set_packswap\u0013void (png_structrp)\u001Epng_set_packswap(png_structrp)+void png_set_packswap(png_structrp png_ptr)\u0000\u0010PNG_SET_PACKSWAP\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000÷\u0004\u0000\u0000\u0000\u0000\u0000\u0000÷\u0004\u0000\u0000\u0000\u0000\u0000\u0000÷\u0004\u0000\u0000\u0000\u0000\u0000\rpng_set_shift'void (png_structrp, png_const_color_8p).png_set_shift(png_structrp,png_const_color_8p)Fvoid png_set_shift(png_structrp png_ptr, png_const_color_8p true_bits)\u0000\rPNG_SET_SHIFT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0005\u0000\u0000\u0000\u0000\u0000\u001Apng_set_interlace_handling\u0012int (png_structrp)(png_set_interlace_handling(png_structrp)4int png_set_interlace_handling(png_structrp png_ptr)\u0000\u001APNG_SET_INTERLACE_HANDLING\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0005\u0000\u0000\u0000\u0000\u0000\u0000\b\u0005\u0000\u0000\u0000\u0000\u0000\u0000\b\u0005\u0000\u0000\u0000\u0000\u0000\u0013png_set_invert_mono\u0013void (png_structrp)!png_set_invert_mono(png_structrp).void png_set_invert_mono(png_structrp png_ptr)\u0000\u0013PNG_SET_INVERT_MONO\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0005\u0000\u0000\u0000\u0000\u0000\u0012png_set_background:void (png_structrp, png_const_color_16p, int, int, double)Cpng_set_background(png_structrp,png_const_color_16p,int,int,double)ÿ\u0000\u0000\u0000void png_set_background(png_structrp png_ptr, png_const_color_16p background_color, int background_gamma_code, int need_expand, double background_gamma)\u0000\u0012PNG_SET_BACKGROUND\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0005\u0000\u0000\u0000\u0000\u0000\u0018png_set_background_fixedCvoid (png_structrp, png_const_color_16p, int, int, png_fixed_point)Rpng_set_background_fixed(png_structrp,png_const_color_16p,int,int,png_fixed_point)ÿ§\u0000\u0000\u0000void png_set_background_fixed(png_structrp png_ptr, png_const_color_16p background_color, int background_gamma_code, int need_expand, png_fixed_point background_gamma)\u0000\u0018PNG_SET_BACKGROUND_FIXED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000\u0019\u0005\u0000\u0000\n\u0000\u0000\u0000\u0019\u0005\u0000\u0000(\u0000\u0000\u0000\u0019\u0005\u0000\u0000\u0000\u0000\u0000\u001CPNG_BACKGROUND_GAMMA_UNKNOWN\u0000\u001CPNG_BACKGROUND_GAMMA_UNKNOWN\u001CPNG_BACKGROUND_GAMMA_UNKNOWN\u0000\u001CPNG_BACKGROUND_GAMMA_UNKNOWN\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000\u001A\u0005\u0000\u0000\n\u0000\u0000\u0000\u001A\u0005\u0000\u0000(\u0000\u0000\u0000\u001A\u0005\u0000\u0000\u0000\u0000\u0000\u001BPNG_BACKGROUND_GAMMA_SCREEN\u0000\u001BPNG_BACKGROUND_GAMMA_SCREEN\u001BPNG_BACKGROUND_GAMMA_SCREEN\u0000\u001BPNG_BACKGROUND_GAMMA_SCREEN\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000\u001B\u0005\u0000\u0000\n\u0000\u0000\u0000\u001B\u0005\u0000\u0000(\u0000\u0000\u0000\u001B\u0005\u0000\u0000\u0000\u0000\u0000\u0019PNG_BACKGROUND_GAMMA_FILE\u0000\u0019PNG_BACKGROUND_GAMMA_FILE\u0019PNG_BACKGROUND_GAMMA_FILE\u0000\u0019PNG_BACKGROUND_GAMMA_FILE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000\u001C\u0005\u0000\u0000\n\u0000\u0000\u0000\u001C\u0005\u0000\u0000(\u0000\u0000\u0000\u001C\u0005\u0000\u0000\u0000\u0000\u0000\u001BPNG_BACKGROUND_GAMMA_UNIQUE\u0000\u001BPNG_BACKGROUND_GAMMA_UNIQUE\u001BPNG_BACKGROUND_GAMMA_UNIQUE\u0000\u001BPNG_BACKGROUND_GAMMA_UNIQUE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000!\u0005\u0000\u0000\u0000\u0000\u0000\u0000!\u0005\u0000\u0000\u0000\u0000\u0000\u0000!\u0005\u0000\u0000\u0000\u0000\u0000\u0010png_set_scale_16\u0013void (png_structrp)\u001Epng_set_scale_16(png_structrp)+void png_set_scale_16(png_structrp png_ptr)\u0000\u0010PNG_SET_SCALE_16\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000%\u0005\u0000\u0000\b\u0000\u0000\u0000%\u0005\u0000\u0000\"\u0000\u0000\u0000%\u0005\u0000\u0000\u0000\u0000\u0000\u001APNG_READ_16_TO_8_SUPPORTED\u0000\u001APNG_READ_16_TO_8_SUPPORTED\u001APNG_READ_16_TO_8_SUPPORTED\u0000\u001APNG_READ_16_TO_8_SUPPORTED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000'\u0005\u0000\u0000\u0000\u0000\u0000\u0000'\u0005\u0000\u0000\u0000\u0000\u0000\u0000'\u0005\u0000\u0000\u0000\u0000\u0000\u0010png_set_strip_16\u0013void (png_structrp)\u001Epng_set_strip_16(png_structrp)+void png_set_strip_16(png_structrp png_ptr)\u0000\u0010PNG_SET_STRIP_16\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000.\u0005\u0000\u0000\u0000\u0000\u0000\u0000.\u0005\u0000\u0000\u0000\u0000\u0000\u0000.\u0005\u0000\u0000\u0000\u0000\u0000\u0010png_set_quantizeBvoid (png_structrp, png_colorp, int, int, png_const_uint_16p, int)Hpng_set_quantize(png_structrp,png_colorp,int,int,png_const_uint_16p,int)ÿ\u0000\u0000\u0000void png_set_quantize(png_structrp png_ptr, png_colorp palette, int num_palette, int maximum_colors, png_const_uint_16p histogram, int full_quantize)\u0000\u0010PNG_SET_QUANTIZE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u00007\u0005\u0000\u0000\b\u0000\u0000\u00007\u0005\u0000\u0000>\u0000\u0000\u00007\u0005\u0000\u0000\u0000\u0000\u0000\u0013PNG_GAMMA_THRESHOLD\u0000\u0013PNG_GAMMA_THRESHOLD\u0013PNG_GAMMA_THRESHOLD\u0000\u0013PNG_GAMMA_THRESHOLD\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000D\u0005\u0000\u0000\u0000\u0000\u0000\u0000D\u0005\u0000\u0000\u0000\u0000\u0000\u0000D\u0005\u0000\u0000\u0000\u0000\u0000\rpng_set_gamma#void (png_structrp, double, double))png_set_gamma(png_structrp,double,double)Yvoid png_set_gamma(png_structrp png_ptr, double screen_gamma, double override_file_gamma)\u0000\rPNG_SET_GAMMA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000F\u0005\u0000\u0000\u0000\u0000\u0000\u0000F\u0005\u0000\u0000\u0000\u0000\u0000\u0000F\u0005\u0000\u0000\u0000\u0000\u0000\u0013png_set_gamma_fixed5void (png_structrp, png_fixed_point, png_fixed_point)Apng_set_gamma_fixed(png_structrp,png_fixed_point,png_fixed_point)qvoid png_set_gamma_fixed(png_structrp png_ptr, png_fixed_point screen_gamma, png_fixed_point override_file_gamma)\u0000\u0013PNG_SET_GAMMA_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000L\u0005\u0000\u0000\u0000\u0000\u0000\u0000L\u0005\u0000\u0000\u0000\u0000\u0000\u0000L\u0005\u0000\u0000\u0000\u0000\u0000\rpng_set_flush\u0018void (png_structrp, int)\u001Fpng_set_flush(png_structrp,int)3void png_set_flush(png_structrp png_ptr, int nrows)\u0000\rPNG_SET_FLUSH\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000N\u0005\u0000\u0000\u0000\u0000\u0000\u0000N\u0005\u0000\u0000\u0000\u0000\u0000\u0000N\u0005\u0000\u0000\u0000\u0000\u0000\u000Fpng_write_flush\u0013void (png_structrp)\u001Dpng_write_flush(png_structrp)*void png_write_flush(png_structrp png_ptr)\u0000\u000FPNG_WRITE_FLUSH\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000R\u0005\u0000\u0000\u0000\u0000\u0000\u0000R\u0005\u0000\u0000\u0000\u0000\u0000\u0000R\u0005\u0000\u0000\u0000\u0000\u0000\u0014png_start_read_image\u0013void (png_structrp)\"png_start_read_image(png_structrp)/void png_start_read_image(png_structrp png_ptr)\u0000\u0014PNG_START_READ_IMAGE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000U\u0005\u0000\u0000\u0000\u0000\u0000\u0000U\u0005\u0000\u0000\u0000\u0000\u0000\u0000U\u0005\u0000\u0000\u0000\u0000\u0000\u0014png_read_update_info\u001Fvoid (png_structrp, png_inforp)-png_read_update_info(png_structrp,png_inforp)Dvoid png_read_update_info(png_structrp png_ptr, png_inforp info_ptr)\u0000\u0014PNG_READ_UPDATE_INFO\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Z\u0005\u0000\u0000\u0000\u0000\u0000\u0000Z\u0005\u0000\u0000\u0000\u0000\u0000\u0000Z\u0005\u0000\u0000\u0000\u0000\u0000\rpng_read_rows8void (png_structrp, png_bytepp, png_bytepp, png_uint_32)=png_read_rows(png_structrp,png_bytepp,png_bytepp,png_uint_32)fvoid png_read_rows(png_structrp png_ptr, png_bytepp row, png_bytepp display_row, png_uint_32 num_rows)\u0000\rPNG_READ_ROWS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000`\u0005\u0000\u0000\u0000\u0000\u0000\u0000`\u0005\u0000\u0000\u0000\u0000\u0000\u0000`\u0005\u0000\u0000\u0000\u0000\u0000\fpng_read_row)void (png_structrp, png_bytep, png_bytep).png_read_row(png_structrp,png_bytep,png_bytep)Mvoid png_read_row(png_structrp png_ptr, png_bytep row, png_bytep display_row)\u0000\fPNG_READ_ROW\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000f\u0005\u0000\u0000\u0000\u0000\u0000\u0000f\u0005\u0000\u0000\u0000\u0000\u0000\u0000f\u0005\u0000\u0000\u0000\u0000\u0000\u000Epng_read_image\u001Fvoid (png_structrp, png_bytepp)'png_read_image(png_structrp,png_bytepp);void png_read_image(png_structrp png_ptr, png_bytepp image)\u0000\u000EPNG_READ_IMAGE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000j\u0005\u0000\u0000\u0000\u0000\u0000\u0000j\u0005\u0000\u0000\u0000\u0000\u0000\u0000j\u0005\u0000\u0000\u0000\u0000\u0000\rpng_write_row$void (png_structrp, png_const_bytep)+png_write_row(png_structrp,png_const_bytep)=void png_write_row(png_structrp png_ptr, png_const_bytep row)\u0000\rPNG_WRITE_ROW\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000r\u0005\u0000\u0000\u0000\u0000\u0000\u0000r\u0005\u0000\u0000\u0000\u0000\u0000\u0000r\u0005\u0000\u0000\u0000\u0000\u0000\u000Epng_write_rows,void (png_structrp, png_bytepp, png_uint_32)3png_write_rows(png_structrp,png_bytepp,png_uint_32)Ovoid png_write_rows(png_structrp png_ptr, png_bytepp row, png_uint_32 num_rows)\u0000\u000EPNG_WRITE_ROWS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000v\u0005\u0000\u0000\u0000\u0000\u0000\u0000v\u0005\u0000\u0000\u0000\u0000\u0000\u0000v\u0005\u0000\u0000\u0000\u0000\u0000\u000Fpng_write_image\u001Fvoid (png_structrp, png_bytepp)(png_write_image(png_structrp,png_bytepp)<void png_write_image(png_structrp png_ptr, png_bytepp image)\u0000\u000FPNG_WRITE_IMAGE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000y\u0005\u0000\u0000\u0000\u0000\u0000\u0000y\u0005\u0000\u0000\u0000\u0000\u0000\u0000y\u0005\u0000\u0000\u0000\u0000\u0000\rpng_write_end\u001Fvoid (png_structrp, png_inforp)&png_write_end(png_structrp,png_inforp)=void png_write_end(png_structrp png_ptr, png_inforp info_ptr)\u0000\rPNG_WRITE_END\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000~\u0005\u0000\u0000\u0000\u0000\u0000\u0000~\u0005\u0000\u0000\u0000\u0000\u0000\u0000~\u0005\u0000\u0000\u0000\u0000\u0000\fpng_read_end\u001Fvoid (png_structrp, png_inforp)%png_read_end(png_structrp,png_inforp)<void png_read_end(png_structrp png_ptr, png_inforp info_ptr)\u0000\fPNG_READ_END\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0017png_destroy_info_struct%void (png_const_structrp, png_infopp)6png_destroy_info_struct(png_const_structrp,png_infopp)Qvoid png_destroy_info_struct(png_const_structrp png_ptr, png_infopp info_ptr_ptr)\u0000\u0017PNG_DESTROY_INFO_STRUCT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0017png_destroy_read_struct+void (png_structpp, png_infopp, png_infopp);png_destroy_read_struct(png_structpp,png_infopp,png_infopp)lvoid png_destroy_read_struct(png_structpp png_ptr_ptr, png_infopp info_ptr_ptr, png_infopp end_info_ptr_ptr)\u0000\u0017PNG_DESTROY_READ_STRUCT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0018png_destroy_write_struct\u001Fvoid (png_structpp, png_infopp)1png_destroy_write_struct(png_structpp,png_infopp)Pvoid png_destroy_write_struct(png_structpp png_ptr_ptr, png_infopp info_ptr_ptr)\u0000\u0018PNG_DESTROY_WRITE_STRUCT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0012png_set_crc_action\u001Dvoid (png_structrp, int, int)(png_set_crc_action(png_structrp,int,int)Pvoid png_set_crc_action(png_structrp png_ptr, int crit_action, int ancil_action)\u0000\u0012PNG_SET_CRC_ACTION\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u001F\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u000FPNG_CRC_DEFAULT\u0000\u000FPNG_CRC_DEFAULT\u000FPNG_CRC_DEFAULT\u0000\u000FPNG_CRC_DEFAULT\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u001F\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0012PNG_CRC_ERROR_QUIT\u0000\u0012PNG_CRC_ERROR_QUIT\u0012PNG_CRC_ERROR_QUIT\u0000\u0012PNG_CRC_ERROR_QUIT\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u001F\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0014PNG_CRC_WARN_DISCARD\u0000\u0014PNG_CRC_WARN_DISCARD\u0014PNG_CRC_WARN_DISCARD\u0000\u0014PNG_CRC_WARN_DISCARD\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u001F\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0010PNG_CRC_WARN_USE\u0000\u0010PNG_CRC_WARN_USE\u0010PNG_CRC_WARN_USE\u0000\u0010PNG_CRC_WARN_USE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u001F\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0011PNG_CRC_QUIET_USE\u0000\u0011PNG_CRC_QUIET_USE\u0011PNG_CRC_QUIET_USE\u0000\u0011PNG_CRC_QUIET_USE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u001F\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0011PNG_CRC_NO_CHANGE\u0000\u0011PNG_CRC_NO_CHANGE\u0011PNG_CRC_NO_CHANGE\u0000\u0011PNG_CRC_NO_CHANGE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000­\u0005\u0000\u0000\u0000\u0000\u0000\u0000­\u0005\u0000\u0000\u0000\u0000\u0000\u0000­\u0005\u0000\u0000\u0000\u0000\u0000\u000Epng_set_filter\u001Dvoid (png_structrp, int, int)$png_set_filter(png_structrp,int,int)Bvoid png_set_filter(png_structrp png_ptr, int method, int filters)\u0000\u000EPNG_SET_FILTER\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000¶\u0005\u0000\u0000\b\u0000\u0000\u0000¶\u0005\u0000\u0000\u001F\u0000\u0000\u0000¶\u0005\u0000\u0000\u0000\u0000\u0000\u000EPNG_NO_FILTERS\u0000\u000EPNG_NO_FILTERS\u000EPNG_NO_FILTERS\u0000\u000EPNG_NO_FILTERS\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000·\u0005\u0000\u0000\b\u0000\u0000\u0000·\u0005\u0000\u0000\u001F\u0000\u0000\u0000·\u0005\u0000\u0000\u0000\u0000\u0000\u000FPNG_FILTER_NONE\u0000\u000FPNG_FILTER_NONE\u000FPNG_FILTER_NONE\u0000\u000FPNG_FILTER_NONE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000¸\u0005\u0000\u0000\b\u0000\u0000\u0000¸\u0005\u0000\u0000\u001F\u0000\u0000\u0000¸\u0005\u0000\u0000\u0000\u0000\u0001\u000EPNG_FILTER_SUB\u0000\u000EPNG_FILTER_SUB\u000EPNG_FILTER_SUB\u0000\u000EPNG_FILTER_SUB\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000¹\u0005\u0000\u0000\b\u0000\u0000\u0000¹\u0005\u0000\u0000\u001F\u0000\u0000\u0000¹\u0005\u0000\u0000\u0000\u0000\u0000\rPNG_FILTER_UP\u0000\rPNG_FILTER_UP\rPNG_FILTER_UP\u0000\rPNG_FILTER_UP\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000º\u0005\u0000\u0000\b\u0000\u0000\u0000º\u0005\u0000\u0000\u001F\u0000\u0000\u0000º\u0005\u0000\u0000\u0000\u0000\u0000\u000EPNG_FILTER_AVG\u0000\u000EPNG_FILTER_AVG\u000EPNG_FILTER_AVG\u0000\u000EPNG_FILTER_AVG\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000»\u0005\u0000\u0000\b\u0000\u0000\u0000»\u0005\u0000\u0000\u001F\u0000\u0000\u0000»\u0005\u0000\u0000\u0000\u0000\u0000\u0010PNG_FILTER_PAETH\u0000\u0010PNG_FILTER_PAETH\u0010PNG_FILTER_PAETH\u0000\u0010PNG_FILTER_PAETH\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000¼\u0005\u0000\u0000\b\u0000\u0000\u0000¼\u0005\u0000\u0000K\u0000\u0000\u0000¼\u0005\u0000\u0000\u0000\u0000\u0000\u0010PNG_FAST_FILTERS\u0000\u0010PNG_FAST_FILTERS\u0010PNG_FAST_FILTERS\u0000\u0010PNG_FAST_FILTERS\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000½\u0005\u0000\u0000\b\u0000\u0000\u0000½\u0005\u0000\u0000N\u0000\u0000\u0000½\u0005\u0000\u0000\u0000\u0000\u0000\u000FPNG_ALL_FILTERS\u0000\u000FPNG_ALL_FILTERS\u000FPNG_ALL_FILTERS\u0000\u000FPNG_ALL_FILTERS\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Â\u0005\u0000\u0000\b\u0000\u0000\u0000Â\u0005\u0000\u0000 \u0000\u0000\u0000Â\u0005\u0000\u0000\u0000\u0000\u0000\u0015PNG_FILTER_VALUE_NONE\u0000\u0015PNG_FILTER_VALUE_NONE\u0015PNG_FILTER_VALUE_NONE\u0000\u0015PNG_FILTER_VALUE_NONE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ã\u0005\u0000\u0000\b\u0000\u0000\u0000Ã\u0005\u0000\u0000 \u0000\u0000\u0000Ã\u0005\u0000\u0000\u0000\u0000\u0000\u0014PNG_FILTER_VALUE_SUB\u0000\u0014PNG_FILTER_VALUE_SUB\u0014PNG_FILTER_VALUE_SUB\u0000\u0014PNG_FILTER_VALUE_SUB\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ä\u0005\u0000\u0000\b\u0000\u0000\u0000Ä\u0005\u0000\u0000 \u0000\u0000\u0000Ä\u0005\u0000\u0000\u0000\u0000\u0000\u0013PNG_FILTER_VALUE_UP\u0000\u0013PNG_FILTER_VALUE_UP\u0013PNG_FILTER_VALUE_UP\u0000\u0013PNG_FILTER_VALUE_UP\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Å\u0005\u0000\u0000\b\u0000\u0000\u0000Å\u0005\u0000\u0000 \u0000\u0000\u0000Å\u0005\u0000\u0000\u0000\u0000\u0000\u0014PNG_FILTER_VALUE_AVG\u0000\u0014PNG_FILTER_VALUE_AVG\u0014PNG_FILTER_VALUE_AVG\u0000\u0014PNG_FILTER_VALUE_AVG\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Æ\u0005\u0000\u0000\b\u0000\u0000\u0000Æ\u0005\u0000\u0000 \u0000\u0000\u0000Æ\u0005\u0000\u0000\u0000\u0000\u0000\u0016PNG_FILTER_VALUE_PAETH\u0000\u0016PNG_FILTER_VALUE_PAETH\u0016PNG_FILTER_VALUE_PAETH\u0000\u0016PNG_FILTER_VALUE_PAETH\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ç\u0005\u0000\u0000\b\u0000\u0000\u0000Ç\u0005\u0000\u0000 \u0000\u0000\u0000Ç\u0005\u0000\u0000\u0000\u0000\u0000\u0015PNG_FILTER_VALUE_LAST\u0000\u0015PNG_FILTER_VALUE_LAST\u0015PNG_FILTER_VALUE_LAST\u0000\u0015PNG_FILTER_VALUE_LAST\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ë\u0005\u0000\u0000\u0000\u0000\u0000\u0000Ë\u0005\u0000\u0000\u0000\u0000\u0000\u0000Ë\u0005\u0000\u0000\u0000\u0000\u0000\u0019png_set_filter_heuristicsCvoid (png_structrp, int, int, png_const_doublep, png_const_doublep)Spng_set_filter_heuristics(png_structrp,int,int,png_const_doublep,png_const_doublep)ÿ\u0000\u0000\u0000void png_set_filter_heuristics(png_structrp png_ptr, int heuristic_method, int num_weights, png_const_doublep filter_weights, png_const_doublep filter_costs)\u0000\u0019PNG_SET_FILTER_HEURISTICS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Î\u0005\u0000\u0000\u0000\u0000\u0000\u0000Î\u0005\u0000\u0000\u0000\u0000\u0000\u0000Î\u0005\u0000\u0000\u0000\u0000\u0000\u001Fpng_set_filter_heuristics_fixedOvoid (png_structrp, int, int, png_const_fixed_point_p, png_const_fixed_point_p)epng_set_filter_heuristics_fixed(png_structrp,int,int,png_const_fixed_point_p,png_const_fixed_point_p)ÿ¯\u0000\u0000\u0000void png_set_filter_heuristics_fixed(png_structrp png_ptr, int heuristic_method, int num_weights, png_const_fixed_point_p filter_weights, png_const_fixed_point_p filter_costs)\u0000\u001FPNG_SET_FILTER_HEURISTICS_FIXED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Õ\u0005\u0000\u0000\b\u0000\u0000\u0000Õ\u0005\u0000\u0000)\u0000\u0000\u0000Õ\u0005\u0000\u0000\u0000\u0000\u0000\u001CPNG_FILTER_HEURISTIC_DEFAULT\u0000\u001CPNG_FILTER_HEURISTIC_DEFAULT\u001CPNG_FILTER_HEURISTIC_DEFAULT\u0000\u001CPNG_FILTER_HEURISTIC_DEFAULT\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ö\u0005\u0000\u0000\b\u0000\u0000\u0000Ö\u0005\u0000\u0000)\u0000\u0000\u0000Ö\u0005\u0000\u0000\u0000\u0000\u0000\u001FPNG_FILTER_HEURISTIC_UNWEIGHTED\u0000\u001FPNG_FILTER_HEURISTIC_UNWEIGHTED\u001FPNG_FILTER_HEURISTIC_UNWEIGHTED\u0000\u001FPNG_FILTER_HEURISTIC_UNWEIGHTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000×\u0005\u0000\u0000\b\u0000\u0000\u0000×\u0005\u0000\u0000)\u0000\u0000\u0000×\u0005\u0000\u0000\u0000\u0000\u0000\u001DPNG_FILTER_HEURISTIC_WEIGHTED\u0000\u001DPNG_FILTER_HEURISTIC_WEIGHTED\u001DPNG_FILTER_HEURISTIC_WEIGHTED\u0000\u001DPNG_FILTER_HEURISTIC_WEIGHTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ø\u0005\u0000\u0000\b\u0000\u0000\u0000Ø\u0005\u0000\u0000)\u0000\u0000\u0000Ø\u0005\u0000\u0000\u0000\u0000\u0000\u0019PNG_FILTER_HEURISTIC_LAST\u0000\u0019PNG_FILTER_HEURISTIC_LAST\u0019PNG_FILTER_HEURISTIC_LAST\u0000\u0019PNG_FILTER_HEURISTIC_LAST\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000â\u0005\u0000\u0000\u0000\u0000\u0000\u0000â\u0005\u0000\u0000\u0000\u0000\u0000\u0000â\u0005\u0000\u0000\u0000\u0000\u0000\u0019png_set_compression_level\u0018void (png_structrp, int)+png_set_compression_level(png_structrp,int)?void png_set_compression_level(png_structrp png_ptr, int level)\u0000\u0019PNG_SET_COMPRESSION_LEVEL\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000å\u0005\u0000\u0000\u0000\u0000\u0000\u0000å\u0005\u0000\u0000\u0000\u0000\u0000\u0000å\u0005\u0000\u0000\u0000\u0000\u0000\u001Dpng_set_compression_mem_level\u0018void (png_structrp, int)/png_set_compression_mem_level(png_structrp,int)Gvoid png_set_compression_mem_level(png_structrp png_ptr, int mem_level)\u0000\u001DPNG_SET_COMPRESSION_MEM_LEVEL\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000è\u0005\u0000\u0000\u0000\u0000\u0000\u0000è\u0005\u0000\u0000\u0000\u0000\u0000\u0000è\u0005\u0000\u0000\u0000\u0000\u0000\u001Cpng_set_compression_strategy\u0018void (png_structrp, int).png_set_compression_strategy(png_structrp,int)Evoid png_set_compression_strategy(png_structrp png_ptr, int strategy)\u0000\u001CPNG_SET_COMPRESSION_STRATEGY\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000î\u0005\u0000\u0000\u0000\u0000\u0000\u0000î\u0005\u0000\u0000\u0000\u0000\u0000\u0000î\u0005\u0000\u0000\u0000\u0000\u0000\u001Fpng_set_compression_window_bits\u0018void (png_structrp, int)1png_set_compression_window_bits(png_structrp,int)Kvoid png_set_compression_window_bits(png_structrp png_ptr, int window_bits)\u0000\u001FPNG_SET_COMPRESSION_WINDOW_BITS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ñ\u0005\u0000\u0000\u0000\u0000\u0000\u0000ñ\u0005\u0000\u0000\u0000\u0000\u0000\u0000ñ\u0005\u0000\u0000\u0000\u0000\u0000\u001Apng_set_compression_method\u0018void (png_structrp, int),png_set_compression_method(png_structrp,int)Avoid png_set_compression_method(png_structrp png_ptr, int method)\u0000\u001APNG_SET_COMPRESSION_METHOD\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000÷\u0005\u0000\u0000\u0000\u0000\u0000\u0000÷\u0005\u0000\u0000\u0000\u0000\u0000\u0000÷\u0005\u0000\u0000\u0000\u0000\u0000\u001Epng_set_text_compression_level\u0018void (png_structrp, int)0png_set_text_compression_level(png_structrp,int)Dvoid png_set_text_compression_level(png_structrp png_ptr, int level)\u0000\u001EPNG_SET_TEXT_COMPRESSION_LEVEL\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ú\u0005\u0000\u0000\u0000\u0000\u0000\u0000ú\u0005\u0000\u0000\u0000\u0000\u0000\u0000ú\u0005\u0000\u0000\u0000\u0000\u0000\"png_set_text_compression_mem_level\u0018void (png_structrp, int)4png_set_text_compression_mem_level(png_structrp,int)Lvoid png_set_text_compression_mem_level(png_structrp png_ptr, int mem_level)\u0000\"PNG_SET_TEXT_COMPRESSION_MEM_LEVEL\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ý\u0005\u0000\u0000\u0000\u0000\u0000\u0000ý\u0005\u0000\u0000\u0000\u0000\u0000\u0000ý\u0005\u0000\u0000\u0000\u0000\u0000!png_set_text_compression_strategy\u0018void (png_structrp, int)3png_set_text_compression_strategy(png_structrp,int)Jvoid png_set_text_compression_strategy(png_structrp png_ptr, int strategy)\u0000!PNG_SET_TEXT_COMPRESSION_STRATEGY\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0006\u0000\u0000\u0000\u0000\u0000$png_set_text_compression_window_bits\u0018void (png_structrp, int)6png_set_text_compression_window_bits(png_structrp,int)Pvoid png_set_text_compression_window_bits(png_structrp png_ptr, int window_bits)\u0000$PNG_SET_TEXT_COMPRESSION_WINDOW_BITS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0006\u0000\u0000\u0000\u0000\u0000\u001Fpng_set_text_compression_method\u0018void (png_structrp, int)1png_set_text_compression_method(png_structrp,int)Fvoid png_set_text_compression_method(png_structrp png_ptr, int method)\u0000\u001FPNG_SET_TEXT_COMPRESSION_METHOD\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0006\u0000\u0000\u0000\u0000\u0000\vpng_init_io\u001Fvoid (png_structrp, png_FILE_p)$png_init_io(png_structrp,png_FILE_p)5void png_init_io(png_structrp png_ptr, png_FILE_p fp)\u0000\vPNG_INIT_IO\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000!\u0006\u0000\u0000\u0000\u0000\u0000\u0000!\u0006\u0000\u0000\u0000\u0000\u0000\u0000!\u0006\u0000\u0000\u0000\u0000\u0000\u0010png_set_error_fn<void (png_structrp, png_voidp, png_error_ptr, png_error_ptr)Dpng_set_error_fn(png_structrp,png_voidp,png_error_ptr,png_error_ptr)rvoid png_set_error_fn(png_structrp png_ptr, png_voidp error_ptr, png_error_ptr error_fn, png_error_ptr warning_fn)\u0000\u0010PNG_SET_ERROR_FN\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000%\u0006\u0000\u0000\u0000\u0000\u0000\u0000%\u0006\u0000\u0000\u0000\u0000\u0000\u0000%\u0006\u0000\u0000\u0000\u0000\u0000\u0011png_get_error_ptr\u001Epng_voidp (png_const_structrp)%png_get_error_ptr(png_const_structrp)7png_voidp png_get_error_ptr(png_const_structrp png_ptr)\u0000\u0011PNG_GET_ERROR_PTR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00001\u0006\u0000\u0000\u0000\u0000\u0000\u00001\u0006\u0000\u0000\u0000\u0000\u0000\u00001\u0006\u0000\u0000\u0000\u0000\u0000\u0010png_set_write_fn9void (png_structrp, png_voidp, png_rw_ptr, png_flush_ptr)Apng_set_write_fn(png_structrp,png_voidp,png_rw_ptr,png_flush_ptr)vvoid png_set_write_fn(png_structrp png_ptr, png_voidp io_ptr, png_rw_ptr write_data_fn, png_flush_ptr output_flush_fn)\u0000\u0010PNG_SET_WRITE_FN\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00005\u0006\u0000\u0000\u0000\u0000\u0000\u00005\u0006\u0000\u0000\u0000\u0000\u0000\u00005\u0006\u0000\u0000\u0000\u0000\u0000\u000Fpng_set_read_fn*void (png_structrp, png_voidp, png_rw_ptr)2png_set_read_fn(png_structrp,png_voidp,png_rw_ptr)Uvoid png_set_read_fn(png_structrp png_ptr, png_voidp io_ptr, png_rw_ptr read_data_fn)\u0000\u000FPNG_SET_READ_FN\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00009\u0006\u0000\u0000\u0000\u0000\u0000\u00009\u0006\u0000\u0000\u0000\u0000\u0000\u00009\u0006\u0000\u0000\u0000\u0000\u0000\u000Epng_get_io_ptr\u001Epng_voidp (png_const_structrp)\"png_get_io_ptr(png_const_structrp)4png_voidp png_get_io_ptr(png_const_structrp png_ptr)\u0000\u000EPNG_GET_IO_PTR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000;\u0006\u0000\u0000\u0000\u0000\u0000\u0000;\u0006\u0000\u0000\u0000\u0000\u0000\u0000;\u0006\u0000\u0000\u0000\u0000\u0000\u0016png_set_read_status_fn(void (png_structrp, png_read_status_ptr)8png_set_read_status_fn(png_structrp,png_read_status_ptr)Rvoid png_set_read_status_fn(png_structrp png_ptr, png_read_status_ptr read_row_fn)\u0000\u0016PNG_SET_READ_STATUS_FN\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000>\u0006\u0000\u0000\u0000\u0000\u0000\u0000>\u0006\u0000\u0000\u0000\u0000\u0000\u0000>\u0006\u0000\u0000\u0000\u0000\u0000\u0017png_set_write_status_fn)void (png_structrp, png_write_status_ptr):png_set_write_status_fn(png_structrp,png_write_status_ptr)Uvoid png_set_write_status_fn(png_structrp png_ptr, png_write_status_ptr write_row_fn)\u0000\u0017PNG_SET_WRITE_STATUS_FN\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000C\u0006\u0000\u0000\u0000\u0000\u0000\u0000C\u0006\u0000\u0000\u0000\u0000\u0000\u0000C\u0006\u0000\u0000\u0000\u0000\u0000\u000Epng_set_mem_fn<void (png_structrp, png_voidp, png_malloc_ptr, png_free_ptr)Bpng_set_mem_fn(png_structrp,png_voidp,png_malloc_ptr,png_free_ptr)lvoid png_set_mem_fn(png_structrp png_ptr, png_voidp mem_ptr, png_malloc_ptr malloc_fn, png_free_ptr free_fn)\u0000\u000EPNG_SET_MEM_FN\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000F\u0006\u0000\u0000\u0000\u0000\u0000\u0000F\u0006\u0000\u0000\u0000\u0000\u0000\u0000F\u0006\u0000\u0000\u0000\u0000\u0000\u000Fpng_get_mem_ptr\u001Epng_voidp (png_const_structrp)#png_get_mem_ptr(png_const_structrp)5png_voidp png_get_mem_ptr(png_const_structrp png_ptr)\u0000\u000FPNG_GET_MEM_PTR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000J\u0006\u0000\u0000\u0000\u0000\u0000\u0000J\u0006\u0000\u0000\u0000\u0000\u0000\u0000J\u0006\u0000\u0000\u0000\u0000\u0000\u001Epng_set_read_user_transform_fn+void (png_structrp, png_user_transform_ptr)Cpng_set_read_user_transform_fn(png_structrp,png_user_transform_ptr)hvoid png_set_read_user_transform_fn(png_structrp png_ptr, png_user_transform_ptr read_user_transform_fn)\u0000\u001EPNG_SET_READ_USER_TRANSFORM_FN\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000O\u0006\u0000\u0000\u0000\u0000\u0000\u0000O\u0006\u0000\u0000\u0000\u0000\u0000\u0000O\u0006\u0000\u0000\u0000\u0000\u0000\u001Fpng_set_write_user_transform_fn+void (png_structrp, png_user_transform_ptr)Dpng_set_write_user_transform_fn(png_structrp,png_user_transform_ptr)jvoid png_set_write_user_transform_fn(png_structrp png_ptr, png_user_transform_ptr write_user_transform_fn)\u0000\u001FPNG_SET_WRITE_USER_TRANSFORM_FN\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000T\u0006\u0000\u0000\u0000\u0000\u0000\u0000T\u0006\u0000\u0000\u0000\u0000\u0000\u0000T\u0006\u0000\u0000\u0000\u0000\u0000\u001Bpng_set_user_transform_info(void (png_structrp, png_voidp, int, int);png_set_user_transform_info(png_structrp,png_voidp,int,int)ÿ\u0000\u0000\u0000void png_set_user_transform_info(png_structrp png_ptr, png_voidp user_transform_ptr, int user_transform_depth, int user_transform_channels)\u0000\u001BPNG_SET_USER_TRANSFORM_INFO\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000X\u0006\u0000\u0000\u0000\u0000\u0000\u0000X\u0006\u0000\u0000\u0000\u0000\u0000\u0000X\u0006\u0000\u0000\u0000\u0000\u0000\u001Apng_get_user_transform_ptr\u001Epng_voidp (png_const_structrp).png_get_user_transform_ptr(png_const_structrp)@png_voidp png_get_user_transform_ptr(png_const_structrp png_ptr)\u0000\u001APNG_GET_USER_TRANSFORM_PTR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000h\u0006\u0000\u0000\u0000\u0000\u0000\u0000h\u0006\u0000\u0000\u0000\u0000\u0000\u0000h\u0006\u0000\u0000\u0000\u0000\u0000\u001Apng_get_current_row_number png_uint_32 (png_const_structrp).png_get_current_row_number(png_const_structrp):png_uint_32 png_get_current_row_number(png_const_structrp)\u0000\u001APNG_GET_CURRENT_ROW_NUMBER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000i\u0006\u0000\u0000\u0000\u0000\u0000\u0000i\u0006\u0000\u0000\u0000\u0000\u0000\u0000i\u0006\u0000\u0000\u0000\u0000\u0000\u001Bpng_get_current_pass_number\u001Dpng_byte (png_const_structrp)/png_get_current_pass_number(png_const_structrp)8png_byte png_get_current_pass_number(png_const_structrp)\u0000\u001BPNG_GET_CURRENT_PASS_NUMBER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u001Apng_set_read_user_chunk_fn2void (png_structrp, png_voidp, png_user_chunk_ptr)Epng_set_read_user_chunk_fn(png_structrp,png_voidp,png_user_chunk_ptr)vvoid png_set_read_user_chunk_fn(png_structrp png_ptr, png_voidp user_chunk_ptr, png_user_chunk_ptr read_user_chunk_fn)\u0000\u001APNG_SET_READ_USER_CHUNK_FN\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0016png_get_user_chunk_ptr\u001Epng_voidp (png_const_structrp)*png_get_user_chunk_ptr(png_const_structrp)<png_voidp png_get_user_chunk_ptr(png_const_structrp png_ptr)\u0000\u0016PNG_GET_USER_CHUNK_PTR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u001Bpng_set_progressive_read_fnjvoid (png_structrp, png_voidp, png_progressive_info_ptr, png_progressive_row_ptr, png_progressive_end_ptr)|png_set_progressive_read_fn(png_structrp,png_voidp,png_progressive_info_ptr,png_progressive_row_ptr,png_progressive_end_ptr)ÿ³\u0000\u0000\u0000void png_set_progressive_read_fn(png_structrp png_ptr, png_voidp progressive_ptr, png_progressive_info_ptr info_fn, png_progressive_row_ptr row_fn, png_progressive_end_ptr end_fn)\u0000\u001BPNG_SET_PROGRESSIVE_READ_FN\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0017png_get_progressive_ptr\u001Epng_voidp (png_const_structrp)+png_get_progressive_ptr(png_const_structrp)=png_voidp png_get_progressive_ptr(png_const_structrp png_ptr)\u0000\u0017PNG_GET_PROGRESSIVE_PTR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0010png_process_data2void (png_structrp, png_inforp, png_bytep, size_t):png_process_data(png_structrp,png_inforp,png_bytep,size_t)fvoid png_process_data(png_structrp png_ptr, png_inforp info_ptr, png_bytep buffer, size_t buffer_size)\u0000\u0010PNG_PROCESS_DATA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0016png_process_data_pause\u001Asize_t (png_structrp, int)(png_process_data_pause(png_structrp,int)5size_t png_process_data_pause(png_structrp, int save)\u0000\u0016PNG_PROCESS_DATA_PAUSE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000§\u0006\u0000\u0000\u0000\u0000\u0000\u0000§\u0006\u0000\u0000\u0000\u0000\u0000\u0000§\u0006\u0000\u0000\u0000\u0000\u0000\u0015png_process_data_skip\u001Apng_uint_32 (png_structrp)#png_process_data_skip(png_structrp)/png_uint_32 png_process_data_skip(png_structrp)\u0000\u0015PNG_PROCESS_DATA_SKIP\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000®\u0006\u0000\u0000\u0000\u0000\u0000\u0000®\u0006\u0000\u0000\u0000\u0000\u0000\u0000®\u0006\u0000\u0000\u0000\u0000\u0000\u001Bpng_progressive_combine_row5void (png_const_structrp, png_bytep, png_const_bytep)Ipng_progressive_combine_row(png_const_structrp,png_bytep,png_const_bytep)hvoid png_progressive_combine_row(png_const_structrp png_ptr, png_bytep old_row, png_const_bytep new_row)\u0000\u001BPNG_PROGRESSIVE_COMBINE_ROW\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000²\u0006\u0000\u0000\u0000\u0000\u0000\u0000²\u0006\u0000\u0000\u0000\u0000\u0000\u0000²\u0006\u0000\u0000\u0000\u0000\u0000\npng_malloc0png_voidp (png_const_structrp, png_alloc_size_t)/png_malloc(png_const_structrp,png_alloc_size_t)_png_voidp png_malloc(png_const_structrp png_ptr, png_alloc_size_t size) __attribute__((malloc))\u0000\nPNG_MALLOC\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000µ\u0006\u0000\u0000\u0000\u0000\u0000\u0000µ\u0006\u0000\u0000\u0000\u0000\u0000\u0000µ\u0006\u0000\u0000\u0000\u0000\u0000\npng_calloc0png_voidp (png_const_structrp, png_alloc_size_t)/png_calloc(png_const_structrp,png_alloc_size_t)_png_voidp png_calloc(png_const_structrp png_ptr, png_alloc_size_t size) __attribute__((malloc))\u0000\nPNG_CALLOC\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¹\u0006\u0000\u0000\u0000\u0000\u0000\u0000¹\u0006\u0000\u0000\u0000\u0000\u0000\u0000¹\u0006\u0000\u0000\u0000\u0000\u0000\u000Fpng_malloc_warn0png_voidp (png_const_structrp, png_alloc_size_t)4png_malloc_warn(png_const_structrp,png_alloc_size_t)dpng_voidp png_malloc_warn(png_const_structrp png_ptr, png_alloc_size_t size) __attribute__((malloc))\u0000\u000FPNG_MALLOC_WARN\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000½\u0006\u0000\u0000\u0000\u0000\u0000\u0000½\u0006\u0000\u0000\u0000\u0000\u0000\u0000½\u0006\u0000\u0000\u0000\u0000\u0000\bpng_free$void (png_const_structrp, png_voidp)&png_free(png_const_structrp,png_voidp)8void png_free(png_const_structrp png_ptr, png_voidp ptr)\u0000\bPNG_FREE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000À\u0006\u0000\u0000\u0000\u0000\u0000\u0000À\u0006\u0000\u0000\u0000\u0000\u0000\u0000À\u0006\u0000\u0000\u0000\u0000\u0000\rpng_free_data7void (png_const_structrp, png_inforp, png_uint_32, int)<png_free_data(png_const_structrp,png_inforp,png_uint_32,int)avoid png_free_data(png_const_structrp png_ptr, png_inforp info_ptr, png_uint_32 free_me, int num)\u0000\rPNG_FREE_DATA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ç\u0006\u0000\u0000\u0000\u0000\u0000\u0000Ç\u0006\u0000\u0000\u0000\u0000\u0000\u0000Ç\u0006\u0000\u0000\u0000\u0000\u0000\u000Epng_data_freer7void (png_const_structrp, png_inforp, int, png_uint_32)=png_data_freer(png_const_structrp,png_inforp,int,png_uint_32)avoid png_data_freer(png_const_structrp png_ptr, png_inforp info_ptr, int freer, png_uint_32 mask)\u0000\u000EPNG_DATA_FREER\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ë\u0006\u0000\u0000\b\u0000\u0000\u0000Ë\u0006\u0000\u0000$\u0000\u0000\u0000Ë\u0006\u0000\u0000\u0000\u0000\u0000\u001APNG_DESTROY_WILL_FREE_DATA\u0000\u001APNG_DESTROY_WILL_FREE_DATA\u001APNG_DESTROY_WILL_FREE_DATA\u0000\u001APNG_DESTROY_WILL_FREE_DATA\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ì\u0006\u0000\u0000\b\u0000\u0000\u0000Ì\u0006\u0000\u0000 \u0000\u0000\u0000Ì\u0006\u0000\u0000\u0000\u0000\u0001\u0016PNG_SET_WILL_FREE_DATA\u0000\u0016PNG_SET_WILL_FREE_DATA\u0016PNG_SET_WILL_FREE_DATA\u0000\u0016PNG_SET_WILL_FREE_DATA\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Í\u0006\u0000\u0000\b\u0000\u0000\u0000Í\u0006\u0000\u0000!\u0000\u0000\u0000Í\u0006\u0000\u0000\u0000\u0000\u0000\u0017PNG_USER_WILL_FREE_DATA\u0000\u0017PNG_USER_WILL_FREE_DATA\u0017PNG_USER_WILL_FREE_DATA\u0000\u0017PNG_USER_WILL_FREE_DATA\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ï\u0006\u0000\u0000\b\u0000\u0000\u0000Ï\u0006\u0000\u0000\u001D\u0000\u0000\u0000Ï\u0006\u0000\u0000\u0000\u0000\u0000\rPNG_FREE_HIST\u0000\rPNG_FREE_HIST\rPNG_FREE_HIST\u0000\rPNG_FREE_HIST\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ð\u0006\u0000\u0000\b\u0000\u0000\u0000Ð\u0006\u0000\u0000\u001D\u0000\u0000\u0000Ð\u0006\u0000\u0000\u0000\u0000\u0000\rPNG_FREE_ICCP\u0000\rPNG_FREE_ICCP\rPNG_FREE_ICCP\u0000\rPNG_FREE_ICCP\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ñ\u0006\u0000\u0000\b\u0000\u0000\u0000Ñ\u0006\u0000\u0000\u001D\u0000\u0000\u0000Ñ\u0006\u0000\u0000\u0000\u0000\u0000\rPNG_FREE_SPLT\u0000\rPNG_FREE_SPLT\rPNG_FREE_SPLT\u0000\rPNG_FREE_SPLT\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ò\u0006\u0000\u0000\b\u0000\u0000\u0000Ò\u0006\u0000\u0000\u001D\u0000\u0000\u0000Ò\u0006\u0000\u0000\u0000\u0000\u0000\rPNG_FREE_ROWS\u0000\rPNG_FREE_ROWS\rPNG_FREE_ROWS\u0000\rPNG_FREE_ROWS\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ó\u0006\u0000\u0000\b\u0000\u0000\u0000Ó\u0006\u0000\u0000\u001D\u0000\u0000\u0000Ó\u0006\u0000\u0000\u0000\u0000\u0000\rPNG_FREE_PCAL\u0000\rPNG_FREE_PCAL\rPNG_FREE_PCAL\u0000\rPNG_FREE_PCAL\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ô\u0006\u0000\u0000\b\u0000\u0000\u0000Ô\u0006\u0000\u0000\u001D\u0000\u0000\u0000Ô\u0006\u0000\u0000\u0000\u0000\u0000\rPNG_FREE_SCAL\u0000\rPNG_FREE_SCAL\rPNG_FREE_SCAL\u0000\rPNG_FREE_SCAL\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000Ö\u0006\u0000\u0000\n\u0000\u0000\u0000Ö\u0006\u0000\u0000\u001F\u0000\u0000\u0000Ö\u0006\u0000\u0000\u0000\u0000\u0000\rPNG_FREE_UNKN\u0000\rPNG_FREE_UNKN\rPNG_FREE_UNKN\u0000\rPNG_FREE_UNKN\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ù\u0006\u0000\u0000\b\u0000\u0000\u0000Ù\u0006\u0000\u0000\u001D\u0000\u0000\u0000Ù\u0006\u0000\u0000\u0000\u0000\u0000\rPNG_FREE_PLTE\u0000\rPNG_FREE_PLTE\rPNG_FREE_PLTE\u0000\rPNG_FREE_PLTE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ú\u0006\u0000\u0000\b\u0000\u0000\u0000Ú\u0006\u0000\u0000\u001D\u0000\u0000\u0000Ú\u0006\u0000\u0000\u0000\u0000\u0000\rPNG_FREE_TRNS\u0000\rPNG_FREE_TRNS\rPNG_FREE_TRNS\u0000\rPNG_FREE_TRNS\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Û\u0006\u0000\u0000\b\u0000\u0000\u0000Û\u0006\u0000\u0000\u001D\u0000\u0000\u0000Û\u0006\u0000\u0000\u0000\u0000\u0000\rPNG_FREE_TEXT\u0000\rPNG_FREE_TEXT\rPNG_FREE_TEXT\u0000\rPNG_FREE_TEXT\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ü\u0006\u0000\u0000\b\u0000\u0000\u0000Ü\u0006\u0000\u0000\u001D\u0000\u0000\u0000Ü\u0006\u0000\u0000\u0000\u0000\u0000\rPNG_FREE_EXIF\u0000\rPNG_FREE_EXIF\rPNG_FREE_EXIF\u0000\rPNG_FREE_EXIF\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ý\u0006\u0000\u0000\b\u0000\u0000\u0000Ý\u0006\u0000\u0000\u001D\u0000\u0000\u0000Ý\u0006\u0000\u0000\u0000\u0000\u0000\fPNG_FREE_ALL\u0000\fPNG_FREE_ALL\fPNG_FREE_ALL\u0000\fPNG_FREE_ALL\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Þ\u0006\u0000\u0000\b\u0000\u0000\u0000Þ\u0006\u0000\u0000\u001D\u0000\u0000\u0000Þ\u0006\u0000\u0000\u0000\u0000\u0000\fPNG_FREE_MUL\u0000\fPNG_FREE_MUL\fPNG_FREE_MUL\u0000\fPNG_FREE_MUL\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000á\u0006\u0000\u0000\u0000\u0000\u0000\u0000á\u0006\u0000\u0000\u0000\u0000\u0000\u0000á\u0006\u0000\u0000\u0000\u0000\u0000\u0012png_malloc_default0png_voidp (png_const_structrp, png_alloc_size_t)7png_malloc_default(png_const_structrp,png_alloc_size_t)ÿ\u0000\u0000\u0000png_voidp png_malloc_default(png_const_structrp png_ptr, png_alloc_size_t size) __attribute__((malloc)) __attribute__((deprecated(\"\")))\u0000\u0012PNG_MALLOC_DEFAULT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ã\u0006\u0000\u0000\u0000\u0000\u0000\u0000ã\u0006\u0000\u0000\u0000\u0000\u0000\u0000ã\u0006\u0000\u0000\u0000\u0000\u0000\u0010png_free_default$void (png_const_structrp, png_voidp).png_free_default(png_const_structrp,png_voidp)`void png_free_default(png_const_structrp png_ptr, png_voidp ptr) __attribute__((deprecated(\"\")))\u0000\u0010PNG_FREE_DEFAULT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000é\u0006\u0000\u0000\u0000\u0000\u0000\u0000é\u0006\u0000\u0000\u0000\u0000\u0000\u0000é\u0006\u0000\u0000\u0000\u0000\u0000\tpng_errorDvoid (png_const_structrp, png_const_charp) __attribute__((noreturn))-png_error(png_const_structrp,png_const_charp)Ivoid png_error(png_const_structrp png_ptr, png_const_charp error_message)\u0000\tPNG_ERROR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000í\u0006\u0000\u0000\u0000\u0000\u0000\u0000í\u0006\u0000\u0000\u0000\u0000\u0000\u0000í\u0006\u0000\u0000\u0000\u0000\u0000\u000Fpng_chunk_errorDvoid (png_const_structrp, png_const_charp) __attribute__((noreturn))3png_chunk_error(png_const_structrp,png_const_charp)Ovoid png_chunk_error(png_const_structrp png_ptr, png_const_charp error_message)\u0000\u000FPNG_CHUNK_ERROR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ù\u0006\u0000\u0000\u0000\u0000\u0000\u0000ù\u0006\u0000\u0000\u0000\u0000\u0000\u0000ù\u0006\u0000\u0000\u0000\u0000\u0000\vpng_warning*void (png_const_structrp, png_const_charp)/png_warning(png_const_structrp,png_const_charp)Mvoid png_warning(png_const_structrp png_ptr, png_const_charp warning_message)\u0000\vPNG_WARNING\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ý\u0006\u0000\u0000\u0000\u0000\u0000\u0000ý\u0006\u0000\u0000\u0000\u0000\u0000\u0000ý\u0006\u0000\u0000\u0000\u0000\u0000\u0011png_chunk_warning*void (png_const_structrp, png_const_charp)5png_chunk_warning(png_const_structrp,png_const_charp)Svoid png_chunk_warning(png_const_structrp png_ptr, png_const_charp warning_message)\u0000\u0011PNG_CHUNK_WARNING\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\a\u0000\u0000\u0000\u0000\u0000\u0000\a\a\u0000\u0000\u0000\u0000\u0000\u0000\a\a\u0000\u0000\u0000\u0000\u0000\u0010png_benign_error*void (png_const_structrp, png_const_charp)4png_benign_error(png_const_structrp,png_const_charp)Rvoid png_benign_error(png_const_structrp png_ptr, png_const_charp warning_message)\u0000\u0010PNG_BENIGN_ERROR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\f\a\u0000\u0000\u0000\u0000\u0000\u0000\f\a\u0000\u0000\u0000\u0000\u0000\u0000\f\a\u0000\u0000\u0000\u0000\u0000\u0016png_chunk_benign_error*void (png_const_structrp, png_const_charp):png_chunk_benign_error(png_const_structrp,png_const_charp)Xvoid png_chunk_benign_error(png_const_structrp png_ptr, png_const_charp warning_message)\u0000\u0016PNG_CHUNK_BENIGN_ERROR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\a\u0000\u0000\u0000\u0000\u0000\u0000\u0010\a\u0000\u0000\u0000\u0000\u0000\u0000\u0010\a\u0000\u0000\u0000\u0000\u0000\u0015png_set_benign_errors\u0018void (png_structrp, int)'png_set_benign_errors(png_structrp,int)=void png_set_benign_errors(png_structrp png_ptr, int allowed)\u0000\u0015PNG_SET_BENIGN_ERRORS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000)\a\u0000\u0000\u0000\u0000\u0000\u0000)\a\u0000\u0000\u0000\u0000\u0000\u0000)\a\u0000\u0000\u0000\u0000\u0000\rpng_get_valid?png_uint_32 (png_const_structrp, png_const_inforp, png_uint_32)>png_get_valid(png_const_structrp,png_const_inforp,png_uint_32)bpng_uint_32 png_get_valid(png_const_structrp png_ptr, png_const_inforp info_ptr, png_uint_32 flag)\u0000\rPNG_GET_VALID\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000-\a\u0000\u0000\u0000\u0000\u0000\u0000-\a\u0000\u0000\u0000\u0000\u0000\u0000-\a\u0000\u0000\u0000\u0000\u0000\u0010png_get_rowbytes-size_t (png_const_structrp, png_const_inforp)5png_get_rowbytes(png_const_structrp,png_const_inforp)Nsize_t png_get_rowbytes(png_const_structrp png_ptr, png_const_inforp info_ptr)\u0000\u0010PNG_GET_ROWBYTES\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00004\a\u0000\u0000\u0000\u0000\u0000\u00004\a\u0000\u0000\u0000\u0000\u0000\u00004\a\u0000\u0000\u0000\u0000\u0000\fpng_get_rows1png_bytepp (png_const_structrp, png_const_inforp)1png_get_rows(png_const_structrp,png_const_inforp)Npng_bytepp png_get_rows(png_const_structrp png_ptr, png_const_inforp info_ptr)\u0000\fPNG_GET_ROWS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000:\a\u0000\u0000\u0000\u0000\u0000\u0000:\a\u0000\u0000\u0000\u0000\u0000\u0000:\a\u0000\u0000\u0000\u0000\u0000\fpng_set_rows1void (png_const_structrp, png_inforp, png_bytepp)6png_set_rows(png_const_structrp,png_inforp,png_bytepp)[void png_set_rows(png_const_structrp png_ptr, png_inforp info_ptr, png_bytepp row_pointers)\u0000\fPNG_SET_ROWS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000?\a\u0000\u0000\u0000\u0000\u0000\u0000?\a\u0000\u0000\u0000\u0000\u0000\u0000?\a\u0000\u0000\u0000\u0000\u0000\u0010png_get_channels/png_byte (png_const_structrp, png_const_inforp)5png_get_channels(png_const_structrp,png_const_inforp)Ppng_byte png_get_channels(png_const_structrp png_ptr, png_const_inforp info_ptr)\u0000\u0010PNG_GET_CHANNELS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000D\a\u0000\u0000\u0000\u0000\u0000\u0000D\a\u0000\u0000\u0000\u0000\u0000\u0000D\a\u0000\u0000\u0000\u0000\u0000\u0013png_get_image_width2png_uint_32 (png_const_structrp, png_const_inforp)8png_get_image_width(png_const_structrp,png_const_inforp)Vpng_uint_32 png_get_image_width(png_const_structrp png_ptr, png_const_inforp info_ptr)\u0000\u0013PNG_GET_IMAGE_WIDTH\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000H\a\u0000\u0000\u0000\u0000\u0000\u0000H\a\u0000\u0000\u0000\u0000\u0000\u0000H\a\u0000\u0000\u0000\u0000\u0000\u0014png_get_image_height2png_uint_32 (png_const_structrp, png_const_inforp)9png_get_image_height(png_const_structrp,png_const_inforp)Wpng_uint_32 png_get_image_height(png_const_structrp png_ptr, png_const_inforp info_ptr)\u0000\u0014PNG_GET_IMAGE_HEIGHT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000L\a\u0000\u0000\u0000\u0000\u0000\u0000L\a\u0000\u0000\u0000\u0000\u0000\u0000L\a\u0000\u0000\u0000\u0000\u0000\u0011png_get_bit_depth/png_byte (png_const_structrp, png_const_inforp)6png_get_bit_depth(png_const_structrp,png_const_inforp)Qpng_byte png_get_bit_depth(png_const_structrp png_ptr, png_const_inforp info_ptr)\u0000\u0011PNG_GET_BIT_DEPTH\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000P\a\u0000\u0000\u0000\u0000\u0000\u0000P\a\u0000\u0000\u0000\u0000\u0000\u0000P\a\u0000\u0000\u0000\u0000\u0000\u0012png_get_color_type/png_byte (png_const_structrp, png_const_inforp)7png_get_color_type(png_const_structrp,png_const_inforp)Rpng_byte png_get_color_type(png_const_structrp png_ptr, png_const_inforp info_ptr)\u0000\u0012PNG_GET_COLOR_TYPE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000T\a\u0000\u0000\u0000\u0000\u0000\u0000T\a\u0000\u0000\u0000\u0000\u0000\u0000T\a\u0000\u0000\u0000\u0000\u0000\u0013png_get_filter_type/png_byte (png_const_structrp, png_const_inforp)8png_get_filter_type(png_const_structrp,png_const_inforp)Spng_byte png_get_filter_type(png_const_structrp png_ptr, png_const_inforp info_ptr)\u0000\u0013PNG_GET_FILTER_TYPE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000X\a\u0000\u0000\u0000\u0000\u0000\u0000X\a\u0000\u0000\u0000\u0000\u0000\u0000X\a\u0000\u0000\u0000\u0000\u0000\u0016png_get_interlace_type/png_byte (png_const_structrp, png_const_inforp);png_get_interlace_type(png_const_structrp,png_const_inforp)Vpng_byte png_get_interlace_type(png_const_structrp png_ptr, png_const_inforp info_ptr)\u0000\u0016PNG_GET_INTERLACE_TYPE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\\\a\u0000\u0000\u0000\u0000\u0000\u0000\\\a\u0000\u0000\u0000\u0000\u0000\u0000\\\a\u0000\u0000\u0000\u0000\u0000\u0018png_get_compression_type/png_byte (png_const_structrp, png_const_inforp)=png_get_compression_type(png_const_structrp,png_const_inforp)Xpng_byte png_get_compression_type(png_const_structrp png_ptr, png_const_inforp info_ptr)\u0000\u0018PNG_GET_COMPRESSION_TYPE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000`\a\u0000\u0000\u0000\u0000\u0000\u0000`\a\u0000\u0000\u0000\u0000\u0000\u0000`\a\u0000\u0000\u0000\u0000\u0000\u0018png_get_pixels_per_meter2png_uint_32 (png_const_structrp, png_const_inforp)=png_get_pixels_per_meter(png_const_structrp,png_const_inforp)[png_uint_32 png_get_pixels_per_meter(png_const_structrp png_ptr, png_const_inforp info_ptr)\u0000\u0018PNG_GET_PIXELS_PER_METER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000b\a\u0000\u0000\u0000\u0000\u0000\u0000b\a\u0000\u0000\u0000\u0000\u0000\u0000b\a\u0000\u0000\u0000\u0000\u0000\u001Apng_get_x_pixels_per_meter2png_uint_32 (png_const_structrp, png_const_inforp)?png_get_x_pixels_per_meter(png_const_structrp,png_const_inforp)]png_uint_32 png_get_x_pixels_per_meter(png_const_structrp png_ptr, png_const_inforp info_ptr)\u0000\u001APNG_GET_X_PIXELS_PER_METER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000d\a\u0000\u0000\u0000\u0000\u0000\u0000d\a\u0000\u0000\u0000\u0000\u0000\u0000d\a\u0000\u0000\u0000\u0000\u0000\u001Apng_get_y_pixels_per_meter2png_uint_32 (png_const_structrp, png_const_inforp)?png_get_y_pixels_per_meter(png_const_structrp,png_const_inforp)]png_uint_32 png_get_y_pixels_per_meter(png_const_structrp png_ptr, png_const_inforp info_ptr)\u0000\u001APNG_GET_Y_PIXELS_PER_METER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000h\a\u0000\u0000\u0000\u0000\u0000\u0000h\a\u0000\u0000\u0000\u0000\u0000\u0000h\a\u0000\u0000\u0000\u0000\u0000\u001Apng_get_pixel_aspect_ratio,float (png_const_structrp, png_const_inforp)?png_get_pixel_aspect_ratio(png_const_structrp,png_const_inforp)Wfloat png_get_pixel_aspect_ratio(png_const_structrp png_ptr, png_const_inforp info_ptr)\u0000\u001APNG_GET_PIXEL_ASPECT_RATIO\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000j\a\u0000\u0000\u0000\u0000\u0000\u0000j\a\u0000\u0000\u0000\u0000\u0000\u0000j\a\u0000\u0000\u0000\u0000\u0000 png_get_pixel_aspect_ratio_fixed6png_fixed_point (png_const_structrp, png_const_inforp)Epng_get_pixel_aspect_ratio_fixed(png_const_structrp,png_const_inforp)gpng_fixed_point png_get_pixel_aspect_ratio_fixed(png_const_structrp png_ptr, png_const_inforp info_ptr)\u0000 PNG_GET_PIXEL_ASPECT_RATIO_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000n\a\u0000\u0000\u0000\u0000\u0000\u0000n\a\u0000\u0000\u0000\u0000\u0000\u0000n\a\u0000\u0000\u0000\u0000\u0000\u0017png_get_x_offset_pixels1png_int_32 (png_const_structrp, png_const_inforp)<png_get_x_offset_pixels(png_const_structrp,png_const_inforp)Ypng_int_32 png_get_x_offset_pixels(png_const_structrp png_ptr, png_const_inforp info_ptr)\u0000\u0017PNG_GET_X_OFFSET_PIXELS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000p\a\u0000\u0000\u0000\u0000\u0000\u0000p\a\u0000\u0000\u0000\u0000\u0000\u0000p\a\u0000\u0000\u0000\u0000\u0000\u0017png_get_y_offset_pixels1png_int_32 (png_const_structrp, png_const_inforp)<png_get_y_offset_pixels(png_const_structrp,png_const_inforp)Ypng_int_32 png_get_y_offset_pixels(png_const_structrp png_ptr, png_const_inforp info_ptr)\u0000\u0017PNG_GET_Y_OFFSET_PIXELS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000r\a\u0000\u0000\u0000\u0000\u0000\u0000r\a\u0000\u0000\u0000\u0000\u0000\u0000r\a\u0000\u0000\u0000\u0000\u0000\u0018png_get_x_offset_microns1png_int_32 (png_const_structrp, png_const_inforp)=png_get_x_offset_microns(png_const_structrp,png_const_inforp)Zpng_int_32 png_get_x_offset_microns(png_const_structrp png_ptr, png_const_inforp info_ptr)\u0000\u0018PNG_GET_X_OFFSET_MICRONS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\a\u0000\u0000\u0000\u0000\u0000\u0000t\a\u0000\u0000\u0000\u0000\u0000\u0000t\a\u0000\u0000\u0000\u0000\u0000\u0018png_get_y_offset_microns1png_int_32 (png_const_structrp, png_const_inforp)=png_get_y_offset_microns(png_const_structrp,png_const_inforp)Zpng_int_32 png_get_y_offset_microns(png_const_structrp png_ptr, png_const_inforp info_ptr)\u0000\u0018PNG_GET_Y_OFFSET_MICRONS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000{\a\u0000\u0000\u0000\u0000\u0000\u0000{\a\u0000\u0000\u0000\u0000\u0000\u0000{\a\u0000\u0000\u0000\u0000\u0000\u0011png_get_signature6png_const_bytep (png_const_structrp, png_const_inforp)6png_get_signature(png_const_structrp,png_const_inforp)Xpng_const_bytep png_get_signature(png_const_structrp png_ptr, png_const_inforp info_ptr)\u0000\u0011PNG_GET_SIGNATURE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\fpng_get_bKGD=png_uint_32 (png_const_structrp, png_inforp, png_color_16p *):png_get_bKGD(png_const_structrp,png_inforp,png_color_16p*)dpng_uint_32 png_get_bKGD(png_const_structrp png_ptr, png_inforp info_ptr, png_color_16p *background)\u0000\fPNG_GET_BKGD\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\fpng_set_bKGD:void (png_const_structrp, png_inforp, png_const_color_16p)?png_set_bKGD(png_const_structrp,png_inforp,png_const_color_16p)bvoid png_set_bKGD(png_const_structrp png_ptr, png_inforp info_ptr, png_const_color_16p background)\u0000\fPNG_SET_BKGD\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\fpng_get_cHRMÿ\u0000\u0000\u0000png_uint_32 (png_const_structrp, png_const_inforp, double *, double *, double *, double *, double *, double *, double *, double *)qpng_get_cHRM(png_const_structrp,png_const_inforp,double*,double*,double*,double*,double*,double*,double*,double*)ÿÑ\u0000\u0000\u0000png_uint_32 png_get_cHRM(png_const_structrp png_ptr, png_const_inforp info_ptr, double *white_x, double *white_y, double *red_x, double *red_y, double *green_x, double *green_y, double *blue_x, double *blue_y)\u0000\fPNG_GET_CHRM\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0010png_get_cHRM_XYZÿ\u0000\u0000\u0000png_uint_32 (png_const_structrp, png_const_inforp, double *, double *, double *, double *, double *, double *, double *, double *, double *)}png_get_cHRM_XYZ(png_const_structrp,png_const_inforp,double*,double*,double*,double*,double*,double*,double*,double*,double*)ÿã\u0000\u0000\u0000png_uint_32 png_get_cHRM_XYZ(png_const_structrp png_ptr, png_const_inforp info_ptr, double *red_X, double *red_Y, double *red_Z, double *green_X, double *green_Y, double *green_Z, double *blue_X, double *blue_Y, double *blue_Z)\u0000\u0010PNG_GET_CHRM_XYZ\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0012png_get_cHRM_fixedÿÊ\u0000\u0000\u0000png_uint_32 (png_const_structrp, png_const_inforp, png_fixed_point *, png_fixed_point *, png_fixed_point *, png_fixed_point *, png_fixed_point *, png_fixed_point *, png_fixed_point *, png_fixed_point *)ÿ¿\u0000\u0000\u0000png_get_cHRM_fixed(png_const_structrp,png_const_inforp,png_fixed_point*,png_fixed_point*,png_fixed_point*,png_fixed_point*,png_fixed_point*,png_fixed_point*,png_fixed_point*,png_fixed_point*)ÿ?\u0001\u0000\u0000png_uint_32 png_get_cHRM_fixed(png_const_structrp png_ptr, png_const_inforp info_ptr, png_fixed_point *int_white_x, png_fixed_point *int_white_y, png_fixed_point *int_red_x, png_fixed_point *int_red_y, png_fixed_point *int_green_x, png_fixed_point *int_green_y, png_fixed_point *int_blue_x, png_fixed_point *int_blue_y)\u0000\u0012PNG_GET_CHRM_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0016png_get_cHRM_XYZ_fixedÿÝ\u0000\u0000\u0000png_uint_32 (png_const_structrp, png_const_inforp, png_fixed_point *, png_fixed_point *, png_fixed_point *, png_fixed_point *, png_fixed_point *, png_fixed_point *, png_fixed_point *, png_fixed_point *, png_fixed_point *)ÿÔ\u0000\u0000\u0000png_get_cHRM_XYZ_fixed(png_const_structrp,png_const_inforp,png_fixed_point*,png_fixed_point*,png_fixed_point*,png_fixed_point*,png_fixed_point*,png_fixed_point*,png_fixed_point*,png_fixed_point*,png_fixed_point*)ÿ^\u0001\u0000\u0000png_uint_32 png_get_cHRM_XYZ_fixed(png_const_structrp png_ptr, png_const_inforp info_ptr, png_fixed_point *int_red_X, png_fixed_point *int_red_Y, png_fixed_point *int_red_Z, png_fixed_point *int_green_X, png_fixed_point *int_green_Y, png_fixed_point *int_green_Z, png_fixed_point *int_blue_X, png_fixed_point *int_blue_Y, png_fixed_point *int_blue_Z)\u0000\u0016PNG_GET_CHRM_XYZ_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¢\a\u0000\u0000\u0000\u0000\u0000\u0000¢\a\u0000\u0000\u0000\u0000\u0000\u0000¢\a\u0000\u0000\u0000\u0000\u0000\fpng_set_cHRMevoid (png_const_structrp, png_inforp, double, double, double, double, double, double, double, double)cpng_set_cHRM(png_const_structrp,png_inforp,double,double,double,double,double,double,double,double)ÿ¼\u0000\u0000\u0000void png_set_cHRM(png_const_structrp png_ptr, png_inforp info_ptr, double white_x, double white_y, double red_x, double red_y, double green_x, double green_y, double blue_x, double blue_y)\u0000\fPNG_SET_CHRM\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¦\a\u0000\u0000\u0000\u0000\u0000\u0000¦\a\u0000\u0000\u0000\u0000\u0000\u0000¦\a\u0000\u0000\u0000\u0000\u0000\u0010png_set_cHRM_XYZmvoid (png_const_structrp, png_inforp, double, double, double, double, double, double, double, double, double)npng_set_cHRM_XYZ(png_const_structrp,png_inforp,double,double,double,double,double,double,double,double,double)ÿÍ\u0000\u0000\u0000void png_set_cHRM_XYZ(png_const_structrp png_ptr, png_inforp info_ptr, double red_X, double red_Y, double red_Z, double green_X, double green_Y, double green_Z, double blue_X, double blue_Y, double blue_Z)\u0000\u0010PNG_SET_CHRM_XYZ\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ª\a\u0000\u0000\u0000\u0000\u0000\u0000ª\a\u0000\u0000\u0000\u0000\u0000\u0000ª\a\u0000\u0000\u0000\u0000\u0000\u0012png_set_cHRM_fixedÿ­\u0000\u0000\u0000void (png_const_structrp, png_inforp, png_fixed_point, png_fixed_point, png_fixed_point, png_fixed_point, png_fixed_point, png_fixed_point, png_fixed_point, png_fixed_point)ÿ±\u0000\u0000\u0000png_set_cHRM_fixed(png_const_structrp,png_inforp,png_fixed_point,png_fixed_point,png_fixed_point,png_fixed_point,png_fixed_point,png_fixed_point,png_fixed_point,png_fixed_point)ÿ*\u0001\u0000\u0000void png_set_cHRM_fixed(png_const_structrp png_ptr, png_inforp info_ptr, png_fixed_point int_white_x, png_fixed_point int_white_y, png_fixed_point int_red_x, png_fixed_point int_red_y, png_fixed_point int_green_x, png_fixed_point int_green_y, png_fixed_point int_blue_x, png_fixed_point int_blue_y)\u0000\u0012PNG_SET_CHRM_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000°\a\u0000\u0000\u0000\u0000\u0000\u0000°\a\u0000\u0000\u0000\u0000\u0000\u0000°\a\u0000\u0000\u0000\u0000\u0000\u0016png_set_cHRM_XYZ_fixedÿ¾\u0000\u0000\u0000void (png_const_structrp, png_inforp, png_fixed_point, png_fixed_point, png_fixed_point, png_fixed_point, png_fixed_point, png_fixed_point, png_fixed_point, png_fixed_point, png_fixed_point)ÿÅ\u0000\u0000\u0000png_set_cHRM_XYZ_fixed(png_const_structrp,png_inforp,png_fixed_point,png_fixed_point,png_fixed_point,png_fixed_point,png_fixed_point,png_fixed_point,png_fixed_point,png_fixed_point,png_fixed_point)ÿH\u0001\u0000\u0000void png_set_cHRM_XYZ_fixed(png_const_structrp png_ptr, png_inforp info_ptr, png_fixed_point int_red_X, png_fixed_point int_red_Y, png_fixed_point int_red_Z, png_fixed_point int_green_X, png_fixed_point int_green_Y, png_fixed_point int_green_Z, png_fixed_point int_blue_X, png_fixed_point int_blue_Y, png_fixed_point int_blue_Z)\u0000\u0016PNG_SET_CHRM_XYZ_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¹\a\u0000\u0000\u0000\u0000\u0000\u0000¹\a\u0000\u0000\u0000\u0000\u0000\u0000¹\a\u0000\u0000\u0000\u0000\u0000\fpng_get_eXIf9png_uint_32 (png_const_structrp, png_inforp, png_bytep *)6png_get_eXIf(png_const_structrp,png_inforp,png_bytep*)Zpng_uint_32 png_get_eXIf(png_const_structrp png_ptr, png_inforp info_ptr, png_bytep *exif)\u0000\fPNG_GET_EXIF\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000»\a\u0000\u0000\u0000\u0000\u0000\u0000»\a\u0000\u0000\u0000\u0000\u0000\u0000»\a\u0000\u0000\u0000\u0000\u0000\fpng_set_eXIf0void (png_const_structrp, png_inforp, png_bytep)5png_set_eXIf(png_const_structrp,png_inforp,png_bytep)Rvoid png_set_eXIf(png_const_structrp png_ptr, png_inforp info_ptr, png_bytep exif)\u0000\fPNG_SET_EXIF\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¾\a\u0000\u0000\u0000\u0000\u0000\u0000¾\a\u0000\u0000\u0000\u0000\u0000\u0000¾\a\u0000\u0000\u0000\u0000\u0000\u000Epng_get_eXIf_1Npng_uint_32 (png_const_structrp, png_const_inforp, png_uint_32 *, png_bytep *)Kpng_get_eXIf_1(png_const_structrp,png_const_inforp,png_uint_32*,png_bytep*)ypng_uint_32 png_get_eXIf_1(png_const_structrp png_ptr, png_const_inforp info_ptr, png_uint_32 *num_exif, png_bytep *exif)\u0000\u000EPNG_GET_EXIF_1\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000À\a\u0000\u0000\u0000\u0000\u0000\u0000À\a\u0000\u0000\u0000\u0000\u0000\u0000À\a\u0000\u0000\u0000\u0000\u0000\u000Epng_set_eXIf_1=void (png_const_structrp, png_inforp, png_uint_32, png_bytep)Cpng_set_eXIf_1(png_const_structrp,png_inforp,png_uint_32,png_bytep)jvoid png_set_eXIf_1(png_const_structrp png_ptr, png_inforp info_ptr, png_uint_32 num_exif, png_bytep exif)\u0000\u000EPNG_SET_EXIF_1\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Å\a\u0000\u0000\u0000\u0000\u0000\u0000Å\a\u0000\u0000\u0000\u0000\u0000\u0000Å\a\u0000\u0000\u0000\u0000\u0000\fpng_get_gAMA<png_uint_32 (png_const_structrp, png_const_inforp, double *)9png_get_gAMA(png_const_structrp,png_const_inforp,double*)cpng_uint_32 png_get_gAMA(png_const_structrp png_ptr, png_const_inforp info_ptr, double *file_gamma)\u0000\fPNG_GET_GAMA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ç\a\u0000\u0000\u0000\u0000\u0000\u0000Ç\a\u0000\u0000\u0000\u0000\u0000\u0000Ç\a\u0000\u0000\u0000\u0000\u0000\u0012png_get_gAMA_fixedEpng_uint_32 (png_const_structrp, png_const_inforp, png_fixed_point *)Hpng_get_gAMA_fixed(png_const_structrp,png_const_inforp,png_fixed_point*)vpng_uint_32 png_get_gAMA_fixed(png_const_structrp png_ptr, png_const_inforp info_ptr, png_fixed_point *int_file_gamma)\u0000\u0012PNG_GET_GAMA_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Í\a\u0000\u0000\u0000\u0000\u0000\u0000Í\a\u0000\u0000\u0000\u0000\u0000\u0000Í\a\u0000\u0000\u0000\u0000\u0000\fpng_set_gAMA-void (png_const_structrp, png_inforp, double)2png_set_gAMA(png_const_structrp,png_inforp,double)Uvoid png_set_gAMA(png_const_structrp png_ptr, png_inforp info_ptr, double file_gamma)\u0000\fPNG_SET_GAMA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ï\a\u0000\u0000\u0000\u0000\u0000\u0000Ï\a\u0000\u0000\u0000\u0000\u0000\u0000Ï\a\u0000\u0000\u0000\u0000\u0000\u0012png_set_gAMA_fixed6void (png_const_structrp, png_inforp, png_fixed_point)Apng_set_gAMA_fixed(png_const_structrp,png_inforp,png_fixed_point)hvoid png_set_gAMA_fixed(png_const_structrp png_ptr, png_inforp info_ptr, png_fixed_point int_file_gamma)\u0000\u0012PNG_SET_GAMA_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ô\a\u0000\u0000\u0000\u0000\u0000\u0000Ô\a\u0000\u0000\u0000\u0000\u0000\u0000Ô\a\u0000\u0000\u0000\u0000\u0000\fpng_get_hIST<png_uint_32 (png_const_structrp, png_inforp, png_uint_16p *)9png_get_hIST(png_const_structrp,png_inforp,png_uint_16p*)]png_uint_32 png_get_hIST(png_const_structrp png_ptr, png_inforp info_ptr, png_uint_16p *hist)\u0000\fPNG_GET_HIST\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ö\a\u0000\u0000\u0000\u0000\u0000\u0000Ö\a\u0000\u0000\u0000\u0000\u0000\u0000Ö\a\u0000\u0000\u0000\u0000\u0000\fpng_set_hIST9void (png_const_structrp, png_inforp, png_const_uint_16p)>png_set_hIST(png_const_structrp,png_inforp,png_const_uint_16p)[void png_set_hIST(png_const_structrp png_ptr, png_inforp info_ptr, png_const_uint_16p hist)\u0000\fPNG_SET_HIST\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ú\a\u0000\u0000\u0000\u0000\u0000\u0000Ú\a\u0000\u0000\u0000\u0000\u0000\u0000Ú\a\u0000\u0000\u0000\u0000\u0000\fpng_get_IHDRspng_uint_32 (png_const_structrp, png_const_inforp, png_uint_32 *, png_uint_32 *, int *, int *, int *, int *, int *)dpng_get_IHDR(png_const_structrp,png_const_inforp,png_uint_32*,png_uint_32*,int*,int*,int*,int*,int*)ÿÝ\u0000\u0000\u0000png_uint_32 png_get_IHDR(png_const_structrp png_ptr, png_const_inforp info_ptr, png_uint_32 *width, png_uint_32 *height, int *bit_depth, int *color_type, int *interlace_method, int *compression_method, int *filter_method)\u0000\fPNG_GET_IHDR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ß\a\u0000\u0000\u0000\u0000\u0000\u0000ß\a\u0000\u0000\u0000\u0000\u0000\u0000ß\a\u0000\u0000\u0000\u0000\u0000\fpng_set_IHDRXvoid (png_const_structrp, png_inforp, png_uint_32, png_uint_32, int, int, int, int, int)Wpng_set_IHDR(png_const_structrp,png_inforp,png_uint_32,png_uint_32,int,int,int,int,int)ÿÉ\u0000\u0000\u0000void png_set_IHDR(png_const_structrp png_ptr, png_inforp info_ptr, png_uint_32 width, png_uint_32 height, int bit_depth, int color_type, int interlace_method, int compression_method, int filter_method)\u0000\fPNG_SET_IHDR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000å\a\u0000\u0000\u0000\u0000\u0000\u0000å\a\u0000\u0000\u0000\u0000\u0000\u0000å\a\u0000\u0000\u0000\u0000\u0000\fpng_get_oFFsUpng_uint_32 (png_const_structrp, png_const_inforp, png_int_32 *, png_int_32 *, int *)Npng_get_oFFs(png_const_structrp,png_const_inforp,png_int_32*,png_int_32*,int*)ÿ\u0000\u0000\u0000png_uint_32 png_get_oFFs(png_const_structrp png_ptr, png_const_inforp info_ptr, png_int_32 *offset_x, png_int_32 *offset_y, int *unit_type)\u0000\fPNG_GET_OFFS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ë\a\u0000\u0000\u0000\u0000\u0000\u0000ë\a\u0000\u0000\u0000\u0000\u0000\u0000ë\a\u0000\u0000\u0000\u0000\u0000\fpng_set_oFFsBvoid (png_const_structrp, png_inforp, png_int_32, png_int_32, int)Epng_set_oFFs(png_const_structrp,png_inforp,png_int_32,png_int_32,int){void png_set_oFFs(png_const_structrp png_ptr, png_inforp info_ptr, png_int_32 offset_x, png_int_32 offset_y, int unit_type)\u0000\fPNG_SET_OFFS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ñ\a\u0000\u0000\u0000\u0000\u0000\u0000ñ\a\u0000\u0000\u0000\u0000\u0000\u0000ñ\a\u0000\u0000\u0000\u0000\u0000\fpng_get_pCAL~png_uint_32 (png_const_structrp, png_inforp, png_charp *, png_int_32 *, png_int_32 *, int *, int *, png_charp *, png_charpp *)opng_get_pCAL(png_const_structrp,png_inforp,png_charp*,png_int_32*,png_int_32*,int*,int*,png_charp*,png_charpp*)ÿ¼\u0000\u0000\u0000png_uint_32 png_get_pCAL(png_const_structrp png_ptr, png_inforp info_ptr, png_charp *purpose, png_int_32 *X0, png_int_32 *X1, int *type, int *nparams, png_charp *units, png_charpp *params)\u0000\fPNG_GET_PCAL\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ø\a\u0000\u0000\u0000\u0000\u0000\u0000ø\a\u0000\u0000\u0000\u0000\u0000\u0000ø\a\u0000\u0000\u0000\u0000\u0000\fpng_set_pCALuvoid (png_const_structrp, png_inforp, png_const_charp, png_int_32, png_int_32, int, int, png_const_charp, png_charpp)tpng_set_pCAL(png_const_structrp,png_inforp,png_const_charp,png_int_32,png_int_32,int,int,png_const_charp,png_charpp)ÿº\u0000\u0000\u0000void png_set_pCAL(png_const_structrp png_ptr, png_inforp info_ptr, png_const_charp purpose, png_int_32 X0, png_int_32 X1, int type, int nparams, png_const_charp units, png_charpp params)\u0000\fPNG_SET_PCAL\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000þ\a\u0000\u0000\u0000\u0000\u0000\u0000þ\a\u0000\u0000\u0000\u0000\u0000\u0000þ\a\u0000\u0000\u0000\u0000\u0000\fpng_get_pHYsWpng_uint_32 (png_const_structrp, png_const_inforp, png_uint_32 *, png_uint_32 *, int *)Ppng_get_pHYs(png_const_structrp,png_const_inforp,png_uint_32*,png_uint_32*,int*)ÿ\u0000\u0000\u0000png_uint_32 png_get_pHYs(png_const_structrp png_ptr, png_const_inforp info_ptr, png_uint_32 *res_x, png_uint_32 *res_y, int *unit_type)\u0000\fPNG_GET_PHYS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0000\fpng_set_pHYsDvoid (png_const_structrp, png_inforp, png_uint_32, png_uint_32, int)Gpng_set_pHYs(png_const_structrp,png_inforp,png_uint_32,png_uint_32,int)wvoid png_set_pHYs(png_const_structrp png_ptr, png_inforp info_ptr, png_uint_32 res_x, png_uint_32 res_y, int unit_type)\u0000\fPNG_SET_PHYS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\b\u0000\u0000\u0000\u0000\u0000\u0000\b\b\u0000\u0000\u0000\u0000\u0000\u0000\b\b\u0000\u0000\u0000\u0000\u0000\fpng_get_PLTEApng_uint_32 (png_const_structrp, png_inforp, png_colorp *, int *)<png_get_PLTE(png_const_structrp,png_inforp,png_colorp*,int*)ppng_uint_32 png_get_PLTE(png_const_structrp png_ptr, png_inforp info_ptr, png_colorp *palette, int *num_palette)\u0000\fPNG_GET_PLTE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\v\b\u0000\u0000\u0000\u0000\u0000\u0000\v\b\u0000\u0000\u0000\u0000\u0000\u0000\v\b\u0000\u0000\u0000\u0000\u0000\fpng_set_PLTE6void (png_structrp, png_inforp, png_const_colorp, int):png_set_PLTE(png_structrp,png_inforp,png_const_colorp,int)gvoid png_set_PLTE(png_structrp png_ptr, png_inforp info_ptr, png_const_colorp palette, int num_palette)\u0000\fPNG_SET_PLTE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000F\b\u0000\u0000\u0000\u0000\u0000\u0000\u000F\b\u0000\u0000\u0000\u0000\u0000\u0000\u000F\b\u0000\u0000\u0000\u0000\u0000\fpng_get_sBIT<png_uint_32 (png_const_structrp, png_inforp, png_color_8p *)9png_get_sBIT(png_const_structrp,png_inforp,png_color_8p*)`png_uint_32 png_get_sBIT(png_const_structrp png_ptr, png_inforp info_ptr, png_color_8p *sig_bit)\u0000\fPNG_GET_SBIT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0014\b\u0000\u0000\u0000\u0000\u0000\u0000\u0014\b\u0000\u0000\u0000\u0000\u0000\u0000\u0014\b\u0000\u0000\u0000\u0000\u0000\fpng_set_sBIT9void (png_const_structrp, png_inforp, png_const_color_8p)>png_set_sBIT(png_const_structrp,png_inforp,png_const_color_8p)^void png_set_sBIT(png_const_structrp png_ptr, png_inforp info_ptr, png_const_color_8p sig_bit)\u0000\fPNG_SET_SBIT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019\b\u0000\u0000\u0000\u0000\u0000\u0000\u0019\b\u0000\u0000\u0000\u0000\u0000\u0000\u0019\b\u0000\u0000\u0000\u0000\u0000\fpng_get_sRGB9png_uint_32 (png_const_structrp, png_const_inforp, int *)6png_get_sRGB(png_const_structrp,png_const_inforp,int*)fpng_uint_32 png_get_sRGB(png_const_structrp png_ptr, png_const_inforp info_ptr, int *file_srgb_intent)\u0000\fPNG_GET_SRGB\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001E\b\u0000\u0000\u0000\u0000\u0000\u0000\u001E\b\u0000\u0000\u0000\u0000\u0000\u0000\u001E\b\u0000\u0000\u0000\u0000\u0000\fpng_set_sRGB*void (png_const_structrp, png_inforp, int)/png_set_sRGB(png_const_structrp,png_inforp,int)Svoid png_set_sRGB(png_const_structrp png_ptr, png_inforp info_ptr, int srgb_intent)\u0000\fPNG_SET_SRGB\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \b\u0000\u0000\u0000\u0000\u0000\u0000 \b\u0000\u0000\u0000\u0000\u0000\u0000 \b\u0000\u0000\u0000\u0000\u0000\u001Apng_set_sRGB_gAMA_and_cHRM*void (png_const_structrp, png_inforp, int)=png_set_sRGB_gAMA_and_cHRM(png_const_structrp,png_inforp,int)avoid png_set_sRGB_gAMA_and_cHRM(png_const_structrp png_ptr, png_inforp info_ptr, int srgb_intent)\u0000\u001APNG_SET_SRGB_GAMA_AND_CHRM\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000%\b\u0000\u0000\u0000\u0000\u0000\u0000%\b\u0000\u0000\u0000\u0000\u0000\u0000%\b\u0000\u0000\u0000\u0000\u0000\fpng_get_iCCPZpng_uint_32 (png_const_structrp, png_inforp, png_charpp, int *, png_bytepp, png_uint_32 *)Spng_get_iCCP(png_const_structrp,png_inforp,png_charpp,int*,png_bytepp,png_uint_32*)ÿ\u0000\u0000\u0000png_uint_32 png_get_iCCP(png_const_structrp png_ptr, png_inforp info_ptr, png_charpp name, int *compression_type, png_bytepp profile, png_uint_32 *proflen)\u0000\fPNG_GET_ICCP\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000+\b\u0000\u0000\u0000\u0000\u0000\u0000+\b\u0000\u0000\u0000\u0000\u0000\u0000+\b\u0000\u0000\u0000\u0000\u0000\fpng_set_iCCPYvoid (png_const_structrp, png_inforp, png_const_charp, int, png_const_bytep, png_uint_32)[png_set_iCCP(png_const_structrp,png_inforp,png_const_charp,int,png_const_bytep,png_uint_32)ÿ\u0000\u0000\u0000void png_set_iCCP(png_const_structrp png_ptr, png_inforp info_ptr, png_const_charp name, int compression_type, png_const_bytep profile, png_uint_32 proflen)\u0000\fPNG_SET_ICCP\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00001\b\u0000\u0000\u0000\u0000\u0000\u00001\b\u0000\u0000\u0000\u0000\u0000\u00001\b\u0000\u0000\u0000\u0000\u0000\fpng_get_sPLT2int (png_const_structrp, png_inforp, png_sPLT_tpp)8png_get_sPLT(png_const_structrp,png_inforp,png_sPLT_tpp)Wint png_get_sPLT(png_const_structrp png_ptr, png_inforp info_ptr, png_sPLT_tpp entries)\u0000\fPNG_GET_SPLT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00006\b\u0000\u0000\u0000\u0000\u0000\u00006\b\u0000\u0000\u0000\u0000\u0000\u00006\b\u0000\u0000\u0000\u0000\u0000\fpng_set_sPLT=void (png_const_structrp, png_inforp, png_const_sPLT_tp, int)Apng_set_sPLT(png_const_structrp,png_inforp,png_const_sPLT_tp,int)kvoid png_set_sPLT(png_const_structrp png_ptr, png_inforp info_ptr, png_const_sPLT_tp entries, int nentries)\u0000\fPNG_SET_SPLT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000<\b\u0000\u0000\u0000\u0000\u0000\u0000<\b\u0000\u0000\u0000\u0000\u0000\u0000<\b\u0000\u0000\u0000\u0000\u0000\fpng_get_text8int (png_const_structrp, png_inforp, png_textp *, int *);png_get_text(png_const_structrp,png_inforp,png_textp*,int*)eint png_get_text(png_const_structrp png_ptr, png_inforp info_ptr, png_textp *text_ptr, int *num_text)\u0000\fPNG_GET_TEXT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000H\b\u0000\u0000\u0000\u0000\u0000\u0000H\b\u0000\u0000\u0000\u0000\u0000\u0000H\b\u0000\u0000\u0000\u0000\u0000\fpng_set_text;void (png_const_structrp, png_inforp, png_const_textp, int)?png_set_text(png_const_structrp,png_inforp,png_const_textp,int)jvoid png_set_text(png_const_structrp png_ptr, png_inforp info_ptr, png_const_textp text_ptr, int num_text)\u0000\fPNG_SET_TEXT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000M\b\u0000\u0000\u0000\u0000\u0000\u0000M\b\u0000\u0000\u0000\u0000\u0000\u0000M\b\u0000\u0000\u0000\u0000\u0000\fpng_get_tIME9png_uint_32 (png_const_structrp, png_inforp, png_timep *)6png_get_tIME(png_const_structrp,png_inforp,png_timep*)^png_uint_32 png_get_tIME(png_const_structrp png_ptr, png_inforp info_ptr, png_timep *mod_time)\u0000\fPNG_GET_TIME\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000R\b\u0000\u0000\u0000\u0000\u0000\u0000R\b\u0000\u0000\u0000\u0000\u0000\u0000R\b\u0000\u0000\u0000\u0000\u0000\fpng_set_tIME6void (png_const_structrp, png_inforp, png_const_timep);png_set_tIME(png_const_structrp,png_inforp,png_const_timep)\\void png_set_tIME(png_const_structrp png_ptr, png_inforp info_ptr, png_const_timep mod_time)\u0000\fPNG_SET_TIME\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000W\b\u0000\u0000\u0000\u0000\u0000\u0000W\b\u0000\u0000\u0000\u0000\u0000\u0000W\b\u0000\u0000\u0000\u0000\u0000\fpng_get_tRNSQpng_uint_32 (png_const_structrp, png_inforp, png_bytep *, int *, png_color_16p *)Jpng_get_tRNS(png_const_structrp,png_inforp,png_bytep*,int*,png_color_16p*)ÿ\u0000\u0000\u0000png_uint_32 png_get_tRNS(png_const_structrp png_ptr, png_inforp info_ptr, png_bytep *trans_alpha, int *num_trans, png_color_16p *trans_color)\u0000\fPNG_GET_TRNS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000]\b\u0000\u0000\u0000\u0000\u0000\u0000]\b\u0000\u0000\u0000\u0000\u0000\u0000]\b\u0000\u0000\u0000\u0000\u0000\fpng_set_tRNSJvoid (png_structrp, png_inforp, png_const_bytep, int, png_const_color_16p)Mpng_set_tRNS(png_structrp,png_inforp,png_const_bytep,int,png_const_color_16p)ÿ\u0000\u0000\u0000void png_set_tRNS(png_structrp png_ptr, png_inforp info_ptr, png_const_bytep trans_alpha, int num_trans, png_const_color_16p trans_color)\u0000\fPNG_SET_TRNS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000c\b\u0000\u0000\u0000\u0000\u0000\u0000c\b\u0000\u0000\u0000\u0000\u0000\u0000c\b\u0000\u0000\u0000\u0000\u0000\fpng_get_sCALMpng_uint_32 (png_const_structrp, png_const_inforp, int *, double *, double *)Fpng_get_sCAL(png_const_structrp,png_const_inforp,int*,double*,double*)ypng_uint_32 png_get_sCAL(png_const_structrp png_ptr, png_const_inforp info_ptr, int *unit, double *width, double *height)\u0000\fPNG_GET_SCAL\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000l\b\u0000\u0000\u0000\u0000\u0000\u0000l\b\u0000\u0000\u0000\u0000\u0000\u0000l\b\u0000\u0000\u0000\u0000\u0000\u0012png_get_sCAL_fixed_png_uint_32 (png_const_structrp, png_const_inforp, int *, png_fixed_point *, png_fixed_point *)^png_get_sCAL_fixed(png_const_structrp,png_const_inforp,int*,png_fixed_point*,png_fixed_point*)ÿ\u0000\u0000\u0000png_uint_32 png_get_sCAL_fixed(png_const_structrp png_ptr, png_const_inforp info_ptr, int *unit, png_fixed_point *width, png_fixed_point *height)\u0000\u0012PNG_GET_SCAL_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000p\b\u0000\u0000\u0000\u0000\u0000\u0000p\b\u0000\u0000\u0000\u0000\u0000\u0000p\b\u0000\u0000\u0000\u0000\u0000\u000Epng_get_sCAL_sQpng_uint_32 (png_const_structrp, png_const_inforp, int *, png_charpp, png_charpp)Npng_get_sCAL_s(png_const_structrp,png_const_inforp,int*,png_charpp,png_charpp)ÿ\u0000\u0000\u0000png_uint_32 png_get_sCAL_s(png_const_structrp png_ptr, png_const_inforp info_ptr, int *unit, png_charpp swidth, png_charpp sheight)\u0000\u000EPNG_GET_SCAL_S\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\b\u0000\u0000\u0000\u0000\u0000\u0000t\b\u0000\u0000\u0000\u0000\u0000\u0000t\b\u0000\u0000\u0000\u0000\u0000\fpng_set_sCAL:void (png_const_structrp, png_inforp, int, double, double)=png_set_sCAL(png_const_structrp,png_inforp,int,double,double)ivoid png_set_sCAL(png_const_structrp png_ptr, png_inforp info_ptr, int unit, double width, double height)\u0000\fPNG_SET_SCAL\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000v\b\u0000\u0000\u0000\u0000\u0000\u0000v\b\u0000\u0000\u0000\u0000\u0000\u0000v\b\u0000\u0000\u0000\u0000\u0000\u0012png_set_sCAL_fixedLvoid (png_const_structrp, png_inforp, int, png_fixed_point, png_fixed_point)Upng_set_sCAL_fixed(png_const_structrp,png_inforp,int,png_fixed_point,png_fixed_point)ÿ\u0000\u0000\u0000void png_set_sCAL_fixed(png_const_structrp png_ptr, png_inforp info_ptr, int unit, png_fixed_point width, png_fixed_point height)\u0000\u0012PNG_SET_SCAL_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000y\b\u0000\u0000\u0000\u0000\u0000\u0000y\b\u0000\u0000\u0000\u0000\u0000\u0000y\b\u0000\u0000\u0000\u0000\u0000\u000Epng_set_sCAL_sLvoid (png_const_structrp, png_inforp, int, png_const_charp, png_const_charp)Qpng_set_sCAL_s(png_const_structrp,png_inforp,int,png_const_charp,png_const_charp)ÿ\u007F\u0000\u0000\u0000void png_set_sCAL_s(png_const_structrp png_ptr, png_inforp info_ptr, int unit, png_const_charp swidth, png_const_charp sheight)\u0000\u000EPNG_SET_SCAL_S\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000â\b\u0000\u0000\u0000\u0000\u0000\u0000â\b\u0000\u0000\u0000\u0000\u0000\u0000â\b\u0000\u0000\u0000\u0000\u0000\u001Bpng_set_keep_unknown_chunks.void (png_structrp, int, png_const_bytep, int)Apng_set_keep_unknown_chunks(png_structrp,int,png_const_bytep,int)lvoid png_set_keep_unknown_chunks(png_structrp png_ptr, int keep, png_const_bytep chunk_list, int num_chunks)\u0000\u001BPNG_SET_KEEP_UNKNOWN_CHUNKS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ê\b\u0000\u0000\u0000\u0000\u0000\u0000ê\b\u0000\u0000\u0000\u0000\u0000\u0000ê\b\u0000\u0000\u0000\u0000\u0000\u0015png_handle_as_unknown)int (png_const_structrp, png_const_bytep)9png_handle_as_unknown(png_const_structrp,png_const_bytep)Qint png_handle_as_unknown(png_const_structrp png_ptr, png_const_bytep chunk_name)\u0000\u0015PNG_HANDLE_AS_UNKNOWN\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï\b\u0000\u0000\u0000\u0000\u0000\u0000ï\b\u0000\u0000\u0000\u0000\u0000\u0000ï\b\u0000\u0000\u0000\u0000\u0000\u0016png_set_unknown_chunksDvoid (png_const_structrp, png_inforp, png_const_unknown_chunkp, int)Rpng_set_unknown_chunks(png_const_structrp,png_inforp,png_const_unknown_chunkp,int)ÿ\u0000\u0000\u0000void png_set_unknown_chunks(png_const_structrp png_ptr, png_inforp info_ptr, png_const_unknown_chunkp unknowns, int num_unknowns)\u0000\u0016PNG_SET_UNKNOWN_CHUNKS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000û\b\u0000\u0000\u0000\u0000\u0000\u0000û\b\u0000\u0000\u0000\u0000\u0000\u0000û\b\u0000\u0000\u0000\u0000\u0000\u001Epng_set_unknown_chunk_location/void (png_const_structrp, png_inforp, int, int)Epng_set_unknown_chunk_location(png_const_structrp,png_inforp,int,int)mvoid png_set_unknown_chunk_location(png_const_structrp png_ptr, png_inforp info_ptr, int chunk, int location)\u0000\u001EPNG_SET_UNKNOWN_CHUNK_LOCATION\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000þ\b\u0000\u0000\u0000\u0000\u0000\u0000þ\b\u0000\u0000\u0000\u0000\u0000\u0000þ\b\u0000\u0000\u0000\u0000\u0000\u0016png_get_unknown_chunks9int (png_const_structrp, png_inforp, png_unknown_chunkpp)Ipng_get_unknown_chunks(png_const_structrp,png_inforp,png_unknown_chunkpp)hint png_get_unknown_chunks(png_const_structrp png_ptr, png_inforp info_ptr, png_unknown_chunkpp entries)\u0000\u0016PNG_GET_UNKNOWN_CHUNKS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\t\u0000\u0000\u0000\u0000\u0000\u0000\u0006\t\u0000\u0000\u0000\u0000\u0000\u0000\u0006\t\u0000\u0000\u0000\u0000\u0000\u000Fpng_set_invalid*void (png_const_structrp, png_inforp, int)2png_set_invalid(png_const_structrp,png_inforp,int)Ovoid png_set_invalid(png_const_structrp png_ptr, png_inforp info_ptr, int mask)\u0000\u000FPNG_SET_INVALID\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\f\t\u0000\u0000\u0000\u0000\u0000\u0000\f\t\u0000\u0000\u0000\u0000\u0000\u0000\f\t\u0000\u0000\u0000\u0000\u0000\fpng_read_png/void (png_structrp, png_inforp, int, png_voidp)3png_read_png(png_structrp,png_inforp,int,png_voidp)^void png_read_png(png_structrp png_ptr, png_inforp info_ptr, int transforms, png_voidp params)\u0000\fPNG_READ_PNG\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\t\u0000\u0000\u0000\u0000\u0000\u0000\u0010\t\u0000\u0000\u0000\u0000\u0000\u0000\u0010\t\u0000\u0000\u0000\u0000\u0000\rpng_write_png/void (png_structrp, png_inforp, int, png_voidp)4png_write_png(png_structrp,png_inforp,int,png_voidp)_void png_write_png(png_structrp png_ptr, png_inforp info_ptr, int transforms, png_voidp params)\u0000\rPNG_WRITE_PNG\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0015\t\u0000\u0000\u0000\u0000\u0000\u0000\u0015\t\u0000\u0000\u0000\u0000\u0000\u0000\u0015\t\u0000\u0000\u0000\u0000\u0000\u0011png_get_copyright$png_const_charp (png_const_structrp)%png_get_copyright(png_const_structrp)=png_const_charp png_get_copyright(png_const_structrp png_ptr)\u0000\u0011PNG_GET_COPYRIGHT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0017\t\u0000\u0000\u0000\u0000\u0000\u0000\u0017\t\u0000\u0000\u0000\u0000\u0000\u0000\u0017\t\u0000\u0000\u0000\u0000\u0000\u0012png_get_header_ver$png_const_charp (png_const_structrp)&png_get_header_ver(png_const_structrp)>png_const_charp png_get_header_ver(png_const_structrp png_ptr)\u0000\u0012PNG_GET_HEADER_VER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019\t\u0000\u0000\u0000\u0000\u0000\u0000\u0019\t\u0000\u0000\u0000\u0000\u0000\u0000\u0019\t\u0000\u0000\u0000\u0000\u0000\u0016png_get_header_version$png_const_charp (png_const_structrp)*png_get_header_version(png_const_structrp)Bpng_const_charp png_get_header_version(png_const_structrp png_ptr)\u0000\u0016PNG_GET_HEADER_VERSION\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001B\t\u0000\u0000\u0000\u0000\u0000\u0000\u001B\t\u0000\u0000\u0000\u0000\u0000\u0000\u001B\t\u0000\u0000\u0000\u0000\u0000\u0012png_get_libpng_ver$png_const_charp (png_const_structrp)&png_get_libpng_ver(png_const_structrp)>png_const_charp png_get_libpng_ver(png_const_structrp png_ptr)\u0000\u0012PNG_GET_LIBPNG_VER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001F\t\u0000\u0000\u0000\u0000\u0000\u0000\u001F\t\u0000\u0000\u0000\u0000\u0000\u0000\u001F\t\u0000\u0000\u0000\u0000\u0000\u0017png_permit_mng_features'png_uint_32 (png_structrp, png_uint_32)1png_permit_mng_features(png_structrp,png_uint_32)]png_uint_32 png_permit_mng_features(png_structrp png_ptr, png_uint_32 mng_features_permitted)\u0000\u0017PNG_PERMIT_MNG_FEATURES\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000$\t\u0000\u0000\b\u0000\u0000\u0000$\t\u0000\u0000'\u0000\u0000\u0000$\t\u0000\u0000\u0000\u0000\u0000\u001BPNG_HANDLE_CHUNK_AS_DEFAULT\u0000\u001BPNG_HANDLE_CHUNK_AS_DEFAULT\u001BPNG_HANDLE_CHUNK_AS_DEFAULT\u0000\u001BPNG_HANDLE_CHUNK_AS_DEFAULT\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000%\t\u0000\u0000\b\u0000\u0000\u0000%\t\u0000\u0000'\u0000\u0000\u0000%\t\u0000\u0000\u0000\u0000\u0000\u0016PNG_HANDLE_CHUNK_NEVER\u0000\u0016PNG_HANDLE_CHUNK_NEVER\u0016PNG_HANDLE_CHUNK_NEVER\u0000\u0016PNG_HANDLE_CHUNK_NEVER\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000&\t\u0000\u0000\b\u0000\u0000\u0000&\t\u0000\u0000'\u0000\u0000\u0000&\t\u0000\u0000\u0000\u0000\u0000\u0018PNG_HANDLE_CHUNK_IF_SAFE\u0000\u0018PNG_HANDLE_CHUNK_IF_SAFE\u0018PNG_HANDLE_CHUNK_IF_SAFE\u0000\u0018PNG_HANDLE_CHUNK_IF_SAFE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000'\t\u0000\u0000\b\u0000\u0000\u0000'\t\u0000\u0000'\u0000\u0000\u0000'\t\u0000\u0000\u0000\u0000\u0000\u0017PNG_HANDLE_CHUNK_ALWAYS\u0000\u0017PNG_HANDLE_CHUNK_ALWAYS\u0017PNG_HANDLE_CHUNK_ALWAYS\u0000\u0017PNG_HANDLE_CHUNK_ALWAYS\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000(\t\u0000\u0000\b\u0000\u0000\u0000(\t\u0000\u0000'\u0000\u0000\u0000(\t\u0000\u0000\u0000\u0000\u0000\u0015PNG_HANDLE_CHUNK_LAST\u0000\u0015PNG_HANDLE_CHUNK_LAST\u0015PNG_HANDLE_CHUNK_LAST\u0000\u0015PNG_HANDLE_CHUNK_LAST\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00004\t\u0000\u0000\u0000\u0000\u0000\u00004\t\u0000\u0000\u0000\u0000\u0000\u00004\t\u0000\u0000\u0000\u0000\u0000\u0013png_set_user_limits-void (png_structrp, png_uint_32, png_uint_32)9png_set_user_limits(png_structrp,png_uint_32,png_uint_32)gvoid png_set_user_limits(png_structrp png_ptr, png_uint_32 user_width_max, png_uint_32 user_height_max)\u0000\u0013PNG_SET_USER_LIMITS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00006\t\u0000\u0000\u0000\u0000\u0000\u00006\t\u0000\u0000\u0000\u0000\u0000\u00006\t\u0000\u0000\u0000\u0000\u0000\u0016png_get_user_width_max png_uint_32 (png_const_structrp)*png_get_user_width_max(png_const_structrp)>png_uint_32 png_get_user_width_max(png_const_structrp png_ptr)\u0000\u0016PNG_GET_USER_WIDTH_MAX\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00008\t\u0000\u0000\u0000\u0000\u0000\u00008\t\u0000\u0000\u0000\u0000\u0000\u00008\t\u0000\u0000\u0000\u0000\u0000\u0017png_get_user_height_max png_uint_32 (png_const_structrp)+png_get_user_height_max(png_const_structrp)?png_uint_32 png_get_user_height_max(png_const_structrp png_ptr)\u0000\u0017PNG_GET_USER_HEIGHT_MAX\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000;\t\u0000\u0000\u0000\u0000\u0000\u0000;\t\u0000\u0000\u0000\u0000\u0000\u0000;\t\u0000\u0000\u0000\u0000\u0000\u0017png_set_chunk_cache_max void (png_structrp, png_uint_32)1png_set_chunk_cache_max(png_structrp,png_uint_32)Tvoid png_set_chunk_cache_max(png_structrp png_ptr, png_uint_32 user_chunk_cache_max)\u0000\u0017PNG_SET_CHUNK_CACHE_MAX\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000=\t\u0000\u0000\u0000\u0000\u0000\u0000=\t\u0000\u0000\u0000\u0000\u0000\u0000=\t\u0000\u0000\u0000\u0000\u0000\u0017png_get_chunk_cache_max png_uint_32 (png_const_structrp)+png_get_chunk_cache_max(png_const_structrp)?png_uint_32 png_get_chunk_cache_max(png_const_structrp png_ptr)\u0000\u0017PNG_GET_CHUNK_CACHE_MAX\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\t\u0000\u0000\u0000\u0000\u0000\u0000@\t\u0000\u0000\u0000\u0000\u0000\u0000@\t\u0000\u0000\u0000\u0000\u0000\u0018png_set_chunk_malloc_max%void (png_structrp, png_alloc_size_t)7png_set_chunk_malloc_max(png_structrp,png_alloc_size_t)Zvoid png_set_chunk_malloc_max(png_structrp png_ptr, png_alloc_size_t user_chunk_cache_max)\u0000\u0018PNG_SET_CHUNK_MALLOC_MAX\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000B\t\u0000\u0000\u0000\u0000\u0000\u0000B\t\u0000\u0000\u0000\u0000\u0000\u0000B\t\u0000\u0000\u0000\u0000\u0000\u0018png_get_chunk_malloc_max%png_alloc_size_t (png_const_structrp),png_get_chunk_malloc_max(png_const_structrp)Epng_alloc_size_t png_get_chunk_malloc_max(png_const_structrp png_ptr)\u0000\u0018PNG_GET_CHUNK_MALLOC_MAX\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000G\t\u0000\u0000\u0000\u0000\u0000\u0000G\t\u0000\u0000\u0000\u0000\u0000\u0000G\t\u0000\u0000\u0000\u0000\u0000\u0017png_get_pixels_per_inch2png_uint_32 (png_const_structrp, png_const_inforp)<png_get_pixels_per_inch(png_const_structrp,png_const_inforp)Zpng_uint_32 png_get_pixels_per_inch(png_const_structrp png_ptr, png_const_inforp info_ptr)\u0000\u0017PNG_GET_PIXELS_PER_INCH\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000J\t\u0000\u0000\u0000\u0000\u0000\u0000J\t\u0000\u0000\u0000\u0000\u0000\u0000J\t\u0000\u0000\u0000\u0000\u0000\u0019png_get_x_pixels_per_inch2png_uint_32 (png_const_structrp, png_const_inforp)>png_get_x_pixels_per_inch(png_const_structrp,png_const_inforp)\\png_uint_32 png_get_x_pixels_per_inch(png_const_structrp png_ptr, png_const_inforp info_ptr)\u0000\u0019PNG_GET_X_PIXELS_PER_INCH\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000M\t\u0000\u0000\u0000\u0000\u0000\u0000M\t\u0000\u0000\u0000\u0000\u0000\u0000M\t\u0000\u0000\u0000\u0000\u0000\u0019png_get_y_pixels_per_inch2png_uint_32 (png_const_structrp, png_const_inforp)>png_get_y_pixels_per_inch(png_const_structrp,png_const_inforp)\\png_uint_32 png_get_y_pixels_per_inch(png_const_structrp png_ptr, png_const_inforp info_ptr)\u0000\u0019PNG_GET_Y_PIXELS_PER_INCH\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000P\t\u0000\u0000\u0000\u0000\u0000\u0000P\t\u0000\u0000\u0000\u0000\u0000\u0000P\t\u0000\u0000\u0000\u0000\u0000\u0017png_get_x_offset_inches,float (png_const_structrp, png_const_inforp)<png_get_x_offset_inches(png_const_structrp,png_const_inforp)Tfloat png_get_x_offset_inches(png_const_structrp png_ptr, png_const_inforp info_ptr)\u0000\u0017PNG_GET_X_OFFSET_INCHES\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000S\t\u0000\u0000\u0000\u0000\u0000\u0000S\t\u0000\u0000\u0000\u0000\u0000\u0000S\t\u0000\u0000\u0000\u0000\u0000\u001Dpng_get_x_offset_inches_fixed6png_fixed_point (png_const_structrp, png_const_inforp)Bpng_get_x_offset_inches_fixed(png_const_structrp,png_const_inforp)dpng_fixed_point png_get_x_offset_inches_fixed(png_const_structrp png_ptr, png_const_inforp info_ptr)\u0000\u001DPNG_GET_X_OFFSET_INCHES_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000W\t\u0000\u0000\u0000\u0000\u0000\u0000W\t\u0000\u0000\u0000\u0000\u0000\u0000W\t\u0000\u0000\u0000\u0000\u0000\u0017png_get_y_offset_inches,float (png_const_structrp, png_const_inforp)<png_get_y_offset_inches(png_const_structrp,png_const_inforp)Tfloat png_get_y_offset_inches(png_const_structrp png_ptr, png_const_inforp info_ptr)\u0000\u0017PNG_GET_Y_OFFSET_INCHES\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Z\t\u0000\u0000\u0000\u0000\u0000\u0000Z\t\u0000\u0000\u0000\u0000\u0000\u0000Z\t\u0000\u0000\u0000\u0000\u0000\u001Dpng_get_y_offset_inches_fixed6png_fixed_point (png_const_structrp, png_const_inforp)Bpng_get_y_offset_inches_fixed(png_const_structrp,png_const_inforp)dpng_fixed_point png_get_y_offset_inches_fixed(png_const_structrp png_ptr, png_const_inforp info_ptr)\u0000\u001DPNG_GET_Y_OFFSET_INCHES_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000_\t\u0000\u0000\u0000\u0000\u0000\u0000_\t\u0000\u0000\u0000\u0000\u0000\u0000_\t\u0000\u0000\u0000\u0000\u0000\u0010png_get_pHYs_dpiWpng_uint_32 (png_const_structrp, png_const_inforp, png_uint_32 *, png_uint_32 *, int *)Tpng_get_pHYs_dpi(png_const_structrp,png_const_inforp,png_uint_32*,png_uint_32*,int*)ÿ\u0000\u0000\u0000png_uint_32 png_get_pHYs_dpi(png_const_structrp png_ptr, png_const_inforp info_ptr, png_uint_32 *res_x, png_uint_32 *res_y, int *unit_type)\u0000\u0010PNG_GET_PHYS_DPI\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000g\t\u0000\u0000\u0000\u0000\u0000\u0000g\t\u0000\u0000\u0000\u0000\u0000\u0000g\t\u0000\u0000\u0000\u0000\u0000\u0010png_get_io_state png_uint_32 (png_const_structrp)$png_get_io_state(png_const_structrp)8png_uint_32 png_get_io_state(png_const_structrp png_ptr)\u0000\u0010PNG_GET_IO_STATE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000m\t\u0000\u0000\u0000\u0000\u0000\u0000m\t\u0000\u0000\u0000\u0000\u0000\u0000m\t\u0000\u0000\u0000\u0000\u0000\u0015png_get_io_chunk_type png_uint_32 (png_const_structrp))png_get_io_chunk_type(png_const_structrp)=png_uint_32 png_get_io_chunk_type(png_const_structrp png_ptr)\u0000\u0015PNG_GET_IO_CHUNK_TYPE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000q\t\u0000\u0000\n\u0000\u0000\u0000q\t\u0000\u0000#\u0000\u0000\u0000q\t\u0000\u0000\u0000\u0000\u0000\vPNG_IO_NONE\u0000\vPNG_IO_NONE\vPNG_IO_NONE\u0000\vPNG_IO_NONE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000r\t\u0000\u0000\n\u0000\u0000\u0000r\t\u0000\u0000#\u0000\u0000\u0000r\t\u0000\u0000\u0000\u0000\u0000\u000EPNG_IO_READING\u0000\u000EPNG_IO_READING\u000EPNG_IO_READING\u0000\u000EPNG_IO_READING\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000s\t\u0000\u0000\n\u0000\u0000\u0000s\t\u0000\u0000#\u0000\u0000\u0000s\t\u0000\u0000\u0000\u0000\u0000\u000EPNG_IO_WRITING\u0000\u000EPNG_IO_WRITING\u000EPNG_IO_WRITING\u0000\u000EPNG_IO_WRITING\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000t\t\u0000\u0000\n\u0000\u0000\u0000t\t\u0000\u0000#\u0000\u0000\u0000t\t\u0000\u0000\u0000\u0000\u0000\u0010PNG_IO_SIGNATURE\u0000\u0010PNG_IO_SIGNATURE\u0010PNG_IO_SIGNATURE\u0000\u0010PNG_IO_SIGNATURE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000u\t\u0000\u0000\n\u0000\u0000\u0000u\t\u0000\u0000#\u0000\u0000\u0000u\t\u0000\u0000\u0000\u0000\u0000\u0010PNG_IO_CHUNK_HDR\u0000\u0010PNG_IO_CHUNK_HDR\u0010PNG_IO_CHUNK_HDR\u0000\u0010PNG_IO_CHUNK_HDR\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000v\t\u0000\u0000\n\u0000\u0000\u0000v\t\u0000\u0000#\u0000\u0000\u0000v\t\u0000\u0000\u0000\u0000\u0000\u0011PNG_IO_CHUNK_DATA\u0000\u0011PNG_IO_CHUNK_DATA\u0011PNG_IO_CHUNK_DATA\u0000\u0011PNG_IO_CHUNK_DATA\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000w\t\u0000\u0000\n\u0000\u0000\u0000w\t\u0000\u0000#\u0000\u0000\u0000w\t\u0000\u0000\u0000\u0000\u0000\u0010PNG_IO_CHUNK_CRC\u0000\u0010PNG_IO_CHUNK_CRC\u0010PNG_IO_CHUNK_CRC\u0000\u0010PNG_IO_CHUNK_CRC\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000x\t\u0000\u0000\n\u0000\u0000\u0000x\t\u0000\u0000#\u0000\u0000\u0000x\t\u0000\u0000\u0000\u0000\u0000\u000EPNG_IO_MASK_OP\u0000\u000EPNG_IO_MASK_OP\u000EPNG_IO_MASK_OP\u0000\u000EPNG_IO_MASK_OP\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000y\t\u0000\u0000\n\u0000\u0000\u0000y\t\u0000\u0000#\u0000\u0000\u0000y\t\u0000\u0000\u0000\u0000\u0000\u000FPNG_IO_MASK_LOC\u0000\u000FPNG_IO_MASK_LOC\u000FPNG_IO_MASK_LOC\u0000\u000FPNG_IO_MASK_LOC\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000$\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u001APNG_INTERLACE_ADAM7_PASSES\u0000\u001APNG_INTERLACE_ADAM7_PASSES\u001APNG_INTERLACE_ADAM7_PASSES\u0000\u001APNG_INTERLACE_ADAM7_PASSES\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000C\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0012PNG_PASS_START_ROW\u0000\u0012PNG_PASS_START_ROW\u0012PNG_PASS_START_ROW\u0000\u0012PNG_PASS_START_ROW\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000G\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0012PNG_PASS_START_COL\u0000\u0012PNG_PASS_START_COL\u0012PNG_PASS_START_COL\u0000\u0012PNG_PASS_START_COL\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000C\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0013PNG_PASS_ROW_OFFSET\u0000\u0013PNG_PASS_ROW_OFFSET\u0013PNG_PASS_ROW_OFFSET\u0000\u0013PNG_PASS_ROW_OFFSET\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u00006\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0013PNG_PASS_COL_OFFSET\u0000\u0013PNG_PASS_COL_OFFSET\u0013PNG_PASS_COL_OFFSET\u0000\u0013PNG_PASS_COL_OFFSET\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000;\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0012PNG_PASS_ROW_SHIFT\u0000\u0012PNG_PASS_ROW_SHIFT\u0012PNG_PASS_ROW_SHIFT\u0000\u0012PNG_PASS_ROW_SHIFT\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000;\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0012PNG_PASS_COL_SHIFT\u0000\u0012PNG_PASS_COL_SHIFT\u0012PNG_PASS_COL_SHIFT\u0000\u0012PNG_PASS_COL_SHIFT\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000<\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\rPNG_PASS_ROWS\u0000\rPNG_PASS_ROWS\rPNG_PASS_ROWS\u0000\rPNG_PASS_ROWS\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000<\u0000\u0000\u0000 \t\u0000\u0000\u0000\u0000\u0000\rPNG_PASS_COLS\u0000\rPNG_PASS_COLS\rPNG_PASS_COLS\u0000\rPNG_PASS_COLS\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000¦\t\u0000\u0000\b\u0000\u0000\u0000¦\t\u0000\u0000@\u0000\u0000\u0000§\t\u0000\u0000\u0000\u0000\u0000\u0015PNG_ROW_FROM_PASS_ROW\u0000\u0015PNG_ROW_FROM_PASS_ROW\u0015PNG_ROW_FROM_PASS_ROW\u0000\u0015PNG_ROW_FROM_PASS_ROW\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000¨\t\u0000\u0000\b\u0000\u0000\u0000¨\t\u0000\u0000@\u0000\u0000\u0000©\t\u0000\u0000\u0000\u0000\u0000\u0015PNG_COL_FROM_PASS_COL\u0000\u0015PNG_COL_FROM_PASS_COL\u0015PNG_COL_FROM_PASS_COL\u0000\u0015PNG_COL_FROM_PASS_COL\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000±\t\u0000\u0000\b\u0000\u0000\u0000±\t\u0000\u00002\u0000\u0000\u0000³\t\u0000\u0000\u0000\u0000\u0000\rPNG_PASS_MASK\u0000\rPNG_PASS_MASK\rPNG_PASS_MASK\u0000\rPNG_PASS_MASK\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000µ\t\u0000\u0000\b\u0000\u0000\u0000µ\t\u0000\u0000+\u0000\u0000\u0000¶\t\u0000\u0000\u0000\u0000\u0000\u0019PNG_ROW_IN_INTERLACE_PASS\u0000\u0019PNG_ROW_IN_INTERLACE_PASS\u0019PNG_ROW_IN_INTERLACE_PASS\u0000\u0019PNG_ROW_IN_INTERLACE_PASS\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000·\t\u0000\u0000\b\u0000\u0000\u0000·\t\u0000\u0000+\u0000\u0000\u0000¸\t\u0000\u0000\u0000\u0000\u0000\u0019PNG_COL_IN_INTERLACE_PASS\u0000\u0019PNG_COL_IN_INTERLACE_PASS\u0019PNG_COL_IN_INTERLACE_PASS\u0000\u0019PNG_COL_IN_INTERLACE_PASS\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000É\t\u0000\u0000\n\u0000\u0000\u0000É\t\u0000\u0000\u0004\u0000\u0000\u0000Ð\t\u0000\u0000\u0000\u0000\u0000\rpng_composite\u0000\rpng_composite\rpng_composite\u0000\rPNG_COMPOSITE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000Ò\t\u0000\u0000\n\u0000\u0000\u0000Ò\t\u0000\u0000\u0004\u0000\u0000\u0000Ù\t\u0000\u0000\u0000\u0000\u0000\u0010png_composite_16\u0000\u0010png_composite_16\u0010png_composite_16\u0000\u0010PNG_COMPOSITE_16\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ë\t\u0000\u0000\u0000\u0000\u0000\u0000ë\t\u0000\u0000\u0000\u0000\u0000\u0000ë\t\u0000\u0000\u0000\u0000\u0000\u000Fpng_get_uint_32\u001Dpng_uint_32 (png_const_bytep) png_get_uint_32(png_const_bytep)0png_uint_32 png_get_uint_32(png_const_bytep buf)\u0000\u000FPNG_GET_UINT_32\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ì\t\u0000\u0000\u0000\u0000\u0000\u0000ì\t\u0000\u0000\u0000\u0000\u0000\u0000ì\t\u0000\u0000\u0000\u0000\u0000\u000Fpng_get_uint_16\u001Dpng_uint_16 (png_const_bytep) png_get_uint_16(png_const_bytep)0png_uint_16 png_get_uint_16(png_const_bytep buf)\u0000\u000FPNG_GET_UINT_16\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000í\t\u0000\u0000\u0000\u0000\u0000\u0000í\t\u0000\u0000\u0000\u0000\u0000\u0000í\t\u0000\u0000\u0000\u0000\u0000\u000Epng_get_int_32\u001Cpng_int_32 (png_const_bytep)\u001Fpng_get_int_32(png_const_bytep).png_int_32 png_get_int_32(png_const_bytep buf)\u0000\u000EPNG_GET_INT_32\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ð\t\u0000\u0000\u0000\u0000\u0000\u0000ð\t\u0000\u0000\u0000\u0000\u0000\u0000ð\t\u0000\u0000\u0000\u0000\u0000\u000Fpng_get_uint_311png_uint_32 (png_const_structrp, png_const_bytep)3png_get_uint_31(png_const_structrp,png_const_bytep)Lpng_uint_32 png_get_uint_31(png_const_structrp png_ptr, png_const_bytep buf)\u0000\u000FPNG_GET_UINT_31\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ö\t\u0000\u0000\u0000\u0000\u0000\u0000ö\t\u0000\u0000\u0000\u0000\u0000\u0000ö\t\u0000\u0000\u0000\u0000\u0000\u0010png_save_uint_32\u001Dvoid (png_bytep, png_uint_32)'png_save_uint_32(png_bytep,png_uint_32)3void png_save_uint_32(png_bytep buf, png_uint_32 i)\u0000\u0010PNG_SAVE_UINT_32\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ù\t\u0000\u0000\u0000\u0000\u0000\u0000ù\t\u0000\u0000\u0000\u0000\u0000\u0000ù\t\u0000\u0000\u0000\u0000\u0000\u000Fpng_save_int_32\u001Cvoid (png_bytep, png_int_32)%png_save_int_32(png_bytep,png_int_32)1void png_save_int_32(png_bytep buf, png_int_32 i)\u0000\u000FPNG_SAVE_INT_32\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\n\u0000\u0000\u0000\u0000\u0000\u0000\u0001\n\u0000\u0000\u0000\u0000\u0000\u0000\u0001\n\u0000\u0000\u0000\u0000\u0000\u0010png_save_uint_16\u001Evoid (png_bytep, unsigned int)(png_save_uint_16(png_bytep,unsigned int)4void png_save_uint_16(png_bytep buf, unsigned int i)\u0000\u0010PNG_SAVE_UINT_16\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000\n\n\u0000\u0000\n\u0000\u0000\u0000\n\n\u0000\u0000\"\u0000\u0000\u0000\u000E\n\u0000\u0000\u0000\u0000\u0000\u000FPNG_get_uint_32\u0000\u000FPNG_get_uint_32\u000FPNG_get_uint_32\u0000\u000FPNG_GET_UINT_32\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000\u0013\n\u0000\u0000\n\u0000\u0000\u0000\u0013\n\u0000\u0000$\u0000\u0000\u0000\u0016\n\u0000\u0000\u0000\u0000\u0000\u000FPNG_get_uint_16\u0000\u000FPNG_get_uint_16\u000FPNG_get_uint_16\u0000\u000FPNG_GET_UINT_16\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000\u0018\n\u0000\u0000\n\u0000\u0000\u0000\u0018\n\u0000\u0000(\u0000\u0000\u0000\u001B\n\u0000\u0000\u0000\u0000\u0000\u000EPNG_get_int_32\u0000\u000EPNG_get_int_32\u000EPNG_get_int_32\u0000\u000EPNG_GET_INT_32\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\f\u0000\u0000\u0000!\n\u0000\u0000\f\u0000\u0000\u0000!\n\u0000\u00005\u0000\u0000\u0000!\n\u0000\u0000\u0000\u0000\u0000\u000Fpng_get_uint_32\u0000\u000Fpng_get_uint_32\u000Fpng_get_uint_32\u0000\u000FPNG_GET_UINT_32\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\f\u0000\u0000\u0000\"\n\u0000\u0000\f\u0000\u0000\u0000\"\n\u0000\u00005\u0000\u0000\u0000\"\n\u0000\u0000\u0000\u0000\u0000\u000Fpng_get_uint_16\u0000\u000Fpng_get_uint_16\u000Fpng_get_uint_16\u0000\u000FPNG_GET_UINT_16\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\f\u0000\u0000\u0000#\n\u0000\u0000\f\u0000\u0000\u0000#\n\u0000\u00004\u0000\u0000\u0000#\n\u0000\u0000\u0000\u0000\u0000\u000Epng_get_int_32\u0000\u000Epng_get_int_32\u000Epng_get_int_32\u0000\u000EPNG_GET_INT_32\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000/\n\u0000\u0000\u0000\u0000\u0000\u0000/\n\u0000\u0000\u0000\u0000\u0000\u0000/\n\u0000\u0000\u0000\u0000\u0000\u001Fpng_set_check_for_invalid_index\u0018void (png_structrp, int)1png_set_check_for_invalid_index(png_structrp,int)Gvoid png_set_check_for_invalid_index(png_structrp png_ptr, int allowed)\u0000\u001FPNG_SET_CHECK_FOR_INVALID_INDEX\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00002\n\u0000\u0000\u0000\u0000\u0000\u00002\n\u0000\u0000\u0000\u0000\u0000\u00002\n\u0000\u0000\u0000\u0000\u0000\u0013png_get_palette_max(int (png_const_structp, png_const_infop)6png_get_palette_max(png_const_structp,png_const_infop)Lint png_get_palette_max(png_const_structp png_ptr, png_const_infop info_ptr)\u0000\u0013PNG_GET_PALETTE_MAX\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000h\n\u0000\u0000\b\u0000\u0000\u0000h\n\u0000\u0000\u001B\u0000\u0000\u0000h\n\u0000\u0000\u0000\u0000\u0000\u0011PNG_IMAGE_VERSION\u0000\u0011PNG_IMAGE_VERSION\u0011PNG_IMAGE_VERSION\u0000\u0011PNG_IMAGE_VERSION\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u000F\u0000\u0000\u0000j\n\u0000\u0000\b\u0000\u0000\u0000j\n\u0000\u0000\u001A\u0000\u0000\u0000j\n\u0000\u0000\u0000\u0000\u0000\vpng_control\vpng_control\vpng_control\vpng_control\u0000\vPNG_CONTROL\vpng_control\vPNG_CONTROL\u0000\u0000\u0014\u0000\u0000\u0000\u001C\u0000\u0000\u0000j\n\u0000\u0000\u0000\u0000\u0000\u0000j\n\u0000\u0000(\u0000\u0000\u0000j\n\u0000\u0000\u0001\u0000\u0000\fpng_controlp\fpng_controlp\fpng_controlp!typedef png_control *png_controlp\u0000\fPNG_CONTROLP\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000k\n\u0000\u0000\b\u0000\u0000\u0000k\n\u0000\u0000\u0001\u0000\u0000\u0000\n\u0000\u0000\u0001\u0000\u0000\tpng_image\tpng_image\tpng_image\u0000\u0000\tPNG_IMAGE\tpng_image\tPNG_IMAGE\u0000\u0000\u0006\u0000\u0000\u0000\u0010\u0000\u0000\u0000m\n\u0000\u0000\u0003\u0000\u0000\u0000m\n\u0000\u0000\u0016\u0000\u0000\u0000m\n\u0000\u0000\u0001\u0000\u0000\u0006opaque\fpng_controlp\u0011png_image::opaque\u0013png_controlp opaque\u0000\u0006OPAQUE\tpng_image\tPNG_IMAGE\u0000\u0000\u0006\u0000\u0000\u0000\u0010\u0000\u0000\u0000n\n\u0000\u0000\u0003\u0000\u0000\u0000n\n\u0000\u0000\u0017\u0000\u0000\u0000n\n\u0000\u0000\u0001\u0000\u0000\aversion\vpng_uint_32\u0012png_image::version\u0013png_uint_32 version\u0000\aVERSION\tpng_image\tPNG_IMAGE\u0000\u0000\u0006\u0000\u0000\u0000\u0010\u0000\u0000\u0000o\n\u0000\u0000\u0003\u0000\u0000\u0000o\n\u0000\u0000\u0015\u0000\u0000\u0000o\n\u0000\u0000\u0001\u0000\u0000\u0005width\vpng_uint_32\u0010png_image::width\u0011png_uint_32 width\u0000\u0005WIDTH\tpng_image\tPNG_IMAGE\u0000\u0000\u0006\u0000\u0000\u0000\u0010\u0000\u0000\u0000p\n\u0000\u0000\u0003\u0000\u0000\u0000p\n\u0000\u0000\u0016\u0000\u0000\u0000p\n\u0000\u0000\u0001\u0000\u0000\u0006height\vpng_uint_32\u0011png_image::height\u0012png_uint_32 height\u0000\u0006HEIGHT\tpng_image\tPNG_IMAGE\u0000\u0000\u0006\u0000\u0000\u0000\u0010\u0000\u0000\u0000q\n\u0000\u0000\u0003\u0000\u0000\u0000q\n\u0000\u0000\u0016\u0000\u0000\u0000q\n\u0000\u0000\u0001\u0000\u0000\u0006format\vpng_uint_32\u0011png_image::format\u0012png_uint_32 format\u0000\u0006FORMAT\tpng_image\tPNG_IMAGE\u0000\u0000\u0006\u0000\u0000\u0000\u0010\u0000\u0000\u0000r\n\u0000\u0000\u0003\u0000\u0000\u0000r\n\u0000\u0000\u0015\u0000\u0000\u0000r\n\u0000\u0000\u0001\u0000\u0000\u0005flags\vpng_uint_32\u0010png_image::flags\u0011png_uint_32 flags\u0000\u0005FLAGS\tpng_image\tPNG_IMAGE\u0000\u0000\u0006\u0000\u0000\u0000\u0010\u0000\u0000\u0000s\n\u0000\u0000\u0003\u0000\u0000\u0000s\n\u0000\u0000 \u0000\u0000\u0000s\n\u0000\u0000\u0001\u0000\u0000\u0010colormap_entries\vpng_uint_32\u001Bpng_image::colormap_entries\u001Cpng_uint_32 colormap_entries\u0000\u0010COLORMAP_ENTRIES\tpng_image\tPNG_IMAGE\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000\u007F\n\u0000\u0000\n\u0000\u0000\u0000\u007F\n\u0000\u0000\u001D\u0000\u0000\u0000\u007F\n\u0000\u0000\u0000\u0000\u0000\u0011PNG_IMAGE_WARNING\u0000\u0011PNG_IMAGE_WARNING\u0011PNG_IMAGE_WARNING\u0000\u0011PNG_IMAGE_WARNING\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000\n\u0000\u0000\n\u0000\u0000\u0000\n\u0000\u0000\u001B\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u000FPNG_IMAGE_ERROR\u0000\u000FPNG_IMAGE_ERROR\u000FPNG_IMAGE_ERROR\u0000\u000FPNG_IMAGE_ERROR\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000\n\u0000\u0000\n\u0000\u0000\u0000\n\u0000\u0000O\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0010PNG_IMAGE_FAILED\u0000\u0010PNG_IMAGE_FAILED\u0010PNG_IMAGE_FAILED\u0000\u0010PNG_IMAGE_FAILED\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0010\u0000\u0000\u0000\n\u0000\u0000\u0003\u0000\u0000\u0000\n\u0000\u0000 \u0000\u0000\u0000\n\u0000\u0000\u0001\u0000\u0000\u0010warning_or_error\vpng_uint_32\u001Bpng_image::warning_or_error\u001Cpng_uint_32 warning_or_error\u0000\u0010WARNING_OR_ERROR\tpng_image\tPNG_IMAGE\u0000\u0000\u0006\u0000\u0000\u0000\u0010\u0000\u0000\u0000\n\u0000\u0000\u0003\u0000\u0000\u0000\n\u0000\u0000\u001B\u0000\u0000\u0000\n\u0000\u0000\u0001\u0000\u0000\amessage\bchar[64]\u0012png_image::message\u0010char message[64]\u0000\aMESSAGE\tpng_image\tPNG_IMAGE\u0000\u0000\u0014\u0000\u0000\u0000\u0002\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000k\n\u0000\u0000\v\u0000\u0000\u0000\n\u0000\u0000\u0001\u0000\u0000\tpng_image\tpng_image\tpng_image\u001Btypedef png_image png_image\u0000\tPNG_IMAGE\u0000\u0000\tpng_image\u0000\u0014\u0000\u0000\u0000\u000E\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000k\n\u0000\u0000\u0018\u0000\u0000\u0000\n\u0000\u0000\u0001\u0000\u0000\npng_imagep\npng_imagep\npng_imagep\u001Dtypedef png_image *png_imagep\u0000\nPNG_IMAGEP\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Õ\n\u0000\u0000\b\u0000\u0000\u0000Õ\n\u0000\u0000&\u0000\u0000\u0000Õ\n\u0000\u0000\u0000\u0000\u0000\u0015PNG_FORMAT_FLAG_ALPHA\u0000\u0015PNG_FORMAT_FLAG_ALPHA\u0015PNG_FORMAT_FLAG_ALPHA\u0000\u0015PNG_FORMAT_FLAG_ALPHA\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ö\n\u0000\u0000\b\u0000\u0000\u0000Ö\n\u0000\u0000&\u0000\u0000\u0000Ö\n\u0000\u0000\u0000\u0000\u0000\u0015PNG_FORMAT_FLAG_COLOR\u0000\u0015PNG_FORMAT_FLAG_COLOR\u0015PNG_FORMAT_FLAG_COLOR\u0000\u0015PNG_FORMAT_FLAG_COLOR\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000×\n\u0000\u0000\b\u0000\u0000\u0000×\n\u0000\u0000&\u0000\u0000\u0000×\n\u0000\u0000\u0000\u0000\u0000\u0016PNG_FORMAT_FLAG_LINEAR\u0000\u0016PNG_FORMAT_FLAG_LINEAR\u0016PNG_FORMAT_FLAG_LINEAR\u0000\u0016PNG_FORMAT_FLAG_LINEAR\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ø\n\u0000\u0000\b\u0000\u0000\u0000Ø\n\u0000\u0000&\u0000\u0000\u0000Ø\n\u0000\u0000\u0000\u0000\u0000\u0018PNG_FORMAT_FLAG_COLORMAP\u0000\u0018PNG_FORMAT_FLAG_COLORMAP\u0018PNG_FORMAT_FLAG_COLORMAP\u0000\u0018PNG_FORMAT_FLAG_COLORMAP\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000Û\n\u0000\u0000\n\u0000\u0000\u0000Û\n\u0000\u0000&\u0000\u0000\u0000Û\n\u0000\u0000\u0000\u0000\u0000\u0013PNG_FORMAT_FLAG_BGR\u0000\u0013PNG_FORMAT_FLAG_BGR\u0013PNG_FORMAT_FLAG_BGR\u0000\u0013PNG_FORMAT_FLAG_BGR\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000ß\n\u0000\u0000\n\u0000\u0000\u0000ß\n\u0000\u0000&\u0000\u0000\u0000ß\n\u0000\u0000\u0000\u0000\u0000\u0016PNG_FORMAT_FLAG_AFIRST\u0000\u0016PNG_FORMAT_FLAG_AFIRST\u0016PNG_FORMAT_FLAG_AFIRST\u0000\u0016PNG_FORMAT_FLAG_AFIRST\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000â\n\u0000\u0000\b\u0000\u0000\u0000â\n\u0000\u0000.\u0000\u0000\u0000â\n\u0000\u0000\u0000\u0000\u0000 PNG_FORMAT_FLAG_ASSOCIATED_ALPHA\u0000 PNG_FORMAT_FLAG_ASSOCIATED_ALPHA PNG_FORMAT_FLAG_ASSOCIATED_ALPHA\u0000 PNG_FORMAT_FLAG_ASSOCIATED_ALPHA\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000è\n\u0000\u0000\b\u0000\u0000\u0000è\n\u0000\u0000\u0019\u0000\u0000\u0000è\n\u0000\u0000\u0000\u0000\u0000\u000FPNG_FORMAT_GRAY\u0000\u000FPNG_FORMAT_GRAY\u000FPNG_FORMAT_GRAY\u0000\u000FPNG_FORMAT_GRAY\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000é\n\u0000\u0000\b\u0000\u0000\u0000é\n\u0000\u0000-\u0000\u0000\u0000é\n\u0000\u0000\u0000\u0000\u0000\rPNG_FORMAT_GA\u0000\rPNG_FORMAT_GA\rPNG_FORMAT_GA\u0000\rPNG_FORMAT_GA\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000ê\n\u0000\u0000\b\u0000\u0000\u0000ê\n\u0000\u0000>\u0000\u0000\u0000ê\n\u0000\u0000\u0000\u0000\u0000\rPNG_FORMAT_AG\u0000\rPNG_FORMAT_AG\rPNG_FORMAT_AG\u0000\rPNG_FORMAT_AG\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000ë\n\u0000\u0000\b\u0000\u0000\u0000ë\n\u0000\u0000-\u0000\u0000\u0000ë\n\u0000\u0000\u0000\u0000\u0000\u000EPNG_FORMAT_RGB\u0000\u000EPNG_FORMAT_RGB\u000EPNG_FORMAT_RGB\u0000\u000EPNG_FORMAT_RGB\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000ì\n\u0000\u0000\b\u0000\u0000\u0000ì\n\u0000\u0000C\u0000\u0000\u0000ì\n\u0000\u0000\u0000\u0000\u0000\u000EPNG_FORMAT_BGR\u0000\u000EPNG_FORMAT_BGR\u000EPNG_FORMAT_BGR\u0000\u000EPNG_FORMAT_BGR\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000í\n\u0000\u0000\b\u0000\u0000\u0000í\n\u0000\u0000>\u0000\u0000\u0000í\n\u0000\u0000\u0000\u0000\u0000\u000FPNG_FORMAT_RGBA\u0000\u000FPNG_FORMAT_RGBA\u000FPNG_FORMAT_RGBA\u0000\u000FPNG_FORMAT_RGBA\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000î\n\u0000\u0000\b\u0000\u0000\u0000î\n\u0000\u0000@\u0000\u0000\u0000î\n\u0000\u0000\u0000\u0000\u0000\u000FPNG_FORMAT_ARGB\u0000\u000FPNG_FORMAT_ARGB\u000FPNG_FORMAT_ARGB\u0000\u000FPNG_FORMAT_ARGB\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000ï\n\u0000\u0000\b\u0000\u0000\u0000ï\n\u0000\u0000>\u0000\u0000\u0000ï\n\u0000\u0000\u0000\u0000\u0000\u000FPNG_FORMAT_BGRA\u0000\u000FPNG_FORMAT_BGRA\u000FPNG_FORMAT_BGRA\u0000\u000FPNG_FORMAT_BGRA\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000ð\n\u0000\u0000\b\u0000\u0000\u0000ð\n\u0000\u0000@\u0000\u0000\u0000ð\n\u0000\u0000\u0000\u0000\u0000\u000FPNG_FORMAT_ABGR\u0000\u000FPNG_FORMAT_ABGR\u000FPNG_FORMAT_ABGR\u0000\u000FPNG_FORMAT_ABGR\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000õ\n\u0000\u0000\b\u0000\u0000\u0000õ\n\u0000\u00002\u0000\u0000\u0000õ\n\u0000\u0000\u0000\u0000\u0000\u0013PNG_FORMAT_LINEAR_Y\u0000\u0013PNG_FORMAT_LINEAR_Y\u0013PNG_FORMAT_LINEAR_Y\u0000\u0013PNG_FORMAT_LINEAR_Y\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000ö\n\u0000\u0000\b\u0000\u0000\u0000ö\n\u0000\u0000P\u0000\u0000\u0000ö\n\u0000\u0000\u0000\u0000\u0000\u0019PNG_FORMAT_LINEAR_Y_ALPHA\u0000\u0019PNG_FORMAT_LINEAR_Y_ALPHA\u0019PNG_FORMAT_LINEAR_Y_ALPHA\u0000\u0019PNG_FORMAT_LINEAR_Y_ALPHA\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000÷\n\u0000\u0000\b\u0000\u0000\u0000÷\n\u0000\u0000L\u0000\u0000\u0000÷\n\u0000\u0000\u0000\u0000\u0000\u0015PNG_FORMAT_LINEAR_RGB\u0000\u0015PNG_FORMAT_LINEAR_RGB\u0015PNG_FORMAT_LINEAR_RGB\u0000\u0015PNG_FORMAT_LINEAR_RGB\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000ø\n\u0000\u0000\b\u0000\u0000\u0000ø\n\u0000\u0000G\u0000\u0000\u0000ù\n\u0000\u0000\u0000\u0000\u0000\u001BPNG_FORMAT_LINEAR_RGB_ALPHA\u0000\u001BPNG_FORMAT_LINEAR_RGB_ALPHA\u001BPNG_FORMAT_LINEAR_RGB_ALPHA\u0000\u001BPNG_FORMAT_LINEAR_RGB_ALPHA\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\v\u0000\u0000\b\u0000\u0000\u0000\u0000\v\u0000\u0000J\u0000\u0000\u0000\u0000\v\u0000\u0000\u0000\u0000\u0000\u0017PNG_FORMAT_RGB_COLORMAP\u0000\u0017PNG_FORMAT_RGB_COLORMAP\u0017PNG_FORMAT_RGB_COLORMAP\u0000\u0017PNG_FORMAT_RGB_COLORMAP\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0001\v\u0000\u0000\b\u0000\u0000\u0000\u0001\v\u0000\u0000J\u0000\u0000\u0000\u0001\v\u0000\u0000\u0000\u0000\u0000\u0017PNG_FORMAT_BGR_COLORMAP\u0000\u0017PNG_FORMAT_BGR_COLORMAP\u0017PNG_FORMAT_BGR_COLORMAP\u0000\u0017PNG_FORMAT_BGR_COLORMAP\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0002\v\u0000\u0000\b\u0000\u0000\u0000\u0002\v\u0000\u0000K\u0000\u0000\u0000\u0002\v\u0000\u0000\u0000\u0000\u0000\u0018PNG_FORMAT_RGBA_COLORMAP\u0000\u0018PNG_FORMAT_RGBA_COLORMAP\u0018PNG_FORMAT_RGBA_COLORMAP\u0000\u0018PNG_FORMAT_RGBA_COLORMAP\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0003\v\u0000\u0000\b\u0000\u0000\u0000\u0003\v\u0000\u0000K\u0000\u0000\u0000\u0003\v\u0000\u0000\u0000\u0000\u0000\u0018PNG_FORMAT_ARGB_COLORMAP\u0000\u0018PNG_FORMAT_ARGB_COLORMAP\u0018PNG_FORMAT_ARGB_COLORMAP\u0000\u0018PNG_FORMAT_ARGB_COLORMAP\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0004\v\u0000\u0000\b\u0000\u0000\u0000\u0004\v\u0000\u0000K\u0000\u0000\u0000\u0004\v\u0000\u0000\u0000\u0000\u0000\u0018PNG_FORMAT_BGRA_COLORMAP\u0000\u0018PNG_FORMAT_BGRA_COLORMAP\u0018PNG_FORMAT_BGRA_COLORMAP\u0000\u0018PNG_FORMAT_BGRA_COLORMAP\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0005\v\u0000\u0000\b\u0000\u0000\u0000\u0005\v\u0000\u0000K\u0000\u0000\u0000\u0005\v\u0000\u0000\u0000\u0000\u0000\u0018PNG_FORMAT_ABGR_COLORMAP\u0000\u0018PNG_FORMAT_ABGR_COLORMAP\u0018PNG_FORMAT_ABGR_COLORMAP\u0000\u0018PNG_FORMAT_ABGR_COLORMAP\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0019\v\u0000\u0000\b\u0000\u0000\u0000\u0019\v\u0000\u0000<\u0000\u0000\u0000\u001A\v\u0000\u0000\u0000\u0000\u0000\u0019PNG_IMAGE_SAMPLE_CHANNELS\u0000\u0019PNG_IMAGE_SAMPLE_CHANNELS\u0019PNG_IMAGE_SAMPLE_CHANNELS\u0000\u0019PNG_IMAGE_SAMPLE_CHANNELS\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u001D\v\u0000\u0000\b\u0000\u0000\u0000\u001D\v\u0000\u0000.\u0000\u0000\u0000\u001E\v\u0000\u0000\u0000\u0000\u0000\u001FPNG_IMAGE_SAMPLE_COMPONENT_SIZE\u0000\u001FPNG_IMAGE_SAMPLE_COMPONENT_SIZE\u001FPNG_IMAGE_SAMPLE_COMPONENT_SIZE\u0000\u001FPNG_IMAGE_SAMPLE_COMPONENT_SIZE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000#\v\u0000\u0000\b\u0000\u0000\u0000#\v\u0000\u0000J\u0000\u0000\u0000$\v\u0000\u0000\u0000\u0000\u0000\u0015PNG_IMAGE_SAMPLE_SIZE\u0000\u0015PNG_IMAGE_SAMPLE_SIZE\u0015PNG_IMAGE_SAMPLE_SIZE\u0000\u0015PNG_IMAGE_SAMPLE_SIZE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000*\v\u0000\u0000\b\u0000\u0000\u0000*\v\u0000\u0000)\u0000\u0000\u0000+\v\u0000\u0000\u0000\u0000\u0000%PNG_IMAGE_MAXIMUM_COLORMAP_COMPONENTS\u0000%PNG_IMAGE_MAXIMUM_COLORMAP_COMPONENTS%PNG_IMAGE_MAXIMUM_COLORMAP_COMPONENTS\u0000%PNG_IMAGE_MAXIMUM_COLORMAP_COMPONENTS\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000:\v\u0000\u0000\b\u0000\u0000\u0000:\v\u0000\u00001\u0000\u0000\u0000;\v\u0000\u0000\u0000\u0000\u0001\u0010PNG_IMAGE_PIXEL_\u0000\u0010PNG_IMAGE_PIXEL_\u0010PNG_IMAGE_PIXEL_\u0000\u0010PNG_IMAGE_PIXEL_\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000=\v\u0000\u0000\b\u0000\u0000\u0000=\v\u0000\u00002\u0000\u0000\u0000>\v\u0000\u0000\u0000\u0000\u0000\u0018PNG_IMAGE_PIXEL_CHANNELS\u0000\u0018PNG_IMAGE_PIXEL_CHANNELS\u0018PNG_IMAGE_PIXEL_CHANNELS\u0000\u0018PNG_IMAGE_PIXEL_CHANNELS\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000C\v\u0000\u0000\b\u0000\u0000\u0000C\v\u0000\u00008\u0000\u0000\u0000D\v\u0000\u0000\u0000\u0000\u0000\u001EPNG_IMAGE_PIXEL_COMPONENT_SIZE\u0000\u001EPNG_IMAGE_PIXEL_COMPONENT_SIZE\u001EPNG_IMAGE_PIXEL_COMPONENT_SIZE\u0000\u001EPNG_IMAGE_PIXEL_COMPONENT_SIZE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000I\v\u0000\u0000\b\u0000\u0000\u0000I\v\u0000\u0000M\u0000\u0000\u0000I\v\u0000\u0000\u0000\u0000\u0000\u0014PNG_IMAGE_PIXEL_SIZE\u0000\u0014PNG_IMAGE_PIXEL_SIZE\u0014PNG_IMAGE_PIXEL_SIZE\u0000\u0014PNG_IMAGE_PIXEL_SIZE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000M\v\u0000\u0000\b\u0000\u0000\u0000M\v\u0000\u0000=\u0000\u0000\u0000N\v\u0000\u0000\u0000\u0000\u0000\u0014PNG_IMAGE_ROW_STRIDE\u0000\u0014PNG_IMAGE_ROW_STRIDE\u0014PNG_IMAGE_ROW_STRIDE\u0000\u0014PNG_IMAGE_ROW_STRIDE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Y\v\u0000\u0000\b\u0000\u0000\u0000Y\v\u0000\u0000O\u0000\u0000\u0000Z\v\u0000\u0000\u0000\u0000\u0000\u0015PNG_IMAGE_BUFFER_SIZE\u0000\u0015PNG_IMAGE_BUFFER_SIZE\u0015PNG_IMAGE_BUFFER_SIZE\u0000\u0015PNG_IMAGE_BUFFER_SIZE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000b\v\u0000\u0000\b\u0000\u0000\u0000b\v\u0000\u0000<\u0000\u0000\u0000c\v\u0000\u0000\u0000\u0000\u0000\u000EPNG_IMAGE_SIZE\u0000\u000EPNG_IMAGE_SIZE\u000EPNG_IMAGE_SIZE\u0000\u000EPNG_IMAGE_SIZE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000h\v\u0000\u0000\b\u0000\u0000\u0000h\v\u0000\u0000E\u0000\u0000\u0000i\v\u0000\u0000\u0000\u0000\u0000\u0017PNG_IMAGE_COLORMAP_SIZE\u0000\u0017PNG_IMAGE_COLORMAP_SIZE\u0017PNG_IMAGE_COLORMAP_SIZE\u0000\u0017PNG_IMAGE_COLORMAP_SIZE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000u\v\u0000\u0000\b\u0000\u0000\u0000u\v\u0000\u0000/\u0000\u0000\u0000u\v\u0000\u0000\u0000\u0000\u0000\"PNG_IMAGE_FLAG_COLORSPACE_NOT_sRGB\u0000\"PNG_IMAGE_FLAG_COLORSPACE_NOT_sRGB\"PNG_IMAGE_FLAG_COLORSPACE_NOT_sRGB\u0000\"PNG_IMAGE_FLAG_COLORSPACE_NOT_SRGB\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000z\v\u0000\u0000\b\u0000\u0000\u0000z\v\u0000\u0000 \u0000\u0000\u0000z\v\u0000\u0000\u0000\u0000\u0000\u0013PNG_IMAGE_FLAG_FAST\u0000\u0013PNG_IMAGE_FLAG_FAST\u0013PNG_IMAGE_FLAG_FAST\u0000\u0013PNG_IMAGE_FLAG_FAST\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\v\u0000\u0000\b\u0000\u0000\u0000\v\u0000\u0000&\u0000\u0000\u0000\v\u0000\u0000\u0000\u0000\u0000\u0019PNG_IMAGE_FLAG_16BIT_sRGB\u0000\u0019PNG_IMAGE_FLAG_16BIT_sRGB\u0019PNG_IMAGE_FLAG_16BIT_sRGB\u0000\u0019PNG_IMAGE_FLAG_16BIT_SRGB\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\v\u0000\u0000\u0000\u0000\u0000\u0000\v\u0000\u0000\u0000\u0000\u0000\u0000\v\u0000\u0000\u0000\u0000\u0000\u001Epng_image_begin_read_from_file\u001Eint (png_imagep, const char *)6png_image_begin_read_from_file(png_imagep,const char*)Kint png_image_begin_read_from_file(png_imagep image, const char *file_name)\u0000\u001EPNG_IMAGE_BEGIN_READ_FROM_FILE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¥\v\u0000\u0000\u0000\u0000\u0000\u0000¥\v\u0000\u0000\u0000\u0000\u0000\u0000¥\v\u0000\u0000\u0000\u0000\u0000\u001Fpng_image_begin_read_from_stdio\u0018int (png_imagep, FILE *)1png_image_begin_read_from_stdio(png_imagep,FILE*)Aint png_image_begin_read_from_stdio(png_imagep image, FILE *file)\u0000\u001FPNG_IMAGE_BEGIN_READ_FROM_STDIO\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ª\v\u0000\u0000\u0000\u0000\u0000\u0000ª\v\u0000\u0000\u0000\u0000\u0000\u0000ª\v\u0000\u0000\u0000\u0000\u0000 png_image_begin_read_from_memory)int (png_imagep, png_const_voidp, size_t)Cpng_image_begin_read_from_memory(png_imagep,png_const_voidp,size_t)[int png_image_begin_read_from_memory(png_imagep image, png_const_voidp memory, size_t size)\u0000 PNG_IMAGE_BEGIN_READ_FROM_MEMORY\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000®\v\u0000\u0000\u0000\u0000\u0000\u0000®\v\u0000\u0000\u0000\u0000\u0000\u0000®\v\u0000\u0000\u0000\u0000\u0000\u0015png_image_finish_read>int (png_imagep, png_const_colorp, void *, png_int_32, void *)Ipng_image_finish_read(png_imagep,png_const_colorp,void*,png_int_32,void*)}int png_image_finish_read(png_imagep image, png_const_colorp background, void *buffer, png_int_32 row_stride, void *colormap)\u0000\u0015PNG_IMAGE_FINISH_READ\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ñ\v\u0000\u0000\u0000\u0000\u0000\u0000Ñ\v\u0000\u0000\u0000\u0000\u0000\u0000Ñ\v\u0000\u0000\u0000\u0000\u0000\u000Epng_image_free\u0011void (png_imagep)\u001Apng_image_free(png_imagep)%void png_image_free(png_imagep image)\u0000\u000EPNG_IMAGE_FREE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000é\v\u0000\u0000\u0000\u0000\u0000\u0000é\v\u0000\u0000\u0000\u0000\u0000\u0000é\v\u0000\u0000\u0000\u0000\u0000\u0017png_image_write_to_fileKint (png_imagep, const char *, int, const void *, png_int_32, const void *)Vpng_image_write_to_file(png_imagep,const char*,int,const void*,png_int_32,const void*)ÿ\u0000\u0000\u0000int png_image_write_to_file(png_imagep image, const char *file, int convert_to_8bit, const void *buffer, png_int_32 row_stride, const void *colormap)\u0000\u0017PNG_IMAGE_WRITE_TO_FILE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000î\v\u0000\u0000\u0000\u0000\u0000\u0000î\v\u0000\u0000\u0000\u0000\u0000\u0000î\v\u0000\u0000\u0000\u0000\u0000\u0018png_image_write_to_stdioEint (png_imagep, FILE *, int, const void *, png_int_32, const void *)Qpng_image_write_to_stdio(png_imagep,FILE*,int,const void*,png_int_32,const void*)ÿ\u0000\u0000\u0000int png_image_write_to_stdio(png_imagep image, FILE *file, int convert_to_8_bit, const void *buffer, png_int_32 row_stride, const void *colormap)\u0000\u0018PNG_IMAGE_WRITE_TO_STDIO\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\t\f\u0000\u0000\u0000\u0000\u0000\u0000\t\f\u0000\u0000\u0000\u0000\u0000\u0000\t\f\u0000\u0000\u0000\u0000\u0000\u0019png_image_write_to_memorycint (png_imagep, void *, png_alloc_size_t *__restrict, int, const void *, png_int_32, const void *)npng_image_write_to_memory(png_imagep,void*,png_alloc_size_t*__restrict,int,const void*,png_int_32,const void*)ÿ¿\u0000\u0000\u0000int png_image_write_to_memory(png_imagep image, void *memory, png_alloc_size_t *__restrict memory_bytes, int convert_to_8_bit, const void *buffer, png_int_32 row_stride, const void *colormap)\u0000\u0019PNG_IMAGE_WRITE_TO_MEMORY\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\"\f\u0000\u0000\b\u0000\u0000\u0000\"\f\u0000\u0000\u001E\u0000\u0000\u0000%\f\u0000\u0000\u0000\u0000\u0000\u001Fpng_image_write_get_memory_size\u0000\u001Fpng_image_write_get_memory_size\u001Fpng_image_write_get_memory_size\u0000\u001FPNG_IMAGE_WRITE_GET_MEMORY_SIZE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u00005\f\u0000\u0000\b\u0000\u0000\u00005\f\u0000\u0000I\u0000\u0000\u00005\f\u0000\u0000\u0000\u0000\u0000\u0013PNG_IMAGE_DATA_SIZE\u0000\u0013PNG_IMAGE_DATA_SIZE\u0013PNG_IMAGE_DATA_SIZE\u0000\u0013PNG_IMAGE_DATA_SIZE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000@\f\u0000\u0000\n\u0000\u0000\u0000@\f\u0000\u0000E\u0000\u0000\u0000@\f\u0000\u0000\u0000\u0000\u0000\u0011PNG_ZLIB_MAX_SIZE\u0000\u0011PNG_ZLIB_MAX_SIZE\u0011PNG_ZLIB_MAX_SIZE\u0000\u0011PNG_ZLIB_MAX_SIZE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000I\f\u0000\u0000\b\u0000\u0000\u0000I\f\u0000\u0000B\u0000\u0000\u0000J\f\u0000\u0000\u0000\u0000\u0000\u001DPNG_IMAGE_COMPRESSED_SIZE_MAX\u0000\u001DPNG_IMAGE_COMPRESSED_SIZE_MAX\u001DPNG_IMAGE_COMPRESSED_SIZE_MAX\u0000\u001DPNG_IMAGE_COMPRESSED_SIZE_MAX\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000M\f\u0000\u0000\b\u0000\u0000\u0000M\f\u0000\u0000A\u0000\u0000\u0000S\f\u0000\u0000\u0000\u0000\u0000\u0017PNG_IMAGE_PNG_SIZE_MAX_\u0000\u0017PNG_IMAGE_PNG_SIZE_MAX_\u0017PNG_IMAGE_PNG_SIZE_MAX_\u0000\u0017PNG_IMAGE_PNG_SIZE_MAX_\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Z\f\u0000\u0000\b\u0000\u0000\u0000Z\f\u0000\u0000G\u0000\u0000\u0000[\f\u0000\u0000\u0000\u0000\u0001\u0016PNG_IMAGE_PNG_SIZE_MAX\u0000\u0016PNG_IMAGE_PNG_SIZE_MAX\u0016PNG_IMAGE_PNG_SIZE_MAX\u0000\u0016PNG_IMAGE_PNG_SIZE_MAX\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000$\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u001APNG_MAXIMUM_INFLATE_WINDOW\u0000\u001APNG_MAXIMUM_INFLATE_WINDOW\u001APNG_MAXIMUM_INFLATE_WINDOW\u0000\u001APNG_MAXIMUM_INFLATE_WINDOW\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000%\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u001BPNG_SKIP_sRGB_CHECK_PROFILE\u0000\u001BPNG_SKIP_sRGB_CHECK_PROFILE\u001BPNG_SKIP_sRGB_CHECK_PROFILE\u0000\u001BPNG_SKIP_SRGB_CHECK_PROFILE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u001B\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u000FPNG_OPTION_NEXT\u0000\u000FPNG_OPTION_NEXT\u000FPNG_OPTION_NEXT\u0000\u000FPNG_OPTION_NEXT\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u001C\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0010PNG_OPTION_UNSET\u0000\u0010PNG_OPTION_UNSET\u0010PNG_OPTION_UNSET\u0000\u0010PNG_OPTION_UNSET\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u001C\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0012PNG_OPTION_INVALID\u0000\u0012PNG_OPTION_INVALID\u0012PNG_OPTION_INVALID\u0000\u0012PNG_OPTION_INVALID\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u001C\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u000EPNG_OPTION_OFF\u0000\u000EPNG_OPTION_OFF\u000EPNG_OPTION_OFF\u0000\u000EPNG_OPTION_OFF\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u001C\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\rPNG_OPTION_ON\u0000\rPNG_OPTION_ON\rPNG_OPTION_ON\u0000\rPNG_OPTION_ON\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u000Epng_set_option\u001Cint (png_structrp, int, int)$png_set_option(png_structrp,int,int)?int png_set_option(png_structrp png_ptr, int option, int onoff)\u0000\u000EPNG_SET_OPTION\u0000\u0000\u0000\u0000end\u0000Ö\u0001\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\pnglibconf.h","value":"dataÂõ\u0001\u0000\u0000\b\u0000\u0000\u0000\u000F\u0000\u0000\u0000\b\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0000\u0000\u0000\nPNGLCONF_H\u0000\nPNGLCONF_H\nPNGLCONF_H\u0000\nPNGLCONF_H\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0011\u0000\u0000\u0000\b\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0013PNG_16BIT_SUPPORTED\u0000\u0013PNG_16BIT_SUPPORTED\u0013PNG_16BIT_SUPPORTED\u0000\u0013PNG_16BIT_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0012\u0000\u0000\u0000\b\u0000\u0000\u0000\u0012\u0000\u0000\u0000$\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u001CPNG_ALIGNED_MEMORY_SUPPORTED\u0000\u001CPNG_ALIGNED_MEMORY_SUPPORTED\u001CPNG_ALIGNED_MEMORY_SUPPORTED\u0000\u001CPNG_ALIGNED_MEMORY_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000\u0015\u0000\u0000\u0000#\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u001BPNG_BENIGN_ERRORS_SUPPORTED\u0000\u001BPNG_BENIGN_ERRORS_SUPPORTED\u001BPNG_BENIGN_ERRORS_SUPPORTED\u0000\u001BPNG_BENIGN_ERRORS_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0016\u0000\u0000\u0000\b\u0000\u0000\u0000\u0016\u0000\u0000\u0000(\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0000 PNG_BENIGN_READ_ERRORS_SUPPORTED\u0000 PNG_BENIGN_READ_ERRORS_SUPPORTED PNG_BENIGN_READ_ERRORS_SUPPORTED\u0000 PNG_BENIGN_READ_ERRORS_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0018\u0000\u0000\u0000\b\u0000\u0000\u0000\u0018\u0000\u0000\u0000-\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000%PNG_BUILD_GRAYSCALE_PALETTE_SUPPORTED\u0000%PNG_BUILD_GRAYSCALE_PALETTE_SUPPORTED%PNG_BUILD_GRAYSCALE_PALETTE_SUPPORTED\u0000%PNG_BUILD_GRAYSCALE_PALETTE_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0019\u0000\u0000\u0000\b\u0000\u0000\u0000\u0019\u0000\u0000\u0000-\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0000\u0000\u0001%PNG_CHECK_FOR_INVALID_INDEX_SUPPORTED\u0000%PNG_CHECK_FOR_INVALID_INDEX_SUPPORTED%PNG_CHECK_FOR_INVALID_INDEX_SUPPORTED\u0000%PNG_CHECK_FOR_INVALID_INDEX_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u001A\u0000\u0000\u0000\b\u0000\u0000\u0000\u001A\u0000\u0000\u0000 \u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0000\u0000\u0000\u0018PNG_COLORSPACE_SUPPORTED\u0000\u0018PNG_COLORSPACE_SUPPORTED\u0018PNG_COLORSPACE_SUPPORTED\u0000\u0018PNG_COLORSPACE_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u001B\u0000\u0000\u0000\b\u0000\u0000\u0000\u001B\u0000\u0000\u0000 \u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0000\u0000\u0000\u0018PNG_CONSOLE_IO_SUPPORTED\u0000\u0018PNG_CONSOLE_IO_SUPPORTED\u0018PNG_CONSOLE_IO_SUPPORTED\u0000\u0018PNG_CONSOLE_IO_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u001C\u0000\u0000\u0000\b\u0000\u0000\u0000\u001C\u0000\u0000\u0000\"\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0000\u0000\u0000\u001APNG_CONVERT_tIME_SUPPORTED\u0000\u001APNG_CONVERT_tIME_SUPPORTED\u001APNG_CONVERT_tIME_SUPPORTED\u0000\u001APNG_CONVERT_TIME_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u001E\u0000\u0000\u0000\b\u0000\u0000\u0000\u001E\u0000\u0000\u0000!\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\u0019PNG_EASY_ACCESS_SUPPORTED\u0000\u0019PNG_EASY_ACCESS_SUPPORTED\u0019PNG_EASY_ACCESS_SUPPORTED\u0000\u0019PNG_EASY_ACCESS_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000 \u0000\u0000\u0000\b\u0000\u0000\u0000 \u0000\u0000\u0000 \u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0001\u0018PNG_ERROR_TEXT_SUPPORTED\u0000\u0018PNG_ERROR_TEXT_SUPPORTED\u0018PNG_ERROR_TEXT_SUPPORTED\u0000\u0018PNG_ERROR_TEXT_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000!\u0000\u0000\u0000\b\u0000\u0000\u0000!\u0000\u0000\u0000!\u0000\u0000\u0000!\u0000\u0000\u0000\u0000\u0000\u0000\u0019PNG_FIXED_POINT_SUPPORTED\u0000\u0019PNG_FIXED_POINT_SUPPORTED\u0019PNG_FIXED_POINT_SUPPORTED\u0000\u0019PNG_FIXED_POINT_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\"\u0000\u0000\u0000\b\u0000\u0000\u0000\"\u0000\u0000\u0000)\u0000\u0000\u0000\"\u0000\u0000\u0000\u0000\u0000\u0000!PNG_FLOATING_ARITHMETIC_SUPPORTED\u0000!PNG_FLOATING_ARITHMETIC_SUPPORTED!PNG_FLOATING_ARITHMETIC_SUPPORTED\u0000!PNG_FLOATING_ARITHMETIC_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000#\u0000\u0000\u0000\b\u0000\u0000\u0000#\u0000\u0000\u0000$\u0000\u0000\u0000#\u0000\u0000\u0000\u0000\u0000\u0000\u001CPNG_FLOATING_POINT_SUPPORTED\u0000\u001CPNG_FLOATING_POINT_SUPPORTED\u001CPNG_FLOATING_POINT_SUPPORTED\u0000\u001CPNG_FLOATING_POINT_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000$\u0000\u0000\u0000\b\u0000\u0000\u0000$\u0000\u0000\u0000#\u0000\u0000\u0000$\u0000\u0000\u0000\u0000\u0000\u0000\u001BPNG_FORMAT_AFIRST_SUPPORTED\u0000\u001BPNG_FORMAT_AFIRST_SUPPORTED\u001BPNG_FORMAT_AFIRST_SUPPORTED\u0000\u001BPNG_FORMAT_AFIRST_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000%\u0000\u0000\u0000\b\u0000\u0000\u0000%\u0000\u0000\u0000 \u0000\u0000\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0018PNG_FORMAT_BGR_SUPPORTED\u0000\u0018PNG_FORMAT_BGR_SUPPORTED\u0018PNG_FORMAT_BGR_SUPPORTED\u0000\u0018PNG_FORMAT_BGR_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000&\u0000\u0000\u0000\b\u0000\u0000\u0000&\u0000\u0000\u0000\u001B\u0000\u0000\u0000&\u0000\u0000\u0000\u0000\u0000\u0000\u0013PNG_GAMMA_SUPPORTED\u0000\u0013PNG_GAMMA_SUPPORTED\u0013PNG_GAMMA_SUPPORTED\u0000\u0013PNG_GAMMA_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000'\u0000\u0000\u0000\b\u0000\u0000\u0000'\u0000\u0000\u0000%\u0000\u0000\u0000'\u0000\u0000\u0000\u0000\u0000\u0000\u001DPNG_GET_PALETTE_MAX_SUPPORTED\u0000\u001DPNG_GET_PALETTE_MAX_SUPPORTED\u001DPNG_GET_PALETTE_MAX_SUPPORTED\u0000\u001DPNG_GET_PALETTE_MAX_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000(\u0000\u0000\u0000\b\u0000\u0000\u0000(\u0000\u0000\u0000'\u0000\u0000\u0000(\u0000\u0000\u0000\u0000\u0000\u0000\u001FPNG_HANDLE_AS_UNKNOWN_SUPPORTED\u0000\u001FPNG_HANDLE_AS_UNKNOWN_SUPPORTED\u001FPNG_HANDLE_AS_UNKNOWN_SUPPORTED\u0000\u001FPNG_HANDLE_AS_UNKNOWN_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000)\u0000\u0000\u0000\b\u0000\u0000\u0000)\u0000\u0000\u0000&\u0000\u0000\u0000)\u0000\u0000\u0000\u0000\u0000\u0000\u001EPNG_INCH_CONVERSIONS_SUPPORTED\u0000\u001EPNG_INCH_CONVERSIONS_SUPPORTED\u001EPNG_INCH_CONVERSIONS_SUPPORTED\u0000\u001EPNG_INCH_CONVERSIONS_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000*\u0000\u0000\u0000\b\u0000\u0000\u0000*\u0000\u0000\u0000 \u0000\u0000\u0000*\u0000\u0000\u0000\u0000\u0000\u0000\u0018PNG_INFO_IMAGE_SUPPORTED\u0000\u0018PNG_INFO_IMAGE_SUPPORTED\u0018PNG_INFO_IMAGE_SUPPORTED\u0000\u0018PNG_INFO_IMAGE_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000+\u0000\u0000\u0000\b\u0000\u0000\u0000+\u0000\u0000\u0000\u001E\u0000\u0000\u0000+\u0000\u0000\u0000\u0000\u0000\u0000\u0016PNG_IO_STATE_SUPPORTED\u0000\u0016PNG_IO_STATE_SUPPORTED\u0016PNG_IO_STATE_SUPPORTED\u0000\u0016PNG_IO_STATE_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u00000\u0000\u0000\u0000\b\u0000\u0000\u00000\u0000\u0000\u0000\"\u0000\u0000\u00000\u0000\u0000\u0000\u0000\u0000\u0000\u001APNG_MNG_FEATURES_SUPPORTED\u0000\u001APNG_MNG_FEATURES_SUPPORTED\u001APNG_MNG_FEATURES_SUPPORTED\u0000\u001APNG_MNG_FEATURES_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u00001\u0000\u0000\u0000\b\u0000\u0000\u00001\u0000\u0000\u0000&\u0000\u0000\u00001\u0000\u0000\u0000\u0000\u0000\u0000\u001EPNG_POINTER_INDEXING_SUPPORTED\u0000\u001EPNG_POINTER_INDEXING_SUPPORTED\u001EPNG_POINTER_INDEXING_SUPPORTED\u0000\u001EPNG_POINTER_INDEXING_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u00004\u0000\u0000\u0000\b\u0000\u0000\u00004\u0000\u0000\u0000&\u0000\u0000\u00004\u0000\u0000\u0000\u0000\u0000\u0000\u001EPNG_PROGRESSIVE_READ_SUPPORTED\u0000\u001EPNG_PROGRESSIVE_READ_SUPPORTED\u001EPNG_PROGRESSIVE_READ_SUPPORTED\u0000\u001EPNG_PROGRESSIVE_READ_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u00005\u0000\u0000\u0000\b\u0000\u0000\u00005\u0000\u0000\u0000 \u0000\u0000\u00005\u0000\u0000\u0000\u0000\u0000\u0000\u0018PNG_READ_16BIT_SUPPORTED\u0000\u0018PNG_READ_16BIT_SUPPORTED\u0018PNG_READ_16BIT_SUPPORTED\u0000\u0018PNG_READ_16BIT_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u00006\u0000\u0000\u0000\b\u0000\u0000\u00006\u0000\u0000\u0000%\u0000\u0000\u00006\u0000\u0000\u0000\u0000\u0000\u0000\u001DPNG_READ_ALPHA_MODE_SUPPORTED\u0000\u001DPNG_READ_ALPHA_MODE_SUPPORTED\u001DPNG_READ_ALPHA_MODE_SUPPORTED\u0000\u001DPNG_READ_ALPHA_MODE_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u00007\u0000\u0000\u0000\b\u0000\u0000\u00007\u0000\u0000\u0000+\u0000\u0000\u00007\u0000\u0000\u0000\u0000\u0000\u0000#PNG_READ_ANCILLARY_CHUNKS_SUPPORTED\u0000#PNG_READ_ANCILLARY_CHUNKS_SUPPORTED#PNG_READ_ANCILLARY_CHUNKS_SUPPORTED\u0000#PNG_READ_ANCILLARY_CHUNKS_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u00008\u0000\u0000\u0000\b\u0000\u0000\u00008\u0000\u0000\u0000%\u0000\u0000\u00008\u0000\u0000\u0000\u0000\u0000\u0001\u001DPNG_READ_BACKGROUND_SUPPORTED\u0000\u001DPNG_READ_BACKGROUND_SUPPORTED\u001DPNG_READ_BACKGROUND_SUPPORTED\u0000\u001DPNG_READ_BACKGROUND_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u00009\u0000\u0000\u0000\b\u0000\u0000\u00009\u0000\u0000\u0000\u001E\u0000\u0000\u00009\u0000\u0000\u0000\u0000\u0000\u0000\u0016PNG_READ_BGR_SUPPORTED\u0000\u0016PNG_READ_BGR_SUPPORTED\u0016PNG_READ_BGR_SUPPORTED\u0000\u0016PNG_READ_BGR_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000:\u0000\u0000\u0000\b\u0000\u0000\u0000:\u0000\u0000\u00002\u0000\u0000\u0000:\u0000\u0000\u0000\u0000\u0000\u0000*PNG_READ_CHECK_FOR_INVALID_INDEX_SUPPORTED\u0000*PNG_READ_CHECK_FOR_INVALID_INDEX_SUPPORTED*PNG_READ_CHECK_FOR_INVALID_INDEX_SUPPORTED\u0000*PNG_READ_CHECK_FOR_INVALID_INDEX_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000;\u0000\u0000\u0000\b\u0000\u0000\u0000;\u0000\u0000\u0000*\u0000\u0000\u0000;\u0000\u0000\u0000\u0000\u0000\u0001\"PNG_READ_COMPOSITE_NODIV_SUPPORTED\u0000\"PNG_READ_COMPOSITE_NODIV_SUPPORTED\"PNG_READ_COMPOSITE_NODIV_SUPPORTED\u0000\"PNG_READ_COMPOSITE_NODIV_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000<\u0000\u0000\u0000\b\u0000\u0000\u0000<\u0000\u0000\u0000*\u0000\u0000\u0000<\u0000\u0000\u0000\u0000\u0000\u0000\"PNG_READ_COMPRESSED_TEXT_SUPPORTED\u0000\"PNG_READ_COMPRESSED_TEXT_SUPPORTED\"PNG_READ_COMPRESSED_TEXT_SUPPORTED\u0000\"PNG_READ_COMPRESSED_TEXT_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000=\u0000\u0000\u0000\b\u0000\u0000\u0000=\u0000\u0000\u0000$\u0000\u0000\u0000=\u0000\u0000\u0000\u0000\u0000\u0000\u001CPNG_READ_EXPAND_16_SUPPORTED\u0000\u001CPNG_READ_EXPAND_16_SUPPORTED\u001CPNG_READ_EXPAND_16_SUPPORTED\u0000\u001CPNG_READ_EXPAND_16_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000>\u0000\u0000\u0000\b\u0000\u0000\u0000>\u0000\u0000\u0000!\u0000\u0000\u0000>\u0000\u0000\u0000\u0000\u0000\u0000\u0019PNG_READ_EXPAND_SUPPORTED\u0000\u0019PNG_READ_EXPAND_SUPPORTED\u0019PNG_READ_EXPAND_SUPPORTED\u0000\u0019PNG_READ_EXPAND_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000?\u0000\u0000\u0000\b\u0000\u0000\u0000?\u0000\u0000\u0000!\u0000\u0000\u0000?\u0000\u0000\u0000\u0000\u0000\u0000\u0019PNG_READ_FILLER_SUPPORTED\u0000\u0019PNG_READ_FILLER_SUPPORTED\u0019PNG_READ_FILLER_SUPPORTED\u0000\u0019PNG_READ_FILLER_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000@\u0000\u0000\u0000\b\u0000\u0000\u0000@\u0000\u0000\u0000 \u0000\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\u0018PNG_READ_GAMMA_SUPPORTED\u0000\u0018PNG_READ_GAMMA_SUPPORTED\u0018PNG_READ_GAMMA_SUPPORTED\u0000\u0018PNG_READ_GAMMA_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000A\u0000\u0000\u0000\b\u0000\u0000\u0000A\u0000\u0000\u0000*\u0000\u0000\u0000A\u0000\u0000\u0000\u0000\u0000\u0000\"PNG_READ_GET_PALETTE_MAX_SUPPORTED\u0000\"PNG_READ_GET_PALETTE_MAX_SUPPORTED\"PNG_READ_GET_PALETTE_MAX_SUPPORTED\u0000\"PNG_READ_GET_PALETTE_MAX_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000B\u0000\u0000\u0000\b\u0000\u0000\u0000B\u0000\u0000\u0000&\u0000\u0000\u0000B\u0000\u0000\u0000\u0000\u0000\u0000\u001EPNG_READ_GRAY_TO_RGB_SUPPORTED\u0000\u001EPNG_READ_GRAY_TO_RGB_SUPPORTED\u001EPNG_READ_GRAY_TO_RGB_SUPPORTED\u0000\u001EPNG_READ_GRAY_TO_RGB_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000C\u0000\u0000\u0000\b\u0000\u0000\u0000C\u0000\u0000\u0000&\u0000\u0000\u0000C\u0000\u0000\u0000\u0000\u0000\u0000\u001EPNG_READ_INTERLACING_SUPPORTED\u0000\u001EPNG_READ_INTERLACING_SUPPORTED\u001EPNG_READ_INTERLACING_SUPPORTED\u0000\u001EPNG_READ_INTERLACING_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000D\u0000\u0000\u0000\b\u0000\u0000\u0000D\u0000\u0000\u0000(\u0000\u0000\u0000D\u0000\u0000\u0000\u0000\u0000\u0000 PNG_READ_INT_FUNCTIONS_SUPPORTED\u0000 PNG_READ_INT_FUNCTIONS_SUPPORTED PNG_READ_INT_FUNCTIONS_SUPPORTED\u0000 PNG_READ_INT_FUNCTIONS_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000E\u0000\u0000\u0000\b\u0000\u0000\u0000E\u0000\u0000\u0000'\u0000\u0000\u0000E\u0000\u0000\u0000\u0000\u0000\u0001\u001FPNG_READ_INVERT_ALPHA_SUPPORTED\u0000\u001FPNG_READ_INVERT_ALPHA_SUPPORTED\u001FPNG_READ_INVERT_ALPHA_SUPPORTED\u0000\u001FPNG_READ_INVERT_ALPHA_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000F\u0000\u0000\u0000\b\u0000\u0000\u0000F\u0000\u0000\u0000!\u0000\u0000\u0000F\u0000\u0000\u0000\u0000\u0000\u0000\u0019PNG_READ_INVERT_SUPPORTED\u0000\u0019PNG_READ_INVERT_SUPPORTED\u0019PNG_READ_INVERT_SUPPORTED\u0000\u0019PNG_READ_INVERT_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000G\u0000\u0000\u0000\b\u0000\u0000\u0000G\u0000\u0000\u0000#\u0000\u0000\u0000G\u0000\u0000\u0000\u0000\u0000\u0000\u001BPNG_READ_OPT_PLTE_SUPPORTED\u0000\u001BPNG_READ_OPT_PLTE_SUPPORTED\u001BPNG_READ_OPT_PLTE_SUPPORTED\u0000\u001BPNG_READ_OPT_PLTE_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000H\u0000\u0000\u0000\b\u0000\u0000\u0000H\u0000\u0000\u0000#\u0000\u0000\u0000H\u0000\u0000\u0000\u0000\u0000\u0000\u001BPNG_READ_PACKSWAP_SUPPORTED\u0000\u001BPNG_READ_PACKSWAP_SUPPORTED\u001BPNG_READ_PACKSWAP_SUPPORTED\u0000\u001BPNG_READ_PACKSWAP_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000I\u0000\u0000\u0000\b\u0000\u0000\u0000I\u0000\u0000\u0000\u001F\u0000\u0000\u0000I\u0000\u0000\u0000\u0000\u0000\u0000\u0017PNG_READ_PACK_SUPPORTED\u0000\u0017PNG_READ_PACK_SUPPORTED\u0017PNG_READ_PACK_SUPPORTED\u0000\u0017PNG_READ_PACK_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000J\u0000\u0000\u0000\b\u0000\u0000\u0000J\u0000\u0000\u0000#\u0000\u0000\u0000J\u0000\u0000\u0000\u0000\u0000\u0000\u001BPNG_READ_QUANTIZE_SUPPORTED\u0000\u001BPNG_READ_QUANTIZE_SUPPORTED\u001BPNG_READ_QUANTIZE_SUPPORTED\u0000\u001BPNG_READ_QUANTIZE_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000K\u0000\u0000\u0000\b\u0000\u0000\u0000K\u0000\u0000\u0000&\u0000\u0000\u0000K\u0000\u0000\u0000\u0000\u0000\u0000\u001EPNG_READ_RGB_TO_GRAY_SUPPORTED\u0000\u001EPNG_READ_RGB_TO_GRAY_SUPPORTED\u001EPNG_READ_RGB_TO_GRAY_SUPPORTED\u0000\u001EPNG_READ_RGB_TO_GRAY_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000L\u0000\u0000\u0000\b\u0000\u0000\u0000L\u0000\u0000\u0000(\u0000\u0000\u0000L\u0000\u0000\u0000\u0000\u0000\u0000 PNG_READ_SCALE_16_TO_8_SUPPORTED\u0000 PNG_READ_SCALE_16_TO_8_SUPPORTED PNG_READ_SCALE_16_TO_8_SUPPORTED\u0000 PNG_READ_SCALE_16_TO_8_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000M\u0000\u0000\u0000\b\u0000\u0000\u0000M\u0000\u0000\u0000 \u0000\u0000\u0000M\u0000\u0000\u0000\u0000\u0000\u0000\u0018PNG_READ_SHIFT_SUPPORTED\u0000\u0018PNG_READ_SHIFT_SUPPORTED\u0018PNG_READ_SHIFT_SUPPORTED\u0000\u0018PNG_READ_SHIFT_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000N\u0000\u0000\u0000\b\u0000\u0000\u0000N\u0000\u0000\u0000(\u0000\u0000\u0000N\u0000\u0000\u0000\u0000\u0000\u0000 PNG_READ_STRIP_16_TO_8_SUPPORTED\u0000 PNG_READ_STRIP_16_TO_8_SUPPORTED PNG_READ_STRIP_16_TO_8_SUPPORTED\u0000 PNG_READ_STRIP_16_TO_8_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000O\u0000\u0000\u0000\b\u0000\u0000\u0000O\u0000\u0000\u0000&\u0000\u0000\u0000O\u0000\u0000\u0000\u0000\u0000\u0000\u001EPNG_READ_STRIP_ALPHA_SUPPORTED\u0000\u001EPNG_READ_STRIP_ALPHA_SUPPORTED\u001EPNG_READ_STRIP_ALPHA_SUPPORTED\u0000\u001EPNG_READ_STRIP_ALPHA_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000P\u0000\u0000\u0000\b\u0000\u0000\u0000P\u0000\u0000\u0000\u001A\u0000\u0000\u0000P\u0000\u0000\u0000\u0000\u0000\u0000\u0012PNG_READ_SUPPORTED\u0000\u0012PNG_READ_SUPPORTED\u0012PNG_READ_SUPPORTED\u0000\u0012PNG_READ_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Q\u0000\u0000\u0000\b\u0000\u0000\u0000Q\u0000\u0000\u0000%\u0000\u0000\u0000Q\u0000\u0000\u0000\u0000\u0000\u0000\u001DPNG_READ_SWAP_ALPHA_SUPPORTED\u0000\u001DPNG_READ_SWAP_ALPHA_SUPPORTED\u001DPNG_READ_SWAP_ALPHA_SUPPORTED\u0000\u001DPNG_READ_SWAP_ALPHA_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000R\u0000\u0000\u0000\b\u0000\u0000\u0000R\u0000\u0000\u0000\u001F\u0000\u0000\u0000R\u0000\u0000\u0000\u0000\u0000\u0000\u0017PNG_READ_SWAP_SUPPORTED\u0000\u0017PNG_READ_SWAP_SUPPORTED\u0017PNG_READ_SWAP_SUPPORTED\u0000\u0017PNG_READ_SWAP_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000S\u0000\u0000\u0000\b\u0000\u0000\u0000S\u0000\u0000\u0000\u001F\u0000\u0000\u0000S\u0000\u0000\u0000\u0000\u0000\u0000\u0017PNG_READ_TEXT_SUPPORTED\u0000\u0017PNG_READ_TEXT_SUPPORTED\u0017PNG_READ_TEXT_SUPPORTED\u0000\u0017PNG_READ_TEXT_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000T\u0000\u0000\u0000\b\u0000\u0000\u0000T\u0000\u0000\u0000%\u0000\u0000\u0000T\u0000\u0000\u0000\u0000\u0000\u0000\u001DPNG_READ_TRANSFORMS_SUPPORTED\u0000\u001DPNG_READ_TRANSFORMS_SUPPORTED\u001DPNG_READ_TRANSFORMS_SUPPORTED\u0000\u001DPNG_READ_TRANSFORMS_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000U\u0000\u0000\u0000\b\u0000\u0000\u0000U\u0000\u0000\u0000)\u0000\u0000\u0000U\u0000\u0000\u0000\u0000\u0000\u0000!PNG_READ_UNKNOWN_CHUNKS_SUPPORTED\u0000!PNG_READ_UNKNOWN_CHUNKS_SUPPORTED!PNG_READ_UNKNOWN_CHUNKS_SUPPORTED\u0000!PNG_READ_UNKNOWN_CHUNKS_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000V\u0000\u0000\u0000\b\u0000\u0000\u0000V\u0000\u0000\u0000&\u0000\u0000\u0000V\u0000\u0000\u0000\u0000\u0000\u0000\u001EPNG_READ_USER_CHUNKS_SUPPORTED\u0000\u001EPNG_READ_USER_CHUNKS_SUPPORTED\u001EPNG_READ_USER_CHUNKS_SUPPORTED\u0000\u001EPNG_READ_USER_CHUNKS_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000W\u0000\u0000\u0000\b\u0000\u0000\u0000W\u0000\u0000\u0000)\u0000\u0000\u0000W\u0000\u0000\u0000\u0000\u0000\u0000!PNG_READ_USER_TRANSFORM_SUPPORTED\u0000!PNG_READ_USER_TRANSFORM_SUPPORTED!PNG_READ_USER_TRANSFORM_SUPPORTED\u0000!PNG_READ_USER_TRANSFORM_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000X\u0000\u0000\u0000\b\u0000\u0000\u0000X\u0000\u0000\u0000\u001F\u0000\u0000\u0000X\u0000\u0000\u0000\u0000\u0000\u0000\u0017PNG_READ_bKGD_SUPPORTED\u0000\u0017PNG_READ_bKGD_SUPPORTED\u0017PNG_READ_bKGD_SUPPORTED\u0000\u0017PNG_READ_BKGD_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Y\u0000\u0000\u0000\b\u0000\u0000\u0000Y\u0000\u0000\u0000\u001F\u0000\u0000\u0000Y\u0000\u0000\u0000\u0000\u0000\u0000\u0017PNG_READ_cHRM_SUPPORTED\u0000\u0017PNG_READ_cHRM_SUPPORTED\u0017PNG_READ_cHRM_SUPPORTED\u0000\u0017PNG_READ_CHRM_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Z\u0000\u0000\u0000\b\u0000\u0000\u0000Z\u0000\u0000\u0000\u001F\u0000\u0000\u0000Z\u0000\u0000\u0000\u0000\u0000\u0000\u0017PNG_READ_eXIf_SUPPORTED\u0000\u0017PNG_READ_eXIf_SUPPORTED\u0017PNG_READ_eXIf_SUPPORTED\u0000\u0017PNG_READ_EXIF_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000[\u0000\u0000\u0000\b\u0000\u0000\u0000[\u0000\u0000\u0000\u001F\u0000\u0000\u0000[\u0000\u0000\u0000\u0000\u0000\u0000\u0017PNG_READ_gAMA_SUPPORTED\u0000\u0017PNG_READ_gAMA_SUPPORTED\u0017PNG_READ_gAMA_SUPPORTED\u0000\u0017PNG_READ_GAMA_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\\\u0000\u0000\u0000\b\u0000\u0000\u0000\\\u0000\u0000\u0000\u001F\u0000\u0000\u0000\\\u0000\u0000\u0000\u0000\u0000\u0000\u0017PNG_READ_hIST_SUPPORTED\u0000\u0017PNG_READ_hIST_SUPPORTED\u0017PNG_READ_hIST_SUPPORTED\u0000\u0017PNG_READ_HIST_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000]\u0000\u0000\u0000\b\u0000\u0000\u0000]\u0000\u0000\u0000\u001F\u0000\u0000\u0000]\u0000\u0000\u0000\u0000\u0000\u0000\u0017PNG_READ_iCCP_SUPPORTED\u0000\u0017PNG_READ_iCCP_SUPPORTED\u0017PNG_READ_iCCP_SUPPORTED\u0000\u0017PNG_READ_ICCP_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000^\u0000\u0000\u0000\b\u0000\u0000\u0000^\u0000\u0000\u0000\u001F\u0000\u0000\u0000^\u0000\u0000\u0000\u0000\u0000\u0000\u0017PNG_READ_iTXt_SUPPORTED\u0000\u0017PNG_READ_iTXt_SUPPORTED\u0017PNG_READ_iTXt_SUPPORTED\u0000\u0017PNG_READ_ITXT_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000_\u0000\u0000\u0000\b\u0000\u0000\u0000_\u0000\u0000\u0000\u001F\u0000\u0000\u0000_\u0000\u0000\u0000\u0000\u0000\u0000\u0017PNG_READ_oFFs_SUPPORTED\u0000\u0017PNG_READ_oFFs_SUPPORTED\u0017PNG_READ_oFFs_SUPPORTED\u0000\u0017PNG_READ_OFFS_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000`\u0000\u0000\u0000\b\u0000\u0000\u0000`\u0000\u0000\u0000\u001F\u0000\u0000\u0000`\u0000\u0000\u0000\u0000\u0000\u0000\u0017PNG_READ_pCAL_SUPPORTED\u0000\u0017PNG_READ_pCAL_SUPPORTED\u0017PNG_READ_pCAL_SUPPORTED\u0000\u0017PNG_READ_PCAL_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000a\u0000\u0000\u0000\b\u0000\u0000\u0000a\u0000\u0000\u0000\u001F\u0000\u0000\u0000a\u0000\u0000\u0000\u0000\u0000\u0000\u0017PNG_READ_pHYs_SUPPORTED\u0000\u0017PNG_READ_pHYs_SUPPORTED\u0017PNG_READ_pHYs_SUPPORTED\u0000\u0017PNG_READ_PHYS_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000b\u0000\u0000\u0000\b\u0000\u0000\u0000b\u0000\u0000\u0000\u001F\u0000\u0000\u0000b\u0000\u0000\u0000\u0000\u0000\u0000\u0017PNG_READ_sBIT_SUPPORTED\u0000\u0017PNG_READ_sBIT_SUPPORTED\u0017PNG_READ_sBIT_SUPPORTED\u0000\u0017PNG_READ_SBIT_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000c\u0000\u0000\u0000\b\u0000\u0000\u0000c\u0000\u0000\u0000\u001F\u0000\u0000\u0000c\u0000\u0000\u0000\u0000\u0000\u0000\u0017PNG_READ_sCAL_SUPPORTED\u0000\u0017PNG_READ_sCAL_SUPPORTED\u0017PNG_READ_sCAL_SUPPORTED\u0000\u0017PNG_READ_SCAL_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000d\u0000\u0000\u0000\b\u0000\u0000\u0000d\u0000\u0000\u0000\u001F\u0000\u0000\u0000d\u0000\u0000\u0000\u0000\u0000\u0000\u0017PNG_READ_sPLT_SUPPORTED\u0000\u0017PNG_READ_sPLT_SUPPORTED\u0017PNG_READ_sPLT_SUPPORTED\u0000\u0017PNG_READ_SPLT_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000e\u0000\u0000\u0000\b\u0000\u0000\u0000e\u0000\u0000\u0000\u001F\u0000\u0000\u0000e\u0000\u0000\u0000\u0000\u0000\u0000\u0017PNG_READ_sRGB_SUPPORTED\u0000\u0017PNG_READ_sRGB_SUPPORTED\u0017PNG_READ_sRGB_SUPPORTED\u0000\u0017PNG_READ_SRGB_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000f\u0000\u0000\u0000\b\u0000\u0000\u0000f\u0000\u0000\u0000\u001F\u0000\u0000\u0000f\u0000\u0000\u0000\u0000\u0000\u0000\u0017PNG_READ_tEXt_SUPPORTED\u0000\u0017PNG_READ_tEXt_SUPPORTED\u0017PNG_READ_tEXt_SUPPORTED\u0000\u0017PNG_READ_TEXT_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000g\u0000\u0000\u0000\b\u0000\u0000\u0000g\u0000\u0000\u0000\u001F\u0000\u0000\u0000g\u0000\u0000\u0000\u0000\u0000\u0000\u0017PNG_READ_tIME_SUPPORTED\u0000\u0017PNG_READ_tIME_SUPPORTED\u0017PNG_READ_tIME_SUPPORTED\u0000\u0017PNG_READ_TIME_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000h\u0000\u0000\u0000\b\u0000\u0000\u0000h\u0000\u0000\u0000\u001F\u0000\u0000\u0000h\u0000\u0000\u0000\u0000\u0000\u0000\u0017PNG_READ_tRNS_SUPPORTED\u0000\u0017PNG_READ_tRNS_SUPPORTED\u0017PNG_READ_tRNS_SUPPORTED\u0000\u0017PNG_READ_TRNS_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000i\u0000\u0000\u0000\b\u0000\u0000\u0000i\u0000\u0000\u0000\u001F\u0000\u0000\u0000i\u0000\u0000\u0000\u0000\u0000\u0000\u0017PNG_READ_zTXt_SUPPORTED\u0000\u0017PNG_READ_zTXt_SUPPORTED\u0017PNG_READ_zTXt_SUPPORTED\u0000\u0017PNG_READ_ZTXT_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000j\u0000\u0000\u0000\b\u0000\u0000\u0000j\u0000\u0000\u0000!\u0000\u0000\u0000j\u0000\u0000\u0000\u0000\u0000\u0000\u0019PNG_SAVE_INT_32_SUPPORTED\u0000\u0019PNG_SAVE_INT_32_SUPPORTED\u0019PNG_SAVE_INT_32_SUPPORTED\u0000\u0019PNG_SAVE_INT_32_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000k\u0000\u0000\u0000\b\u0000\u0000\u0000k\u0000\u0000\u0000)\u0000\u0000\u0000k\u0000\u0000\u0000\u0000\u0000\u0000!PNG_SAVE_UNKNOWN_CHUNKS_SUPPORTED\u0000!PNG_SAVE_UNKNOWN_CHUNKS_SUPPORTED!PNG_SAVE_UNKNOWN_CHUNKS_SUPPORTED\u0000!PNG_SAVE_UNKNOWN_CHUNKS_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000l\u0000\u0000\u0000\b\u0000\u0000\u0000l\u0000\u0000\u0000%\u0000\u0000\u0000l\u0000\u0000\u0000\u0000\u0000\u0000\u001DPNG_SEQUENTIAL_READ_SUPPORTED\u0000\u001DPNG_SEQUENTIAL_READ_SUPPORTED\u001DPNG_SEQUENTIAL_READ_SUPPORTED\u0000\u001DPNG_SEQUENTIAL_READ_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000m\u0000\u0000\u0000\b\u0000\u0000\u0000m\u0000\u0000\u0000\u001C\u0000\u0000\u0000m\u0000\u0000\u0000\u0000\u0000\u0000\u0014PNG_SETJMP_SUPPORTED\u0000\u0014PNG_SETJMP_SUPPORTED\u0014PNG_SETJMP_SUPPORTED\u0000\u0014PNG_SETJMP_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000n\u0000\u0000\u0000\b\u0000\u0000\u0000n\u0000\u0000\u0000 \u0000\u0000\u0000n\u0000\u0000\u0000\u0000\u0000\u0001\u0018PNG_SET_OPTION_SUPPORTED\u0000\u0018PNG_SET_OPTION_SUPPORTED\u0018PNG_SET_OPTION_SUPPORTED\u0000\u0018PNG_SET_OPTION_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000o\u0000\u0000\u0000\b\u0000\u0000\u0000o\u0000\u0000\u0000(\u0000\u0000\u0000o\u0000\u0000\u0000\u0000\u0000\u0000 PNG_SET_UNKNOWN_CHUNKS_SUPPORTED\u0000 PNG_SET_UNKNOWN_CHUNKS_SUPPORTED PNG_SET_UNKNOWN_CHUNKS_SUPPORTED\u0000 PNG_SET_UNKNOWN_CHUNKS_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000p\u0000\u0000\u0000\b\u0000\u0000\u0000p\u0000\u0000\u0000%\u0000\u0000\u0000p\u0000\u0000\u0000\u0000\u0000\u0000\u001DPNG_SET_USER_LIMITS_SUPPORTED\u0000\u001DPNG_SET_USER_LIMITS_SUPPORTED\u001DPNG_SET_USER_LIMITS_SUPPORTED\u0000\u001DPNG_SET_USER_LIMITS_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000q\u0000\u0000\u0000\b\u0000\u0000\u0000q\u0000\u0000\u0000,\u0000\u0000\u0000q\u0000\u0000\u0000\u0000\u0000\u0000$PNG_SIMPLIFIED_READ_AFIRST_SUPPORTED\u0000$PNG_SIMPLIFIED_READ_AFIRST_SUPPORTED$PNG_SIMPLIFIED_READ_AFIRST_SUPPORTED\u0000$PNG_SIMPLIFIED_READ_AFIRST_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000r\u0000\u0000\u0000\b\u0000\u0000\u0000r\u0000\u0000\u0000)\u0000\u0000\u0000r\u0000\u0000\u0000\u0000\u0000\u0000!PNG_SIMPLIFIED_READ_BGR_SUPPORTED\u0000!PNG_SIMPLIFIED_READ_BGR_SUPPORTED!PNG_SIMPLIFIED_READ_BGR_SUPPORTED\u0000!PNG_SIMPLIFIED_READ_BGR_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000s\u0000\u0000\u0000\b\u0000\u0000\u0000s\u0000\u0000\u0000%\u0000\u0000\u0000s\u0000\u0000\u0000\u0000\u0000\u0000\u001DPNG_SIMPLIFIED_READ_SUPPORTED\u0000\u001DPNG_SIMPLIFIED_READ_SUPPORTED\u001DPNG_SIMPLIFIED_READ_SUPPORTED\u0000\u001DPNG_SIMPLIFIED_READ_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000t\u0000\u0000\u0000\b\u0000\u0000\u0000t\u0000\u0000\u0000-\u0000\u0000\u0000t\u0000\u0000\u0000\u0000\u0000\u0000%PNG_SIMPLIFIED_WRITE_AFIRST_SUPPORTED\u0000%PNG_SIMPLIFIED_WRITE_AFIRST_SUPPORTED%PNG_SIMPLIFIED_WRITE_AFIRST_SUPPORTED\u0000%PNG_SIMPLIFIED_WRITE_AFIRST_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000u\u0000\u0000\u0000\b\u0000\u0000\u0000u\u0000\u0000\u0000*\u0000\u0000\u0000u\u0000\u0000\u0000\u0000\u0000\u0000\"PNG_SIMPLIFIED_WRITE_BGR_SUPPORTED\u0000\"PNG_SIMPLIFIED_WRITE_BGR_SUPPORTED\"PNG_SIMPLIFIED_WRITE_BGR_SUPPORTED\u0000\"PNG_SIMPLIFIED_WRITE_BGR_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000v\u0000\u0000\u0000\b\u0000\u0000\u0000v\u0000\u0000\u0000,\u0000\u0000\u0000v\u0000\u0000\u0000\u0000\u0000\u0000$PNG_SIMPLIFIED_WRITE_STDIO_SUPPORTED\u0000$PNG_SIMPLIFIED_WRITE_STDIO_SUPPORTED$PNG_SIMPLIFIED_WRITE_STDIO_SUPPORTED\u0000$PNG_SIMPLIFIED_WRITE_STDIO_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000w\u0000\u0000\u0000\b\u0000\u0000\u0000w\u0000\u0000\u0000&\u0000\u0000\u0000w\u0000\u0000\u0000\u0000\u0000\u0000\u001EPNG_SIMPLIFIED_WRITE_SUPPORTED\u0000\u001EPNG_SIMPLIFIED_WRITE_SUPPORTED\u001EPNG_SIMPLIFIED_WRITE_SUPPORTED\u0000\u001EPNG_SIMPLIFIED_WRITE_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000x\u0000\u0000\u0000\b\u0000\u0000\u0000x\u0000\u0000\u0000\u001B\u0000\u0000\u0000x\u0000\u0000\u0000\u0000\u0000\u0000\u0013PNG_STDIO_SUPPORTED\u0000\u0013PNG_STDIO_SUPPORTED\u0013PNG_STDIO_SUPPORTED\u0000\u0013PNG_STDIO_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000y\u0000\u0000\u0000\b\u0000\u0000\u0000y\u0000\u0000\u0000*\u0000\u0000\u0000y\u0000\u0000\u0000\u0000\u0000\u0000\"PNG_STORE_UNKNOWN_CHUNKS_SUPPORTED\u0000\"PNG_STORE_UNKNOWN_CHUNKS_SUPPORTED\"PNG_STORE_UNKNOWN_CHUNKS_SUPPORTED\u0000\"PNG_STORE_UNKNOWN_CHUNKS_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000z\u0000\u0000\u0000\b\u0000\u0000\u0000z\u0000\u0000\u0000\u001A\u0000\u0000\u0000z\u0000\u0000\u0000\u0000\u0000\u0000\u0012PNG_TEXT_SUPPORTED\u0000\u0012PNG_TEXT_SUPPORTED\u0012PNG_TEXT_SUPPORTED\u0000\u0012PNG_TEXT_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000{\u0000\u0000\u0000\b\u0000\u0000\u0000{\u0000\u0000\u0000\"\u0000\u0000\u0000{\u0000\u0000\u0000\u0000\u0000\u0001\u001APNG_TIME_RFC1123_SUPPORTED\u0000\u001APNG_TIME_RFC1123_SUPPORTED\u001APNG_TIME_RFC1123_SUPPORTED\u0000\u001APNG_TIME_RFC1123_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000|\u0000\u0000\u0000\b\u0000\u0000\u0000|\u0000\u0000\u0000$\u0000\u0000\u0000|\u0000\u0000\u0000\u0000\u0000\u0000\u001CPNG_UNKNOWN_CHUNKS_SUPPORTED\u0000\u001CPNG_UNKNOWN_CHUNKS_SUPPORTED\u001CPNG_UNKNOWN_CHUNKS_SUPPORTED\u0000\u001CPNG_UNKNOWN_CHUNKS_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000}\u0000\u0000\u0000\b\u0000\u0000\u0000}\u0000\u0000\u0000!\u0000\u0000\u0000}\u0000\u0000\u0000\u0000\u0000\u0000\u0019PNG_USER_CHUNKS_SUPPORTED\u0000\u0019PNG_USER_CHUNKS_SUPPORTED\u0019PNG_USER_CHUNKS_SUPPORTED\u0000\u0019PNG_USER_CHUNKS_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000~\u0000\u0000\u0000\b\u0000\u0000\u0000~\u0000\u0000\u0000!\u0000\u0000\u0000~\u0000\u0000\u0000\u0000\u0000\u0000\u0019PNG_USER_LIMITS_SUPPORTED\u0000\u0019PNG_USER_LIMITS_SUPPORTED\u0019PNG_USER_LIMITS_SUPPORTED\u0000\u0019PNG_USER_LIMITS_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u007F\u0000\u0000\u0000\b\u0000\u0000\u0000\u007F\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u007F\u0000\u0000\u0000\u0000\u0000\u0000\u0016PNG_USER_MEM_SUPPORTED\u0000\u0016PNG_USER_MEM_SUPPORTED\u0016PNG_USER_MEM_SUPPORTED\u0000\u0016PNG_USER_MEM_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000)\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000!PNG_USER_TRANSFORM_INFO_SUPPORTED\u0000!PNG_USER_TRANSFORM_INFO_SUPPORTED!PNG_USER_TRANSFORM_INFO_SUPPORTED\u0000!PNG_USER_TRANSFORM_INFO_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 PNG_USER_TRANSFORM_PTR_SUPPORTED\u0000 PNG_USER_TRANSFORM_PTR_SUPPORTED PNG_USER_TRANSFORM_PTR_SUPPORTED\u0000 PNG_USER_TRANSFORM_PTR_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016PNG_WARNINGS_SUPPORTED\u0000\u0016PNG_WARNINGS_SUPPORTED\u0016PNG_WARNINGS_SUPPORTED\u0000\u0016PNG_WARNINGS_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000!\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019PNG_WRITE_16BIT_SUPPORTED\u0000\u0019PNG_WRITE_16BIT_SUPPORTED\u0019PNG_WRITE_16BIT_SUPPORTED\u0000\u0019PNG_WRITE_16BIT_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000,\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000$PNG_WRITE_ANCILLARY_CHUNKS_SUPPORTED\u0000$PNG_WRITE_ANCILLARY_CHUNKS_SUPPORTED$PNG_WRITE_ANCILLARY_CHUNKS_SUPPORTED\u0000$PNG_WRITE_ANCILLARY_CHUNKS_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0017PNG_WRITE_BGR_SUPPORTED\u0000\u0017PNG_WRITE_BGR_SUPPORTED\u0017PNG_WRITE_BGR_SUPPORTED\u0000\u0017PNG_WRITE_BGR_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u00003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000+PNG_WRITE_CHECK_FOR_INVALID_INDEX_SUPPORTED\u0000+PNG_WRITE_CHECK_FOR_INVALID_INDEX_SUPPORTED+PNG_WRITE_CHECK_FOR_INVALID_INDEX_SUPPORTED\u0000+PNG_WRITE_CHECK_FOR_INVALID_INDEX_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000+\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000#PNG_WRITE_COMPRESSED_TEXT_SUPPORTED\u0000#PNG_WRITE_COMPRESSED_TEXT_SUPPORTED#PNG_WRITE_COMPRESSED_TEXT_SUPPORTED\u0000#PNG_WRITE_COMPRESSED_TEXT_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u00001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000)PNG_WRITE_CUSTOMIZE_COMPRESSION_SUPPORTED\u0000)PNG_WRITE_CUSTOMIZE_COMPRESSION_SUPPORTED)PNG_WRITE_CUSTOMIZE_COMPRESSION_SUPPORTED\u0000)PNG_WRITE_CUSTOMIZE_COMPRESSION_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u00006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000.PNG_WRITE_CUSTOMIZE_ZTXT_COMPRESSION_SUPPORTED\u0000.PNG_WRITE_CUSTOMIZE_ZTXT_COMPRESSION_SUPPORTED.PNG_WRITE_CUSTOMIZE_ZTXT_COMPRESSION_SUPPORTED\u0000.PNG_WRITE_CUSTOMIZE_ZTXT_COMPRESSION_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001APNG_WRITE_FILLER_SUPPORTED\u0000\u001APNG_WRITE_FILLER_SUPPORTED\u001APNG_WRITE_FILLER_SUPPORTED\u0000\u001APNG_WRITE_FILLER_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001APNG_WRITE_FILTER_SUPPORTED\u0000\u001APNG_WRITE_FILTER_SUPPORTED\u001APNG_WRITE_FILTER_SUPPORTED\u0000\u001APNG_WRITE_FILTER_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000!\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019PNG_WRITE_FLUSH_SUPPORTED\u0000\u0019PNG_WRITE_FLUSH_SUPPORTED\u0019PNG_WRITE_FLUSH_SUPPORTED\u0000\u0019PNG_WRITE_FLUSH_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000+\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000#PNG_WRITE_GET_PALETTE_MAX_SUPPORTED\u0000#PNG_WRITE_GET_PALETTE_MAX_SUPPORTED#PNG_WRITE_GET_PALETTE_MAX_SUPPORTED\u0000#PNG_WRITE_GET_PALETTE_MAX_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000'\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001FPNG_WRITE_INTERLACING_SUPPORTED\u0000\u001FPNG_WRITE_INTERLACING_SUPPORTED\u001FPNG_WRITE_INTERLACING_SUPPORTED\u0000\u001FPNG_WRITE_INTERLACING_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000)\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000!PNG_WRITE_INT_FUNCTIONS_SUPPORTED\u0000!PNG_WRITE_INT_FUNCTIONS_SUPPORTED!PNG_WRITE_INT_FUNCTIONS_SUPPORTED\u0000!PNG_WRITE_INT_FUNCTIONS_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 PNG_WRITE_INVERT_ALPHA_SUPPORTED\u0000 PNG_WRITE_INVERT_ALPHA_SUPPORTED PNG_WRITE_INVERT_ALPHA_SUPPORTED\u0000 PNG_WRITE_INVERT_ALPHA_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001APNG_WRITE_INVERT_SUPPORTED\u0000\u001APNG_WRITE_INVERT_SUPPORTED\u001APNG_WRITE_INVERT_SUPPORTED\u0000\u001APNG_WRITE_INVERT_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 PNG_WRITE_OPTIMIZE_CMF_SUPPORTED\u0000 PNG_WRITE_OPTIMIZE_CMF_SUPPORTED PNG_WRITE_OPTIMIZE_CMF_SUPPORTED\u0000 PNG_WRITE_OPTIMIZE_CMF_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000$\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001CPNG_WRITE_PACKSWAP_SUPPORTED\u0000\u001CPNG_WRITE_PACKSWAP_SUPPORTED\u001CPNG_WRITE_PACKSWAP_SUPPORTED\u0000\u001CPNG_WRITE_PACKSWAP_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018PNG_WRITE_PACK_SUPPORTED\u0000\u0018PNG_WRITE_PACK_SUPPORTED\u0018PNG_WRITE_PACK_SUPPORTED\u0000\u0018PNG_WRITE_PACK_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000!\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019PNG_WRITE_SHIFT_SUPPORTED\u0000\u0019PNG_WRITE_SHIFT_SUPPORTED\u0019PNG_WRITE_SHIFT_SUPPORTED\u0000\u0019PNG_WRITE_SHIFT_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0013PNG_WRITE_SUPPORTED\u0000\u0013PNG_WRITE_SUPPORTED\u0013PNG_WRITE_SUPPORTED\u0000\u0013PNG_WRITE_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000&\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001EPNG_WRITE_SWAP_ALPHA_SUPPORTED\u0000\u001EPNG_WRITE_SWAP_ALPHA_SUPPORTED\u001EPNG_WRITE_SWAP_ALPHA_SUPPORTED\u0000\u001EPNG_WRITE_SWAP_ALPHA_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018PNG_WRITE_SWAP_SUPPORTED\u0000\u0018PNG_WRITE_SWAP_SUPPORTED\u0018PNG_WRITE_SWAP_SUPPORTED\u0000\u0018PNG_WRITE_SWAP_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018PNG_WRITE_TEXT_SUPPORTED\u0000\u0018PNG_WRITE_TEXT_SUPPORTED\u0018PNG_WRITE_TEXT_SUPPORTED\u0000\u0018PNG_WRITE_TEXT_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000&\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001EPNG_WRITE_TRANSFORMS_SUPPORTED\u0000\u001EPNG_WRITE_TRANSFORMS_SUPPORTED\u001EPNG_WRITE_TRANSFORMS_SUPPORTED\u0000\u001EPNG_WRITE_TRANSFORMS_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000*\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\"PNG_WRITE_UNKNOWN_CHUNKS_SUPPORTED\u0000\"PNG_WRITE_UNKNOWN_CHUNKS_SUPPORTED\"PNG_WRITE_UNKNOWN_CHUNKS_SUPPORTED\u0000\"PNG_WRITE_UNKNOWN_CHUNKS_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000*\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\"PNG_WRITE_USER_TRANSFORM_SUPPORTED\u0000\"PNG_WRITE_USER_TRANSFORM_SUPPORTED\"PNG_WRITE_USER_TRANSFORM_SUPPORTED\u0000\"PNG_WRITE_USER_TRANSFORM_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000+\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000#PNG_WRITE_WEIGHTED_FILTER_SUPPORTED\u0000#PNG_WRITE_WEIGHTED_FILTER_SUPPORTED#PNG_WRITE_WEIGHTED_FILTER_SUPPORTED\u0000#PNG_WRITE_WEIGHTED_FILTER_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018PNG_WRITE_bKGD_SUPPORTED\u0000\u0018PNG_WRITE_bKGD_SUPPORTED\u0018PNG_WRITE_bKGD_SUPPORTED\u0000\u0018PNG_WRITE_BKGD_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018PNG_WRITE_cHRM_SUPPORTED\u0000\u0018PNG_WRITE_cHRM_SUPPORTED\u0018PNG_WRITE_cHRM_SUPPORTED\u0000\u0018PNG_WRITE_CHRM_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000 \u0000\u0000\u0000\b\u0000\u0000\u0000 \u0000\u0000\u0000 \u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0001\u0018PNG_WRITE_eXIf_SUPPORTED\u0000\u0018PNG_WRITE_eXIf_SUPPORTED\u0018PNG_WRITE_eXIf_SUPPORTED\u0000\u0018PNG_WRITE_EXIF_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000¡\u0000\u0000\u0000\b\u0000\u0000\u0000¡\u0000\u0000\u0000 \u0000\u0000\u0000¡\u0000\u0000\u0000\u0000\u0000\u0000\u0018PNG_WRITE_gAMA_SUPPORTED\u0000\u0018PNG_WRITE_gAMA_SUPPORTED\u0018PNG_WRITE_gAMA_SUPPORTED\u0000\u0018PNG_WRITE_GAMA_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000¢\u0000\u0000\u0000\b\u0000\u0000\u0000¢\u0000\u0000\u0000 \u0000\u0000\u0000¢\u0000\u0000\u0000\u0000\u0000\u0000\u0018PNG_WRITE_hIST_SUPPORTED\u0000\u0018PNG_WRITE_hIST_SUPPORTED\u0018PNG_WRITE_hIST_SUPPORTED\u0000\u0018PNG_WRITE_HIST_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000£\u0000\u0000\u0000\b\u0000\u0000\u0000£\u0000\u0000\u0000 \u0000\u0000\u0000£\u0000\u0000\u0000\u0000\u0000\u0000\u0018PNG_WRITE_iCCP_SUPPORTED\u0000\u0018PNG_WRITE_iCCP_SUPPORTED\u0018PNG_WRITE_iCCP_SUPPORTED\u0000\u0018PNG_WRITE_ICCP_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000¤\u0000\u0000\u0000\b\u0000\u0000\u0000¤\u0000\u0000\u0000 \u0000\u0000\u0000¤\u0000\u0000\u0000\u0000\u0000\u0000\u0018PNG_WRITE_iTXt_SUPPORTED\u0000\u0018PNG_WRITE_iTXt_SUPPORTED\u0018PNG_WRITE_iTXt_SUPPORTED\u0000\u0018PNG_WRITE_ITXT_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000¥\u0000\u0000\u0000\b\u0000\u0000\u0000¥\u0000\u0000\u0000 \u0000\u0000\u0000¥\u0000\u0000\u0000\u0000\u0000\u0000\u0018PNG_WRITE_oFFs_SUPPORTED\u0000\u0018PNG_WRITE_oFFs_SUPPORTED\u0018PNG_WRITE_oFFs_SUPPORTED\u0000\u0018PNG_WRITE_OFFS_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000¦\u0000\u0000\u0000\b\u0000\u0000\u0000¦\u0000\u0000\u0000 \u0000\u0000\u0000¦\u0000\u0000\u0000\u0000\u0000\u0000\u0018PNG_WRITE_pCAL_SUPPORTED\u0000\u0018PNG_WRITE_pCAL_SUPPORTED\u0018PNG_WRITE_pCAL_SUPPORTED\u0000\u0018PNG_WRITE_PCAL_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000§\u0000\u0000\u0000\b\u0000\u0000\u0000§\u0000\u0000\u0000 \u0000\u0000\u0000§\u0000\u0000\u0000\u0000\u0000\u0000\u0018PNG_WRITE_pHYs_SUPPORTED\u0000\u0018PNG_WRITE_pHYs_SUPPORTED\u0018PNG_WRITE_pHYs_SUPPORTED\u0000\u0018PNG_WRITE_PHYS_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000¨\u0000\u0000\u0000\b\u0000\u0000\u0000¨\u0000\u0000\u0000 \u0000\u0000\u0000¨\u0000\u0000\u0000\u0000\u0000\u0000\u0018PNG_WRITE_sBIT_SUPPORTED\u0000\u0018PNG_WRITE_sBIT_SUPPORTED\u0018PNG_WRITE_sBIT_SUPPORTED\u0000\u0018PNG_WRITE_SBIT_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000©\u0000\u0000\u0000\b\u0000\u0000\u0000©\u0000\u0000\u0000 \u0000\u0000\u0000©\u0000\u0000\u0000\u0000\u0000\u0000\u0018PNG_WRITE_sCAL_SUPPORTED\u0000\u0018PNG_WRITE_sCAL_SUPPORTED\u0018PNG_WRITE_sCAL_SUPPORTED\u0000\u0018PNG_WRITE_SCAL_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000ª\u0000\u0000\u0000\b\u0000\u0000\u0000ª\u0000\u0000\u0000 \u0000\u0000\u0000ª\u0000\u0000\u0000\u0000\u0000\u0000\u0018PNG_WRITE_sPLT_SUPPORTED\u0000\u0018PNG_WRITE_sPLT_SUPPORTED\u0018PNG_WRITE_sPLT_SUPPORTED\u0000\u0018PNG_WRITE_SPLT_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000«\u0000\u0000\u0000\b\u0000\u0000\u0000«\u0000\u0000\u0000 \u0000\u0000\u0000«\u0000\u0000\u0000\u0000\u0000\u0000\u0018PNG_WRITE_sRGB_SUPPORTED\u0000\u0018PNG_WRITE_sRGB_SUPPORTED\u0018PNG_WRITE_sRGB_SUPPORTED\u0000\u0018PNG_WRITE_SRGB_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000¬\u0000\u0000\u0000\b\u0000\u0000\u0000¬\u0000\u0000\u0000 \u0000\u0000\u0000¬\u0000\u0000\u0000\u0000\u0000\u0000\u0018PNG_WRITE_tEXt_SUPPORTED\u0000\u0018PNG_WRITE_tEXt_SUPPORTED\u0018PNG_WRITE_tEXt_SUPPORTED\u0000\u0018PNG_WRITE_TEXT_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000­\u0000\u0000\u0000\b\u0000\u0000\u0000­\u0000\u0000\u0000 \u0000\u0000\u0000­\u0000\u0000\u0000\u0000\u0000\u0000\u0018PNG_WRITE_tIME_SUPPORTED\u0000\u0018PNG_WRITE_tIME_SUPPORTED\u0018PNG_WRITE_tIME_SUPPORTED\u0000\u0018PNG_WRITE_TIME_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000®\u0000\u0000\u0000\b\u0000\u0000\u0000®\u0000\u0000\u0000 \u0000\u0000\u0000®\u0000\u0000\u0000\u0000\u0000\u0000\u0018PNG_WRITE_tRNS_SUPPORTED\u0000\u0018PNG_WRITE_tRNS_SUPPORTED\u0018PNG_WRITE_tRNS_SUPPORTED\u0000\u0018PNG_WRITE_TRNS_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000¯\u0000\u0000\u0000\b\u0000\u0000\u0000¯\u0000\u0000\u0000 \u0000\u0000\u0000¯\u0000\u0000\u0000\u0000\u0000\u0000\u0018PNG_WRITE_zTXt_SUPPORTED\u0000\u0018PNG_WRITE_zTXt_SUPPORTED\u0018PNG_WRITE_zTXt_SUPPORTED\u0000\u0018PNG_WRITE_ZTXT_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000°\u0000\u0000\u0000\b\u0000\u0000\u0000°\u0000\u0000\u0000\u001A\u0000\u0000\u0000°\u0000\u0000\u0000\u0000\u0000\u0000\u0012PNG_bKGD_SUPPORTED\u0000\u0012PNG_bKGD_SUPPORTED\u0012PNG_bKGD_SUPPORTED\u0000\u0012PNG_BKGD_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000±\u0000\u0000\u0000\b\u0000\u0000\u0000±\u0000\u0000\u0000\u001A\u0000\u0000\u0000±\u0000\u0000\u0000\u0000\u0000\u0000\u0012PNG_cHRM_SUPPORTED\u0000\u0012PNG_cHRM_SUPPORTED\u0012PNG_cHRM_SUPPORTED\u0000\u0012PNG_CHRM_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000²\u0000\u0000\u0000\b\u0000\u0000\u0000²\u0000\u0000\u0000\u001A\u0000\u0000\u0000²\u0000\u0000\u0000\u0000\u0000\u0000\u0012PNG_eXIf_SUPPORTED\u0000\u0012PNG_eXIf_SUPPORTED\u0012PNG_eXIf_SUPPORTED\u0000\u0012PNG_EXIF_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000³\u0000\u0000\u0000\b\u0000\u0000\u0000³\u0000\u0000\u0000\u001A\u0000\u0000\u0000³\u0000\u0000\u0000\u0000\u0000\u0000\u0012PNG_gAMA_SUPPORTED\u0000\u0012PNG_gAMA_SUPPORTED\u0012PNG_gAMA_SUPPORTED\u0000\u0012PNG_GAMA_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000´\u0000\u0000\u0000\b\u0000\u0000\u0000´\u0000\u0000\u0000\u001A\u0000\u0000\u0000´\u0000\u0000\u0000\u0000\u0000\u0000\u0012PNG_hIST_SUPPORTED\u0000\u0012PNG_hIST_SUPPORTED\u0012PNG_hIST_SUPPORTED\u0000\u0012PNG_HIST_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000µ\u0000\u0000\u0000\b\u0000\u0000\u0000µ\u0000\u0000\u0000\u001A\u0000\u0000\u0000µ\u0000\u0000\u0000\u0000\u0000\u0000\u0012PNG_iCCP_SUPPORTED\u0000\u0012PNG_iCCP_SUPPORTED\u0012PNG_iCCP_SUPPORTED\u0000\u0012PNG_ICCP_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000¶\u0000\u0000\u0000\b\u0000\u0000\u0000¶\u0000\u0000\u0000\u001A\u0000\u0000\u0000¶\u0000\u0000\u0000\u0000\u0000\u0000\u0012PNG_iTXt_SUPPORTED\u0000\u0012PNG_iTXt_SUPPORTED\u0012PNG_iTXt_SUPPORTED\u0000\u0012PNG_ITXT_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000·\u0000\u0000\u0000\b\u0000\u0000\u0000·\u0000\u0000\u0000\u001A\u0000\u0000\u0000·\u0000\u0000\u0000\u0000\u0000\u0000\u0012PNG_oFFs_SUPPORTED\u0000\u0012PNG_oFFs_SUPPORTED\u0012PNG_oFFs_SUPPORTED\u0000\u0012PNG_OFFS_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000¸\u0000\u0000\u0000\b\u0000\u0000\u0000¸\u0000\u0000\u0000\u001A\u0000\u0000\u0000¸\u0000\u0000\u0000\u0000\u0000\u0000\u0012PNG_pCAL_SUPPORTED\u0000\u0012PNG_pCAL_SUPPORTED\u0012PNG_pCAL_SUPPORTED\u0000\u0012PNG_PCAL_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000¹\u0000\u0000\u0000\b\u0000\u0000\u0000¹\u0000\u0000\u0000\u001A\u0000\u0000\u0000¹\u0000\u0000\u0000\u0000\u0000\u0001\u0012PNG_pHYs_SUPPORTED\u0000\u0012PNG_pHYs_SUPPORTED\u0012PNG_pHYs_SUPPORTED\u0000\u0012PNG_PHYS_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000º\u0000\u0000\u0000\b\u0000\u0000\u0000º\u0000\u0000\u0000\u001A\u0000\u0000\u0000º\u0000\u0000\u0000\u0000\u0000\u0000\u0012PNG_sBIT_SUPPORTED\u0000\u0012PNG_sBIT_SUPPORTED\u0012PNG_sBIT_SUPPORTED\u0000\u0012PNG_SBIT_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000»\u0000\u0000\u0000\b\u0000\u0000\u0000»\u0000\u0000\u0000\u001A\u0000\u0000\u0000»\u0000\u0000\u0000\u0000\u0000\u0000\u0012PNG_sCAL_SUPPORTED\u0000\u0012PNG_sCAL_SUPPORTED\u0012PNG_sCAL_SUPPORTED\u0000\u0012PNG_SCAL_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000¼\u0000\u0000\u0000\b\u0000\u0000\u0000¼\u0000\u0000\u0000\u001A\u0000\u0000\u0000¼\u0000\u0000\u0000\u0000\u0000\u0000\u0012PNG_sPLT_SUPPORTED\u0000\u0012PNG_sPLT_SUPPORTED\u0012PNG_sPLT_SUPPORTED\u0000\u0012PNG_SPLT_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000½\u0000\u0000\u0000\b\u0000\u0000\u0000½\u0000\u0000\u0000\u001A\u0000\u0000\u0000½\u0000\u0000\u0000\u0000\u0000\u0000\u0012PNG_sRGB_SUPPORTED\u0000\u0012PNG_sRGB_SUPPORTED\u0012PNG_sRGB_SUPPORTED\u0000\u0012PNG_SRGB_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000¾\u0000\u0000\u0000\b\u0000\u0000\u0000¾\u0000\u0000\u0000\u001A\u0000\u0000\u0000¾\u0000\u0000\u0000\u0000\u0000\u0000\u0012PNG_tEXt_SUPPORTED\u0000\u0012PNG_tEXt_SUPPORTED\u0012PNG_tEXt_SUPPORTED\u0000\u0012PNG_TEXT_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000¿\u0000\u0000\u0000\b\u0000\u0000\u0000¿\u0000\u0000\u0000\u001A\u0000\u0000\u0000¿\u0000\u0000\u0000\u0000\u0000\u0000\u0012PNG_tIME_SUPPORTED\u0000\u0012PNG_tIME_SUPPORTED\u0012PNG_tIME_SUPPORTED\u0000\u0012PNG_TIME_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000À\u0000\u0000\u0000\b\u0000\u0000\u0000À\u0000\u0000\u0000\u001A\u0000\u0000\u0000À\u0000\u0000\u0000\u0000\u0000\u0000\u0012PNG_tRNS_SUPPORTED\u0000\u0012PNG_tRNS_SUPPORTED\u0012PNG_tRNS_SUPPORTED\u0000\u0012PNG_TRNS_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Á\u0000\u0000\u0000\b\u0000\u0000\u0000Á\u0000\u0000\u0000\u001A\u0000\u0000\u0000Á\u0000\u0000\u0000\u0000\u0000\u0000\u0012PNG_zTXt_SUPPORTED\u0000\u0012PNG_zTXt_SUPPORTED\u0012PNG_zTXt_SUPPORTED\u0000\u0012PNG_ZTXT_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ä\u0000\u0000\u0000\b\u0000\u0000\u0000Ä\u0000\u0000\u0000\u0016\u0000\u0000\u0000Ä\u0000\u0000\u0000\u0000\u0000\u0000\fPNG_API_RULE\u0000\fPNG_API_RULE\fPNG_API_RULE\u0000\fPNG_API_RULE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Å\u0000\u0000\u0000\b\u0000\u0000\u0000Å\u0000\u0000\u0000!\u0000\u0000\u0000Å\u0000\u0000\u0000\u0000\u0000\u0000\u0017PNG_DEFAULT_READ_MACROS\u0000\u0017PNG_DEFAULT_READ_MACROS\u0017PNG_DEFAULT_READ_MACROS\u0000\u0017PNG_DEFAULT_READ_MACROS\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Æ\u0000\u0000\u0000\b\u0000\u0000\u0000Æ\u0000\u0000\u0000&\u0000\u0000\u0000Æ\u0000\u0000\u0000\u0000\u0000\u0000\u0019PNG_GAMMA_THRESHOLD_FIXED\u0000\u0019PNG_GAMMA_THRESHOLD_FIXED\u0019PNG_GAMMA_THRESHOLD_FIXED\u0000\u0019PNG_GAMMA_THRESHOLD_FIXED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ç\u0000\u0000\u0000\b\u0000\u0000\u0000Ç\u0000\u0000\u0000(\u0000\u0000\u0000Ç\u0000\u0000\u0000\u0000\u0000\u0000\u0012PNG_IDAT_READ_SIZE\u0000\u0012PNG_IDAT_READ_SIZE\u0012PNG_IDAT_READ_SIZE\u0000\u0012PNG_IDAT_READ_SIZE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000È\u0000\u0000\u0000\b\u0000\u0000\u0000È\u0000\u0000\u0000!\u0000\u0000\u0000È\u0000\u0000\u0000\u0000\u0000\u0000\u0014PNG_INFLATE_BUF_SIZE\u0000\u0014PNG_INFLATE_BUF_SIZE\u0014PNG_INFLATE_BUF_SIZE\u0000\u0014PNG_INFLATE_BUF_SIZE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000É\u0000\u0000\u0000\b\u0000\u0000\u0000É\u0000\u0000\u0000\u001E\u0000\u0000\u0000É\u0000\u0000\u0000\u0000\u0000\u0000\u000FPNG_LINKAGE_API\u0000\u000FPNG_LINKAGE_API\u000FPNG_LINKAGE_API\u0000\u000FPNG_LINKAGE_API\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ê\u0000\u0000\u0000\b\u0000\u0000\u0000Ê\u0000\u0000\u0000#\u0000\u0000\u0000Ê\u0000\u0000\u0000\u0000\u0000\u0000\u0014PNG_LINKAGE_CALLBACK\u0000\u0014PNG_LINKAGE_CALLBACK\u0014PNG_LINKAGE_CALLBACK\u0000\u0014PNG_LINKAGE_CALLBACK\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ë\u0000\u0000\u0000\b\u0000\u0000\u0000Ë\u0000\u0000\u0000\u001F\u0000\u0000\u0000Ë\u0000\u0000\u0000\u0000\u0000\u0000\u0010PNG_LINKAGE_DATA\u0000\u0010PNG_LINKAGE_DATA\u0010PNG_LINKAGE_DATA\u0000\u0010PNG_LINKAGE_DATA\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ì\u0000\u0000\u0000\b\u0000\u0000\u0000Ì\u0000\u0000\u0000#\u0000\u0000\u0000Ì\u0000\u0000\u0000\u0000\u0000\u0000\u0014PNG_LINKAGE_FUNCTION\u0000\u0014PNG_LINKAGE_FUNCTION\u0014PNG_LINKAGE_FUNCTION\u0000\u0014PNG_LINKAGE_FUNCTION\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Í\u0000\u0000\u0000\b\u0000\u0000\u0000Í\u0000\u0000\u0000\u001A\u0000\u0000\u0000Í\u0000\u0000\u0000\u0000\u0000\u0000\u000FPNG_MAX_GAMMA_8\u0000\u000FPNG_MAX_GAMMA_8\u000FPNG_MAX_GAMMA_8\u0000\u000FPNG_MAX_GAMMA_8\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Î\u0000\u0000\u0000\b\u0000\u0000\u0000Î\u0000\u0000\u0000 \u0000\u0000\u0000Î\u0000\u0000\u0000\u0000\u0000\u0000\u0016PNG_QUANTIZE_BLUE_BITS\u0000\u0016PNG_QUANTIZE_BLUE_BITS\u0016PNG_QUANTIZE_BLUE_BITS\u0000\u0016PNG_QUANTIZE_BLUE_BITS\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ï\u0000\u0000\u0000\b\u0000\u0000\u0000Ï\u0000\u0000\u0000!\u0000\u0000\u0000Ï\u0000\u0000\u0000\u0000\u0000\u0000\u0017PNG_QUANTIZE_GREEN_BITS\u0000\u0017PNG_QUANTIZE_GREEN_BITS\u0017PNG_QUANTIZE_GREEN_BITS\u0000\u0017PNG_QUANTIZE_GREEN_BITS\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ð\u0000\u0000\u0000\b\u0000\u0000\u0000Ð\u0000\u0000\u0000\u001F\u0000\u0000\u0000Ð\u0000\u0000\u0000\u0000\u0000\u0000\u0015PNG_QUANTIZE_RED_BITS\u0000\u0015PNG_QUANTIZE_RED_BITS\u0015PNG_QUANTIZE_RED_BITS\u0000\u0015PNG_QUANTIZE_RED_BITS\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ñ\u0000\u0000\u0000\b\u0000\u0000\u0000Ñ\u0000\u0000\u0000+\u0000\u0000\u0000Ñ\u0000\u0000\u0000\u0000\u0000\u0000\u001EPNG_TEXT_Z_DEFAULT_COMPRESSION\u0000\u001EPNG_TEXT_Z_DEFAULT_COMPRESSION\u001EPNG_TEXT_Z_DEFAULT_COMPRESSION\u0000\u001EPNG_TEXT_Z_DEFAULT_COMPRESSION\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ò\u0000\u0000\u0000\b\u0000\u0000\u0000Ò\u0000\u0000\u0000%\u0000\u0000\u0000Ò\u0000\u0000\u0000\u0000\u0000\u0001\u001BPNG_TEXT_Z_DEFAULT_STRATEGY\u0000\u001BPNG_TEXT_Z_DEFAULT_STRATEGY\u001BPNG_TEXT_Z_DEFAULT_STRATEGY\u0000\u001BPNG_TEXT_Z_DEFAULT_STRATEGY\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ó\u0000\u0000\u0000\b\u0000\u0000\u0000Ó\u0000\u0000\u0000%\u0000\u0000\u0000Ó\u0000\u0000\u0000\u0000\u0000\u0000\u0018PNG_USER_CHUNK_CACHE_MAX\u0000\u0018PNG_USER_CHUNK_CACHE_MAX\u0018PNG_USER_CHUNK_CACHE_MAX\u0000\u0018PNG_USER_CHUNK_CACHE_MAX\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ô\u0000\u0000\u0000\b\u0000\u0000\u0000Ô\u0000\u0000\u0000)\u0000\u0000\u0000Ô\u0000\u0000\u0000\u0000\u0000\u0000\u0019PNG_USER_CHUNK_MALLOC_MAX\u0000\u0019PNG_USER_CHUNK_MALLOC_MAX\u0019PNG_USER_CHUNK_MALLOC_MAX\u0000\u0019PNG_USER_CHUNK_MALLOC_MAX\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Õ\u0000\u0000\u0000\b\u0000\u0000\u0000Õ\u0000\u0000\u0000#\u0000\u0000\u0000Õ\u0000\u0000\u0000\u0000\u0000\u0000\u0013PNG_USER_HEIGHT_MAX\u0000\u0013PNG_USER_HEIGHT_MAX\u0013PNG_USER_HEIGHT_MAX\u0000\u0013PNG_USER_HEIGHT_MAX\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ö\u0000\u0000\u0000\b\u0000\u0000\u0000Ö\u0000\u0000\u0000\"\u0000\u0000\u0000Ö\u0000\u0000\u0000\u0000\u0000\u0000\u0012PNG_USER_WIDTH_MAX\u0000\u0012PNG_USER_WIDTH_MAX\u0012PNG_USER_WIDTH_MAX\u0000\u0012PNG_USER_WIDTH_MAX\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000×\u0000\u0000\u0000\b\u0000\u0000\u0000×\u0000\u0000\u0000\u001A\u0000\u0000\u0000×\u0000\u0000\u0000\u0000\u0000\u0000\rPNG_ZBUF_SIZE\u0000\rPNG_ZBUF_SIZE\rPNG_ZBUF_SIZE\u0000\rPNG_ZBUF_SIZE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ø\u0000\u0000\u0000\b\u0000\u0000\u0000Ø\u0000\u0000\u0000\u0019\u0000\u0000\u0000Ø\u0000\u0000\u0000\u0000\u0000\u0000\u000FPNG_ZLIB_VERNUM\u0000\u000FPNG_ZLIB_VERNUM\u000FPNG_ZLIB_VERNUM\u0000\u000FPNG_ZLIB_VERNUM\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ù\u0000\u0000\u0000\b\u0000\u0000\u0000Ù\u0000\u0000\u0000&\u0000\u0000\u0000Ù\u0000\u0000\u0000\u0000\u0000\u0001\u0019PNG_Z_DEFAULT_COMPRESSION\u0000\u0019PNG_Z_DEFAULT_COMPRESSION\u0019PNG_Z_DEFAULT_COMPRESSION\u0000\u0019PNG_Z_DEFAULT_COMPRESSION\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ú\u0000\u0000\u0000\b\u0000\u0000\u0000Ú\u0000\u0000\u0000)\u0000\u0000\u0000Ú\u0000\u0000\u0000\u0000\u0000\u0000\u001FPNG_Z_DEFAULT_NOFILTER_STRATEGY\u0000\u001FPNG_Z_DEFAULT_NOFILTER_STRATEGY\u001FPNG_Z_DEFAULT_NOFILTER_STRATEGY\u0000\u001FPNG_Z_DEFAULT_NOFILTER_STRATEGY\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Û\u0000\u0000\u0000\b\u0000\u0000\u0000Û\u0000\u0000\u0000 \u0000\u0000\u0000Û\u0000\u0000\u0000\u0000\u0000\u0000\u0016PNG_Z_DEFAULT_STRATEGY\u0000\u0016PNG_Z_DEFAULT_STRATEGY\u0016PNG_Z_DEFAULT_STRATEGY\u0000\u0016PNG_Z_DEFAULT_STRATEGY\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ü\u0000\u0000\u0000\b\u0000\u0000\u0000Ü\u0000\u0000\u0000\u001C\u0000\u0000\u0000Ü\u0000\u0000\u0000\u0000\u0000\u0000\u0012PNG_sCAL_PRECISION\u0000\u0012PNG_sCAL_PRECISION\u0012PNG_sCAL_PRECISION\u0000\u0012PNG_SCAL_PRECISION\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ý\u0000\u0000\u0000\b\u0000\u0000\u0000Ý\u0000\u0000\u0000!\u0000\u0000\u0000Ý\u0000\u0000\u0000\u0000\u0000\u0000\u0017PNG_sRGB_PROFILE_CHECKS\u0000\u0017PNG_sRGB_PROFILE_CHECKS\u0017PNG_sRGB_PROFILE_CHECKS\u0000\u0017PNG_SRGB_PROFILE_CHECKS\u0000\u0000\u0000\u0000end\u0000\u0016l\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\pngconf.h","value":"dataCõ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\tPNGCONF_H\u0000\tPNGCONF_H\tPNGCONF_H\u0000\tPNGCONF_H\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000?\u0000\u0000\u0000\b\u0000\u0000\u0000?\u0000\u0000\u0000\u0017\u0000\u0000\u0000?\u0000\u0000\u0000\u0000\u0000\u0000\tPNG_CONST\u0000\tPNG_CONST\tPNG_CONST\u0000\tPNG_CONST\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\f\u0000\u0000\u0000L\u0000\u0000\u0000\f\u0000\u0000\u0000L\u0000\u0000\u0000\u001F\u0000\u0000\u0000L\u0000\u0000\u0000\u0000\u0000\u0000\u0013PNG_USE_READ_MACROS\u0000\u0013PNG_USE_READ_MACROS\u0013PNG_USE_READ_MACROS\u0000\u0013PNG_USE_READ_MACROS\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000]\u0000\u0000\u0000\n\u0000\u0000\u0000]\u0000\u0000\u0000!\u0000\u0000\u0000]\u0000\u0000\u0000\u0000\u0000\u0000\u0006PNGARG\u0000\u0006PNGARG\u0006PNGARG\u0000\u0006PNGARG\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\f\u0000\u0000\u0000Ç\u0000\u0000\u0000\f\u0000\u0000\u0000Ç\u0000\u0000\u0000\u001B\u0000\u0000\u0000Ç\u0000\u0000\u0000\u0000\u0000\u0000\aPNGCAPI\u0000\aPNGCAPI\aPNGCAPI\u0000\aPNGCAPI\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\f\u0000\u0000\u0000ì\u0000\u0000\u0000\f\u0000\u0000\u0000ì\u0000\u0000\u00000\u0000\u0000\u0000ì\u0000\u0000\u0000\u0000\u0000\u0000\u000EPNG_DLL_EXPORT\u0000\u000EPNG_DLL_EXPORT\u000EPNG_DLL_EXPORT\u0000\u000EPNG_DLL_EXPORT\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\u000E\u0000\u0000\u0000î\u0000\u0000\u0000\u000E\u0000\u0000\u0000î\u0000\u0000\u00002\u0000\u0000\u0000î\u0000\u0000\u0000\u0000\u0000\u0000\u000EPNG_DLL_IMPORT\u0000\u000EPNG_DLL_IMPORT\u000EPNG_DLL_IMPORT\u0000\u000EPNG_DLL_IMPORT\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000\u0001\u0001\u0000\u0000\n\u0000\u0000\u0000\u0001\u0001\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0000\bPNGCBAPI\u0000\bPNGCBAPI\bPNGCBAPI\u0000\bPNGCBAPI\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000\u0004\u0001\u0000\u0000\n\u0000\u0000\u0000\u0004\u0001\u0000\u0000\u0018\u0000\u0000\u0000\u0004\u0001\u0000\u0000\u0000\u0000\u0000\u0006PNGAPI\u0000\u0006PNGAPI\u0006PNGAPI\u0000\u0006PNGAPI\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\f\u0000\u0000\u0000\u0012\u0001\u0000\u0000\f\u0000\u0000\u0000\u0012\u0001\u0000\u0000\u0016\u0000\u0000\u0000\u0012\u0001\u0000\u0000\u0000\u0000\u0001\nPNG_IMPEXP\u0000\nPNG_IMPEXP\nPNG_IMPEXP\u0000\nPNG_IMPEXP\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000\u001E\u0001\u0000\u0000\n\u0000\u0000\u0000\u001E\u0001\u0000\u0000N\u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0000\u0000\u0000\fPNG_FUNCTION\u0000\fPNG_FUNCTION\fPNG_FUNCTION\u0000\fPNG_FUNCTION\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000\"\u0001\u0000\u0000\n\u0000\u0000\u0000\"\u0001\u0000\u0000/\u0000\u0000\u0000\"\u0001\u0000\u0000\u0000\u0000\u0000\u000FPNG_EXPORT_TYPE\u0000\u000FPNG_EXPORT_TYPE\u000FPNG_EXPORT_TYPE\u0000\u000FPNG_EXPORT_TYPE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000+\u0001\u0000\u0000\n\u0000\u0000\u0000+\u0001\u0000\u0000!\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000\u0000\vPNG_EXPORTA\u0000\vPNG_EXPORTA\vPNG_EXPORTA\u0000\vPNG_EXPORTA\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u00003\u0001\u0000\u0000\b\u0000\u0000\u00003\u0001\u0000\u0000\u0011\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u0000\u0000\tPNG_EMPTY\u0000\tPNG_EMPTY\tPNG_EMPTY\u0000\tPNG_EMPTY\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u00005\u0001\u0000\u0000\b\u0000\u0000\u00005\u0001\u0000\u00004\u0000\u0000\u00006\u0001\u0000\u0000\u0000\u0000\u0000\nPNG_EXPORT\u0000\nPNG_EXPORT\nPNG_EXPORT\u0000\nPNG_EXPORT\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000:\u0001\u0000\u0000\n\u0000\u0000\u0000:\u0001\u0000\u0000<\u0000\u0000\u0000:\u0001\u0000\u0000\u0000\u0000\u0000\vPNG_REMOVED\u0000\vPNG_REMOVED\vPNG_REMOVED\u0000\vPNG_REMOVED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000>\u0001\u0000\u0000\n\u0000\u0000\u0000>\u0001\u0000\u0000J\u0000\u0000\u0000>\u0001\u0000\u0000\u0000\u0000\u0000\fPNG_CALLBACK\u0000\fPNG_CALLBACK\fPNG_CALLBACK\u0000\fPNG_CALLBACK\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\f\u0000\u0000\u0000J\u0001\u0000\u0000\f\u0000\u0000\u0000J\u0001\u0000\u0000+\u0000\u0000\u0000J\u0001\u0000\u0000\u0000\u0000\u0000\u001FPNG_PEDANTIC_WARNINGS_SUPPORTED\u0000\u001FPNG_PEDANTIC_WARNINGS_SUPPORTED\u001FPNG_PEDANTIC_WARNINGS_SUPPORTED\u0000\u001FPNG_PEDANTIC_WARNINGS_SUPPORTED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\u000E\u0000\u0000\u0000X\u0001\u0000\u0000\u000E\u0000\u0000\u0000X\u0001\u0000\u0000D\u0000\u0000\u0000X\u0001\u0000\u0000\u0000\u0000\u0000\u000EPNG_USE_RESULT\u0000\u000EPNG_USE_RESULT\u000EPNG_USE_RESULT\u0000\u000EPNG_USE_RESULT\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\u000E\u0000\u0000\u0000[\u0001\u0000\u0000\u000E\u0000\u0000\u0000[\u0001\u0000\u00008\u0000\u0000\u0000[\u0001\u0000\u0000\u0000\u0000\u0000\fPNG_NORETURN\u0000\fPNG_NORETURN\fPNG_NORETURN\u0000\fPNG_NORETURN\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\u000E\u0000\u0000\u0000^\u0001\u0000\u0000\u000E\u0000\u0000\u0000^\u0001\u0000\u00007\u0000\u0000\u0000^\u0001\u0000\u0000\u0000\u0000\u0000\rPNG_ALLOCATED\u0000\rPNG_ALLOCATED\rPNG_ALLOCATED\u0000\rPNG_ALLOCATED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\u000E\u0000\u0000\u0000a\u0001\u0000\u0000\u000E\u0000\u0000\u0000a\u0001\u0000\u0000<\u0000\u0000\u0000a\u0001\u0000\u0000\u0000\u0000\u0000\u000EPNG_DEPRECATED\u0000\u000EPNG_DEPRECATED\u000EPNG_DEPRECATED\u0000\u000EPNG_DEPRECATED\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\u0012\u0000\u0000\u0000f\u0001\u0000\u0000\u0012\u0000\u0000\u0000f\u0001\u0000\u0000:\u0000\u0000\u0000g\u0001\u0000\u0000\u0000\u0000\u0000\vPNG_PRIVATE\u0000\vPNG_PRIVATE\vPNG_PRIVATE\u0000\vPNG_PRIVATE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\u000E\u0000\u0000\u0000l\u0001\u0000\u0000\u000E\u0000\u0000\u0000l\u0001\u0000\u0000%\u0000\u0000\u0000l\u0001\u0000\u0000\u0000\u0000\u0000\fPNG_RESTRICT\u0000\fPNG_RESTRICT\fPNG_RESTRICT\u0000\fPNG_RESTRICT\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\r\u0000\u0000\u0000Á\u0001\u0000\u0000\r\u0000\u0000\u0000Á\u0001\u0000\u0000/\u0000\u0000\u0000Â\u0001\u0000\u0000\u0000\u0000\u0000\rPNG_FP_EXPORT\u0000\rPNG_FP_EXPORT\rPNG_FP_EXPORT\u0000\rPNG_FP_EXPORT\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\r\u0000\u0000\u0000É\u0001\u0000\u0000\r\u0000\u0000\u0000É\u0001\u0000\u0000/\u0000\u0000\u0000Ê\u0001\u0000\u0000\u0000\u0000\u0000\u0010PNG_FIXED_EXPORT\u0000\u0010PNG_FIXED_EXPORT\u0010PNG_FIXED_EXPORT\u0000\u0010PNG_FIXED_EXPORT\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0019\u0000\u0000\u0000à\u0001\u0000\u0000\u0003\u0000\u0000\u0000à\u0001\u0000\u0000!\u0000\u0000\u0000à\u0001\u0000\u0000\u0001\u0000\u0000\bpng_byte\bpng_byte\bpng_byte\u001Etypedef unsigned char png_byte\u0000\bPNG_BYTE\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0011\u0000\u0000\u0000è\u0001\u0000\u0000\u0003\u0000\u0000\u0000è\u0001\u0000\u0000\u001B\u0000\u0000\u0000è\u0001\u0000\u0000\u0001\u0000\u0000\npng_int_16\npng_int_16\npng_int_16\u0018typedef short png_int_16\u0000\nPNG_INT_16\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u001A\u0000\u0000\u0000ð\u0001\u0000\u0000\u0003\u0000\u0000\u0000ð\u0001\u0000\u0000%\u0000\u0000\u0000ð\u0001\u0000\u0000\u0001\u0000\u0000\vpng_uint_16\vpng_uint_16\vpng_uint_16\"typedef unsigned short png_uint_16\u0000\vPNG_UINT_16\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u000F\u0000\u0000\u0000ö\u0001\u0000\u0000\u0003\u0000\u0000\u0000ö\u0001\u0000\u0000\u0019\u0000\u0000\u0000ö\u0001\u0000\u0000\u0001\u0000\u0000\npng_int_32\npng_int_32\npng_int_32\u0016typedef int png_int_32\u0000\nPNG_INT_32\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0018\u0000\u0000\u0000þ\u0001\u0000\u0000\u0003\u0000\u0000\u0000þ\u0001\u0000\u0000#\u0000\u0000\u0000þ\u0001\u0000\u0000\u0001\u0000\u0000\vpng_uint_32\vpng_uint_32\vpng_uint_32 typedef unsigned int png_uint_32\u0000\vPNG_UINT_32\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u000F\u0000\u0000\u0000\n\u0002\u0000\u0000\u0000\u0000\u0000\u0000\n\u0002\u0000\u0000\u0019\u0000\u0000\u0000\n\u0002\u0000\u0000\u0001\u0000\u0000\npng_size_t\npng_size_t\npng_size_t\u0019typedef size_t png_size_t\u0000\nPNG_SIZE_T\u0000\u0000\u0006size_t\u0000\u0014\u0000\u0000\u0000\u0012\u0000\u0000\u0000\v\u0002\u0000\u0000\u0000\u0000\u0000\u0000\v\u0002\u0000\u0000\u001F\u0000\u0000\u0000\v\u0002\u0000\u0000\u0001\u0000\u0000\rpng_ptrdiff_t\rpng_ptrdiff_t\rpng_ptrdiff_t\u001Ftypedef ptrdiff_t png_ptrdiff_t\u0000\rPNG_PTRDIFF_T\u0000\u0000\tptrdiff_t\u0000\u0014\u0000\u0000\u0000\u0012\u0000\u0000\u0000,\u0002\u0000\u0000\u0003\u0000\u0000\u0000,\u0002\u0000\u0000\"\u0000\u0000\u0000,\u0002\u0000\u0000\u0001\u0000\u0000\u0010png_alloc_size_t\u0010png_alloc_size_t\u0010png_alloc_size_t\u001Ftypedef size_t png_alloc_size_t\u0000\u0010PNG_ALLOC_SIZE_T\u0000\u0000\u0006size_t\u0000\u0014\u0000\u0000\u0000\u0013\u0000\u0000\u0000=\u0002\u0000\u0000\u0000\u0000\u0000\u0000=\u0002\u0000\u0000\"\u0000\u0000\u0000=\u0002\u0000\u0000\u0001\u0000\u0000\u000Fpng_fixed_point\u000Fpng_fixed_point\u000Fpng_fixed_point\"typedef png_int_32 png_fixed_point\u0000\u000FPNG_FIXED_POINT\u0000\u0000\npng_int_32\u0000\u0014\u0000\u0000\u0000 \u0000\u0000\u0000@\u0002\u0000\u0000\u0000\u0000\u0000\u0000@\u0002\u0000\u0000)\u0000\u0000\u0000@\u0002\u0000\u0000\u0001\u0000\u0000\tpng_voidp\tpng_voidp\tpng_voidp\u0017typedef void *png_voidp\u0000\tPNG_VOIDP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000 \u0000\u0000\u0000A\u0002\u0000\u0000\u0000\u0000\u0000\u0000A\u0002\u0000\u0000/\u0000\u0000\u0000A\u0002\u0000\u0000\u0001\u0000\u0000\u000Fpng_const_voidp\u000Fpng_const_voidp\u000Fpng_const_voidp#typedef const void *png_const_voidp\u0000\u000FPNG_CONST_VOIDP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000 \u0000\u0000\u0000B\u0002\u0000\u0000\u0000\u0000\u0000\u0000B\u0002\u0000\u0000)\u0000\u0000\u0000B\u0002\u0000\u0000\u0001\u0000\u0000\tpng_bytep\tpng_bytep\tpng_bytep\u001Btypedef png_byte *png_bytep\u0000\tPNG_BYTEP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000 \u0000\u0000\u0000C\u0002\u0000\u0000\u0000\u0000\u0000\u0000C\u0002\u0000\u0000/\u0000\u0000\u0000C\u0002\u0000\u0000\u0001\u0000\u0000\u000Fpng_const_bytep\u000Fpng_const_bytep\u000Fpng_const_bytep'typedef const png_byte *png_const_bytep\u0000\u000FPNG_CONST_BYTEP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000 \u0000\u0000\u0000D\u0002\u0000\u0000\u0000\u0000\u0000\u0000D\u0002\u0000\u0000,\u0000\u0000\u0000D\u0002\u0000\u0000\u0001\u0000\u0000\fpng_uint_32p\fpng_uint_32p\fpng_uint_32p!typedef png_uint_32 *png_uint_32p\u0000\fPNG_UINT_32P\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000 \u0000\u0000\u0000E\u0002\u0000\u0000\u0000\u0000\u0000\u0000E\u0002\u0000\u00002\u0000\u0000\u0000E\u0002\u0000\u0000\u0001\u0000\u0000\u0012png_const_uint_32p\u0012png_const_uint_32p\u0012png_const_uint_32p-typedef const png_uint_32 *png_const_uint_32p\u0000\u0012PNG_CONST_UINT_32P\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000 \u0000\u0000\u0000F\u0002\u0000\u0000\u0000\u0000\u0000\u0000F\u0002\u0000\u0000+\u0000\u0000\u0000F\u0002\u0000\u0000\u0001\u0000\u0000\vpng_int_32p\vpng_int_32p\vpng_int_32p\u001Ftypedef png_int_32 *png_int_32p\u0000\vPNG_INT_32P\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000 \u0000\u0000\u0000G\u0002\u0000\u0000\u0000\u0000\u0000\u0000G\u0002\u0000\u00001\u0000\u0000\u0000G\u0002\u0000\u0000\u0001\u0000\u0000\u0011png_const_int_32p\u0011png_const_int_32p\u0011png_const_int_32p+typedef const png_int_32 *png_const_int_32p\u0000\u0011PNG_CONST_INT_32P\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000 \u0000\u0000\u0000H\u0002\u0000\u0000\u0000\u0000\u0000\u0000H\u0002\u0000\u0000,\u0000\u0000\u0000H\u0002\u0000\u0000\u0001\u0000\u0000\fpng_uint_16p\fpng_uint_16p\fpng_uint_16p!typedef png_uint_16 *png_uint_16p\u0000\fPNG_UINT_16P\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000 \u0000\u0000\u0000I\u0002\u0000\u0000\u0000\u0000\u0000\u0000I\u0002\u0000\u00002\u0000\u0000\u0000I\u0002\u0000\u0000\u0001\u0000\u0000\u0012png_const_uint_16p\u0012png_const_uint_16p\u0012png_const_uint_16p-typedef const png_uint_16 *png_const_uint_16p\u0000\u0012PNG_CONST_UINT_16P\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000 \u0000\u0000\u0000J\u0002\u0000\u0000\u0000\u0000\u0000\u0000J\u0002\u0000\u0000+\u0000\u0000\u0000J\u0002\u0000\u0000\u0001\u0000\u0000\vpng_int_16p\vpng_int_16p\vpng_int_16p\u001Ftypedef png_int_16 *png_int_16p\u0000\vPNG_INT_16P\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000 \u0000\u0000\u0000K\u0002\u0000\u0000\u0000\u0000\u0000\u0000K\u0002\u0000\u00001\u0000\u0000\u0000K\u0002\u0000\u0000\u0001\u0000\u0000\u0011png_const_int_16p\u0011png_const_int_16p\u0011png_const_int_16p+typedef const png_int_16 *png_const_int_16p\u0000\u0011PNG_CONST_INT_16P\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000 \u0000\u0000\u0000L\u0002\u0000\u0000\u0000\u0000\u0000\u0000L\u0002\u0000\u0000)\u0000\u0000\u0000L\u0002\u0000\u0000\u0001\u0000\u0000\tpng_charp\tpng_charp\tpng_charp\u0017typedef char *png_charp\u0000\tPNG_CHARP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000 \u0000\u0000\u0000M\u0002\u0000\u0000\u0000\u0000\u0000\u0000M\u0002\u0000\u0000/\u0000\u0000\u0000M\u0002\u0000\u0000\u0001\u0000\u0000\u000Fpng_const_charp\u000Fpng_const_charp\u000Fpng_const_charp#typedef const char *png_const_charp\u0000\u000FPNG_CONST_CHARP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000 \u0000\u0000\u0000N\u0002\u0000\u0000\u0000\u0000\u0000\u0000N\u0002\u0000\u00001\u0000\u0000\u0000N\u0002\u0000\u0000\u0001\u0000\u0000\u0011png_fixed_point_p\u0011png_fixed_point_p\u0011png_fixed_point_p*typedef png_fixed_point *png_fixed_point_p\u0000\u0011PNG_FIXED_POINT_P\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000 \u0000\u0000\u0000O\u0002\u0000\u0000\u0000\u0000\u0000\u0000O\u0002\u0000\u00007\u0000\u0000\u0000O\u0002\u0000\u0000\u0001\u0000\u0000\u0017png_const_fixed_point_p\u0017png_const_fixed_point_p\u0017png_const_fixed_point_p6typedef const png_fixed_point *png_const_fixed_point_p\u0000\u0017PNG_CONST_FIXED_POINT_P\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000 \u0000\u0000\u0000P\u0002\u0000\u0000\u0000\u0000\u0000\u0000P\u0002\u0000\u0000+\u0000\u0000\u0000P\u0002\u0000\u0000\u0001\u0000\u0000\vpng_size_tp\vpng_size_tp\vpng_size_tp\u001Btypedef size_t *png_size_tp\u0000\vPNG_SIZE_TP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000 \u0000\u0000\u0000Q\u0002\u0000\u0000\u0000\u0000\u0000\u0000Q\u0002\u0000\u00001\u0000\u0000\u0000Q\u0002\u0000\u0000\u0001\u0000\u0000\u0011png_const_size_tp\u0011png_const_size_tp\u0011png_const_size_tp'typedef const size_t *png_const_size_tp\u0000\u0011PNG_CONST_SIZE_TP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u001A\u0000\u0000\u0000T\u0002\u0000\u0000\u0000\u0000\u0000\u0000T\u0002\u0000\u0000$\u0000\u0000\u0000T\u0002\u0000\u0000\u0001\u0000\u0000\npng_FILE_p\npng_FILE_p\npng_FILE_p\u0018typedef FILE *png_FILE_p\u0000\nPNG_FILE_P\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0017\u0000\u0000\u0000X\u0002\u0000\u0000\u0000\u0000\u0000\u0000X\u0002\u0000\u0000\"\u0000\u0000\u0000X\u0002\u0000\u0000\u0001\u0000\u0000\vpng_doublep\vpng_doublep\vpng_doublep\u001Btypedef double *png_doublep\u0000\vPNG_DOUBLEP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0017\u0000\u0000\u0000Y\u0002\u0000\u0000\u0000\u0000\u0000\u0000Y\u0002\u0000\u0000(\u0000\u0000\u0000Y\u0002\u0000\u0000\u0001\u0000\u0000\u0011png_const_doublep\u0011png_const_doublep\u0011png_const_doublep'typedef const double *png_const_doublep\u0000\u0011PNG_CONST_DOUBLEP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u001C\u0000\u0000\u0000]\u0002\u0000\u0000\u0000\u0000\u0000\u0000]\u0002\u0000\u0000&\u0000\u0000\u0000]\u0002\u0000\u0000\u0001\u0000\u0000\npng_bytepp\npng_bytepp\npng_bytepp\u001Dtypedef png_byte **png_bytepp\u0000\nPNG_BYTEPP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u001C\u0000\u0000\u0000^\u0002\u0000\u0000\u0000\u0000\u0000\u0000^\u0002\u0000\u0000)\u0000\u0000\u0000^\u0002\u0000\u0000\u0001\u0000\u0000\rpng_uint_32pp\rpng_uint_32pp\rpng_uint_32pp#typedef png_uint_32 **png_uint_32pp\u0000\rPNG_UINT_32PP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u001C\u0000\u0000\u0000_\u0002\u0000\u0000\u0000\u0000\u0000\u0000_\u0002\u0000\u0000(\u0000\u0000\u0000_\u0002\u0000\u0000\u0001\u0000\u0000\fpng_int_32pp\fpng_int_32pp\fpng_int_32pp!typedef png_int_32 **png_int_32pp\u0000\fPNG_INT_32PP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u001C\u0000\u0000\u0000`\u0002\u0000\u0000\u0000\u0000\u0000\u0000`\u0002\u0000\u0000)\u0000\u0000\u0000`\u0002\u0000\u0000\u0001\u0000\u0000\rpng_uint_16pp\rpng_uint_16pp\rpng_uint_16pp#typedef png_uint_16 **png_uint_16pp\u0000\rPNG_UINT_16PP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u001C\u0000\u0000\u0000a\u0002\u0000\u0000\u0000\u0000\u0000\u0000a\u0002\u0000\u0000(\u0000\u0000\u0000a\u0002\u0000\u0000\u0001\u0000\u0000\fpng_int_16pp\fpng_int_16pp\fpng_int_16pp!typedef png_int_16 **png_int_16pp\u0000\fPNG_INT_16PP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u001C\u0000\u0000\u0000b\u0002\u0000\u0000\u0000\u0000\u0000\u0000b\u0002\u0000\u0000,\u0000\u0000\u0000b\u0002\u0000\u0000\u0001\u0000\u0000\u0010png_const_charpp\u0010png_const_charpp\u0010png_const_charpp%typedef const char **png_const_charpp\u0000\u0010PNG_CONST_CHARPP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u001C\u0000\u0000\u0000c\u0002\u0000\u0000\u0000\u0000\u0000\u0000c\u0002\u0000\u0000&\u0000\u0000\u0000c\u0002\u0000\u0000\u0001\u0000\u0000\npng_charpp\npng_charpp\npng_charpp\u0019typedef char **png_charpp\u0000\nPNG_CHARPP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u001C\u0000\u0000\u0000d\u0002\u0000\u0000\u0000\u0000\u0000\u0000d\u0002\u0000\u0000.\u0000\u0000\u0000d\u0002\u0000\u0000\u0001\u0000\u0000\u0012png_fixed_point_pp\u0012png_fixed_point_pp\u0012png_fixed_point_pp,typedef png_fixed_point **png_fixed_point_pp\u0000\u0012PNG_FIXED_POINT_PP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u001C\u0000\u0000\u0000f\u0002\u0000\u0000\u0000\u0000\u0000\u0000f\u0002\u0000\u0000(\u0000\u0000\u0000f\u0002\u0000\u0000\u0001\u0000\u0000\fpng_doublepp\fpng_doublepp\fpng_doublepp\u001Dtypedef double **png_doublepp\u0000\fPNG_DOUBLEPP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u001E\u0000\u0000\u0000j\u0002\u0000\u0000\u0000\u0000\u0000\u0000j\u0002\u0000\u0000)\u0000\u0000\u0000j\u0002\u0000\u0000\u0001\u0000\u0000\vpng_charppp\vpng_charppp\vpng_charppp\u001Btypedef char ***png_charppp\u0000\vPNG_CHARPPP\u0000\u0000\u0000\u0000end\u0000\u0016\u001D\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\pngupp.cpp","value":"dataGõ\u0001\u0000\u0000\b\u0000\u0000\u0000\v\u0000\u0000\u0000\b\u0000\u0000\u0000\v\u0000\u0000\u0000\u000F\u0000\u0000\u0000\v\u0000\u0000\u0000\u0000\u0000\u0000\u0004LLOG\u0000\u0004LLOG\u0004LLOG\u0000\u0004LLOG\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0001\u000Fpng_read_stream)void (png_structp, png_bytep, png_size_t)6Upp::png_read_stream(png_structp,png_bytep,png_size_t)Ustatic void png_read_stream(png_structp png_ptr, png_bytep buffer, png_size_t length)\u0003Upp\u000FPNG_READ_STREAM\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0001\u0010png_write_stream)void (png_structp, png_bytep, png_size_t)7Upp::png_write_stream(png_structp,png_bytep,png_size_t)Vstatic void png_write_stream(png_structp png_ptr, png_bytep buffer, png_size_t length)\u0003Upp\u0010PNG_WRITE_STREAM\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0001\u0010png_flush_stream\u0012void (png_structp)\"Upp::png_flush_stream(png_structp)1static void png_flush_stream(png_structp png_ptr)\u0003Upp\u0010PNG_FLUSH_STREAM\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\u0000$\u0000\u0000\u0000\u0001\u0000\u0001\u0011png_user_error_fn#void (png_structp, png_const_charp)3Upp::png_user_error_fn(png_structp,png_const_charp)Mstatic void png_user_error_fn(png_structp png_ptr, png_const_charp error_msg)\u0003Upp\u0011PNG_USER_ERROR_FN\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u0000&\u0000\u0000\u0000\u0000\u0000\u0000\u0000&\u0000\u0000\u0000\u0001\u0000\u0000\u0000)\u0000\u0000\u0000\u0001\u0000\u0001\u0013png_user_warning_fn#void (png_structp, png_const_charp)5Upp::png_user_warning_fn(png_structp,png_const_charp)Qstatic void png_user_warning_fn(png_structp png_ptr, png_const_charp warning_msg)\u0003Upp\u0013PNG_USER_WARNING_FN\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u0000+\u0000\u0000\u0000\u0000\u0000\u0000\u0000+\u0000\u0000\u0000\u0001\u0000\u0000\u00003\u0000\u0000\u0000\u0001\u0000\u0001\nGetDotSize*Size (Size, png_uint_32, png_uint_32, int)1Upp::GetDotSize(Size,png_uint_32,png_uint_32,int)\\static Size GetDotSize(Size pixel_size, png_uint_32 x_ppm, png_uint_32 y_ppm, int unit_type)\u0003Upp\nGETDOTSIZE\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\f\u0000\u0000\u00005\u0000\u0000\u0000\u0000\u0000\u0000\u00005\u0000\u0000\u0000\u0001\u0000\u0000\u0000>\u0000\u0000\u0000\u0001\u0000\u0001\nSetDotSize4void (Size, Size, png_uint_32 &, png_uint_32 &, int)8Upp::SetDotSize(Size,Size,png_uint_32&,png_uint_32&,int)nstatic void SetDotSize(Size pixel_size, Size dots_size, png_uint_32& x_ppm, png_uint_32& y_ppm, int unit_type)\u0003Upp\nSETDOTSIZE\u0003Upp\u0003UPP\u0000\u0000\u0004\u0000\u0000\u0000\u0011\u0000\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0000\u0000\u0000\u0001\u0000\u0000\u0000V\u0000\u0000\u0000\u0001\u0000\u0000\u0004Data\u0014Upp::PNGRaster::Data\u0014Upp::PNGRaster::Data\u000FPNGRaster::Data\u0003Upp\u0004DATA\u0014Upp::PNGRaster::Data\u0014UPP::PNGRASTER::DATA\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000B\u0000\u0000\u0000\u0001\u0000\u0000\u0000B\u0000\u0000\u0000\a\u0000\u0000\u0000B\u0000\u0000\u0000\u0000\u0000\u0000\u0004Data\avoid ()\u001CUpp::PNGRaster::Data::Data()\u0006Data()\u0003Upp\u0004DATA\u0014Upp::PNGRaster::Data\u0014UPP::PNGRASTER::DATA\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000C\u0000\u0000\u0000\u0001\u0000\u0000\u0000C\u0000\u0000\u0000\b\u0000\u0000\u0000C\u0000\u0000\u0000\u0000\u0000\u0000\u0005~Data\u0010void () noexcept\u0019Upp::PNGRaster::Data::~()\a~Data()\u0003Upp\u0005~DATA\u0014Upp::PNGRaster::Data\u0014UPP::PNGRASTER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000F\u0000\u0000\u0000\u0001\u0000\u0000\u0000F\u0000\u0000\u0000\u0015\u0000\u0000\u0000F\u0000\u0000\u0000\u0001\u0000\u0000\apng_ptr\vpng_structp\u001DUpp::PNGRaster::Data::png_ptr\u0013png_structp png_ptr\u0003Upp\aPNG_PTR\u0014Upp::PNGRaster::Data\u0014UPP::PNGRASTER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000G\u0000\u0000\u0000\u0001\u0000\u0000\u0000G\u0000\u0000\u0000\u0016\u0000\u0000\u0000G\u0000\u0000\u0000\u0001\u0000\u0000\binfo_ptr\tpng_infop\u001EUpp::PNGRaster::Data::info_ptr\u0012png_infop info_ptr\u0003Upp\bINFO_PTR\u0014Upp::PNGRaster::Data\u0014UPP::PNGRASTER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000I\u0000\u0000\u0000\u0001\u0000\u0000\u0000I\u0000\u0000\u0000\u0012\u0000\u0000\u0000I\u0000\u0000\u0000\u0001\u0000\u0000\u0004info\u0004Info\u001AUpp::PNGRaster::Data::info\tInfo info\u0003Upp\u0004INFO\u0014Upp::PNGRaster::Data\u0014UPP::PNGRASTER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000J\u0000\u0000\u0000\u0001\u0000\u0000\u0000J\u0000\u0000\u0000\u0012\u0000\u0000\u0000J\u0000\u0000\u0000\u0001\u0000\u0000\u0004size\u0004Size\u001AUpp::PNGRaster::Data::size\tSize size\u0003Upp\u0004SIZE\u0014Upp::PNGRaster::Data\u0014UPP::PNGRASTER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000K\u0000\u0000\u0000\u0001\u0000\u0000\u0000K\u0000\u0000\u0000\u0011\u0000\u0000\u0000K\u0000\u0000\u0000\u0001\u0000\u0000\u0003fmt\fRasterFormat\u0019Upp::PNGRaster::Data::fmt\u0010RasterFormat fmt\u0003Upp\u0003FMT\u0014Upp::PNGRaster::Data\u0014UPP::PNGRASTER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000L\u0000\u0000\u0000\u0001\u0000\u0000\u0000L\u0000\u0000\u0000\u001A\u0000\u0000\u0000L\u0000\u0000\u0000\u0001\u0000\u0000\apalette\tRGBA[256]\u001DUpp::PNGRaster::Data::palette\u0011RGBA palette[256]\u0003Upp\aPALETTE\u0014Upp::PNGRaster::Data\u0014UPP::PNGRASTER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000M\u0000\u0000\u0000\u0001\u0000\u0000\u0000M\u0000\u0000\u0000\u0015\u0000\u0000\u0000M\u0000\u0000\u0000\u0001\u0000\u0000\aout_bpp\u0003int\u001DUpp::PNGRaster::Data::out_bpp\vint out_bpp\u0003Upp\aOUT_BPP\u0014Upp::PNGRaster::Data\u0014UPP::PNGRASTER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000N\u0000\u0000\u0000\u0001\u0000\u0000\u0000N\u0000\u0000\u0000\u0017\u0000\u0000\u0000N\u0000\u0000\u0000\u0001\u0000\u0000\trow_bytes\u0003int\u001FUpp::PNGRaster::Data::row_bytes\rint row_bytes\u0003Upp\tROW_BYTES\u0014Upp::PNGRaster::Data\u0014UPP::PNGRASTER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000O\u0000\u0000\u0000\u0001\u0000\u0000\u0000O\u0000\u0000\u0000\u0016\u0000\u0000\u0000O\u0000\u0000\u0000\u0001\u0000\u0000\bpreimage\fVector<byte>\u001EUpp::PNGRaster::Data::preimage\u0015Vector<byte> preimage\u0003Upp\bPREIMAGE\u0014Upp::PNGRaster::Data\u0014UPP::PNGRASTER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000P\u0000\u0000\u0000\u0001\u0000\u0000\u0000P\u0000\u0000\u0000\u001F\u0000\u0000\u0000P\u0000\u0000\u0000\u0001\u0000\u0000\frow_pointers\u0011Buffer<png_bytep>\"Upp::PNGRaster::Data::row_pointers\u001EBuffer<png_bytep> row_pointers\u0003Upp\fROW_POINTERS\u0014Upp::PNGRaster::Data\u0014UPP::PNGRASTER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000Q\u0000\u0000\u0000\u0001\u0000\u0000\u0000Q\u0000\u0000\u0000\u0015\u0000\u0000\u0000Q\u0000\u0000\u0000\u0001\u0000\u0000\apreload\u0004bool\u001DUpp::PNGRaster::Data::preload\fbool preload\u0003Upp\aPRELOAD\u0014Upp::PNGRaster::Data\u0014UPP::PNGRASTER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000R\u0000\u0000\u0000\u0001\u0000\u0000\u0000R\u0000\u0000\u0000\u0014\u0000\u0000\u0000R\u0000\u0000\u0000\u0001\u0000\u0000\u0006loaded\u0004bool\u001CUpp::PNGRaster::Data::loaded\vbool loaded\u0003Upp\u0006LOADED\u0014Upp::PNGRaster::Data\u0014UPP::PNGRASTER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000S\u0000\u0000\u0000\u0001\u0000\u0000\u0000S\u0000\u0000\u0000\u0015\u0000\u0000\u0000S\u0000\u0000\u0000\u0001\u0000\u0000\astrip16\u0004bool\u001DUpp::PNGRaster::Data::strip16\fbool strip16\u0003Upp\aSTRIP16\u0014Upp::PNGRaster::Data\u0014UPP::PNGRASTER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000T\u0000\u0000\u0000\u0001\u0000\u0000\u0000T\u0000\u0000\u0000\u0016\u0000\u0000\u0000T\u0000\u0000\u0000\u0001\u0000\u0000\bnext_row\u0003int\u001EUpp::PNGRaster::Data::next_row\fint next_row\u0003Upp\bNEXT_ROW\u0014Upp::PNGRaster::Data\u0014UPP::PNGRASTER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000U\u0000\u0000\u0000\u0001\u0000\u0000\u0000U\u0000\u0000\u0000\u0012\u0000\u0000\u0000U\u0000\u0000\u0000\u0001\u0000\u0000\u0004soff\u0005int64\u001AUpp::PNGRaster::Data::soff\nint64 soff\u0003Upp\u0004SOFF\u0014Upp::PNGRaster::Data\u0014UPP::PNGRASTER::DATA\u0000\u0000\u0018\u0000\u0000\u0000\u0011\u0000\u0000\u0000X\u0000\u0000\u0000\u0000\u0000\u0000\u0000X\u0000\u0000\u0000\u0001\u0000\u0000\u0000\\\u0000\u0000\u0000\u0001\u0000\u0000\u0004Data\avoid ()\u001CUpp::PNGRaster::Data::Data()\u0006Data()\u0003Upp\u0004DATA\u0014Upp::PNGRaster::Data\u0014UPP::PNGRASTER::DATA\u0000\u0000\u0019\u0000\u0000\u0000\u0011\u0000\u0000\u0000^\u0000\u0000\u0000\u0000\u0000\u0000\u0000^\u0000\u0000\u0000\u0001\u0000\u0000\u0000a\u0000\u0000\u0000\u0001\u0000\u0000\u0005~Data\u0010void () noexcept\u0019Upp::PNGRaster::Data::~()\a~Data()\u0003Upp\u0005~DATA\u0014Upp::PNGRaster::Data\u0014UPP::PNGRASTER::DATA\u0000\u0000\u0018\u0000\u0000\u0000\v\u0000\u0000\u0000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000c\u0000\u0000\u0000\u0001\u0000\u0000\u0000e\u0000\u0000\u0000\u0001\u0000\u0000\tPNGRaster\avoid ()\u001BUpp::PNGRaster::PNGRaster()\vPNGRaster()\u0003Upp\tPNGRASTER\u000EUpp::PNGRaster\u000EUPP::PNGRASTER\u0000\u0000\u0019\u0000\u0000\u0000\v\u0000\u0000\u0000g\u0000\u0000\u0000\u0000\u0000\u0000\u0000g\u0000\u0000\u0000\u0001\u0000\u0000\u0000i\u0000\u0000\u0000\u0001\u0000\u0000\n~PNGRaster\u0010void () noexcept\u0013Upp::PNGRaster::~()\f~PNGRaster()\u0003Upp\n~PNGRASTER\u000EUpp::PNGRaster\u000EUPP::PNGRASTER\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000k\u0000\u0000\u0000\u0000\u0000\u0000\u0000k\u0000\u0000\u0000\u0001\u0000\u0000\u0000y\u0000\u0000\u0000\u0001\u0000\u0000\u0004Init\abool ()\u0016Upp::PNGRaster::Init()\vbool Init()\u0003Upp\u0004INIT\u000EUpp::PNGRaster\u000EUPP::PNGRASTER\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000{\u0000\u0000\u0000\u0000\u0000\u0000\u0000{\u0000\u0000\u0000\u0001\u0000\u0000\u0000÷\u0000\u0000\u0000\u0001\u0001\u0000\u0006Create\abool ()\u0018Upp::PNGRaster::Create()\rbool Create()\u0003Upp\u0006CREATE\u000EUpp::PNGRaster\u000EUPP::PNGRASTER\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000ù\u0000\u0000\u0000\u0000\u0000\u0000\u0000ù\u0000\u0000\u0000\u0001\u0000\u0000\u0000ü\u0000\u0000\u0000\u0001\u0001\u0000\aGetSize\aSize ()\u0019Upp::PNGRaster::GetSize()\u000ESize GetSize()\u0003Upp\aGETSIZE\u000EUpp::PNGRaster\u000EUPP::PNGRASTER\u0000\u0000\u0015\u0000\u0000\u0000\u0018\u0000\u0000\u0000þ\u0000\u0000\u0000\u0000\u0000\u0000\u0000þ\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0001\u0000\u0000\u0001\u0001\u0000\aGetInfo\u000FRaster::Info ()\u0019Upp::PNGRaster::GetInfo()\u0016Raster::Info GetInfo()\u0003Upp\aGETINFO\u000EUpp::PNGRaster\u000EUPP::PNGRASTER\u0000\u0000\u0015\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0001\u0000\u0000\u0000+\u0001\u0000\u0000\u0001\u0001\u0000\aGetLine\u0012Raster::Line (int)\u001CUpp::PNGRaster::GetLine(int)\u001ERaster::Line GetLine(int line)\u0003Upp\aGETLINE\u000EUpp::PNGRaster\u000EUPP::PNGRASTER\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000\u0000\u0000-\u0001\u0000\u0000\u0001\u0000\u0000\u00001\u0001\u0000\u0000\u0001\u0001\u0000\nGetPalette\u000Econst RGBA *()\u001CUpp::PNGRaster::GetPalette()\u0018const RGBA *GetPalette()\u0003Upp\nGETPALETTE\u000EUpp::PNGRaster\u000EUPP::PNGRASTER\u0000\u0000\u0015\u0000\u0000\u0000\u001F\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0001\u0000\u0000\u00007\u0001\u0000\u0000\u0001\u0001\u0000\tGetFormat\u0016const RasterFormat *()\u001BUpp::PNGRaster::GetFormat()\u001Fconst RasterFormat *GetFormat()\u0003Upp\tGETFORMAT\u000EUpp::PNGRaster\u000EUPP::PNGRASTER\u0000\u0000\u0004\u0000\u0000\u0000\u0012\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0001\u0000\u0000\u0000V\u0001\u0000\u0000\u0001\u0000\u0000\u0004Data\u0015Upp::PNGEncoder::Data\u0015Upp::PNGEncoder::Data\u0010PNGEncoder::Data\u0003Upp\u0004DATA\u0015Upp::PNGEncoder::Data\u0015UPP::PNGENCODER::DATA\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000;\u0001\u0000\u0000\u0001\u0000\u0000\u0000;\u0001\u0000\u0000\u001B\u0000\u0000\u0000;\u0001\u0000\u0000\u0000\u0000\u0000\u0004Data\u0015void (RasterFormat &)*Upp::PNGEncoder::Data::Data(RasterFormat&)\u001AData(RasterFormat& format)\u0003Upp\u0004DATA\u0015Upp::PNGEncoder::Data\u0015UPP::PNGENCODER::DATA\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000<\u0001\u0000\u0000\u0001\u0000\u0000\u0000<\u0001\u0000\u0000\b\u0000\u0000\u0000<\u0001\u0000\u0000\u0000\u0000\u0000\u0005~Data\u0010void () noexcept\u001AUpp::PNGEncoder::Data::~()\a~Data()\u0003Upp\u0005~DATA\u0015Upp::PNGEncoder::Data\u0015UPP::PNGENCODER::DATA\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000>\u0001\u0000\u0000\u0001\u0000\u0000\u0000>\u0001\u0000\u0000o\u0000\u0000\u0000>\u0001\u0000\u0000\u0000\u0000\u0000\u0005Start?void (Stream &, Size, Size, int, ImageKind, bool, const RGBA *)NUpp::PNGEncoder::Data::Start(Stream&,Size,Size,int,ImageKind,bool,const RGBA*)nvoid Start(Stream& stream, Size size, Size dots, int bpp, ImageKind kind, bool interlace, const RGBA *palette)\u0003Upp\u0005START\u0015Upp::PNGEncoder::Data\u0015UPP::PNGENCODER::DATA\u0000\u0000\u0015\u0000\u0000\u0000\u0006\u0000\u0000\u0000?\u0001\u0000\u0000\u0001\u0000\u0000\u0000?\u0001\u0000\u0000$\u0000\u0000\u0000?\u0001\u0000\u0000\u0000\u0000\u0000\fWriteLineRaw\u0013void (const byte *)0Upp::PNGEncoder::Data::WriteLineRaw(const byte*)#void WriteLineRaw(const byte *data)\u0003Upp\fWRITELINERAW\u0015Upp::PNGEncoder::Data\u0015UPP::PNGENCODER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000B\u0001\u0000\u0000\u0001\u0000\u0000\u0000B\u0001\u0000\u0000\u0015\u0000\u0000\u0000B\u0001\u0000\u0000\u0001\u0000\u0000\u0006format\u000ERasterFormat &\u001DUpp::PNGEncoder::Data::format\u0014RasterFormat& format\u0003Upp\u0006FORMAT\u0015Upp::PNGEncoder::Data\u0015UPP::PNGENCODER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\v\u0000\u0000\u0000D\u0001\u0000\u0000\u0001\u0000\u0000\u0000D\u0001\u0000\u0000\u000F\u0000\u0000\u0000D\u0001\u0000\u0000\u0001\u0000\u0000\u0004kind\tImageKind\u001BUpp::PNGEncoder::Data::kind\u000EImageKind kind\u0003Upp\u0004KIND\u0015Upp::PNGEncoder::Data\u0015UPP::PNGENCODER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000F\u0001\u0000\u0000\u0001\u0000\u0000\u0000F\u0001\u0000\u0000\u0014\u0000\u0000\u0000F\u0001\u0000\u0000\u0001\u0000\u0000\apng_ptr\vpng_structp\u001EUpp::PNGEncoder::Data::png_ptr\u0013png_structp png_ptr\u0003Upp\aPNG_PTR\u0015Upp::PNGEncoder::Data\u0015UPP::PNGENCODER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\v\u0000\u0000\u0000G\u0001\u0000\u0000\u0001\u0000\u0000\u0000G\u0001\u0000\u0000\u0013\u0000\u0000\u0000G\u0001\u0000\u0000\u0001\u0000\u0000\binfo_ptr\tpng_infop\u001FUpp::PNGEncoder::Data::info_ptr\u0012png_infop info_ptr\u0003Upp\bINFO_PTR\u0015Upp::PNGEncoder::Data\u0015UPP::PNGENCODER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\u0006\u0000\u0000\u0000H\u0001\u0000\u0000\u0001\u0000\u0000\u0000H\u0001\u0000\u0000\u000F\u0000\u0000\u0000H\u0001\u0000\u0000\u0001\u0000\u0000\tinterlace\u0004bool Upp::PNGEncoder::Data::interlace\u000Ebool interlace\u0003Upp\tINTERLACE\u0015Upp::PNGEncoder::Data\u0015UPP::PNGENCODER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\u0006\u0000\u0000\u0000I\u0001\u0000\u0000\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0010\u0000\u0000\u0000I\u0001\u0000\u0000\u0001\u0000\u0000\ndo_palette\u0004bool!Upp::PNGEncoder::Data::do_palette\u000Fbool do_palette\u0003Upp\nDO_PALETTE\u0015Upp::PNGEncoder::Data\u0015UPP::PNGENCODER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\u0006\u0000\u0000\u0000J\u0001\u0000\u0000\u0001\u0000\u0000\u0000J\u0001\u0000\u0000\r\u0000\u0000\u0000J\u0001\u0000\u0000\u0001\u0000\u0000\ado_mask\u0004bool\u001EUpp::PNGEncoder::Data::do_mask\fbool do_mask\u0003Upp\aDO_MASK\u0015Upp::PNGEncoder::Data\u0015UPP::PNGENCODER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\u0006\u0000\u0000\u0000K\u0001\u0000\u0000\u0001\u0000\u0000\u0000K\u0001\u0000\u0000\u000E\u0000\u0000\u0000K\u0001\u0000\u0000\u0001\u0000\u0000\bdo_alpha\u0004bool\u001FUpp::PNGEncoder::Data::do_alpha\rbool do_alpha\u0003Upp\bDO_ALPHA\u0015Upp::PNGEncoder::Data\u0015UPP::PNGENCODER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000M\u0001\u0000\u0000\u0001\u0000\u0000\u0000M\u0001\u0000\u0000\u0016\u0000\u0000\u0000M\u0001\u0000\u0000\u0001\u0000\u0000\bimagebuf\fVector<byte>\u001FUpp::PNGEncoder::Data::imagebuf\u0015Vector<byte> imagebuf\u0003Upp\bIMAGEBUF\u0015Upp::PNGEncoder::Data\u0015UPP::PNGENCODER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000N\u0001\u0000\u0000\u0001\u0000\u0000\u0000N\u0001\u0000\u0000\u0014\u0000\u0000\u0000N\u0001\u0000\u0000\u0001\u0000\u0000\u0006rowbuf\fVector<byte>\u001DUpp::PNGEncoder::Data::rowbuf\u0013Vector<byte> rowbuf\u0003Upp\u0006ROWBUF\u0015Upp::PNGEncoder::Data\u0015UPP::PNGENCODER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\u0006\u0000\u0000\u0000O\u0001\u0000\u0000\u0001\u0000\u0000\u0000O\u0001\u0000\u0000\n\u0000\u0000\u0000O\u0001\u0000\u0000\u0001\u0000\u0000\u0004size\u0004Size\u001BUpp::PNGEncoder::Data::size\tSize size\u0003Upp\u0004SIZE\u0015Upp::PNGEncoder::Data\u0015UPP::PNGENCODER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\u0006\u0000\u0000\u0000P\u0001\u0000\u0000\u0001\u0000\u0000\u0000P\u0001\u0000\u0000\n\u0000\u0000\u0000P\u0001\u0000\u0000\u0001\u0000\u0000\u0004dots\u0004Size\u001BUpp::PNGEncoder::Data::dots\tSize dots\u0003Upp\u0004DOTS\u0015Upp::PNGEncoder::Data\u0015UPP::PNGENCODER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\u0005\u0000\u0000\u0000Q\u0001\u0000\u0000\u0001\u0000\u0000\u0000Q\u0001\u0000\u0000\r\u0000\u0000\u0000Q\u0001\u0000\u0000\u0001\u0000\u0000\browbytes\u0003int\u001FUpp::PNGEncoder::Data::rowbytes\fint rowbytes\u0003Upp\bROWBYTES\u0015Upp::PNGEncoder::Data\u0015UPP::PNGENCODER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\u0005\u0000\u0000\u0000R\u0001\u0000\u0000\u0001\u0000\u0000\u0000R\u0001\u0000\u0000\u000E\u0000\u0000\u0000R\u0001\u0000\u0000\u0001\u0000\u0000\tlinebytes\u0003int Upp::PNGEncoder::Data::linebytes\rint linebytes\u0003Upp\tLINEBYTES\u0015Upp::PNGEncoder::Data\u0015UPP::PNGENCODER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\u0005\u0000\u0000\u0000S\u0001\u0000\u0000\u0001\u0000\u0000\u0000S\u0001\u0000\u0000\v\u0000\u0000\u0000S\u0001\u0000\u0000\u0001\u0000\u0000\u0006passes\u0003int\u001DUpp::PNGEncoder::Data::passes\nint passes\u0003Upp\u0006PASSES\u0015Upp::PNGEncoder::Data\u0015UPP::PNGENCODER::DATA\u0000\u0000\u0006\u0000\u0000\u0000\u0005\u0000\u0000\u0000U\u0001\u0000\u0000\u0001\u0000\u0000\u0000U\u0001\u0000\u0000\t\u0000\u0000\u0000U\u0001\u0000\u0000\u0001\u0000\u0000\u0004line\u0003int\u001BUpp::PNGEncoder::Data::line\bint line\u0003Upp\u0004LINE\u0015Upp::PNGEncoder::Data\u0015UPP::PNGENCODER::DATA\u0000\u0000\u0018\u0000\u0000\u0000\u0012\u0000\u0000\u0000X\u0001\u0000\u0000\u0000\u0000\u0000\u0000X\u0001\u0000\u0000\u0001\u0000\u0000\u0000]\u0001\u0000\u0000\u0001\u0000\u0000\u0004Data\u0015void (RasterFormat &)*Upp::PNGEncoder::Data::Data(RasterFormat&)\u001AData(RasterFormat& format)\u0003Upp\u0004DATA\u0015Upp::PNGEncoder::Data\u0015UPP::PNGENCODER::DATA\u0000\u0000\u0019\u0000\u0000\u0000\u0012\u0000\u0000\u0000_\u0001\u0000\u0000\u0000\u0000\u0000\u0000_\u0001\u0000\u0000\u0001\u0000\u0000\u0000b\u0001\u0000\u0000\u0001\u0000\u0000\u0005~Data\u0010void () noexcept\u001AUpp::PNGEncoder::Data::~()\a~Data()\u0003Upp\u0005~DATA\u0015Upp::PNGEncoder::Data\u0015UPP::PNGENCODER::DATA\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000d\u0001\u0000\u0000\u0000\u0000\u0000\u0000d\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ô\u0001\u0000\u0000\u0001\u0000\u0000\u0005Start?void (Stream &, Size, Size, int, ImageKind, bool, const RGBA *)NUpp::PNGEncoder::Data::Start(Stream&,Size,Size,int,ImageKind,bool,const RGBA*)qvoid Start(Stream& stream, Size size_, Size dots_, int bpp, ImageKind kind_, bool interlace_, const RGBA *imgpal)\u0003Upp\u0005START\u0015Upp::PNGEncoder::Data\u0015UPP::PNGENCODER::DATA\u0000\u0000\u0015\u0000\u0000\u0000\u0017\u0000\u0000\u0000Ö\u0001\u0000\u0000\u0000\u0000\u0000\u0000Ö\u0001\u0000\u0000\u0001\u0000\u0000\u0000è\u0001\u0000\u0000\u0001\u0000\u0000\fWriteLineRaw\u0013void (const byte *)0Upp::PNGEncoder::Data::WriteLineRaw(const byte*) void WriteLineRaw(const byte *s)\u0003Upp\fWRITELINERAW\u0015Upp::PNGEncoder::Data\u0015UPP::PNGENCODER::DATA\u0000\u0000\u0018\u0000\u0000\u0000\f\u0000\u0000\u0000ê\u0001\u0000\u0000\u0000\u0000\u0000\u0000ê\u0001\u0000\u0000\u0001\u0000\u0000\u0000í\u0001\u0000\u0000\u0001\u0000\u0000\nPNGEncoder\u001Bvoid (int, ImageKind, bool)/Upp::PNGEncoder::PNGEncoder(int,ImageKind,bool)SPNGEncoder(int bpp_ = 32, ImageKind kind_ = IMAGE_UNKNOWN, bool interlace_ = false)\u0003Upp\nPNGENCODER\u000FUpp::PNGEncoder\u000FUPP::PNGENCODER\u0000\u0000\u0019\u0000\u0000\u0000\f\u0000\u0000\u0000ï\u0001\u0000\u0000\u0000\u0000\u0000\u0000ï\u0001\u0000\u0000\u0001\u0000\u0000\u0000ñ\u0001\u0000\u0000\u0001\u0000\u0000\v~PNGEncoder\u0010void () noexcept\u0014Upp::PNGEncoder::~()\r~PNGEncoder()\u0003Upp\v~PNGENCODER\u000FUpp::PNGEncoder\u000FUPP::PNGENCODER\u0000\u0000\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000ó\u0001\u0000\u0000\u0000\u0000\u0000\u0000ó\u0001\u0000\u0000\u0001\u0000\u0000\u0000ö\u0001\u0000\u0000\u0001\u0001\u0000\u000FGetPaletteCount\u0006int ()\"Upp::PNGEncoder::GetPaletteCount()\u0015int GetPaletteCount()\u0003Upp\u000FGETPALETTECOUNT\u000FUpp::PNGEncoder\u000FUPP::PNGENCODER\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000ø\u0001\u0000\u0000\u0000\u0000\u0000\u0000ø\u0001\u0000\u0000\u0001\u0000\u0000\u0000ü\u0001\u0000\u0000\u0001\u0001\u0000\u0005Start\vvoid (Size)\u001CUpp::PNGEncoder::Start(Size)\u0013void Start(Size sz)\u0003Upp\u0005START\u000FUpp::PNGEncoder\u000FUPP::PNGENCODER\u0000\u0000\u0015\u0000\u0000\u0000\u0011\u0000\u0000\u0000þ\u0001\u0000\u0000\u0000\u0000\u0000\u0000þ\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0002\u0000\u0000\u0001\u0001\u0000\fWriteLineRaw\u0013void (const byte *)*Upp::PNGEncoder::WriteLineRaw(const byte*) void WriteLineRaw(const byte *s)\u0003Upp\fWRITELINERAW\u000FUpp::PNGEncoder\u000FUPP::PNGENCODER\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0005\u0002\u0000\u0000\u0001\u0000\u0000\u0019PNGRaster__initializer_fn\avoid () Upp::PNGRaster__initializer_fn() void PNGRaster__initializer_fn()\u0003Upp\u0019PNGRASTER__INITIALIZER_FN\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0002\u0000\u0000\u0016\u0000\u0000\u0000\u0003\u0002\u0000\u0000\u0001\u0000\u0000\u0016PNGRaster__initializer\avoid ()\u001DUpp::PNGRaster__initializer()\u001Dvoid PNGRaster__initializer()\u0003Upp\u0016PNGRASTER__INITIALIZER\u0003Upp\u0003UPP\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0002\u0000\u0000\u0016\u0000\u0000\u0000\u0003\u0002\u0000\u0000\u0000\u0000\u0000\u0019PNGRaster__initializer_fn\avoid () Upp::PNGRaster__initializer_fn() void PNGRaster__initializer_fn()\u0003Upp\u0019PNGRASTER__INITIALIZER_FN\u0003Upp\u0003UPP\u0000\u0000end\u0000Þ-\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\pngreg.icpp","value":"data\u0001end\u0000\t\u0000\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\png.c","value":"dataf\u0014\u0000\u0000\u0000\"\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000B\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000 Your_png_h_is_not_version_1_6_43 Your_png_h_is_not_version_1_6_43 Your_png_h_is_not_version_1_6_43,typedef int Your_png_h_is_not_version_1_6_43\u0000 YOUR_PNG_H_IS_NOT_VERSION_1_6_43\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000*\u0000\u0000\u0000\u0001\u0000\u0000\u0011png_set_sig_bytes\u000Fvoid (int, int)\u001Apng_set_sig_bytes(int,int)2void png_set_sig_bytes(int png_ptr, int num_bytes)\u0000\u0011PNG_SET_SIG_BYTES\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00005\u0000\u0000\u0000\u0000\u0000\u0000\u00004\u0000\u0000\u0000\u0001\u0000\u0000\u0000F\u0000\u0000\u0000\u0001\u0000\u0000\vpng_sig_cmp%int (png_const_bytep, size_t, size_t)*png_sig_cmp(png_const_bytep,size_t,size_t)Gint png_sig_cmp(png_const_bytep sig, size_t start, size_t num_to_check)\u0000\vPNG_SIG_CMP\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000a\u0000\u0000\u0000\u0000\u0000\u0000\u0000`\u0000\u0000\u0000\u0001\u0000\u0000\u0000d\u0000\u0000\u0000\u0001\u0000\u0000\tpng_zfree\u0015void (voidpf, voidpf)\u0018png_zfree(voidpf,voidpf)*void png_zfree(voidpf png_ptr, voidpf ptr)\u0000\tPNG_ZFREE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000j\u0000\u0000\u0000\u0000\u0000\u0000\u0000i\u0000\u0000\u0000\u0001\u0000\u0000\u0000n\u0000\u0000\u0000\u0001\u0000\u0000\rpng_reset_crc\nvoid (int)\u0012png_reset_crc(int)\u001Fvoid png_reset_crc(int png_ptr)\u0000\rPNG_RESET_CRC\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000v\u0000\u0000\u0000\u0000\u0000\u0000\u0000u\u0000\u0000\u0000\u0001\u0000\u0000\u0000¦\u0000\u0000\u0000\u0001\u0000\u0000\u0011png_calculate_crc#void (int, png_const_bytep, size_t)-png_calculate_crc(int,png_const_bytep,size_t)Gvoid png_calculate_crc(int png_ptr, png_const_bytep ptr, size_t length)\u0000\u0011PNG_CALCULATE_CRC\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¬\u0000\u0000\u0000\u0000\u0000\u0000\u0000«\u0000\u0000\u0000\u0001\u0000\u0000\u0000ß\u0000\u0000\u0000\u0001\u0000\u0000\u0016png_user_version_check\u001Aint (int, png_const_charp)+png_user_version_check(int,png_const_charp)Eint png_user_version_check(int png_ptr, png_const_charp user_png_ver)\u0000\u0016PNG_USER_VERSION_CHECK\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ä\u0000\u0000\u0000\u0000\u0000\u0000\u0000ä\u0000\u0000\u0000\u0001\u0000\u0000\u0000I\u0001\u0000\u0000\u0001\u0000\u0000\u0015png_create_png_struct?int (png_const_charp, png_voidp, int, int, png_voidp, int, int)Jpng_create_png_struct(png_const_charp,png_voidp,int,int,png_voidp,int,int)ÿ\u0000\u0000\u0000int png_create_png_struct(png_const_charp user_png_ver, png_voidp error_ptr, int error_fn, int warn_fn, png_voidp mem_ptr, int malloc_fn, int free_fn)\u0000\u0015PNG_CREATE_PNG_STRUCT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000L\u0001\u0000\u0000\u0000\u0000\u0000\u0000L\u0001\u0000\u0000\u0001\u0000\u0000\u0000b\u0001\u0000\u0000\u0001\u0000\u0000\u0016png_create_info_struct\tint (int)\u001Bpng_create_info_struct(int)'int png_create_info_struct(int png_ptr)\u0000\u0016PNG_CREATE_INFO_STRUCT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000m\u0001\u0000\u0000\u0000\u0000\u0000\u0000l\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0017png_destroy_info_struct\u000Fvoid (int, int) png_destroy_info_struct(int,int);void png_destroy_info_struct(int png_ptr, int info_ptr_ptr)\u0000\u0017PNG_DESTROY_INFO_STRUCT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000«\u0001\u0000\u0000\u0001\u0000\u0000\u000Fpng_info_init_3\u0012void (int, size_t)\u001Bpng_info_init_3(int,size_t)>void png_info_init_3(int ptr_ptr, size_t png_info_struct_size)\u0000\u000FPNG_INFO_INIT_3\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000®\u0001\u0000\u0000\u0000\u0000\u0000\u0000­\u0001\u0000\u0000\u0001\u0000\u0000\u0000¾\u0001\u0000\u0000\u0001\u0000\u0000\u000Epng_data_freer!void (int, int, int, png_uint_32)'png_data_freer(int,int,int,png_uint_32)Kvoid png_data_freer(int png_ptr, int info_ptr, int freer, png_uint_32 mask)\u0000\u000EPNG_DATA_FREER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Á\u0001\u0000\u0000\u0000\u0000\u0000\u0000À\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\rpng_free_data!void (int, int, png_uint_32, int)&png_free_data(int,int,png_uint_32,int)Hvoid png_free_data(int png_ptr, int info_ptr, png_uint_32 mask, int num)\u0000\rPNG_FREE_DATA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\u000Epng_get_io_ptr\u000Fpng_voidp (int)\u0013png_get_io_ptr(int)%png_voidp png_get_io_ptr(int png_ptr)\u0000\u000EPNG_GET_IO_PTR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000©\u0002\u0000\u0000\u0000\u0000\u0000\u0000¨\u0002\u0000\u0000\u0001\u0000\u0000\u0000±\u0002\u0000\u0000\u0001\u0000\u0000\vpng_init_io\u0016void (int, png_FILE_p)\u001Bpng_init_io(int,png_FILE_p),void png_init_io(int png_ptr, png_FILE_p fp)\u0000\vPNG_INIT_IO\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000À\u0002\u0000\u0000\u0000\u0000\u0000\u0000¿\u0002\u0000\u0000\u0001\u0000\u0000\u0000Ã\u0002\u0000\u0000\u0001\u0000\u0000\u000Fpng_save_int_32\u001Cvoid (png_bytep, png_int_32)%png_save_int_32(png_bytep,png_int_32)1void png_save_int_32(png_bytep buf, png_int_32 i)\u0000\u000FPNG_SAVE_INT_32\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ë\u0002\u0000\u0000\u0000\u0000\u0000\u0000Ê\u0002\u0000\u0000\u0001\u0000\u0000\u0000ø\u0002\u0000\u0000\u0001\u0000\u0000\u001Dpng_convert_to_rfc1123_buffer\u0011int (char *, int)+png_convert_to_rfc1123_buffer(char[29],int):int png_convert_to_rfc1123_buffer(char out[29], int ptime)\u0000\u001DPNG_CONVERT_TO_RFC1123_BUFFER\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\r\u0000\u0000\u0000ß\u0002\u0000\u0000\r\u0000\u0000\u0000ß\u0002\u0000\u0000L\u0000\u0000\u0000ß\u0002\u0000\u0000\u0000\u0000\u0000\rAPPEND_STRING\u0000\rAPPEND_STRING\rAPPEND_STRING\u0000\rAPPEND_STRING\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\r\u0000\u0000\u0000à\u0002\u0000\u0000\r\u0000\u0000\u0000à\u0002\u0000\u0000F\u0000\u0000\u0000á\u0002\u0000\u0000\u0000\u0000\u0000\rAPPEND_NUMBER\u0000\rAPPEND_NUMBER\rAPPEND_NUMBER\u0000\rAPPEND_NUMBER\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\r\u0000\u0000\u0000â\u0002\u0000\u0000\r\u0000\u0000\u0000â\u0002\u0000\u00007\u0000\u0000\u0000â\u0002\u0000\u0000\u0000\u0000\u0000\u0006APPEND\u0000\u0006APPEND\u0006APPEND\u0000\u0006APPEND\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0001\u0000\u0000\u0000\u000E\u0003\u0000\u0000\u0001\u0000\u0000\u0016png_convert_to_rfc1123\u001Apng_const_charp (int, int)\u001Fpng_convert_to_rfc1123(int,int)>png_const_charp png_convert_to_rfc1123(int png_ptr, int ptime)\u0000\u0016PNG_CONVERT_TO_RFC1123\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0015\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0003\u0000\u0000\u0001\u0000\u0000\u0000$\u0003\u0000\u0000\u0001\u0000\u0000\u0011png_get_copyright\u0015png_const_charp (int)\u0016png_get_copyright(int).png_const_charp png_get_copyright(int png_ptr)\u0000\u0011PNG_GET_COPYRIGHT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000/\u0003\u0000\u0000\u0000\u0000\u0000\u0000.\u0003\u0000\u0000\u0001\u0000\u0000\u00003\u0003\u0000\u0000\u0001\u0000\u0000\u0012png_get_libpng_ver\u0015png_const_charp (int)\u0017png_get_libpng_ver(int)/png_const_charp png_get_libpng_ver(int png_ptr)\u0000\u0012PNG_GET_LIBPNG_VER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00006\u0003\u0000\u0000\u0000\u0000\u0000\u00005\u0003\u0000\u0000\u0001\u0000\u0000\u0000;\u0003\u0000\u0000\u0001\u0000\u0000\u0012png_get_header_ver\u0015png_const_charp (int)\u0017png_get_header_ver(int)/png_const_charp png_get_header_ver(int png_ptr)\u0000\u0012PNG_GET_HEADER_VER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000>\u0003\u0000\u0000\u0000\u0000\u0000\u0000=\u0003\u0000\u0000\u0001\u0000\u0000\u0000K\u0003\u0000\u0000\u0001\u0000\u0000\u0016png_get_header_version\u0015png_const_charp (int)\u001Bpng_get_header_version(int)3png_const_charp png_get_header_version(int png_ptr)\u0000\u0016PNG_GET_HEADER_VERSION\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000U\u0003\u0000\u0000\u0000\u0000\u0000\u0000T\u0003\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0001\u0000\u0000\u001Bpng_build_grayscale_palette\u000Fvoid (int, int)$png_build_grayscale_palette(int,int)<void png_build_grayscale_palette(int bit_depth, int palette)\u0000\u001BPNG_BUILD_GRAYSCALE_PALETTE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0001\u0000\u0000\u0000¦\u0003\u0000\u0000\u0001\u0000\u0000\u0015png_handle_as_unknown\u001Aint (int, png_const_bytep)*png_handle_as_unknown(int,png_const_bytep)Bint png_handle_as_unknown(int png_ptr, png_const_bytep chunk_name)\u0000\u0015PNG_HANDLE_AS_UNKNOWN\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000«\u0003\u0000\u0000\u0000\u0000\u0000\u0000ª\u0003\u0000\u0000\u0001\u0000\u0000\u0000±\u0003\u0000\u0000\u0001\u0000\u0000\u001Apng_chunk_unknown_handling\u0016int (int, png_uint_32)+png_chunk_unknown_handling(int,png_uint_32)Cint png_chunk_unknown_handling(int png_ptr, png_uint_32 chunk_name)\u0000\u001APNG_CHUNK_UNKNOWN_HANDLING\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¸\u0003\u0000\u0000\u0000\u0000\u0000\u0000·\u0003\u0000\u0000\u0001\u0000\u0000\u0000¿\u0003\u0000\u0000\u0001\u0000\u0000\u0011png_reset_zstream\tint (int)\u0016png_reset_zstream(int)\"int png_reset_zstream(int png_ptr)\u0000\u0011PNG_RESET_ZSTREAM\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ä\u0003\u0000\u0000\u0000\u0000\u0000\u0000Ã\u0003\u0000\u0000\u0001\u0000\u0000\u0000È\u0003\u0000\u0000\u0001\u0000\u0000\u0019png_access_version_number\u0012png_uint_32 (void)\u001Fpng_access_version_number(void)+png_uint_32 png_access_version_number(void)\u0000\u0019PNG_ACCESS_VERSION_NUMBER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ð\u0003\u0000\u0000\u0000\u0000\u0000\u0000Ï\u0003\u0000\u0000\u0001\u0000\u0000\u0000\u000F\u0004\u0000\u0000\u0001\u0000\u0000\u0011png_zstream_error\u000Fvoid (int, int)\u001Apng_zstream_error(int,int),void png_zstream_error(int png_ptr, int ret)\u0000\u0011PNG_ZSTREAM_ERROR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0004\u0000\u0000\u0001\u0000\u0000\u0000A\u0004\u0000\u0000\u0001\u0000\u0001\u001Apng_colorspace_check_gamma1int (int, png_colorspacerp, png_fixed_point, int)Dpng_colorspace_check_gamma(int,png_colorspacerp,png_fixed_point,int)ostatic int png_colorspace_check_gamma(int png_ptr, png_colorspacerp colorspace, png_fixed_point gAMA, int from)\u0000\u001APNG_COLORSPACE_CHECK_GAMMA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000D\u0004\u0000\u0000\u0000\u0000\u0000\u0000C\u0004\u0000\u0000\u0001\u0000\u0000\u0000x\u0004\u0000\u0000\u0001\u0000\u0000\u0018png_colorspace_set_gamma-void (int, png_colorspacerp, png_fixed_point)>png_colorspace_set_gamma(int,png_colorspacerp,png_fixed_point)]void png_colorspace_set_gamma(int png_ptr, png_colorspacerp colorspace, png_fixed_point gAMA)\u0000\u0018PNG_COLORSPACE_SET_GAMMA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000{\u0004\u0000\u0000\u0000\u0000\u0000\u0000z\u0004\u0000\u0000\u0001\u0000\u0000\u0000¥\u0004\u0000\u0000\u0001\u0000\u0000\u0018png_colorspace_sync_info\u000Fvoid (int, int)!png_colorspace_sync_info(int,int)8void png_colorspace_sync_info(int png_ptr, int info_ptr)\u0000\u0018PNG_COLORSPACE_SYNC_INFO\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000©\u0004\u0000\u0000\u0000\u0000\u0000\u0000¨\u0004\u0000\u0000\u0001\u0000\u0000\u0000°\u0004\u0000\u0000\u0001\u0000\u0000\u0013png_colorspace_sync\u000Fvoid (int, int)\u001Cpng_colorspace_sync(int,int)3void png_colorspace_sync(int png_ptr, int info_ptr)\u0000\u0013PNG_COLORSPACE_SYNC\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000»\u0004\u0000\u0000\u0000\u0000\u0000\u0000º\u0004\u0000\u0000\u0001\u0000\u0000\u0000ã\u0004\u0000\u0000\u0001\u0000\u0001\u000Fpng_xy_from_XYZ\u001Fint (png_xy *, const png_XYZ *)'png_xy_from_XYZ(png_xy*,const png_XYZ*):static int png_xy_from_XYZ(png_xy *xy, const png_XYZ *XYZ)\u0000\u000FPNG_XY_FROM_XYZ\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000æ\u0004\u0000\u0000\u0000\u0000\u0000\u0000å\u0004\u0000\u0000\u0001\u0000\u0000\u0000í\u0005\u0000\u0000\u0001\u0000\u0001\u000Fpng_XYZ_from_xy\u001Fint (png_XYZ *, const png_xy *)'png_XYZ_from_xy(png_XYZ*,const png_xy*):static int png_XYZ_from_xy(png_XYZ *XYZ, const png_xy *xy)\u0000\u000FPNG_XYZ_FROM_XY\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ð\u0005\u0000\u0000\u0000\u0000\u0000\u0000ï\u0005\u0000\u0000\u0001\u0000\u0000\u0000\u001F\u0006\u0000\u0000\u0001\u0000\u0001\u0011png_XYZ_normalize\u000Fint (png_XYZ *)\u001Bpng_XYZ_normalize(png_XYZ*)*static int png_XYZ_normalize(png_XYZ *XYZ)\u0000\u0011PNG_XYZ_NORMALIZE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\"\u0006\u0000\u0000\u0000\u0000\u0000\u0000!\u0006\u0000\u0000\u0001\u0000\u0000\u0000/\u0006\u0000\u0000\u0001\u0000\u0001\u001Epng_colorspace_endpoints_match)int (const png_xy *, const png_xy *, int)?png_colorspace_endpoints_match(const png_xy*,const png_xy*,int)Zstatic int png_colorspace_endpoints_match(const png_xy *xy1, const png_xy *xy2, int delta)\u0000\u001EPNG_COLORSPACE_ENDPOINTS_MATCH\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000<\u0006\u0000\u0000\u0000\u0000\u0000\u0000;\u0006\u0000\u0000\u0001\u0000\u0000\u0000P\u0006\u0000\u0000\u0001\u0000\u0001\u0017png_colorspace_check_xy\u001Fint (png_XYZ *, const png_xy *)/png_colorspace_check_xy(png_XYZ*,const png_xy*)Bstatic int png_colorspace_check_xy(png_XYZ *XYZ, const png_xy *xy)\u0000\u0017PNG_COLORSPACE_CHECK_XY\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000V\u0006\u0000\u0000\u0000\u0000\u0000\u0000U\u0006\u0000\u0000\u0001\u0000\u0000\u0000e\u0006\u0000\u0000\u0001\u0000\u0001\u0018png_colorspace_check_XYZ\u0019int (png_xy *, png_XYZ *)*png_colorspace_check_XYZ(png_xy*,png_XYZ*)=static int png_colorspace_check_XYZ(png_xy *xy, png_XYZ *XYZ)\u0000\u0018PNG_COLORSPACE_CHECK_XYZ\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0014\u0000\u0000\u0000h\u0006\u0000\u0000\u0000\u0000\u0000\u0000h\u0006\u0000\u0000\u0001\u0000\u0000\u0000o\u0006\u0000\u0000\u0001\u0000\u0001\asRGB_xy\fconst png_xy\asRGB_xy\u001Bstatic const png_xy sRGB_xy\u0000\aSRGB_XY\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000r\u0006\u0000\u0000\u0000\u0000\u0000\u0000q\u0006\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0001\u0000\u0001\u001Dpng_colorspace_set_xy_and_XYZAint (int, png_colorspacerp, const png_xy *, const png_XYZ *, int)Tpng_colorspace_set_xy_and_XYZ(int,png_colorspacerp,const png_xy*,const png_XYZ*,int)ÿ\u0000\u0000\u0000static int png_colorspace_set_xy_and_XYZ(int png_ptr, png_colorspacerp colorspace, const png_xy *xy, const png_XYZ *XYZ, int preferred)\u0000\u001DPNG_COLORSPACE_SET_XY_AND_XYZ\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¢\u0006\u0000\u0000\u0000\u0000\u0000\u0000¡\u0006\u0000\u0000\u0001\u0000\u0000\u0000Ä\u0006\u0000\u0000\u0001\u0000\u0000!png_colorspace_set_chromaticities0int (int, png_colorspacerp, const png_xy *, int)Ipng_colorspace_set_chromaticities(int,png_colorspacerp,const png_xy*,int)pint png_colorspace_set_chromaticities(int png_ptr, png_colorspacerp colorspace, const png_xy *xy, int preferred)\u0000!PNG_COLORSPACE_SET_CHROMATICITIES\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ç\u0006\u0000\u0000\u0000\u0000\u0000\u0000Æ\u0006\u0000\u0000\u0001\u0000\u0000\u0000ß\u0006\u0000\u0000\u0001\u0000\u0000\u001Cpng_colorspace_set_endpoints1int (int, png_colorspacerp, const png_XYZ *, int)Epng_colorspace_set_endpoints(int,png_colorspacerp,const png_XYZ*,int)pint png_colorspace_set_endpoints(int png_ptr, png_colorspacerp colorspace, const png_XYZ *XYZ_in, int preferred)\u0000\u001CPNG_COLORSPACE_SET_ENDPOINTS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ä\u0006\u0000\u0000\u0000\u0000\u0000\u0000ã\u0006\u0000\u0000\u0001\u0000\u0000\u0000ë\u0006\u0000\u0000\u0001\u0000\u0001\u0010png_icc_tag_char\u0012char (png_uint_32)\u001Dpng_icc_tag_char(png_uint_32).static char png_icc_tag_char(png_uint_32 byte)\u0000\u0010PNG_ICC_TAG_CHAR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000î\u0006\u0000\u0000\u0000\u0000\u0000\u0000í\u0006\u0000\u0000\u0001\u0000\u0000\u0000ö\u0006\u0000\u0000\u0001\u0000\u0001\u0010png_icc_tag_name\u001Avoid (char *, png_uint_32)#png_icc_tag_name(char*,png_uint_32)9static void png_icc_tag_name(char *name, png_uint_32 tag)\u0000\u0010PNG_ICC_TAG_NAME\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ù\u0006\u0000\u0000\u0000\u0000\u0000\u0000ø\u0006\u0000\u0000\u0001\u0000\u0000\u0000ý\u0006\u0000\u0000\u0001\u0000\u0001\u0015is_ICC_signature_char\u0016int (png_alloc_size_t)'is_ICC_signature_char(png_alloc_size_t)5static int is_ICC_signature_char(png_alloc_size_t it)\u0000\u0015IS_ICC_SIGNATURE_CHAR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000ÿ\u0006\u0000\u0000\u0001\u0000\u0000\u0000\u0006\a\u0000\u0000\u0001\u0000\u0001\u0010is_ICC_signature\u0016int (png_alloc_size_t)\"is_ICC_signature(png_alloc_size_t)0static int is_ICC_signature(png_alloc_size_t it)\u0000\u0010IS_ICC_SIGNATURE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\t\a\u0000\u0000\u0000\u0000\u0000\u0000\b\a\u0000\u0000\u0001\u0000\u0000\u00005\a\u0000\u0000\u0001\u0000\u0001\u0015png_icc_profile_errorOint (int, png_colorspacerp, png_const_charp, png_alloc_size_t, png_const_charp)\\png_icc_profile_error(int,png_colorspacerp,png_const_charp,png_alloc_size_t,png_const_charp)ÿ\u0000\u0000\u0000static int png_icc_profile_error(int png_ptr, png_colorspacerp colorspace, png_const_charp name, png_alloc_size_t value, png_const_charp reason)\u0000\u0015PNG_ICC_PROFILE_ERROR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000:\a\u0000\u0000\u0000\u0000\u0000\u00009\a\u0000\u0000\u0001\u0000\u0000\u0000\a\u0000\u0000\u0001\u0000\u0000\u0017png_colorspace_set_sRGB int (int, png_colorspacerp, int)1png_colorspace_set_sRGB(int,png_colorspacerp,int)Qint png_colorspace_set_sRGB(int png_ptr, png_colorspacerp colorspace, int intent)\u0000\u0017PNG_COLORSPACE_SET_SRGB\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0016\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000M\u0000\u0000\u0000\a\u0000\u0000\u0001\u0000\u0001\vD50_nCIEXYZ\u0012const png_byte[12]\vD50_nCIEXYZ%static const png_byte D50_nCIEXYZ[12]\u0000\vD50_NCIEXYZ\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0001\u0000\u0000\u0000£\a\u0000\u0000\u0001\u0000\u0001\u0010icc_check_length9int (int, png_colorspacerp, png_const_charp, png_uint_32)Bicc_check_length(int,png_colorspacerp,png_const_charp,png_uint_32)wstatic int icc_check_length(int png_ptr, png_colorspacerp colorspace, png_const_charp name, png_uint_32 profile_length)\u0000\u0010ICC_CHECK_LENGTH\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000§\a\u0000\u0000\u0000\u0000\u0000\u0000¦\a\u0000\u0000\u0001\u0000\u0000\u0000Ä\a\u0000\u0000\u0001\u0000\u0000\u0014png_icc_check_length9int (int, png_colorspacerp, png_const_charp, png_uint_32)Fpng_icc_check_length(int,png_colorspacerp,png_const_charp,png_uint_32)tint png_icc_check_length(int png_ptr, png_colorspacerp colorspace, png_const_charp name, png_uint_32 profile_length)\u0000\u0014PNG_ICC_CHECK_LENGTH\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000È\a\u0000\u0000\u0000\u0000\u0000\u0000Ç\a\u0000\u0000\u0001\u0000\u0000\u0000|\b\u0000\u0000\u0001\u0000\u0000\u0014png_icc_check_headerOint (int, png_colorspacerp, png_const_charp, png_uint_32, png_const_bytep, int)Zpng_icc_check_header(int,png_colorspacerp,png_const_charp,png_uint_32,png_const_bytep,int)ÿ\u0000\u0000\u0000int png_icc_check_header(int png_ptr, png_colorspacerp colorspace, png_const_charp name, png_uint_32 profile_length, png_const_bytep profile, int color_type)\u0000\u0014PNG_ICC_CHECK_HEADER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u007F\b\u0000\u0000\u0000\u0000\u0000\u0000~\b\u0000\u0000\u0001\u0000\u0000\u0000ª\b\u0000\u0000\u0001\u0000\u0000\u0017png_icc_check_tag_tableJint (int, png_colorspacerp, png_const_charp, png_uint_32, png_const_bytep)Ypng_icc_check_tag_table(int,png_colorspacerp,png_const_charp,png_uint_32,png_const_bytep)ÿ\u0000\u0000\u0000int png_icc_check_tag_table(int png_ptr, png_colorspacerp colorspace, png_const_charp name, png_uint_32 profile_length, png_const_bytep profile)\u0000\u0017PNG_ICC_CHECK_TAG_TABLE\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\r\u0000\u0000\u0000¯\b\u0000\u0000\r\u0000\u0000\u0000¯\b\u0000\u0000\u0001\u0000\u0000\u0000»\b\u0000\u0000\u0001\u0000\u0000Lstruct (unnamed at C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\png.c:2224:14)Lstruct (unnamed at C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\png.c:2224:14)<(unnamed at C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\png.)\u0000\u0000LSTRUCT (UNNAMED AT C:\\USERS\\SBLO\\AI-UPP\\UPPSRC\\PLUGIN\\PNG\\LIB\\PNG.C:2224:14)Lstruct (unnamed at C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\png.c:2224:14)LSTRUCT (UNNAMED AT C:\\USERS\\SBLO\\AI-UPP\\UPPSRC\\PLUGIN\\PNG\\LIB\\PNG.C:2224:14)\u0000\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000±\b\u0000\u0000\u0003\u0000\u0000\u0000±\b\u0000\u0000\u0014\u0000\u0000\u0000±\b\u0000\u0000\u0001\u0000\u0000\u0005adler\vpng_uint_32\a::adler\u0011png_uint_32 adler\u0000\u0005ADLER\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0016\u0000\u0000\u0000±\b\u0000\u0000\u0003\u0000\u0000\u0000±\b\u0000\u0000\u0019\u0000\u0000\u0000±\b\u0000\u0000\u0001\u0000\u0000\u0003crc\vpng_uint_32\u0005::crc\u000Fpng_uint_32 crc\u0000\u0003CRC\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u001B\u0000\u0000\u0000±\b\u0000\u0000\u0003\u0000\u0000\u0000±\b\u0000\u0000!\u0000\u0000\u0000±\b\u0000\u0000\u0001\u0000\u0000\u0006length\vpng_uint_32\b::length\u0012png_uint_32 length\u0000\u0006LENGTH\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000²\b\u0000\u0000\u0003\u0000\u0000\u0000²\b\u0000\u0000\u0015\u0000\u0000\u0000²\b\u0000\u0000\u0001\u0000\u0000\u0003md5\u000Epng_uint_32[4]\u0005::md5\u0012png_uint_32 md5[4]\u0000\u0003MD5\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000³\b\u0000\u0000\u0003\u0000\u0000\u0000³\b\u0000\u0000\u0017\u0000\u0000\u0000³\b\u0000\u0000\u0001\u0000\u0000\bhave_md5\bpng_byte\n::have_md5\u0011png_byte have_md5\u0000\bHAVE_MD5\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000´\b\u0000\u0000\u0003\u0000\u0000\u0000´\b\u0000\u0000\u0018\u0000\u0000\u0000´\b\u0000\u0000\u0001\u0000\u0000\tis_broken\bpng_byte\v::is_broken\u0012png_byte is_broken\u0000\tIS_BROKEN\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u000F\u0000\u0000\u0000µ\b\u0000\u0000\u0003\u0000\u0000\u0000µ\b\u0000\u0000\u0015\u0000\u0000\u0000µ\b\u0000\u0000\u0001\u0000\u0000\u0006intent\vpng_uint_16\b::intent\u0012png_uint_16 intent\u0000\u0006INTENT\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000·\b\u0000\u0000\n\u0000\u0000\u0000·\b\u0000\u0000I\u0000\u0000\u0000·\b\u0000\u0000\u0000\u0000\u0000\aPNG_MD5\u0000\aPNG_MD5\aPNG_MD5\u0000\aPNG_MD5\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000¸\b\u0000\u0000\n\u0000\u0000\u0000¸\b\u0000\u00001\u0000\u0000\u0000¹\b\u0000\u0000\u0000\u0000\u0000\u0010PNG_ICC_CHECKSUM\u0000\u0010PNG_ICC_CHECKSUM\u0010PNG_ICC_CHECKSUM\u0000\u0010PNG_ICC_CHECKSUM\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0002\u0000\u0000\u0000»\b\u0000\u0000\u0000\u0000\u0000\u0000¯\b\u0000\u0000\u0001\u0000\u0000\u0000ê\b\u0000\u0000\u0001\u0000\u0001\u000Fpng_sRGB_checks\\const struct (unnamed struct at C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\png.c:2224:14)[7]\u000Fpng_sRGB_checks\u001Estatic const png_sRGB_checks[]\u0000\u000FPNG_SRGB_CHECKS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000í\b\u0000\u0000\u0000\u0000\u0000\u0000ì\b\u0000\u0000\u0001\u0000\u0000\u0000c\t\u0000\u0000\u0001\u0000\u0001!png_compare_ICC_profile_with_sRGB!int (int, png_const_bytep, uLong)<png_compare_ICC_profile_with_sRGB(int,png_const_bytep,uLong)_static int png_compare_ICC_profile_with_sRGB(int png_ptr, png_const_bytep profile, uLong adler)\u0000!PNG_COMPARE_ICC_PROFILE_WITH_SRGB\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000f\t\u0000\u0000\u0000\u0000\u0000\u0000e\t\u0000\u0000\u0001\u0000\u0000\u0000o\t\u0000\u0000\u0001\u0000\u0000\u0010png_icc_set_sRGB4void (int, png_colorspacerp, png_const_bytep, uLong)<png_icc_set_sRGB(int,png_colorspacerp,png_const_bytep,uLong)evoid png_icc_set_sRGB(int png_ptr, png_colorspacerp colorspace, png_const_bytep profile, uLong adler)\u0000\u0010PNG_ICC_SET_SRGB\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\t\u0000\u0000\u0000\u0000\u0000\u0000s\t\u0000\u0000\u0001\u0000\u0000\u0000\t\u0000\u0000\u0001\u0000\u0000\u0016png_colorspace_set_ICCOint (int, png_colorspacerp, png_const_charp, png_uint_32, png_const_bytep, int)\\png_colorspace_set_ICC(int,png_colorspacerp,png_const_charp,png_uint_32,png_const_bytep,int)ÿ\u0000\u0000\u0000int png_colorspace_set_ICC(int png_ptr, png_colorspacerp colorspace, png_const_charp name, png_uint_32 profile_length, png_const_bytep profile, int color_type)\u0000\u0016PNG_COLORSPACE_SET_ICC\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0001\u0000\u0000\u0000Ì\t\u0000\u0000\u0001\u0000\u0000#png_colorspace_set_rgb_coefficients\nvoid (int)(png_colorspace_set_rgb_coefficients(int)5void png_colorspace_set_rgb_coefficients(int png_ptr)\u0000#PNG_COLORSPACE_SET_RGB_COEFFICIENTS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ò\t\u0000\u0000\u0000\u0000\u0000\u0000Ñ\t\u0000\u0000\u0001\u0000\u0000\u0000s\n\u0000\u0000\u0001\u0000\u0000\u000Epng_check_IHDR=void (int, png_uint_32, png_uint_32, int, int, int, int, int)?png_check_IHDR(int,png_uint_32,png_uint_32,int,int,int,int,int)ÿ¡\u0000\u0000\u0000void png_check_IHDR(int png_ptr, png_uint_32 width, png_uint_32 height, int bit_depth, int color_type, int interlace_type, int compression_type, int filter_type)\u0000\u000EPNG_CHECK_IHDR\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000{\n\u0000\u0000\b\u0000\u0000\u0000{\n\u0000\u00005\u0000\u0000\u0000{\n\u0000\u0000\u0000\u0000\u0000\npng_fp_add\u0000\npng_fp_add\npng_fp_add\u0000\nPNG_FP_ADD\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000|\n\u0000\u0000\b\u0000\u0000\u0000|\n\u0000\u0000P\u0000\u0000\u0000|\n\u0000\u0000\u0000\u0000\u0000\npng_fp_set\u0000\npng_fp_set\npng_fp_set\u0000\nPNG_FP_SET\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u007F\n\u0000\u0000\u0000\u0000\u0000\u0000~\n\u0000\u0000\u0001\u0000\u0000\u0000ù\n\u0000\u0000\u0001\u0000\u0000\u0013png_check_fp_number.int (png_const_charp, size_t, int *, size_t *)8png_check_fp_number(png_const_charp,size_t,int*,size_t*)[int png_check_fp_number(png_const_charp string, size_t size, int *statep, size_t *whereami)\u0000\u0013PNG_CHECK_FP_NUMBER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000þ\n\u0000\u0000\u0000\u0000\u0000\u0000ý\n\u0000\u0000\u0001\u0000\u0000\u0000\b\v\u0000\u0000\u0001\u0000\u0000\u0013png_check_fp_string\u001Dint (png_const_charp, size_t)+png_check_fp_string(png_const_charp,size_t)<int png_check_fp_string(png_const_charp string, size_t size)\u0000\u0013PNG_CHECK_FP_STRING\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\v\u0000\u0000\u0000\u0000\u0000\u0000\u0010\v\u0000\u0000\u0001\u0000\u0000\u00000\v\u0000\u0000\u0001\u0000\u0001\tpng_pow10\fdouble (int)\u000Epng_pow10(int)\"static double png_pow10(int power)\u0000\tPNG_POW10\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00006\v\u0000\u0000\u0000\u0000\u0000\u00005\v\u0000\u0000\u0001\u0000\u0000\u0000u\f\u0000\u0000\u0001\u0000\u0000\u0011png_ascii_from_fp3void (int, png_charp, size_t, double, unsigned int);png_ascii_from_fp(int,png_charp,size_t,double,unsigned int)dvoid png_ascii_from_fp(int png_ptr, png_charp ascii, size_t size, double fp, unsigned int precision)\u0000\u0011PNG_ASCII_FROM_FP\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000|\f\u0000\u0000\u0000\u0000\u0000\u0000{\f\u0000\u0000\u0001\u0000\u0000\u0000Ã\f\u0000\u0000\u0001\u0000\u0000\u0014png_ascii_from_fixed.void (int, png_charp, size_t, png_fixed_point):png_ascii_from_fixed(int,png_charp,size_t,png_fixed_point)Xvoid png_ascii_from_fixed(int png_ptr, png_charp ascii, size_t size, png_fixed_point fp)\u0000\u0014PNG_ASCII_FROM_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ï\f\u0000\u0000\u0000\u0000\u0000\u0000Î\f\u0000\u0000\u0001\u0000\u0000\u0000Û\f\u0000\u0000\u0001\u0000\u0000\tpng_fixed.png_fixed_point (int, double, png_const_charp)%png_fixed(int,double,png_const_charp)Gpng_fixed_point png_fixed(int png_ptr, double fp, png_const_charp text)\u0000\tPNG_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ç\f\u0000\u0000\u0000\u0000\u0000\u0000æ\f\u0000\u0000\u0001\u0000\u0000\u0000W\r\u0000\u0000\u0001\u0000\u0000\npng_muldiv@int (png_fixed_point_p, png_fixed_point, png_int_32, png_int_32)Cpng_muldiv(png_fixed_point_p,png_fixed_point,png_int_32,png_int_32)^int png_muldiv(png_fixed_point_p res, png_fixed_point a, png_int_32 times, png_int_32 divisor)\u0000\nPNG_MULDIV\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000_\r\u0000\u0000\u0000\u0000\u0000\u0000^\r\u0000\u0000\u0001\u0000\u0000\u0000i\r\u0000\u0000\u0001\u0000\u0000\u000Fpng_muldiv_warn>png_fixed_point (int, png_fixed_point, png_int_32, png_int_32):png_muldiv_warn(int,png_fixed_point,png_int_32,png_int_32)epng_fixed_point png_muldiv_warn(int png_ptr, png_fixed_point a, png_int_32 times, png_int_32 divisor)\u0000\u000FPNG_MULDIV_WARN\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000o\r\u0000\u0000\u0000\u0000\u0000\u0000n\r\u0000\u0000\u0001\u0000\u0000\u0000~\r\u0000\u0000\u0001\u0000\u0000\u000Epng_reciprocal!png_fixed_point (png_fixed_point)\u001Fpng_reciprocal(png_fixed_point)1png_fixed_point png_reciprocal(png_fixed_point a)\u0000\u000EPNG_RECIPROCAL\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0001\u0000\u0000\u0000\r\u0000\u0000\u0001\u0000\u0000\u0015png_gamma_significant\u0015int (png_fixed_point)&png_gamma_significant(png_fixed_point)4int png_gamma_significant(png_fixed_point gamma_val)\u0000\u0015PNG_GAMMA_SIGNIFICANT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0001\u0000\u0000\u0000¡\r\u0000\u0000\u0001\u0000\u0001\fpng_product22png_fixed_point (png_fixed_point, png_fixed_point)-png_product2(png_fixed_point,png_fixed_point)Istatic png_fixed_point png_product2(png_fixed_point a, png_fixed_point b)\u0000\fPNG_PRODUCT2\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¦\r\u0000\u0000\u0000\u0000\u0000\u0000¥\r\u0000\u0000\u0001\u0000\u0000\u0000À\r\u0000\u0000\u0001\u0000\u0000\u000Fpng_reciprocal22png_fixed_point (png_fixed_point, png_fixed_point)0png_reciprocal2(png_fixed_point,png_fixed_point)Epng_fixed_point png_reciprocal2(png_fixed_point a, png_fixed_point b)\u0000\u000FPNG_RECIPROCAL2\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ç\u000E\u0000\u0000\u0000\u0000\u0000\u0000æ\u000E\u0000\u0000\u0001\u0000\u0000\u0000\u0013\u000F\u0000\u0000\u0001\u0000\u0000\u0016png_gamma_8bit_correct(png_byte (unsigned int, png_fixed_point)4png_gamma_8bit_correct(unsigned int,png_fixed_point)Npng_byte png_gamma_8bit_correct(unsigned int value, png_fixed_point gamma_val)\u0000\u0016PNG_GAMMA_8BIT_CORRECT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u000F\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u000F\u0000\u0000\u0001\u0000\u0000\u00001\u000F\u0000\u0000\u0001\u0000\u0000\u0017png_gamma_16bit_correct+png_uint_16 (unsigned int, png_fixed_point)5png_gamma_16bit_correct(unsigned int,png_fixed_point)Rpng_uint_16 png_gamma_16bit_correct(unsigned int value, png_fixed_point gamma_val)\u0000\u0017PNG_GAMMA_16BIT_CORRECT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000:\u000F\u0000\u0000\u0000\u0000\u0000\u00009\u000F\u0000\u0000\u0001\u0000\u0000\u0000G\u000F\u0000\u0000\u0001\u0000\u0000\u0011png_gamma_correct0png_uint_16 (int, unsigned int, png_fixed_point)3png_gamma_correct(int,unsigned int,png_fixed_point)Ypng_uint_16 png_gamma_correct(int png_ptr, unsigned int value, png_fixed_point gamma_val)\u0000\u0011PNG_GAMMA_CORRECT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000S\u000F\u0000\u0000\u0000\u0000\u0000\u0000R\u000F\u0000\u0000\u0001\u0000\u0000\u0000\u000F\u0000\u0000\u0001\u0000\u0001\u0015png_build_16bit_table:void (int, png_uint_16pp *, unsigned int, png_fixed_point)Fpng_build_16bit_table(int,png_uint_16pp*,unsigned int,png_fixed_point)tstatic void png_build_16bit_table(int png_ptr, png_uint_16pp *ptable, unsigned int shift, png_fixed_point gamma_val)\u0000\u0015PNG_BUILD_16BIT_TABLE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u000F\u0000\u0000\u0000\u0000\u0000\u0000\u000F\u0000\u0000\u0001\u0000\u0000\u0000Ü\u000F\u0000\u0000\u0001\u0000\u0001\u0015png_build_16to8_table:void (int, png_uint_16pp *, unsigned int, png_fixed_point)Fpng_build_16to8_table(int,png_uint_16pp*,unsigned int,png_fixed_point)tstatic void png_build_16to8_table(int png_ptr, png_uint_16pp *ptable, unsigned int shift, png_fixed_point gamma_val)\u0000\u0015PNG_BUILD_16TO8_TABLE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ä\u000F\u0000\u0000\u0000\u0000\u0000\u0000ã\u000F\u0000\u0000\u0001\u0000\u0000\u0000ñ\u000F\u0000\u0000\u0001\u0000\u0001\u0014png_build_8bit_table'void (int, png_bytepp, png_fixed_point)4png_build_8bit_table(int,png_bytepp,png_fixed_point)[static void png_build_8bit_table(int png_ptr, png_bytepp ptable, png_fixed_point gamma_val)\u0000\u0014PNG_BUILD_8BIT_TABLE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000÷\u000F\u0000\u0000\u0000\u0000\u0000\u0000ö\u000F\u0000\u0000\u0001\u0000\u0000\u0000+\u0010\u0000\u0000\u0001\u0000\u0000\u0017png_destroy_gamma_table\nvoid (int)\u001Cpng_destroy_gamma_table(int))void png_destroy_gamma_table(int png_ptr)\u0000\u0017PNG_DESTROY_GAMMA_TABLE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00003\u0010\u0000\u0000\u0000\u0000\u0000\u00002\u0010\u0000\u0000\u0001\u0000\u0000\u0000µ\u0010\u0000\u0000\u0001\u0000\u0000\u0015png_build_gamma_table\u000Fvoid (int, int)\u001Epng_build_gamma_table(int,int)6void png_build_gamma_table(int png_ptr, int bit_depth)\u0000\u0015PNG_BUILD_GAMMA_TABLE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000»\u0010\u0000\u0000\u0000\u0000\u0000\u0000º\u0010\u0000\u0000\u0001\u0000\u0000\u0000Ê\u0010\u0000\u0000\u0001\u0000\u0000\u000Epng_set_option\u0013int (int, int, int)\u001Bpng_set_option(int,int,int)6int png_set_option(int png_ptr, int option, int onoff)\u0000\u000EPNG_SET_OPTION\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0012\u0000\u0000\u0000ä\u0010\u0000\u0000\u0000\u0000\u0000\u0000ä\u0010\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0011\u0000\u0000\u0001\u0000\u0000\u000Epng_sRGB_table\u0016const png_uint_16[256]\u000Epng_sRGB_table%const png_uint_16 png_sRGB_table[256]\u0000\u000EPNG_SRGB_TABLE\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0012\u0000\u0000\u0000\f\u0011\u0000\u0000\u0000\u0000\u0000\u0000\f\u0011\u0000\u0000\u0001\u0000\u0000\u0000N\u0011\u0000\u0000\u0001\u0000\u0000\rpng_sRGB_base\u0016const png_uint_16[512]\rpng_sRGB_base$const png_uint_16 png_sRGB_base[512]\u0000\rPNG_SRGB_BASE\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u000F\u0000\u0000\u0000P\u0011\u0000\u0000\u0000\u0000\u0000\u0000P\u0011\u0000\u0000\u0001\u0000\u0000\u0000r\u0011\u0000\u0000\u0001\u0000\u0000\u000Epng_sRGB_delta\u0013const png_byte[512]\u000Epng_sRGB_delta\"const png_byte png_sRGB_delta[512]\u0000\u000EPNG_SRGB_DELTA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000y\u0011\u0000\u0000\u0000\u0000\u0000\u0000x\u0011\u0000\u0000\u0001\u0000\u0000\u0000²\u0011\u0000\u0000\u0001\u0000\u0001\u0017png_image_free_function\u000Fint (png_voidp)\"png_image_free_function(png_voidp)6static int png_image_free_function(png_voidp argument)\u0000\u0017PNG_IMAGE_FREE_FUNCTION\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000µ\u0011\u0000\u0000\u0000\u0000\u0000\u0000´\u0011\u0000\u0000\u0001\u0000\u0000\u0000Á\u0011\u0000\u0000\u0001\u0000\u0000\u000Epng_image_free\nvoid (int)\u0013png_image_free(int)\u001Evoid png_image_free(int image)\u0000\u000EPNG_IMAGE_FREE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ä\u0011\u0000\u0000\u0000\u0000\u0000\u0000Ã\u0011\u0000\u0000\u0001\u0000\u0000\u0000Ë\u0011\u0000\u0000\u0001\u0000\u0000\u000Fpng_image_error\u001Aint (int, png_const_charp)$png_image_error(int,png_const_charp)=int png_image_error(int image, png_const_charp error_message)\u0000\u000FPNG_IMAGE_ERROR\u0000\u0000\u0000\u0000end\u0000¯R\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\pngerror.c","value":"data#\b\u0000\u0000\u0000\a\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0000\u0000\u0000\a\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0001\u0011png_default_error5void (int, png_const_charp) __attribute__((noreturn))&png_default_error(int,png_const_charp)Istatic void png_default_error(int png_ptr, png_const_charp error_message)\u0000\u0011PNG_DEFAULT_ERROR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001A\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u001B\u0000\u0000\u0000\u0000\u0000\u0001\u0013png_default_warning\u001Bvoid (int, png_const_charp)(png_default_warning(int,png_const_charp)Mstatic void png_default_warning(int png_ptr, png_const_charp warning_message)\u0000\u0013PNG_DEFAULT_WARNING\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0000%\u0000\u0000\u0000\u0001\u0000\u0000\u0000X\u0000\u0000\u0000\u0001\u0000\u0000\tpng_error5void (int, png_const_charp) __attribute__((noreturn))\u001Epng_error(int,png_const_charp):void png_error(int png_ptr, png_const_charp error_message)\u0000\tPNG_ERROR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000o\u0000\u0000\u0000\u0000\u0000\u0000\u0000n\u0000\u0000\u0000\u0001\u0000\u0000\u0000|\u0000\u0000\u0000\u0001\u0000\u0000\vpng_safecat3size_t (png_charp, size_t, size_t, png_const_charp)4png_safecat(png_charp,size_t,size_t,png_const_charp)Xsize_t png_safecat(png_charp buffer, size_t bufsize, size_t pos, png_const_charp string)\u0000\vPNG_SAFECAT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000Í\u0000\u0000\u0000\u0001\u0000\u0000\u0011png_format_number=png_charp (png_const_charp, png_charp, int, png_alloc_size_t)Apng_format_number(png_const_charp,png_charp,int,png_alloc_size_t)fpng_charp png_format_number(png_const_charp start, png_charp end, int format, png_alloc_size_t number)\u0000\u0011PNG_FORMAT_NUMBER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000×\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ö\u0000\u0000\u0000\u0001\u0000\u0000\u0000î\u0000\u0000\u0000\u0001\u0000\u0000\vpng_warning\u001Bvoid (int, png_const_charp) png_warning(int,png_const_charp)>void png_warning(int png_ptr, png_const_charp warning_message)\u0000\vPNG_WARNING\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ö\u0000\u0000\u0000\u0000\u0000\u0000\u0000õ\u0000\u0000\u0000\u0001\u0000\u0000\u0000û\u0000\u0000\u0000\u0001\u0000\u0000\u0015png_warning_parameter void (int, int, png_const_charp).png_warning_parameter(int,int,png_const_charp)Evoid png_warning_parameter(int p, int number, png_const_charp string)\u0000\u0015PNG_WARNING_PARAMETER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000þ\u0000\u0000\u0000\u0000\u0000\u0000\u0000ý\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0001\u0000\u0000\u001Epng_warning_parameter_unsigned&void (int, int, int, png_alloc_size_t)<png_warning_parameter_unsigned(int,int,int,png_alloc_size_t)Zvoid png_warning_parameter_unsigned(int p, int number, int format, png_alloc_size_t value)\u0000\u001EPNG_WARNING_PARAMETER_UNSIGNED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0018\u0001\u0000\u0000\u0001\u0000\u0000\u001Cpng_warning_parameter_signed void (int, int, int, png_int_32)4png_warning_parameter_signed(int,int,int,png_int_32)Rvoid png_warning_parameter_signed(int p, int number, int format, png_int_32 value)\u0000\u001CPNG_WARNING_PARAMETER_SIGNED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001B\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u001A\u0001\u0000\u0000\u0001\u0000\u0000\u0000d\u0001\u0000\u0000\u0001\u0000\u0000\u0015png_formatted_warning void (int, int, png_const_charp).png_formatted_warning(int,int,png_const_charp)Gvoid png_formatted_warning(int png_ptr, int p, png_const_charp message)\u0000\u0015PNG_FORMATTED_WARNING\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0000\u0000\u0000\u0000h\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0010png_benign_error\u001Bvoid (int, png_const_charp)%png_benign_error(int,png_const_charp)Avoid png_benign_error(int png_ptr, png_const_charp error_message)\u0000\u0010PNG_BENIGN_ERROR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u000Fpng_app_warning\u001Bvoid (int, png_const_charp)$png_app_warning(int,png_const_charp)@void png_app_warning(int png_ptr, png_const_charp error_message)\u0000\u000FPNG_APP_WARNING\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\rpng_app_error\u001Bvoid (int, png_const_charp)\"png_app_error(int,png_const_charp)>void png_app_error(int png_ptr, png_const_charp error_message)\u0000\rPNG_APP_ERROR\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000¡\u0001\u0000\u0000\b\u0000\u0000\u0000¡\u0001\u0000\u0000\u001E\u0000\u0000\u0000¡\u0001\u0000\u0000\u0000\u0000\u0000\u0012PNG_MAX_ERROR_TEXT\u0000\u0012PNG_MAX_ERROR_TEXT\u0012PNG_MAX_ERROR_TEXT\u0000\u0012PNG_MAX_ERROR_TEXT\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000ª\u0001\u0000\u0000\b\u0000\u0000\u0000ª\u0001\u0000\u0000G\u0000\u0000\u0000ª\u0001\u0000\u0000\u0000\u0000\u0000\nisnonalpha\u0000\nisnonalpha\nisnonalpha\u0000\nISNONALPHA\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0012\u0000\u0000\u0000«\u0001\u0000\u0000\u0000\u0000\u0000\u0000«\u0001\u0000\u0000\u0001\u0000\u0000\u0000®\u0001\u0000\u0000\u0001\u0000\u0001\tpng_digit\u000Econst char[16]\tpng_digit\u001Fstatic const char png_digit[16]\u0000\tPNG_DIGIT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000±\u0001\u0000\u0000\u0000\u0000\u0000\u0000°\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ú\u0001\u0000\u0000\u0001\u0000\u0001\u0011png_format_buffer&void (int, png_charp, png_const_charp)0png_format_buffer(int,png_charp,png_const_charp)[static void png_format_buffer(int png_ptr, png_charp buffer, png_const_charp error_message)\u0000\u0011PNG_FORMAT_BUFFER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Þ\u0001\u0000\u0000\u0000\u0000\u0000\u0000Þ\u0001\u0000\u0000\u0001\u0000\u0000\u0000ë\u0001\u0000\u0000\u0001\u0000\u0000\u000Fpng_chunk_error5void (int, png_const_charp) __attribute__((noreturn))$png_chunk_error(int,png_const_charp)@void png_chunk_error(int png_ptr, png_const_charp error_message)\u0000\u000FPNG_CHUNK_ERROR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ð\u0001\u0000\u0000\u0000\u0000\u0000\u0000ï\u0001\u0000\u0000\u0001\u0000\u0000\u0000û\u0001\u0000\u0000\u0001\u0000\u0000\u0011png_chunk_warning\u001Bvoid (int, png_const_charp)&png_chunk_warning(int,png_const_charp)Dvoid png_chunk_warning(int png_ptr, png_const_charp warning_message)\u0000\u0011PNG_CHUNK_WARNING\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\u0000\r\u0002\u0000\u0000\u0001\u0000\u0000\u0016png_chunk_benign_error\u001Bvoid (int, png_const_charp)+png_chunk_benign_error(int,png_const_charp)Gvoid png_chunk_benign_error(int png_ptr, png_const_charp error_message)\u0000\u0016PNG_CHUNK_BENIGN_ERROR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0002\u0000\u0000\u0001\u0000\u0000\u00006\u0002\u0000\u0000\u0001\u0000\u0000\u0010png_chunk_report void (int, png_const_charp, int))png_chunk_report(int,png_const_charp,int)Fvoid png_chunk_report(int png_ptr, png_const_charp message, int error)\u0000\u0010PNG_CHUNK_REPORT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000:\u0002\u0000\u0000\u0000\u0000\u0000\u0000:\u0002\u0000\u0000\u0001\u0000\u0000\u0000K\u0002\u0000\u0000\u0001\u0000\u0000\u000Fpng_fixed_error5void (int, png_const_charp) __attribute__((noreturn))$png_fixed_error(int,png_const_charp)7void png_fixed_error(int png_ptr, png_const_charp name)\u0000\u000FPNG_FIXED_ERROR\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000=\u0002\u0000\u0000\n\u0000\u0000\u0000=\u0002\u0000\u00002\u0000\u0000\u0000=\u0002\u0000\u0000\u0000\u0000\u0000\rfixed_message\u0000\rfixed_message\rfixed_message\u0000\rFIXED_MESSAGE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000>\u0002\u0000\u0000\n\u0000\u0000\u0000>\u0002\u0000\u00005\u0000\u0000\u0000>\u0002\u0000\u0000\u0000\u0000\u0000\u0010fixed_message_ln\u0000\u0010fixed_message_ln\u0010fixed_message_ln\u0000\u0010FIXED_MESSAGE_LN\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000T\u0002\u0000\u0000\u0000\u0000\u0000\u0000S\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\u0012png_set_longjmp_fn\u0017int *(int, int, size_t)\"png_set_longjmp_fn(int,int,size_t)Iint *png_set_longjmp_fn(int png_ptr, int longjmp_fn, size_t jmp_buf_size)\u0000\u0012PNG_SET_LONGJMP_FN\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\u0000½\u0002\u0000\u0000\u0001\u0000\u0000\u000Fpng_free_jmpbuf\nvoid (int)\u0014png_free_jmpbuf(int)!void png_free_jmpbuf(int png_ptr)\u0000\u000FPNG_FREE_JMPBUF\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\a\u0000\u0000\u0000Å\u0002\u0000\u0000\u0000\u0000\u0000\u0000Å\u0002\u0000\u0000\u0001\u0000\u0000\u0000ò\u0002\u0000\u0000\u0001\u0000\u0001\u0011png_default_error5void (int, png_const_charp) __attribute__((noreturn))&png_default_error(int,png_const_charp)Istatic void png_default_error(int png_ptr, png_const_charp error_message)\u0000\u0011PNG_DEFAULT_ERROR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ô\u0002\u0000\u0000\u0000\u0000\u0000\u0000ô\u0002\u0000\u0000\u0001\u0000\u0000\u0000\a\u0003\u0000\u0000\u0001\u0000\u0000\vpng_longjmp)void (int, int) __attribute__((noreturn))\u0014png_longjmp(int,int)&void png_longjmp(int png_ptr, int val)\u0000\vPNG_LONGJMP\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u000F\u0003\u0000\u0000\u0001\u0000\u0000\u00009\u0003\u0000\u0000\u0001\u0000\u0001\u0013png_default_warning\u001Bvoid (int, png_const_charp)(png_default_warning(int,png_const_charp)Mstatic void png_default_warning(int png_ptr, png_const_charp warning_message)\u0000\u0013PNG_DEFAULT_WARNING\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000B\u0003\u0000\u0000\u0000\u0000\u0000\u0000A\u0003\u0000\u0000\u0001\u0000\u0000\u0000O\u0003\u0000\u0000\u0001\u0000\u0000\u0010png_set_error_fn\u001Fvoid (int, png_voidp, int, int)'png_set_error_fn(int,png_voidp,int,int)Uvoid png_set_error_fn(int png_ptr, png_voidp error_ptr, int error_fn, int warning_fn)\u0000\u0010PNG_SET_ERROR_FN\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000W\u0003\u0000\u0000\u0000\u0000\u0000\u0000V\u0003\u0000\u0000\u0001\u0000\u0000\u0000]\u0003\u0000\u0000\u0001\u0000\u0000\u0011png_get_error_ptr\u000Fpng_voidp (int)\u0016png_get_error_ptr(int)(png_voidp png_get_error_ptr(int png_ptr)\u0000\u0011PNG_GET_ERROR_PTR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000s\u0003\u0000\u0000\u0000\u0000\u0000\u0000s\u0003\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0001\u0000\u0000\u000Epng_safe_error5void (int, png_const_charp) __attribute__((noreturn))#png_safe_error(int,png_const_charp)Hvoid png_safe_error(int png_nonconst_ptr, png_const_charp error_message)\u0000\u000EPNG_SAFE_ERROR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0001\u0000\u0000\u0000£\u0003\u0000\u0000\u0001\u0000\u0000\u0010png_safe_warning\u001Bvoid (int, png_const_charp)%png_safe_warning(int,png_const_charp)Lvoid png_safe_warning(int png_nonconst_ptr, png_const_charp warning_message)\u0000\u0010PNG_SAFE_WARNING\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000§\u0003\u0000\u0000\u0000\u0000\u0000\u0000¦\u0003\u0000\u0000\u0001\u0000\u0000\u0000º\u0003\u0000\u0000\u0001\u0000\u0000\u0010png_safe_execute(int (int, int (*)(png_voidp), png_voidp)1png_safe_execute(int,int(*)(png_voidp),png_voidp)Jint png_safe_execute(int image, int (*function)(png_voidp), png_voidp arg)\u0000\u0010PNG_SAFE_EXECUTE\u0000\u0000\u0000\u0000end\u0000å\u001A\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\pngget.c","value":"dataD\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0000\u0000%\u0000\u0000\u0000\u0001\u0000\u0000\rpng_get_valid#png_uint_32 (int, int, png_uint_32)\"png_get_valid(int,int,png_uint_32)Fpng_uint_32 png_get_valid(int png_ptr, int info_ptr, png_uint_32 flag)\u0000\rPNG_GET_VALID\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000\u0000\u0000\u0000'\u0000\u0000\u0000\u0001\u0000\u0000\u0000.\u0000\u0000\u0000\u0001\u0000\u0000\u0010png_get_rowbytes\u0011size_t (int, int)\u0019png_get_rowbytes(int,int)2size_t png_get_rowbytes(int png_ptr, int info_ptr)\u0000\u0010PNG_GET_ROWBYTES\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00002\u0000\u0000\u0000\u0000\u0000\u0000\u00001\u0000\u0000\u0000\u0001\u0000\u0000\u00008\u0000\u0000\u0000\u0001\u0000\u0000\fpng_get_rows\u0015png_bytepp (int, int)\u0015png_get_rows(int,int)2png_bytepp png_get_rows(int png_ptr, int info_ptr)\u0000\fPNG_GET_ROWS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000>\u0000\u0000\u0000\u0000\u0000\u0000\u0000=\u0000\u0000\u0000\u0001\u0000\u0000\u0000D\u0000\u0000\u0000\u0001\u0000\u0000\u0013png_get_image_width\u0016png_uint_32 (int, int)\u001Cpng_get_image_width(int,int):png_uint_32 png_get_image_width(int png_ptr, int info_ptr)\u0000\u0013PNG_GET_IMAGE_WIDTH\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000G\u0000\u0000\u0000\u0000\u0000\u0000\u0000F\u0000\u0000\u0000\u0001\u0000\u0000\u0000M\u0000\u0000\u0000\u0001\u0000\u0000\u0014png_get_image_height\u0016png_uint_32 (int, int)\u001Dpng_get_image_height(int,int);png_uint_32 png_get_image_height(int png_ptr, int info_ptr)\u0000\u0014PNG_GET_IMAGE_HEIGHT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000P\u0000\u0000\u0000\u0000\u0000\u0000\u0000O\u0000\u0000\u0000\u0001\u0000\u0000\u0000V\u0000\u0000\u0000\u0001\u0000\u0000\u0011png_get_bit_depth\u0013png_byte (int, int)\u001Apng_get_bit_depth(int,int)5png_byte png_get_bit_depth(int png_ptr, int info_ptr)\u0000\u0011PNG_GET_BIT_DEPTH\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Y\u0000\u0000\u0000\u0000\u0000\u0000\u0000X\u0000\u0000\u0000\u0001\u0000\u0000\u0000_\u0000\u0000\u0000\u0001\u0000\u0000\u0012png_get_color_type\u0013png_byte (int, int)\u001Bpng_get_color_type(int,int)6png_byte png_get_color_type(int png_ptr, int info_ptr)\u0000\u0012PNG_GET_COLOR_TYPE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000a\u0000\u0000\u0000\u0001\u0000\u0000\u0000h\u0000\u0000\u0000\u0001\u0000\u0000\u0013png_get_filter_type\u0013png_byte (int, int)\u001Cpng_get_filter_type(int,int)7png_byte png_get_filter_type(int png_ptr, int info_ptr)\u0000\u0013PNG_GET_FILTER_TYPE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000k\u0000\u0000\u0000\u0000\u0000\u0000\u0000j\u0000\u0000\u0000\u0001\u0000\u0000\u0000q\u0000\u0000\u0000\u0001\u0000\u0000\u0016png_get_interlace_type\u0013png_byte (int, int)\u001Fpng_get_interlace_type(int,int):png_byte png_get_interlace_type(int png_ptr, int info_ptr)\u0000\u0016PNG_GET_INTERLACE_TYPE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\u0000\u0000\u0000\u0000\u0000\u0000\u0000s\u0000\u0000\u0000\u0001\u0000\u0000\u0000z\u0000\u0000\u0000\u0001\u0000\u0000\u0018png_get_compression_type\u0013png_byte (int, int)!png_get_compression_type(int,int)<png_byte png_get_compression_type(int png_ptr, int info_ptr)\u0000\u0018PNG_GET_COMPRESSION_TYPE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000}\u0000\u0000\u0000\u0000\u0000\u0000\u0000|\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u001Apng_get_x_pixels_per_meter\u0016png_uint_32 (int, int)#png_get_x_pixels_per_meter(int,int)Apng_uint_32 png_get_x_pixels_per_meter(int png_ptr, int info_ptr)\u0000\u001APNG_GET_X_PIXELS_PER_METER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000¤\u0000\u0000\u0000\u0001\u0000\u0000\u001Apng_get_y_pixels_per_meter\u0016png_uint_32 (int, int)#png_get_y_pixels_per_meter(int,int)Apng_uint_32 png_get_y_pixels_per_meter(int png_ptr, int info_ptr)\u0000\u001APNG_GET_Y_PIXELS_PER_METER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000§\u0000\u0000\u0000\u0000\u0000\u0000\u0000¦\u0000\u0000\u0000\u0001\u0000\u0000\u0000¹\u0000\u0000\u0000\u0001\u0000\u0000\u0018png_get_pixels_per_meter\u0016png_uint_32 (int, int)!png_get_pixels_per_meter(int,int)?png_uint_32 png_get_pixels_per_meter(int png_ptr, int info_ptr)\u0000\u0018PNG_GET_PIXELS_PER_METER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000½\u0000\u0000\u0000\u0000\u0000\u0000\u0000¼\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ð\u0000\u0000\u0000\u0001\u0000\u0000\u001Apng_get_pixel_aspect_ratio\u0010float (int, int)#png_get_pixel_aspect_ratio(int,int);float png_get_pixel_aspect_ratio(int png_ptr, int info_ptr)\u0000\u001APNG_GET_PIXEL_ASPECT_RATIO\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Õ\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ô\u0000\u0000\u0000\u0001\u0000\u0000\u0000ð\u0000\u0000\u0000\u0001\u0000\u0000 png_get_pixel_aspect_ratio_fixed\u001Apng_fixed_point (int, int))png_get_pixel_aspect_ratio_fixed(int,int)Kpng_fixed_point png_get_pixel_aspect_ratio_fixed(int png_ptr, int info_ptr)\u0000 PNG_GET_PIXEL_ASPECT_RATIO_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ô\u0000\u0000\u0000\u0000\u0000\u0000\u0000ó\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0001\u0000\u0000\u0018png_get_x_offset_microns\u0015png_int_32 (int, int)!png_get_x_offset_microns(int,int)>png_int_32 png_get_x_offset_microns(int png_ptr, int info_ptr)\u0000\u0018PNG_GET_X_OFFSET_MICRONS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0001\u0000\u0000\u0000\u0000\u0000\u0000\a\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0001\u0000\u0000\u0018png_get_y_offset_microns\u0015png_int_32 (int, int)!png_get_y_offset_microns(int,int)>png_int_32 png_get_y_offset_microns(int png_ptr, int info_ptr)\u0000\u0018PNG_GET_Y_OFFSET_MICRONS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001C\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u001B\u0001\u0000\u0000\u0001\u0000\u0000\u0000-\u0001\u0000\u0000\u0001\u0000\u0000\u0017png_get_x_offset_pixels\u0015png_int_32 (int, int) png_get_x_offset_pixels(int,int)=png_int_32 png_get_x_offset_pixels(int png_ptr, int info_ptr)\u0000\u0017PNG_GET_X_OFFSET_PIXELS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00000\u0001\u0000\u0000\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0001\u0000\u0000\u0000A\u0001\u0000\u0000\u0001\u0000\u0000\u0017png_get_y_offset_pixels\u0015png_int_32 (int, int) png_get_y_offset_pixels(int,int)=png_int_32 png_get_y_offset_pixels(int png_ptr, int info_ptr)\u0000\u0017PNG_GET_Y_OFFSET_PIXELS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000E\u0001\u0000\u0000\u0000\u0000\u0000\u0000D\u0001\u0000\u0000\u0001\u0000\u0000\u0000b\u0001\u0000\u0000\u0001\u0000\u0001\fppi_from_ppm\u0019png_uint_32 (png_uint_32)\u0019ppi_from_ppm(png_uint_32)0static png_uint_32 ppi_from_ppm(png_uint_32 ppm)\u0000\fPPI_FROM_PPM\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000e\u0001\u0000\u0000\u0000\u0000\u0000\u0000d\u0001\u0000\u0000\u0001\u0000\u0000\u0000h\u0001\u0000\u0000\u0001\u0000\u0000\u0017png_get_pixels_per_inch\u0016png_uint_32 (int, int) png_get_pixels_per_inch(int,int)>png_uint_32 png_get_pixels_per_inch(int png_ptr, int info_ptr)\u0000\u0017PNG_GET_PIXELS_PER_INCH\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000k\u0001\u0000\u0000\u0000\u0000\u0000\u0000j\u0001\u0000\u0000\u0001\u0000\u0000\u0000n\u0001\u0000\u0000\u0001\u0000\u0000\u0019png_get_x_pixels_per_inch\u0016png_uint_32 (int, int)\"png_get_x_pixels_per_inch(int,int)@png_uint_32 png_get_x_pixels_per_inch(int png_ptr, int info_ptr)\u0000\u0019PNG_GET_X_PIXELS_PER_INCH\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0001\u0000\u0000\u0000\u0000\u0000\u0000p\u0001\u0000\u0000\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0001\u0000\u0000\u0019png_get_y_pixels_per_inch\u0016png_uint_32 (int, int)\"png_get_y_pixels_per_inch(int,int)@png_uint_32 png_get_y_pixels_per_inch(int png_ptr, int info_ptr)\u0000\u0019PNG_GET_Y_PIXELS_PER_INCH\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000x\u0001\u0000\u0000\u0000\u0000\u0000\u0000w\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0001\u001Dpng_fixed_inches_from_microns!png_fixed_point (int, png_int_32)-png_fixed_inches_from_microns(int,png_int_32)Ustatic png_fixed_point png_fixed_inches_from_microns(int png_ptr, png_int_32 microns)\u0000\u001DPNG_FIXED_INCHES_FROM_MICRONS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u001Dpng_get_x_offset_inches_fixed\u001Apng_fixed_point (int, int)&png_get_x_offset_inches_fixed(int,int)Hpng_fixed_point png_get_x_offset_inches_fixed(int png_ptr, int info_ptr)\u0000\u001DPNG_GET_X_OFFSET_INCHES_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u001Dpng_get_y_offset_inches_fixed\u001Apng_fixed_point (int, int)&png_get_y_offset_inches_fixed(int,int)Hpng_fixed_point png_get_y_offset_inches_fixed(int png_ptr, int info_ptr)\u0000\u001DPNG_GET_Y_OFFSET_INCHES_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0017png_get_x_offset_inches\u0010float (int, int) png_get_x_offset_inches(int,int)8float png_get_x_offset_inches(int png_ptr, int info_ptr)\u0000\u0017PNG_GET_X_OFFSET_INCHES\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¢\u0001\u0000\u0000\u0000\u0000\u0000\u0000¡\u0001\u0000\u0000\u0001\u0000\u0000\u0000¨\u0001\u0000\u0000\u0001\u0000\u0000\u0017png_get_y_offset_inches\u0010float (int, int) png_get_y_offset_inches(int,int)8float png_get_y_offset_inches(int png_ptr, int info_ptr)\u0000\u0017PNG_GET_Y_OFFSET_INCHES\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000­\u0001\u0000\u0000\u0000\u0000\u0000\u0000¬\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ñ\u0001\u0000\u0000\u0001\u0000\u0000\u0010png_get_pHYs_dpi;png_uint_32 (int, int, png_uint_32 *, png_uint_32 *, int *)8png_get_pHYs_dpi(int,int,png_uint_32*,png_uint_32*,int*)opng_uint_32 png_get_pHYs_dpi(int png_ptr, int info_ptr, png_uint_32 *res_x, png_uint_32 *res_y, int *unit_type)\u0000\u0010PNG_GET_PHYS_DPI\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Û\u0001\u0000\u0000\u0000\u0000\u0000\u0000Ú\u0001\u0000\u0000\u0001\u0000\u0000\u0000á\u0001\u0000\u0000\u0001\u0000\u0000\u0010png_get_channels\u0013png_byte (int, int)\u0019png_get_channels(int,int)4png_byte png_get_channels(int png_ptr, int info_ptr)\u0000\u0010PNG_GET_CHANNELS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000å\u0001\u0000\u0000\u0000\u0000\u0000\u0000ä\u0001\u0000\u0000\u0001\u0000\u0000\u0000ë\u0001\u0000\u0000\u0001\u0000\u0000\u0011png_get_signature\u001Apng_const_bytep (int, int)\u001Apng_get_signature(int,int)<png_const_bytep png_get_signature(int png_ptr, int info_ptr)\u0000\u0011PNG_GET_SIGNATURE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ð\u0001\u0000\u0000\u0000\u0000\u0000\u0000ï\u0001\u0000\u0000\u0001\u0000\u0000\u0000þ\u0001\u0000\u0000\u0001\u0000\u0000\fpng_get_bKGD\u001Dpng_uint_32 (int, int, int *)\u001Apng_get_bKGD(int,int,int*)Dpng_uint_32 png_get_bKGD(int png_ptr, int info_ptr, int *background)\u0000\fPNG_GET_BKGD\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0002\u0000\u0000\u0000\u0000\u0000\u0000\a\u0002\u0000\u0000\u0001\u0000\u0000\u00003\u0002\u0000\u0000\u0001\u0000\u0000\fpng_get_cHRMfpng_uint_32 (int, int, double *, double *, double *, double *, double *, double *, double *, double *)Upng_get_cHRM(int,int,double*,double*,double*,double*,double*,double*,double*,double*)ÿµ\u0000\u0000\u0000png_uint_32 png_get_cHRM(int png_ptr, int info_ptr, double *white_x, double *white_y, double *red_x, double *red_y, double *green_x, double *green_y, double *blue_x, double *blue_y)\u0000\fPNG_GET_CHRM\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00006\u0002\u0000\u0000\u0000\u0000\u0000\u00005\u0002\u0000\u0000\u0001\u0000\u0000\u0000_\u0002\u0000\u0000\u0001\u0000\u0000\u0010png_get_cHRM_XYZppng_uint_32 (int, int, double *, double *, double *, double *, double *, double *, double *, double *, double *)apng_get_cHRM_XYZ(int,int,double*,double*,double*,double*,double*,double*,double*,double*,double*)ÿÇ\u0000\u0000\u0000png_uint_32 png_get_cHRM_XYZ(int png_ptr, int info_ptr, double *red_X, double *red_Y, double *red_Z, double *green_X, double *green_Y, double *green_Z, double *blue_X, double *blue_Y, double *blue_Z)\u0000\u0010PNG_GET_CHRM_XYZ\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000d\u0002\u0000\u0000\u0000\u0000\u0000\u0000c\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\u0016png_get_cHRM_XYZ_fixedÿÁ\u0000\u0000\u0000png_uint_32 (int, int, png_fixed_point *, png_fixed_point *, png_fixed_point *, png_fixed_point *, png_fixed_point *, png_fixed_point *, png_fixed_point *, png_fixed_point *, png_fixed_point *)ÿ¸\u0000\u0000\u0000png_get_cHRM_XYZ_fixed(int,int,png_fixed_point*,png_fixed_point*,png_fixed_point*,png_fixed_point*,png_fixed_point*,png_fixed_point*,png_fixed_point*,png_fixed_point*,png_fixed_point*)ÿB\u0001\u0000\u0000png_uint_32 png_get_cHRM_XYZ_fixed(int png_ptr, int info_ptr, png_fixed_point *int_red_X, png_fixed_point *int_red_Y, png_fixed_point *int_red_Z, png_fixed_point *int_green_X, png_fixed_point *int_green_Y, png_fixed_point *int_green_Z, png_fixed_point *int_blue_X, png_fixed_point *int_blue_Y, png_fixed_point *int_blue_Z)\u0000\u0016PNG_GET_CHRM_XYZ_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\u0000§\u0002\u0000\u0000\u0001\u0000\u0000\u0012png_get_cHRM_fixedÿ®\u0000\u0000\u0000png_uint_32 (int, int, png_fixed_point *, png_fixed_point *, png_fixed_point *, png_fixed_point *, png_fixed_point *, png_fixed_point *, png_fixed_point *, png_fixed_point *)ÿ£\u0000\u0000\u0000png_get_cHRM_fixed(int,int,png_fixed_point*,png_fixed_point*,png_fixed_point*,png_fixed_point*,png_fixed_point*,png_fixed_point*,png_fixed_point*,png_fixed_point*)ÿ\u0003\u0001\u0000\u0000png_uint_32 png_get_cHRM_fixed(int png_ptr, int info_ptr, png_fixed_point *white_x, png_fixed_point *white_y, png_fixed_point *red_x, png_fixed_point *red_y, png_fixed_point *green_x, png_fixed_point *green_y, png_fixed_point *blue_x, png_fixed_point *blue_y)\u0000\u0012PNG_GET_CHRM_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000®\u0002\u0000\u0000\u0000\u0000\u0000\u0000­\u0002\u0000\u0000\u0001\u0000\u0000\u0000¼\u0002\u0000\u0000\u0001\u0000\u0000\u0012png_get_gAMA_fixed)png_uint_32 (int, int, png_fixed_point *),png_get_gAMA_fixed(int,int,png_fixed_point*)Vpng_uint_32 png_get_gAMA_fixed(int png_ptr, int info_ptr, png_fixed_point *file_gamma)\u0000\u0012PNG_GET_GAMA_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Á\u0002\u0000\u0000\u0000\u0000\u0000\u0000À\u0002\u0000\u0000\u0001\u0000\u0000\u0000Ð\u0002\u0000\u0000\u0001\u0000\u0000\fpng_get_gAMA png_uint_32 (int, int, double *)\u001Dpng_get_gAMA(int,int,double*)Gpng_uint_32 png_get_gAMA(int png_ptr, int info_ptr, double *file_gamma)\u0000\fPNG_GET_GAMA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ö\u0002\u0000\u0000\u0000\u0000\u0000\u0000Õ\u0002\u0000\u0000\u0001\u0000\u0000\u0000ã\u0002\u0000\u0000\u0001\u0000\u0000\fpng_get_sRGB\u001Dpng_uint_32 (int, int, int *)\u001Apng_get_sRGB(int,int,int*)Jpng_uint_32 png_get_sRGB(int png_ptr, int info_ptr, int *file_srgb_intent)\u0000\fPNG_GET_SRGB\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000è\u0002\u0000\u0000\u0000\u0000\u0000\u0000ç\u0002\u0000\u0000\u0001\u0000\u0000\u0000ÿ\u0002\u0000\u0000\u0001\u0000\u0000\fpng_get_iCCPDpng_uint_32 (int, int, png_charpp, int *, png_bytepp, png_uint_32 *)=png_get_iCCP(int,int,png_charpp,int*,png_bytepp,png_uint_32*)ÿ\u0000\u0000\u0000png_uint_32 png_get_iCCP(int png_ptr, int info_ptr, png_charpp name, int *compression_type, png_bytepp profile, png_uint_32 *proflen)\u0000\fPNG_GET_ICCP\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0003\u0000\u0000\u0001\u0000\u0000\u0000\u0010\u0003\u0000\u0000\u0001\u0000\u0000\fpng_get_sPLT\u0013int (int, int, int)\u0019png_get_sPLT(int,int,int):int png_get_sPLT(int png_ptr, int info_ptr, int spalettes)\u0000\fPNG_GET_SPLT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0015\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0003\u0000\u0000\u0001\u0000\u0000\u0000\u001C\u0003\u0000\u0000\u0001\u0000\u0000\fpng_get_eXIf#png_uint_32 (int, int, png_bytep *) png_get_eXIf(int,int,png_bytep*)Dpng_uint_32 png_get_eXIf(int png_ptr, int info_ptr, png_bytep *exif)\u0000\fPNG_GET_EXIF\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001F\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0003\u0000\u0000\u0001\u0000\u0000\u0000-\u0003\u0000\u0000\u0001\u0000\u0000\u000Epng_get_eXIf_12png_uint_32 (int, int, png_uint_32 *, png_bytep *)/png_get_eXIf_1(int,int,png_uint_32*,png_bytep*)]png_uint_32 png_get_eXIf_1(int png_ptr, int info_ptr, png_uint_32 *num_exif, png_bytep *exif)\u0000\u000EPNG_GET_EXIF_1\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00002\u0003\u0000\u0000\u0000\u0000\u0000\u00001\u0003\u0000\u0000\u0001\u0000\u0000\u0000?\u0003\u0000\u0000\u0001\u0000\u0000\fpng_get_hIST&png_uint_32 (int, int, png_uint_16p *)#png_get_hIST(int,int,png_uint_16p*)Gpng_uint_32 png_get_hIST(int png_ptr, int info_ptr, png_uint_16p *hist)\u0000\fPNG_GET_HIST\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000C\u0003\u0000\u0000\u0000\u0000\u0000\u0000B\u0003\u0000\u0000\u0001\u0000\u0000\u0000l\u0003\u0000\u0000\u0001\u0000\u0000\fpng_get_IHDRWpng_uint_32 (int, int, png_uint_32 *, png_uint_32 *, int *, int *, int *, int *, int *)Hpng_get_IHDR(int,int,png_uint_32*,png_uint_32*,int*,int*,int*,int*,int*)ÿ»\u0000\u0000\u0000png_uint_32 png_get_IHDR(int png_ptr, int info_ptr, png_uint_32 *width, png_uint_32 *height, int *bit_depth, int *color_type, int *interlace_type, int *compression_type, int *filter_type)\u0000\fPNG_GET_IHDR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000p\u0003\u0000\u0000\u0000\u0000\u0000\u0000o\u0003\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0001\u0000\u0000\fpng_get_oFFs9png_uint_32 (int, int, png_int_32 *, png_int_32 *, int *)2png_get_oFFs(int,int,png_int_32*,png_int_32*,int*)opng_uint_32 png_get_oFFs(int png_ptr, int info_ptr, png_int_32 *offset_x, png_int_32 *offset_y, int *unit_type)\u0000\fPNG_GET_OFFS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0001\u0000\u0000\fpng_get_pCALhpng_uint_32 (int, int, png_charp *, png_int_32 *, png_int_32 *, int *, int *, png_charp *, png_charpp *)Ypng_get_pCAL(int,int,png_charp*,png_int_32*,png_int_32*,int*,int*,png_charp*,png_charpp*)ÿ¦\u0000\u0000\u0000png_uint_32 png_get_pCAL(int png_ptr, int info_ptr, png_charp *purpose, png_int_32 *X0, png_int_32 *X1, int *type, int *nparams, png_charp *units, png_charpp *params)\u0000\fPNG_GET_PCAL\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000£\u0003\u0000\u0000\u0000\u0000\u0000\u0000¢\u0003\u0000\u0000\u0001\u0000\u0000\u0000·\u0003\u0000\u0000\u0001\u0000\u0000\u0012png_get_sCAL_fixedCpng_uint_32 (int, int, int *, png_fixed_point *, png_fixed_point *)Bpng_get_sCAL_fixed(int,int,int*,png_fixed_point*,png_fixed_point*)upng_uint_32 png_get_sCAL_fixed(int png_ptr, int info_ptr, int *unit, png_fixed_point *width, png_fixed_point *height)\u0000\u0012PNG_GET_SCAL_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¼\u0003\u0000\u0000\u0000\u0000\u0000\u0000»\u0003\u0000\u0000\u0001\u0000\u0000\u0000Ë\u0003\u0000\u0000\u0001\u0000\u0000\fpng_get_sCAL1png_uint_32 (int, int, int *, double *, double *)*png_get_sCAL(int,int,int*,double*,double*)]png_uint_32 png_get_sCAL(int png_ptr, int info_ptr, int *unit, double *width, double *height)\u0000\fPNG_GET_SCAL\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Î\u0003\u0000\u0000\u0000\u0000\u0000\u0000Í\u0003\u0000\u0000\u0001\u0000\u0000\u0000Ý\u0003\u0000\u0000\u0001\u0000\u0000\u000Epng_get_sCAL_s5png_uint_32 (int, int, int *, png_charpp, png_charpp)2png_get_sCAL_s(int,int,int*,png_charpp,png_charpp)epng_uint_32 png_get_sCAL_s(int png_ptr, int info_ptr, int *unit, png_charpp width, png_charpp height)\u0000\u000EPNG_GET_SCAL_S\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000â\u0003\u0000\u0000\u0000\u0000\u0000\u0000á\u0003\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0001\u0000\u0000\fpng_get_pHYs;png_uint_32 (int, int, png_uint_32 *, png_uint_32 *, int *)4png_get_pHYs(int,int,png_uint_32*,png_uint_32*,int*)kpng_uint_32 png_get_pHYs(int png_ptr, int info_ptr, png_uint_32 *res_x, png_uint_32 *res_y, int *unit_type)\u0000\fPNG_GET_PHYS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0004\u0000\u0000\u0001\u0000\u0000\u0000\u0013\u0004\u0000\u0000\u0001\u0000\u0000\fpng_get_PLTE$png_uint_32 (int, int, int *, int *)\u001Fpng_get_PLTE(int,int,int*,int*)Spng_uint_32 png_get_PLTE(int png_ptr, int info_ptr, int *palette, int *num_palette)\u0000\fPNG_GET_PLTE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0004\u0000\u0000\u0001\u0000\u0000\u0000$\u0004\u0000\u0000\u0001\u0000\u0000\fpng_get_sBIT\u001Dpng_uint_32 (int, int, int *)\u001Apng_get_sBIT(int,int,int*)Apng_uint_32 png_get_sBIT(int png_ptr, int info_ptr, int *sig_bit)\u0000\fPNG_GET_SBIT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000)\u0004\u0000\u0000\u0000\u0000\u0000\u0000(\u0004\u0000\u0000\u0001\u0000\u0000\u0000>\u0004\u0000\u0000\u0001\u0000\u0000\fpng_get_text\u001Cint (int, int, int *, int *)\u001Fpng_get_text(int,int,int*,int*)Iint png_get_text(int png_ptr, int info_ptr, int *text_ptr, int *num_text)\u0000\fPNG_GET_TEXT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000C\u0004\u0000\u0000\u0000\u0000\u0000\u0000B\u0004\u0000\u0000\u0001\u0000\u0000\u0000P\u0004\u0000\u0000\u0001\u0000\u0000\fpng_get_tIME\u001Dpng_uint_32 (int, int, int *)\u001Apng_get_tIME(int,int,int*)Bpng_uint_32 png_get_tIME(int png_ptr, int info_ptr, int *mod_time)\u0000\fPNG_GET_TIME\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000U\u0004\u0000\u0000\u0000\u0000\u0000\u0000T\u0004\u0000\u0000\u0001\u0000\u0000\u0000\u007F\u0004\u0000\u0000\u0001\u0000\u0000\fpng_get_tRNS1png_uint_32 (int, int, png_bytep *, int *, int *)*png_get_tRNS(int,int,png_bytep*,int*,int*)mpng_uint_32 png_get_tRNS(int png_ptr, int info_ptr, png_bytep *trans_alpha, int *num_trans, int *trans_color)\u0000\fPNG_GET_TRNS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0001\u0000\u0000\u0016png_get_unknown_chunks\u0013int (int, int, int)#png_get_unknown_chunks(int,int,int)Cint png_get_unknown_chunks(int png_ptr, int info_ptr, int unknowns)\u0000\u0016PNG_GET_UNKNOWN_CHUNKS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0001\u0000\u0000\u001Apng_get_rgb_to_gray_status\u000Epng_byte (int)\u001Fpng_get_rgb_to_gray_status(int)0png_byte png_get_rgb_to_gray_status(int png_ptr)\u0000\u001APNG_GET_RGB_TO_GRAY_STATUS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0001\u0000\u0000\u0016png_get_user_chunk_ptr\u000Fpng_voidp (int)\u001Bpng_get_user_chunk_ptr(int)-png_voidp png_get_user_chunk_ptr(int png_ptr)\u0000\u0016PNG_GET_USER_CHUNK_PTR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¢\u0004\u0000\u0000\u0000\u0000\u0000\u0000¡\u0004\u0000\u0000\u0001\u0000\u0000\u0000¶\u0004\u0000\u0000\u0001\u0000\u0000\u001Fpng_get_compression_buffer_size\fsize_t (int)$png_get_compression_buffer_size(int)3size_t png_get_compression_buffer_size(int png_ptr)\u0000\u001FPNG_GET_COMPRESSION_BUFFER_SIZE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¼\u0004\u0000\u0000\u0000\u0000\u0000\u0000»\u0004\u0000\u0000\u0001\u0000\u0000\u0000¿\u0004\u0000\u0000\u0001\u0000\u0000\u0016png_get_user_width_max\u0011png_uint_32 (int)\u001Bpng_get_user_width_max(int)/png_uint_32 png_get_user_width_max(int png_ptr)\u0000\u0016PNG_GET_USER_WIDTH_MAX\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Â\u0004\u0000\u0000\u0000\u0000\u0000\u0000Á\u0004\u0000\u0000\u0001\u0000\u0000\u0000Å\u0004\u0000\u0000\u0001\u0000\u0000\u0017png_get_user_height_max\u0011png_uint_32 (int)\u001Cpng_get_user_height_max(int)0png_uint_32 png_get_user_height_max(int png_ptr)\u0000\u0017PNG_GET_USER_HEIGHT_MAX\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000É\u0004\u0000\u0000\u0000\u0000\u0000\u0000È\u0004\u0000\u0000\u0001\u0000\u0000\u0000Ì\u0004\u0000\u0000\u0001\u0000\u0000\u0017png_get_chunk_cache_max\u0011png_uint_32 (int)\u001Cpng_get_chunk_cache_max(int)0png_uint_32 png_get_chunk_cache_max(int png_ptr)\u0000\u0017PNG_GET_CHUNK_CACHE_MAX\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ð\u0004\u0000\u0000\u0000\u0000\u0000\u0000Ï\u0004\u0000\u0000\u0001\u0000\u0000\u0000Ó\u0004\u0000\u0000\u0001\u0000\u0000\u0018png_get_chunk_malloc_max\u0016png_alloc_size_t (int)\u001Dpng_get_chunk_malloc_max(int)6png_alloc_size_t png_get_chunk_malloc_max(int png_ptr)\u0000\u0018PNG_GET_CHUNK_MALLOC_MAX\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ù\u0004\u0000\u0000\u0000\u0000\u0000\u0000Ø\u0004\u0000\u0000\u0001\u0000\u0000\u0000Ü\u0004\u0000\u0000\u0001\u0000\u0000\u0010png_get_io_state\u0011png_uint_32 (int)\u0015png_get_io_state(int))png_uint_32 png_get_io_state(int png_ptr)\u0000\u0010PNG_GET_IO_STATE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ß\u0004\u0000\u0000\u0000\u0000\u0000\u0000Þ\u0004\u0000\u0000\u0001\u0000\u0000\u0000â\u0004\u0000\u0000\u0001\u0000\u0000\u0015png_get_io_chunk_type\u0011png_uint_32 (int)\u001Apng_get_io_chunk_type(int).png_uint_32 png_get_io_chunk_type(int png_ptr)\u0000\u0015PNG_GET_IO_CHUNK_TYPE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000è\u0004\u0000\u0000\u0000\u0000\u0000\u0000ç\u0004\u0000\u0000\u0001\u0000\u0000\u0000î\u0004\u0000\u0000\u0001\u0000\u0000\u0013png_get_palette_max\u000Eint (int, int)\u001Cpng_get_palette_max(int,int)2int png_get_palette_max(int png_ptr, int info_ptr)\u0000\u0013PNG_GET_PALETTE_MAX\u0000\u0000\u0000\u0000end\u0000u>\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\pngmem.c","value":"data\a\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0000(\u0000\u0000\u0000\u0001\u0000\u0000\u0016png_destroy_png_struct\nvoid (int)\u001Bpng_destroy_png_struct(int)(void png_destroy_png_struct(int png_ptr)\u0000\u0016PNG_DESTROY_PNG_STRUCT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000l\u0000\u0000\u0000\u0000\u0000\u0000\u0000k\u0000\u0000\u0000\u0001\u0000\u0000\u0000v\u0000\u0000\u0000\u0001\u0000\u0001\u0018png_malloc_array_checked\u001Cpng_voidp (int, int, size_t)(png_malloc_array_checked(int,int,size_t)Zstatic png_voidp png_malloc_array_checked(int png_ptr, int nelements, size_t element_size)\u0000\u0018PNG_MALLOC_ARRAY_CHECKED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ç\u0000\u0000\u0000\u0000\u0000\u0000\u0000æ\u0000\u0000\u0000\u0001\u0000\u0000\u0000ò\u0000\u0000\u0000\u0001\u0000\u0000\bpng_free\u0015void (int, png_voidp)\u0017png_free(int,png_voidp))void png_free(int png_ptr, png_voidp ptr)\u0000\bPNG_FREE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ô\u0000\u0000\u0000\u0000\u0000\u0000\u0000ô\u0000\u0000\u0000\u0001\u0000\u0000\u0000ü\u0000\u0000\u0000\u0001\u0000\u0000\u0010png_free_default\u0015void (int, png_voidp)\u001Fpng_free_default(int,png_voidp)1void png_free_default(int png_ptr, png_voidp ptr)\u0000\u0010PNG_FREE_DEFAULT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0001\u0000\u0000\u0001\u0000\u0000\u0000\f\u0001\u0000\u0000\u0001\u0000\u0000\u000Epng_set_mem_fn\u001Fvoid (int, png_voidp, int, int)%png_set_mem_fn(int,png_voidp,int,int)Ovoid png_set_mem_fn(int png_ptr, png_voidp mem_ptr, int malloc_fn, int free_fn)\u0000\u000EPNG_SET_MEM_FN\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0001\u0000\u0000\u000Fpng_get_mem_ptr\u000Fpng_voidp (int)\u0014png_get_mem_ptr(int)&png_voidp png_get_mem_ptr(int png_ptr)\u0000\u000FPNG_GET_MEM_PTR\u0000\u0000\u0000\u0000end\u0000F\u0004\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\pngpread.c","value":"data\u001Eõ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0012\u0000\u0000\u0000\b\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0011PNG_READ_SIG_MODE\u0000\u0011PNG_READ_SIG_MODE\u0011PNG_READ_SIG_MODE\u0000\u0011PNG_READ_SIG_MODE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0013\u0000\u0000\u0000\b\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0013PNG_READ_CHUNK_MODE\u0000\u0013PNG_READ_CHUNK_MODE\u0013PNG_READ_CHUNK_MODE\u0000\u0013PNG_READ_CHUNK_MODE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0014\u0000\u0000\u0000\b\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0012PNG_READ_IDAT_MODE\u0000\u0012PNG_READ_IDAT_MODE\u0012PNG_READ_IDAT_MODE\u0000\u0012PNG_READ_IDAT_MODE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0015\u0000\u0000\u0000\b\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0012PNG_READ_tEXt_MODE\u0000\u0012PNG_READ_tEXt_MODE\u0012PNG_READ_tEXt_MODE\u0000\u0012PNG_READ_TEXT_MODE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0016\u0000\u0000\u0000\b\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0012PNG_READ_zTXt_MODE\u0000\u0012PNG_READ_zTXt_MODE\u0012PNG_READ_zTXt_MODE\u0000\u0012PNG_READ_ZTXT_MODE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0017\u0000\u0000\u0000\b\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0012PNG_READ_DONE_MODE\u0000\u0012PNG_READ_DONE_MODE\u0012PNG_READ_DONE_MODE\u0000\u0012PNG_READ_DONE_MODE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0018\u0000\u0000\u0000\b\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0012PNG_READ_iTXt_MODE\u0000\u0012PNG_READ_iTXt_MODE\u0012PNG_READ_iTXt_MODE\u0000\u0012PNG_READ_ITXT_MODE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0019\u0000\u0000\u0000\b\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0000\u0000\u0000\u000EPNG_ERROR_MODE\u0000\u000EPNG_ERROR_MODE\u000EPNG_ERROR_MODE\u0000\u000EPNG_ERROR_MODE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u001B\u0000\u0000\u0000\b\u0000\u0000\u0000\u001B\u0000\u0000\u0000-\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0000\u0000\u0000\u001CPNG_PUSH_SAVE_BUFFER_IF_FULL\u0000\u001CPNG_PUSH_SAVE_BUFFER_IF_FULL\u001CPNG_PUSH_SAVE_BUFFER_IF_FULL\u0000\u001CPNG_PUSH_SAVE_BUFFER_IF_FULL\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u001E\u0000\u0000\u0000\b\u0000\u0000\u0000\u001E\u0000\u0000\u0000-\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u001APNG_PUSH_SAVE_BUFFER_IF_LT\u0000\u001APNG_PUSH_SAVE_BUFFER_IF_LT\u001APNG_PUSH_SAVE_BUFFER_IF_LT\u0000\u001APNG_PUSH_SAVE_BUFFER_IF_LT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000#\u0000\u0000\u0000\u0000\u0000\u0000\u0000\"\u0000\u0000\u0000\u0001\u0000\u0000\u0000/\u0000\u0000\u0000\u0001\u0000\u0000\u0010png_process_data\"void (int, int, png_bytep, size_t)*png_process_data(int,int,png_bytep,size_t)Vvoid png_process_data(int png_ptr, int info_ptr, png_bytep buffer, size_t buffer_size)\u0000\u0010PNG_PROCESS_DATA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00002\u0000\u0000\u0000\u0000\u0000\u0000\u00001\u0000\u0000\u0000\u0001\u0000\u0000\u0000J\u0000\u0000\u0000\u0001\u0000\u0000\u0016png_process_data_pause\u0011size_t (int, int)\u001Fpng_process_data_pause(int,int)4size_t png_process_data_pause(int png_ptr, int save)\u0000\u0016PNG_PROCESS_DATA_PAUSE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000M\u0000\u0000\u0000\u0000\u0000\u0000\u0000L\u0000\u0000\u0000\u0001\u0000\u0000\u0000W\u0000\u0000\u0000\u0001\u0000\u0000\u0015png_process_data_skip\u0011png_uint_32 (int)\u001Apng_process_data_skip(int).png_uint_32 png_process_data_skip(int png_ptr)\u0000\u0015PNG_PROCESS_DATA_SKIP\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000]\u0000\u0000\u0000\u0000\u0000\u0000\u0000\\\u0000\u0000\u0000\u0001\u0000\u0000\u0000|\u0000\u0000\u0000\u0001\u0000\u0000\u0015png_process_some_data\u000Fvoid (int, int)\u001Epng_process_some_data(int,int)5void png_process_some_data(int png_ptr, int info_ptr)\u0000\u0015PNG_PROCESS_SOME_DATA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000£\u0000\u0000\u0000\u0001\u0000\u0000\u0011png_push_read_sig\u000Fvoid (int, int)\u001Apng_push_read_sig(int,int)1void png_push_read_sig(int png_ptr, int info_ptr)\u0000\u0011PNG_PUSH_READ_SIG\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¦\u0000\u0000\u0000\u0000\u0000\u0000\u0000¥\u0000\u0000\u0000\u0001\u0000\u0000\u0000©\u0001\u0000\u0000\u0001\u0000\u0000\u0013png_push_read_chunk\u000Fvoid (int, int)\u001Cpng_push_read_chunk(int,int)3void png_push_read_chunk(int png_ptr, int info_ptr)\u0000\u0013PNG_PUSH_READ_CHUNK\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¬\u0001\u0000\u0000\u0000\u0000\u0000\u0000«\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ô\u0001\u0000\u0000\u0001\u0000\u0000\u0014png_push_fill_buffer\u001Dvoid (int, png_bytep, size_t)*png_push_fill_buffer(int,png_bytep,size_t)Gvoid png_push_fill_buffer(int png_ptr, png_bytep buffer, size_t length)\u0000\u0014PNG_PUSH_FILL_BUFFER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000×\u0001\u0000\u0000\u0000\u0000\u0000\u0000Ö\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0010\u0002\u0000\u0000\u0001\u0000\u0000\u0014png_push_save_buffer\nvoid (int)\u0019png_push_save_buffer(int)&void png_push_save_buffer(int png_ptr)\u0000\u0014PNG_PUSH_SAVE_BUFFER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0013\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u001A\u0002\u0000\u0000\u0001\u0000\u0000\u0017png_push_restore_buffer\u001Dvoid (int, png_bytep, size_t)-png_push_restore_buffer(int,png_bytep,size_t)Qvoid png_push_restore_buffer(int png_ptr, png_bytep buffer, size_t buffer_length)\u0000\u0017PNG_PUSH_RESTORE_BUFFER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001D\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u001C\u0002\u0000\u0000\u0001\u0000\u0000\u0000w\u0002\u0000\u0000\u0001\u0000\u0000\u0012png_push_read_IDAT\nvoid (int)\u0017png_push_read_IDAT(int)$void png_push_read_IDAT(int png_ptr)\u0000\u0012PNG_PUSH_READ_IDAT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000z\u0002\u0000\u0000\u0000\u0000\u0000\u0000y\u0002\u0000\u0000\u0001\u0000\u0000\u0000ç\u0002\u0000\u0000\u0001\u0000\u0000\u0015png_process_IDAT_data\u001Dvoid (int, png_bytep, size_t)+png_process_IDAT_data(int,png_bytep,size_t)Ovoid png_process_IDAT_data(int png_ptr, png_bytep buffer, size_t buffer_length)\u0000\u0015PNG_PROCESS_IDAT_DATA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ê\u0002\u0000\u0000\u0000\u0000\u0000\u0000é\u0002\u0000\u0000\u0001\u0000\u0000\u0000Í\u0003\u0000\u0000\u0001\u0000\u0000\u0014png_push_process_row\nvoid (int)\u0019png_push_process_row(int)&void png_push_process_row(int png_ptr)\u0000\u0014PNG_PUSH_PROCESS_ROW\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ð\u0003\u0000\u0000\u0000\u0000\u0000\u0000Ï\u0003\u0000\u0000\u0001\u0000\u0000\u0000\u000F\u0004\u0000\u0000\u0001\u0000\u0000\u0018png_read_push_finish_row\nvoid (int)\u001Dpng_read_push_finish_row(int)*void png_read_push_finish_row(int png_ptr)\u0000\u0018PNG_READ_PUSH_FINISH_ROW\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0004\u0000\u0000\u0001\u0000\u0000\u0000\u0016\u0004\u0000\u0000\u0001\u0000\u0000\u0012png_push_have_info\u000Fvoid (int, int)\u001Bpng_push_have_info(int,int)2void png_push_have_info(int png_ptr, int info_ptr)\u0000\u0012PNG_PUSH_HAVE_INFO\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0004\u0000\u0000\u0001\u0000\u0000\u0000\u001D\u0004\u0000\u0000\u0001\u0000\u0000\u0011png_push_have_end\u000Fvoid (int, int)\u001Apng_push_have_end(int,int)1void png_push_have_end(int png_ptr, int info_ptr)\u0000\u0011PNG_PUSH_HAVE_END\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0004\u0000\u0000\u0000\u0000\u0000\u0000\u001F\u0004\u0000\u0000\u0001\u0000\u0000\u0000%\u0004\u0000\u0000\u0001\u0000\u0000\u0011png_push_have_row\u0015void (int, png_bytep) png_push_have_row(int,png_bytep)2void png_push_have_row(int png_ptr, png_bytep row)\u0000\u0011PNG_PUSH_HAVE_ROW\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000)\u0004\u0000\u0000\u0000\u0000\u0000\u0000(\u0004\u0000\u0000\u0001\u0000\u0000\u00005\u0004\u0000\u0000\u0001\u0000\u0000\u001Bpng_progressive_combine_row&void (int, png_bytep, png_const_bytep):png_progressive_combine_row(int,png_bytep,png_const_bytep)Yvoid png_progressive_combine_row(int png_ptr, png_bytep old_row, png_const_bytep new_row)\u0000\u001BPNG_PROGRESSIVE_COMBINE_ROW\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00009\u0004\u0000\u0000\u0000\u0000\u0000\u00008\u0004\u0000\u0000\u0001\u0000\u0000\u0000E\u0004\u0000\u0000\u0001\u0000\u0000\u001Bpng_set_progressive_read_fn$void (int, png_voidp, int, int, int)6png_set_progressive_read_fn(int,png_voidp,int,int,int)mvoid png_set_progressive_read_fn(int png_ptr, png_voidp progressive_ptr, int info_fn, int row_fn, int end_fn)\u0000\u001BPNG_SET_PROGRESSIVE_READ_FN\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000H\u0004\u0000\u0000\u0000\u0000\u0000\u0000G\u0004\u0000\u0000\u0001\u0000\u0000\u0000N\u0004\u0000\u0000\u0001\u0000\u0000\u0017png_get_progressive_ptr\u000Fpng_voidp (int)\u001Cpng_get_progressive_ptr(int).png_voidp png_get_progressive_ptr(int png_ptr)\u0000\u0017PNG_GET_PROGRESSIVE_PTR\u0000\u0000\u0000\u0000end\u0000\u001B\u0013\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\pngread.c","value":"dataI\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000\"\u0000\u0000\u0000\u0001\u0000\u0000\u0016png_create_read_struct*int (png_const_charp, png_voidp, int, int)9png_create_read_struct(png_const_charp,png_voidp,int,int)hint png_create_read_struct(png_const_charp user_png_ver, png_voidp error_ptr, int error_fn, int warn_fn)\u0000\u0016PNG_CREATE_READ_STRUCT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000'\u0000\u0000\u0000\u0000\u0000\u0000\u0000'\u0000\u0000\u0000\u0001\u0000\u0000\u0000N\u0000\u0000\u0000\u0001\u0000\u0000\u0018png_create_read_struct_2?int (png_const_charp, png_voidp, int, int, png_voidp, int, int)Mpng_create_read_struct_2(png_const_charp,png_voidp,int,int,png_voidp,int,int)ÿ\u0000\u0000\u0000int png_create_read_struct_2(png_const_charp user_png_ver, png_voidp error_ptr, int error_fn, int warn_fn, png_voidp mem_ptr, int malloc_fn, int free_fn)\u0000\u0018PNG_CREATE_READ_STRUCT_2\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000[\u0000\u0000\u0000\u0000\u0000\u0000\u0000Z\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0001\u0000\u0000\rpng_read_info\u000Fvoid (int, int)\u0016png_read_info(int,int)-void png_read_info(int png_ptr, int info_ptr)\u0000\rPNG_READ_INFO\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n\u0001\u0000\u0000\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0001\u0000\u0000\u0000 \u0001\u0000\u0000\u0001\u0000\u0000\u0014png_read_update_info\u000Fvoid (int, int)\u001Dpng_read_update_info(int,int)4void png_read_update_info(int png_ptr, int info_ptr)\u0000\u0014PNG_READ_UPDATE_INFO\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0001\u0000\u0000\u00007\u0001\u0000\u0000\u0001\u0000\u0000\u0014png_start_read_image\nvoid (int)\u0019png_start_read_image(int)&void png_start_read_image(int png_ptr)\u0000\u0014PNG_START_READ_IMAGE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0001\u0000\u0000\u0000\u0000\u0000\u0000?\u0001\u0000\u0000\u0001\u0000\u0000\u0000z\u0001\u0000\u0000\u0001\u0000\u0001\u0016png_do_read_intrapixel\u0015void (int, png_bytep)%png_do_read_intrapixel(int,png_bytep)?static void png_do_read_intrapixel(int row_info, png_bytep row)\u0000\u0016PNG_DO_READ_INTRAPIXEL\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000~\u0001\u0000\u0000\u0000\u0000\u0000\u0000}\u0001\u0000\u0000\u0001\u0000\u0000\u0000k\u0002\u0000\u0000\u0001\u0000\u0000\fpng_read_row void (int, png_bytep, png_bytep)%png_read_row(int,png_bytep,png_bytep)@void png_read_row(int png_ptr, png_bytep row, png_bytep dsp_row)\u0000\fPNG_READ_ROW\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\u0000®\u0002\u0000\u0000\u0001\u0000\u0000\rpng_read_rows/void (int, png_bytepp, png_bytepp, png_uint_32)4png_read_rows(int,png_bytepp,png_bytepp,png_uint_32)]void png_read_rows(int png_ptr, png_bytepp row, png_bytepp display_row, png_uint_32 num_rows)\u0000\rPNG_READ_ROWS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¿\u0002\u0000\u0000\u0000\u0000\u0000\u0000¾\u0002\u0000\u0000\u0001\u0000\u0000\u0000ø\u0002\u0000\u0000\u0001\u0000\u0000\u000Epng_read_image\u0016void (int, png_bytepp)\u001Epng_read_image(int,png_bytepp)2void png_read_image(int png_ptr, png_bytepp image)\u0000\u000EPNG_READ_IMAGE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0001\u0000\u0000\u0000ª\u0003\u0000\u0000\u0001\u0000\u0000\fpng_read_end\u000Fvoid (int, int)\u0015png_read_end(int,int),void png_read_end(int png_ptr, int info_ptr)\u0000\fPNG_READ_END\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¯\u0003\u0000\u0000\u0000\u0000\u0000\u0000®\u0003\u0000\u0000\u0001\u0000\u0000\u0000ò\u0003\u0000\u0000\u0001\u0000\u0001\u0010png_read_destroy\nvoid (int)\u0015png_read_destroy(int))static void png_read_destroy(int png_ptr)\u0000\u0010PNG_READ_DESTROY\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ö\u0003\u0000\u0000\u0000\u0000\u0000\u0000õ\u0003\u0000\u0000\u0001\u0000\u0000\u0000\r\u0004\u0000\u0000\u0001\u0000\u0000\u0017png_destroy_read_struct\u0014void (int, int, int)$png_destroy_read_struct(int,int,int)Uvoid png_destroy_read_struct(int png_ptr_ptr, int info_ptr_ptr, int end_info_ptr_ptr)\u0000\u0017PNG_DESTROY_READ_STRUCT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u000F\u0004\u0000\u0000\u0001\u0000\u0000\u0000\u0016\u0004\u0000\u0000\u0001\u0000\u0000\u0016png_set_read_status_fn\u000Fvoid (int, int)\u001Fpng_set_read_status_fn(int,int)9void png_set_read_status_fn(int png_ptr, int read_row_fn)\u0000\u0016PNG_SET_READ_STATUS_FN\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001C\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u001B\u0004\u0000\u0000\u0001\u0000\u0000\u0000å\u0004\u0000\u0000\u0001\u0000\u0000\fpng_read_png\u001Bvoid (int, int, int, voidp)\u001Fpng_read_png(int,int,int,voidp)Jvoid png_read_png(int png_ptr, int info_ptr, int transforms, voidp params)\u0000\fPNG_READ_PNG\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000ò\u0004\u0000\u0000\n\u0000\u0000\u0000ò\u0004\u0000\u0000\u0015\u0000\u0000\u0000ò\u0004\u0000\u0000\u0000\u0000\u0000\bP_NOTSET\u0000\bP_NOTSET\bP_NOTSET\u0000\bP_NOTSET\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000ó\u0004\u0000\u0000\n\u0000\u0000\u0000ó\u0004\u0000\u0000\u0015\u0000\u0000\u0000ó\u0004\u0000\u0000\u0000\u0000\u0000\u0006P_sRGB\u0000\u0006P_sRGB\u0006P_sRGB\u0000\u0006P_SRGB\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000ô\u0004\u0000\u0000\n\u0000\u0000\u0000ô\u0004\u0000\u0000\u0015\u0000\u0000\u0000ô\u0004\u0000\u0000\u0000\u0000\u0000\bP_LINEAR\u0000\bP_LINEAR\bP_LINEAR\u0000\bP_LINEAR\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000õ\u0004\u0000\u0000\n\u0000\u0000\u0000õ\u0004\u0000\u0000\u0015\u0000\u0000\u0000õ\u0004\u0000\u0000\u0000\u0000\u0000\u0006P_FILE\u0000\u0006P_FILE\u0006P_FILE\u0000\u0006P_FILE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000ö\u0004\u0000\u0000\n\u0000\u0000\u0000ö\u0004\u0000\u0000\u0015\u0000\u0000\u0000ö\u0004\u0000\u0000\u0000\u0000\u0000\tP_LINEAR8\u0000\tP_LINEAR8\tP_LINEAR8\u0000\tP_LINEAR8\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000û\u0004\u0000\u0000\b\u0000\u0000\u0000û\u0004\u0000\u0000\u001C\u0000\u0000\u0000û\u0004\u0000\u0000\u0000\u0000\u0000\rPNG_CMAP_NONE\u0000\rPNG_CMAP_NONE\rPNG_CMAP_NONE\u0000\rPNG_CMAP_NONE\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000ü\u0004\u0000\u0000\b\u0000\u0000\u0000ü\u0004\u0000\u0000\u001C\u0000\u0000\u0000ü\u0004\u0000\u0000\u0000\u0000\u0000\vPNG_CMAP_GA\u0000\vPNG_CMAP_GA\vPNG_CMAP_GA\u0000\vPNG_CMAP_GA\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000ý\u0004\u0000\u0000\b\u0000\u0000\u0000ý\u0004\u0000\u0000\u001C\u0000\u0000\u0000ý\u0004\u0000\u0000\u0000\u0000\u0001\u000EPNG_CMAP_TRANS\u0000\u000EPNG_CMAP_TRANS\u000EPNG_CMAP_TRANS\u0000\u000EPNG_CMAP_TRANS\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000þ\u0004\u0000\u0000\b\u0000\u0000\u0000þ\u0004\u0000\u0000\u001C\u0000\u0000\u0000þ\u0004\u0000\u0000\u0000\u0000\u0000\fPNG_CMAP_RGB\u0000\fPNG_CMAP_RGB\fPNG_CMAP_RGB\u0000\fPNG_CMAP_RGB\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000ÿ\u0004\u0000\u0000\b\u0000\u0000\u0000ÿ\u0004\u0000\u0000\u001C\u0000\u0000\u0000ÿ\u0004\u0000\u0000\u0000\u0000\u0000\u0012PNG_CMAP_RGB_ALPHA\u0000\u0012PNG_CMAP_RGB_ALPHA\u0012PNG_CMAP_RGB_ALPHA\u0000\u0012PNG_CMAP_RGB_ALPHA\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0002\u0005\u0000\u0000\b\u0000\u0000\u0000\u0002\u0005\u0000\u0000)\u0000\u0000\u0000\u0002\u0005\u0000\u0000\u0000\u0000\u0000\u0018PNG_CMAP_NONE_BACKGROUND\u0000\u0018PNG_CMAP_NONE_BACKGROUND\u0018PNG_CMAP_NONE_BACKGROUND\u0000\u0018PNG_CMAP_NONE_BACKGROUND\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0003\u0005\u0000\u0000\b\u0000\u0000\u0000\u0003\u0005\u0000\u0000)\u0000\u0000\u0000\u0003\u0005\u0000\u0000\u0000\u0000\u0000\u0016PNG_CMAP_GA_BACKGROUND\u0000\u0016PNG_CMAP_GA_BACKGROUND\u0016PNG_CMAP_GA_BACKGROUND\u0000\u0016PNG_CMAP_GA_BACKGROUND\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0004\u0005\u0000\u0000\b\u0000\u0000\u0000\u0004\u0005\u0000\u0000)\u0000\u0000\u0000\u0004\u0005\u0000\u0000\u0000\u0000\u0000\u0019PNG_CMAP_TRANS_BACKGROUND\u0000\u0019PNG_CMAP_TRANS_BACKGROUND\u0019PNG_CMAP_TRANS_BACKGROUND\u0000\u0019PNG_CMAP_TRANS_BACKGROUND\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0005\u0005\u0000\u0000\b\u0000\u0000\u0000\u0005\u0005\u0000\u0000)\u0000\u0000\u0000\u0005\u0005\u0000\u0000\u0000\u0000\u0000\u0017PNG_CMAP_RGB_BACKGROUND\u0000\u0017PNG_CMAP_RGB_BACKGROUND\u0017PNG_CMAP_RGB_BACKGROUND\u0000\u0017PNG_CMAP_RGB_BACKGROUND\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0006\u0005\u0000\u0000\b\u0000\u0000\u0000\u0006\u0005\u0000\u0000)\u0000\u0000\u0000\u0006\u0005\u0000\u0000\u0000\u0000\u0000\u001DPNG_CMAP_RGB_ALPHA_BACKGROUND\u0000\u001DPNG_CMAP_RGB_ALPHA_BACKGROUND\u001DPNG_CMAP_RGB_ALPHA_BACKGROUND\u0000\u001DPNG_CMAP_RGB_ALPHA_BACKGROUND\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000\b\u0005\u0000\u0000\b\u0000\u0000\u0000\b\u0005\u0000\u0000\u0001\u0000\u0000\u0000\u0017\u0005\u0000\u0000\u0001\u0000\u0000Ostruct (unnamed at C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\pngread.c:1289:9)Ostruct (unnamed at C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\pngread.c:1289:9)@(unnamed at C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\pngread.)\u0000\u0000OSTRUCT (UNNAMED AT C:\\USERS\\SBLO\\AI-UPP\\UPPSRC\\PLUGIN\\PNG\\LIB\\PNGREAD.C:1289:9)Ostruct (unnamed at C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\pngread.c:1289:9)OSTRUCT (UNNAMED AT C:\\USERS\\SBLO\\AI-UPP\\UPPSRC\\PLUGIN\\PNG\\LIB\\PNGREAD.C:1289:9)\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000\v\u0005\u0000\u0000\u0003\u0000\u0000\u0000\v\u0005\u0000\u0000\u0013\u0000\u0000\u0000\v\u0005\u0000\u0000\u0001\u0000\u0000\u0005image\u0003int\a::image\tint image\u0000\u0005IMAGE\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000\f\u0005\u0000\u0000\u0003\u0000\u0000\u0000\f\u0005\u0000\u0000\u0014\u0000\u0000\u0000\f\u0005\u0000\u0000\u0001\u0000\u0000\u0006buffer\tpng_voidp\b::buffer\u0010png_voidp buffer\u0000\u0006BUFFER\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000\r\u0005\u0000\u0000\u0003\u0000\u0000\u0000\r\u0005\u0000\u0000\u0018\u0000\u0000\u0000\r\u0005\u0000\u0000\u0001\u0000\u0000\nrow_stride\npng_int_32\f::row_stride\u0015png_int_32 row_stride\u0000\nROW_STRIDE\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u000E\u0000\u0000\u0000\u000E\u0005\u0000\u0000\u0003\u0000\u0000\u0000\u000E\u0005\u0000\u0000\u0016\u0000\u0000\u0000\u000E\u0005\u0000\u0000\u0001\u0000\u0000\bcolormap\tpng_voidp\n::colormap\u0012png_voidp colormap\u0000\bCOLORMAP\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u000F\u0005\u0000\u0000\u0003\u0000\u0000\u0000\u000F\u0005\u0000\u0000\u001E\u0000\u0000\u0000\u000F\u0005\u0000\u0000\u0001\u0000\u0000\nbackground\u0003int\f::background\u000Eint background\u0000\nBACKGROUND\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0011\u0005\u0000\u0000\u0003\u0000\u0000\u0000\u0011\u0005\u0000\u0000\u001C\u0000\u0000\u0000\u0011\u0005\u0000\u0000\u0001\u0000\u0000\tlocal_row\tpng_voidp\v::local_row\u0013png_voidp local_row\u0000\tLOCAL_ROW\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0012\u0005\u0000\u0000\u0003\u0000\u0000\u0000\u0012\u0005\u0000\u0000\u001C\u0000\u0000\u0000\u0012\u0005\u0000\u0000\u0001\u0000\u0000\tfirst_row\tpng_voidp\v::first_row\u0013png_voidp first_row\u0000\tFIRST_ROW\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0013\u0005\u0000\u0000\u0003\u0000\u0000\u0000\u0013\u0005\u0000\u0000\u001C\u0000\u0000\u0000\u0013\u0005\u0000\u0000\u0001\u0000\u0000\trow_bytes\tptrdiff_t\v::row_bytes\u0013ptrdiff_t row_bytes\u0000\tROW_BYTES\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0014\u0005\u0000\u0000\u0003\u0000\u0000\u0000\u0014\u0005\u0000\u0000 \u0000\u0000\u0000\u0014\u0005\u0000\u0000\u0001\u0000\u0000\rfile_encoding\u0003int\u000F::file_encoding\u0011int file_encoding\u0000\rFILE_ENCODING\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0015\u0005\u0000\u0000\u0003\u0000\u0000\u0000\u0015\u0005\u0000\u0000\"\u0000\u0000\u0000\u0015\u0005\u0000\u0000\u0001\u0000\u0000\u000Fgamma_to_linear\u000Fpng_fixed_point\u0011::gamma_to_linear\u001Fpng_fixed_point gamma_to_linear\u0000\u000FGAMMA_TO_LINEAR\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0016\u0005\u0000\u0000\u0003\u0000\u0000\u0000\u0016\u0005\u0000\u0000&\u0000\u0000\u0000\u0016\u0005\u0000\u0000\u0001\u0000\u0000\u0013colormap_processing\u0003int\u0015::colormap_processing\u0017int colormap_processing\u0000\u0013COLORMAP_PROCESSING\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0017\u0005\u0000\u0000\u0000\u0000\u0000\u0000\b\u0005\u0000\u0000\u0018\u0000\u0000\u0000\u0017\u0005\u0000\u0000\u0001\u0000\u0000\u0016png_image_read_control\u0016png_image_read_control\u0016png_image_read_control\u001Etypedef png_image_read_control\u0000\u0016PNG_IMAGE_READ_CONTROL\u0000\u0000@(unnamed at C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\pngread.)\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001F\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0005\u0000\u0000\u0001\u0000\u0000\u0000L\u0005\u0000\u0000\u0001\u0000\u0001\u0013png_image_read_init\tint (int)\u0018png_image_read_init(int))static int png_image_read_init(int image)\u0000\u0013PNG_IMAGE_READ_INIT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000P\u0005\u0000\u0000\u0000\u0000\u0000\u0000O\u0005\u0000\u0000\u0001\u0000\u0000\u0000i\u0005\u0000\u0000\u0001\u0000\u0001\u0010png_image_format\u0011png_uint_32 (int)\u0015png_image_format(int)0static png_uint_32 png_image_format(int png_ptr)\u0000\u0010PNG_IMAGE_FORMAT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0005\u0000\u0000\u0000\u0000\u0000\u0000p\u0005\u0000\u0000\u0001\u0000\u0000\u0000}\u0005\u0000\u0000\u0001\u0000\u0001\u0012png_gamma_not_sRGB\u0015int (png_fixed_point)#png_gamma_not_sRGB(png_fixed_point)0static int png_gamma_not_sRGB(png_fixed_point g)\u0000\u0012PNG_GAMMA_NOT_SRGB\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0001\u0000\u0000\u0000Á\u0005\u0000\u0000\u0001\u0000\u0001\u0015png_image_read_header\u000Fint (png_voidp) png_image_read_header(png_voidp)4static int png_image_read_header(png_voidp argument)\u0000\u0015PNG_IMAGE_READ_HEADER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Å\u0005\u0000\u0000\u0000\u0000\u0000\u0000Ä\u0005\u0000\u0000\u0001\u0000\u0000\u0000à\u0005\u0000\u0000\u0001\u0000\u0000\u001Fpng_image_begin_read_from_stdio\u0010int (int, int *))png_image_begin_read_from_stdio(int,int*)9int png_image_begin_read_from_stdio(int image, int *file)\u0000\u001FPNG_IMAGE_BEGIN_READ_FROM_STDIO\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ã\u0005\u0000\u0000\u0000\u0000\u0000\u0000â\u0005\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0006\u0000\u0000\u0001\u0000\u0000\u001Epng_image_begin_read_from_file\u0017int (int, const char *)/png_image_begin_read_from_file(int,const char*)Dint png_image_begin_read_from_file(int image, const char *file_name)\u0000\u001EPNG_IMAGE_BEGIN_READ_FROM_FILE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n\u0006\u0000\u0000\u0000\u0000\u0000\u0000\t\u0006\u0000\u0000\u0001\u0000\u0000\u0000%\u0006\u0000\u0000\u0001\u0000\u0001\u0015png_image_memory_read\u001Dvoid (int, png_bytep, size_t)+png_image_memory_read(int,png_bytep,size_t)Jstatic void png_image_memory_read(int png_ptr, png_bytep out, size_t need)\u0000\u0015PNG_IMAGE_MEMORY_READ\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\v\u0000\u0000\u0000'\u0006\u0000\u0000\u0000\u0000\u0000\u0000'\u0006\u0000\u0000\u0001\u0000\u0000\u0000G\u0006\u0000\u0000\u0001\u0000\u0000 png_image_begin_read_from_memory\"int (int, png_const_voidp, size_t)<png_image_begin_read_from_memory(int,png_const_voidp,size_t)Tint png_image_begin_read_from_memory(int image, png_const_voidp memory, size_t size)\u0000 PNG_IMAGE_BEGIN_READ_FROM_MEMORY\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000N\u0006\u0000\u0000\u0000\u0000\u0000\u0000M\u0006\u0000\u0000\u0001\u0000\u0000\u0000x\u0006\u0000\u0000\u0001\u0000\u0001\u001Cpng_image_skip_unused_chunks\nvoid (int)!png_image_skip_unused_chunks(int)5static void png_image_skip_unused_chunks(int png_ptr)\u0000\u001CPNG_IMAGE_SKIP_UNUSED_CHUNKS\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\n\u0000\u0000\u0000z\u0006\u0000\u0000\n\u0000\u0000\u0000z\u0006\u0000\u0000<\u0000\u0000\u0000z\u0006\u0000\u0000\u0000\u0000\u0000\u000FPNG_SKIP_CHUNKS\u0000\u000FPNG_SKIP_CHUNKS\u000FPNG_SKIP_CHUNKS\u0000\u000FPNG_SKIP_CHUNKS\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u0006\u0000\u0000\b\u0000\u0000\u0000\u0006\u0000\u0000-\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\tPNG_DIV51\u0000\tPNG_DIV51\tPNG_DIV51\u0000\tPNG_DIV51\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0001\u0000\u0001\u0011set_file_encoding\u001Fvoid (png_image_read_control *)*set_file_encoding(png_image_read_control*)>static void set_file_encoding(png_image_read_control *display)\u0000\u0011SET_FILE_ENCODING\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0001\u0000\u0000\u0000¿\u0006\u0000\u0000\u0001\u0000\u0001\fdecode_gamma9unsigned int (png_image_read_control *, png_uint_32, int)5decode_gamma(png_image_read_control*,png_uint_32,int)bstatic unsigned int decode_gamma(png_image_read_control *display, png_uint_32 value, int encoding)\u0000\fDECODE_GAMMA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Â\u0006\u0000\u0000\u0000\u0000\u0000\u0000Á\u0006\u0000\u0000\u0001\u0000\u0000\u0000á\u0006\u0000\u0000\u0001\u0000\u0001\u0014png_colormap_composeWpng_uint_32 (png_image_read_control *, png_uint_32, int, png_uint_32, png_uint_32, int)Ypng_colormap_compose(png_image_read_control*,png_uint_32,int,png_uint_32,png_uint_32,int)ÿ²\u0000\u0000\u0000static png_uint_32 png_colormap_compose(png_image_read_control *display, png_uint_32 foreground, int foreground_encoding, png_uint_32 alpha, png_uint_32 background, int encoding)\u0000\u0014PNG_COLORMAP_COMPOSE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ç\u0006\u0000\u0000\u0000\u0000\u0000\u0000æ\u0006\u0000\u0000\u0001\u0000\u0000\u0000Á\a\u0000\u0000\u0001\u0000\u0001\u0019png_create_colormap_entryevoid (png_image_read_control *, png_uint_32, png_uint_32, png_uint_32, png_uint_32, png_uint_32, int)rpng_create_colormap_entry(png_image_read_control*,png_uint_32,png_uint_32,png_uint_32,png_uint_32,png_uint_32,int)ÿ­\u0000\u0000\u0000static void png_create_colormap_entry(png_image_read_control *display, png_uint_32 ip, png_uint_32 red, png_uint_32 green, png_uint_32 blue, png_uint_32 alpha, int encoding)\u0000\u0019PNG_CREATE_COLORMAP_ENTRY\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ä\a\u0000\u0000\u0000\u0000\u0000\u0000Ã\a\u0000\u0000\u0001\u0000\u0000\u0000Ì\a\u0000\u0000\u0001\u0000\u0001\u0017make_gray_file_colormap\u001Eint (png_image_read_control *)0make_gray_file_colormap(png_image_read_control*)Cstatic int make_gray_file_colormap(png_image_read_control *display)\u0000\u0017MAKE_GRAY_FILE_COLORMAP\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ï\a\u0000\u0000\u0000\u0000\u0000\u0000Î\a\u0000\u0000\u0001\u0000\u0000\u0000×\a\u0000\u0000\u0001\u0000\u0001\u0012make_gray_colormap\u001Eint (png_image_read_control *)+make_gray_colormap(png_image_read_control*)>static int make_gray_colormap(png_image_read_control *display)\u0000\u0012MAKE_GRAY_COLORMAP\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000Ø\a\u0000\u0000\b\u0000\u0000\u0000Ø\a\u0000\u0000%\u0000\u0000\u0000Ø\a\u0000\u0000\u0000\u0000\u0000\u0019PNG_GRAY_COLORMAP_ENTRIES\u0000\u0019PNG_GRAY_COLORMAP_ENTRIES\u0019PNG_GRAY_COLORMAP_ENTRIES\u0000\u0019PNG_GRAY_COLORMAP_ENTRIES\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Û\a\u0000\u0000\u0000\u0000\u0000\u0000Ú\a\u0000\u0000\u0001\u0000\u0000\u0000\r\b\u0000\u0000\u0001\u0000\u0001\u0010make_ga_colormap\u001Eint (png_image_read_control *))make_ga_colormap(png_image_read_control*)<static int make_ga_colormap(png_image_read_control *display)\u0000\u0010MAKE_GA_COLORMAP\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000\u000F\b\u0000\u0000\b\u0000\u0000\u0000\u000F\b\u0000\u0000#\u0000\u0000\u0000\u000F\b\u0000\u0000\u0000\u0000\u0000\u0017PNG_GA_COLORMAP_ENTRIES\u0000\u0017PNG_GA_COLORMAP_ENTRIES\u0017PNG_GA_COLORMAP_ENTRIES\u0000\u0017PNG_GA_COLORMAP_ENTRIES\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\b\u0000\u0000\u0000\u0000\u0000\u0000\u0011\b\u0000\u0000\u0001\u0000\u0000\u0000&\b\u0000\u0000\u0001\u0000\u0001\u0011make_rgb_colormap\u001Eint (png_image_read_control *)*make_rgb_colormap(png_image_read_control*)=static int make_rgb_colormap(png_image_read_control *display)\u0000\u0011MAKE_RGB_COLORMAP\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000(\b\u0000\u0000\b\u0000\u0000\u0000(\b\u0000\u0000$\u0000\u0000\u0000(\b\u0000\u0000\u0000\u0000\u0000\u0018PNG_RGB_COLORMAP_ENTRIES\u0000\u0018PNG_RGB_COLORMAP_ENTRIES\u0018PNG_RGB_COLORMAP_ENTRIES\u0000\u0018PNG_RGB_COLORMAP_ENTRIES\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000+\b\u0000\u0000\b\u0000\u0000\u0000+\b\u0000\u0000E\u0000\u0000\u0000,\b\u0000\u0000\u0000\u0000\u0000\rPNG_RGB_INDEX\u0000\rPNG_RGB_INDEX\rPNG_RGB_INDEX\u0000\rPNG_RGB_INDEX\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000/\b\u0000\u0000\u0000\u0000\u0000\u0000.\b\u0000\u0000\u0001\u0000\u0000\u0000\v\u0000\u0000\u0001\u0000\u0001\u0017png_image_read_colormap\u000Fint (png_voidp)\"png_image_read_colormap(png_voidp)6static int png_image_read_colormap(png_voidp argument)\u0000\u0017PNG_IMAGE_READ_COLORMAP\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\v\u0000\u0000\u0000\u0000\u0000\u0000\v\u0000\u0000\u0001\u0000\u0000\u0000?\f\u0000\u0000\u0001\u0000\u0001\u0016png_image_read_and_map\u000Fint (png_voidp)!png_image_read_and_map(png_voidp)5static int png_image_read_and_map(png_voidp argument)\u0000\u0016PNG_IMAGE_READ_AND_MAP\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000B\f\u0000\u0000\u0000\u0000\u0000\u0000A\f\u0000\u0000\u0001\u0000\u0000\u0000Â\f\u0000\u0000\u0001\u0000\u0001\u001Apng_image_read_colormapped\u000Fint (png_voidp)%png_image_read_colormapped(png_voidp)9static int png_image_read_colormapped(png_voidp argument)\u0000\u001APNG_IMAGE_READ_COLORMAPPED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Æ\f\u0000\u0000\u0000\u0000\u0000\u0000Å\f\u0000\u0000\u0001\u0000\u0000\u00005\r\u0000\u0000\u0001\u0000\u0001\u0018png_image_read_composite\u000Fint (png_voidp)#png_image_read_composite(png_voidp)7static int png_image_read_composite(png_voidp argument)\u0000\u0018PNG_IMAGE_READ_COMPOSITE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000E\r\u0000\u0000\u0000\u0000\u0000\u0000D\r\u0000\u0000\u0001\u0000\u0000\u0000V\u000E\u0000\u0000\u0001\u0000\u0001\u0019png_image_read_background\u000Fint (png_voidp)$png_image_read_background(png_voidp)8static int png_image_read_background(png_voidp argument)\u0000\u0019PNG_IMAGE_READ_BACKGROUND\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Z\u000E\u0000\u0000\u0000\u0000\u0000\u0000Y\u000E\u0000\u0000\u0001\u0000\u0000\u0000\v\u0010\u0000\u0000\u0001\u0000\u0001\u0015png_image_read_direct\u000Fint (png_voidp) png_image_read_direct(png_voidp)4static int png_image_read_direct(png_voidp argument)\u0000\u0015PNG_IMAGE_READ_DIRECT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000E\u0010\u0000\u0000\u0000\u0000\u0000\u0000\r\u0010\u0000\u0000\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0001\u0000\u0000\u0015png_image_finish_read*int (int, int, void *, png_int_32, void *)5png_image_finish_read(int,int,void*,png_int_32,void*)iint png_image_finish_read(int image, int background, void *buffer, png_int_32 row_stride, void *colormap)\u0000\u0015PNG_IMAGE_FINISH_READ\u0000\u0000\u0000\u0000end\u0000°0\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\pngrio.c","value":"data\u0004\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0000\u0000\u0000\u0001\u0000\u0000\u0000(\u0000\u0000\u0000\u0001\u0000\u0000\rpng_read_data\u001Dvoid (int, png_bytep, size_t)#png_read_data(int,png_bytep,size_t)>void png_read_data(int png_ptr, png_bytep data, size_t length)\u0000\rPNG_READ_DATA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00001\u0000\u0000\u0000\u0000\u0000\u0000\u00000\u0000\u0000\u0000\u0001\u0000\u0000\u0000?\u0000\u0000\u0000\u0001\u0000\u0000\u0015png_default_read_data\u001Dvoid (int, png_bytep, size_t)+png_default_read_data(int,png_bytep,size_t)Fvoid png_default_read_data(int png_ptr, png_bytep data, size_t length)\u0000\u0015PNG_DEFAULT_READ_DATA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000V\u0000\u0000\u0000\u0000\u0000\u0000\u0000U\u0000\u0000\u0000\u0001\u0000\u0000\u0000v\u0000\u0000\u0000\u0001\u0000\u0000\u000Fpng_set_read_fn\u001Avoid (int, png_voidp, int)\"png_set_read_fn(int,png_voidp,int)Evoid png_set_read_fn(int png_ptr, png_voidp io_ptr, int read_data_fn)\u0000\u000FPNG_SET_READ_FN\u0000\u0000\u0000\u0000end\u0000s\u0002\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\pngrtran.c","value":"data6\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000#\u0000\u0000\u0000\u0000\u0000\u0000\u0000\"\u0000\u0000\u0000\u0001\u0000\u0000\u0000d\u0000\u0000\u0000\u0001\u0000\u0000\u0012png_set_crc_action\u0014void (int, int, int)\u001Fpng_set_crc_action(int,int,int)Gvoid png_set_crc_action(int png_ptr, int crit_action, int ancil_action)\u0000\u0012PNG_SET_CRC_ACTION\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000m\u0000\u0000\u0000\u0000\u0000\u0000\u0000l\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0001\fpng_rtran_ok\u000Eint (int, int)\u0015png_rtran_ok(int,int)3static int png_rtran_ok(int png_ptr, int need_IHDR)\u0000\fPNG_RTRAN_OK\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000¢\u0000\u0000\u0000\u0001\u0000\u0000\u0018png_set_background_fixed*void (int, int, int, int, png_fixed_point)9png_set_background_fixed(int,int,int,int,png_fixed_point)ÿ\u0000\u0000\u0000void png_set_background_fixed(int png_ptr, int background_color, int background_gamma_code, int need_expand, png_fixed_point background_gamma)\u0000\u0018PNG_SET_BACKGROUND_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¦\u0000\u0000\u0000\u0000\u0000\u0000\u0000¥\u0000\u0000\u0000\u0001\u0000\u0000\u0000¬\u0000\u0000\u0000\u0001\u0000\u0000\u0012png_set_background!void (int, int, int, int, double)*png_set_background(int,int,int,int,double)ÿ\u007F\u0000\u0000\u0000void png_set_background(int png_ptr, int background_color, int background_gamma_code, int need_expand, double background_gamma)\u0000\u0012PNG_SET_BACKGROUND\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¶\u0000\u0000\u0000\u0000\u0000\u0000\u0000µ\u0000\u0000\u0000\u0001\u0000\u0000\u0000¾\u0000\u0000\u0000\u0001\u0000\u0000\u0010png_set_scale_16\nvoid (int)\u0015png_set_scale_16(int)\"void png_set_scale_16(int png_ptr)\u0000\u0010PNG_SET_SCALE_16\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ä\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ã\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ì\u0000\u0000\u0000\u0001\u0000\u0000\u0010png_set_strip_16\nvoid (int)\u0015png_set_strip_16(int)\"void png_set_strip_16(int png_ptr)\u0000\u0010PNG_SET_STRIP_16\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ñ\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ð\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ù\u0000\u0000\u0000\u0001\u0000\u0000\u0013png_set_strip_alpha\nvoid (int)\u0018png_set_strip_alpha(int)%void png_set_strip_alpha(int png_ptr)\u0000\u0013PNG_SET_STRIP_ALPHA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Þ\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ý\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0001\u0000\u0000\u0001\u0000\u0001\u0015translate_gamma_flags+png_fixed_point (int, png_fixed_point, int).translate_gamma_flags(int,png_fixed_point,int)fstatic png_fixed_point translate_gamma_flags(int png_ptr, png_fixed_point output_gamma, int is_screen)\u0000\u0015TRANSLATE_GAMMA_FLAGS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0018\u0001\u0000\u0000\u0001\u0000\u0001\u0013convert_gamma_value\u001Dpng_fixed_point (int, double)\u001Fconvert_gamma_value(int,double)Lstatic png_fixed_point convert_gamma_value(int png_ptr, double output_gamma)\u0000\u0013CONVERT_GAMMA_VALUE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u001D\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0018png_set_alpha_mode_fixed void (int, int, png_fixed_point)1png_set_alpha_mode_fixed(int,int,png_fixed_point)Rvoid png_set_alpha_mode_fixed(int png_ptr, int mode, png_fixed_point output_gamma)\u0000\u0018PNG_SET_ALPHA_MODE_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0012png_set_alpha_mode\u0017void (int, int, double)\"png_set_alpha_mode(int,int,double)Cvoid png_set_alpha_mode(int png_ptr, int mode, double output_gamma)\u0000\u0012PNG_SET_ALPHA_MODE\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u000F\u0000\u0000\u0000 \u0001\u0000\u0000\b\u0000\u0000\u0000 \u0001\u0000\u0000\u0001\u0000\u0000\u0000¥\u0001\u0000\u0000\u0001\u0000\u0000\u0010png_dsort_struct\u0017struct png_dsort_struct\u0010png_dsort_struct\u0010png_dsort_struct\u0000\u0010PNG_DSORT_STRUCT\u0010png_dsort_struct\u0010PNG_DSORT_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\u001D\u0000\u0000\u0000¢\u0001\u0000\u0000\u0003\u0000\u0000\u0000¢\u0001\u0000\u0000!\u0000\u0000\u0000¢\u0001\u0000\u0000\u0001\u0000\u0000\u0004next\u0019struct png_dsort_struct *\u0016png_dsort_struct::next\u0016png_dsort_struct *next\u0000\u0004NEXT\u0010png_dsort_struct\u0010PNG_DSORT_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000£\u0001\u0000\u0000\u0003\u0000\u0000\u0000£\u0001\u0000\u0000\u0010\u0000\u0000\u0000£\u0001\u0000\u0000\u0001\u0000\u0000\u0004left\bpng_byte\u0016png_dsort_struct::left\rpng_byte left\u0000\u0004LEFT\u0010png_dsort_struct\u0010PNG_DSORT_STRUCT\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000¤\u0001\u0000\u0000\u0003\u0000\u0000\u0000¤\u0001\u0000\u0000\u0011\u0000\u0000\u0000¤\u0001\u0000\u0000\u0001\u0000\u0000\u0005right\bpng_byte\u0017png_dsort_struct::right\u000Epng_byte right\u0000\u0005RIGHT\u0010png_dsort_struct\u0010PNG_DSORT_STRUCT\u0000\u0000\u0014\u0000\u0000\u0000\u0002\u0000\u0000\u0000¥\u0001\u0000\u0000\u0000\u0000\u0000\u0000 \u0001\u0000\u0000\v\u0000\u0000\u0000¥\u0001\u0000\u0000\u0001\u0000\u0000\tpng_dsort\tpng_dsort\tpng_dsort\"typedef png_dsort_struct png_dsort\u0000\tPNG_DSORT\u0000\u0000\u0010png_dsort_struct\u0000\u0014\u0000\u0000\u0000\u0016\u0000\u0000\u0000¦\u0001\u0000\u0000\u0000\u0000\u0000\u0000¦\u0001\u0000\u0000 \u0000\u0000\u0000¦\u0001\u0000\u0000\u0001\u0000\u0000\npng_dsortp\npng_dsortp\npng_dsortp\u001Dtypedef png_dsort *png_dsortp\u0000\nPNG_DSORTP\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0016\u0000\u0000\u0000§\u0001\u0000\u0000\u0000\u0000\u0000\u0000§\u0001\u0000\u0000!\u0000\u0000\u0000§\u0001\u0000\u0000\u0001\u0000\u0000\vpng_dsortpp\vpng_dsortpp\vpng_dsortpp\u001Ftypedef png_dsort **png_dsortpp\u0000\vPNG_DSORTPP\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ª\u0001\u0000\u0000\u0000\u0000\u0000\u0000©\u0001\u0000\u0000\u0001\u0000\u0000\u0000(\u0003\u0000\u0000\u0001\u0000\u0000\u0010png_set_quantize2void (int, int, int, int, png_const_uint_16p, int)8png_set_quantize(int,int,int,int,png_const_uint_16p,int)ÿ\u0000\u0000\u0000void png_set_quantize(int png_ptr, int palette, int num_palette, int maximum_colors, png_const_uint_16p histogram, int full_quantize)\u0000\u0010PNG_SET_QUANTIZE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000-\u0003\u0000\u0000\u0000\u0000\u0000\u0000,\u0003\u0000\u0000\u0001\u0000\u0000\u0000Q\u0003\u0000\u0000\u0001\u0000\u0000\u0013png_set_gamma_fixed,void (int, png_fixed_point, png_fixed_point)8png_set_gamma_fixed(int,png_fixed_point,png_fixed_point)]void png_set_gamma_fixed(int png_ptr, png_fixed_point scrn_gamma, png_fixed_point file_gamma)\u0000\u0013PNG_SET_GAMMA_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000U\u0003\u0000\u0000\u0000\u0000\u0000\u0000T\u0003\u0000\u0000\u0001\u0000\u0000\u0000Y\u0003\u0000\u0000\u0001\u0000\u0000\rpng_set_gamma\u001Avoid (int, double, double) png_set_gamma(int,double,double)Evoid png_set_gamma(int png_ptr, double scrn_gamma, double file_gamma)\u0000\rPNG_SET_GAMMA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000c\u0003\u0000\u0000\u0000\u0000\u0000\u0000b\u0003\u0000\u0000\u0001\u0000\u0000\u0000k\u0003\u0000\u0000\u0001\u0000\u0000\u000Epng_set_expand\nvoid (int)\u0013png_set_expand(int) void png_set_expand(int png_ptr)\u0000\u000EPNG_SET_EXPAND\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0001\u0000\u0000\u0016png_set_palette_to_rgb\nvoid (int)\u001Bpng_set_palette_to_rgb(int)(void png_set_palette_to_rgb(int png_ptr)\u0000\u0016PNG_SET_PALETTE_TO_RGB\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0001\u0000\u0000\u001Epng_set_expand_gray_1_2_4_to_8\nvoid (int)#png_set_expand_gray_1_2_4_to_8(int)0void png_set_expand_gray_1_2_4_to_8(int png_ptr)\u0000\u001EPNG_SET_EXPAND_GRAY_1_2_4_TO_8\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0001\u0000\u0000\u0000¡\u0003\u0000\u0000\u0001\u0000\u0000\u0015png_set_tRNS_to_alpha\nvoid (int)\u001Apng_set_tRNS_to_alpha(int)'void png_set_tRNS_to_alpha(int png_ptr)\u0000\u0015PNG_SET_TRNS_TO_ALPHA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000©\u0003\u0000\u0000\u0000\u0000\u0000\u0000¨\u0003\u0000\u0000\u0001\u0000\u0000\u0000±\u0003\u0000\u0000\u0001\u0000\u0000\u0011png_set_expand_16\nvoid (int)\u0016png_set_expand_16(int)#void png_set_expand_16(int png_ptr)\u0000\u0011PNG_SET_EXPAND_16\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¶\u0003\u0000\u0000\u0000\u0000\u0000\u0000µ\u0003\u0000\u0000\u0001\u0000\u0000\u0000À\u0003\u0000\u0000\u0001\u0000\u0000\u0013png_set_gray_to_rgb\nvoid (int)\u0018png_set_gray_to_rgb(int)%void png_set_gray_to_rgb(int png_ptr)\u0000\u0013PNG_SET_GRAY_TO_RGB\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Å\u0003\u0000\u0000\u0000\u0000\u0000\u0000Ä\u0003\u0000\u0000\u0001\u0000\u0000\u0000\u0016\u0004\u0000\u0000\u0001\u0000\u0000\u0019png_set_rgb_to_gray_fixed1void (int, int, png_fixed_point, png_fixed_point)Bpng_set_rgb_to_gray_fixed(int,int,png_fixed_point,png_fixed_point)ivoid png_set_rgb_to_gray_fixed(int png_ptr, int error_action, png_fixed_point red, png_fixed_point green)\u0000\u0019PNG_SET_RGB_TO_GRAY_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u001D\u0004\u0000\u0000\u0001\u0000\u0000\u0000$\u0004\u0000\u0000\u0001\u0000\u0000\u0013png_set_rgb_to_gray\u001Fvoid (int, int, double, double)*png_set_rgb_to_gray(int,int,double,double)Qvoid png_set_rgb_to_gray(int png_ptr, int error_action, double red, double green)\u0000\u0013PNG_SET_RGB_TO_GRAY\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000,\u0004\u0000\u0000\u0000\u0000\u0000\u0000+\u0004\u0000\u0000\u0001\u0000\u0000\u00005\u0004\u0000\u0000\u0001\u0000\u0000\u001Epng_set_read_user_transform_fn\u000Fvoid (int, int)'png_set_read_user_transform_fn(int,int)Lvoid png_set_read_user_transform_fn(int png_ptr, int read_user_transform_fn)\u0000\u001EPNG_SET_READ_USER_TRANSFORM_FN\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000?\u0004\u0000\u0000\u0000\u0000\u0000\u0000>\u0004\u0000\u0000\u0001\u0000\u0000\u0000K\u0004\u0000\u0000\u0001\u0000\u0001\u0013png_gamma_threshold&int (png_fixed_point, png_fixed_point)4png_gamma_threshold(png_fixed_point,png_fixed_point)Xstatic int png_gamma_threshold(png_fixed_point screen_gamma, png_fixed_point file_gamma)\u0000\u0013PNG_GAMMA_THRESHOLD\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000X\u0004\u0000\u0000\u0000\u0000\u0000\u0000W\u0004\u0000\u0000\u0001\u0000\u0000\u0000®\u0004\u0000\u0000\u0001\u0000\u0001 png_init_palette_transformations\nvoid (int)%png_init_palette_transformations(int)9static void png_init_palette_transformations(int png_ptr)\u0000 PNG_INIT_PALETTE_TRANSFORMATIONS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000±\u0004\u0000\u0000\u0000\u0000\u0000\u0000°\u0004\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0005\u0000\u0000\u0001\u0000\u0001\u001Cpng_init_rgb_transformations\nvoid (int)!png_init_rgb_transformations(int)5static void png_init_rgb_transformations(int png_ptr)\u0000\u001CPNG_INIT_RGB_TRANSFORMATIONS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0005\u0000\u0000\u0001\u0000\u0000\u0000\a\u0000\u0000\u0001\u0000\u0000\u001Dpng_init_read_transformations\nvoid (int)\"png_init_read_transformations(int)/void png_init_read_transformations(int png_ptr)\u0000\u001DPNG_INIT_READ_TRANSFORMATIONS\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\r\u0000\u0000\u0000ç\u0005\u0000\u0000\r\u0000\u0000\u0000ç\u0005\u0000\u00005\u0000\u0000\u0000ç\u0005\u0000\u0000\u0000\u0000\u0000\u0004CHOP\u0000\u0004CHOP\u0004CHOP\u0000\u0004CHOP\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0001\u0000\u0000\u0000Y\b\u0000\u0000\u0001\u0000\u0000\u0017png_read_transform_info\u000Fvoid (int, int) png_read_transform_info(int,int)7void png_read_transform_info(int png_ptr, int info_ptr)\u0000\u0017PNG_READ_TRANSFORM_INFO\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000c\b\u0000\u0000\u0000\u0000\u0000\u0000b\b\u0000\u0000\u0001\u0000\u0000\u0000»\b\u0000\u0000\u0001\u0000\u0001\rpng_do_unpack\u0015void (int, png_bytep)\u001Cpng_do_unpack(int,png_bytep)6static void png_do_unpack(int row_info, png_bytep row)\u0000\rPNG_DO_UNPACK\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Å\b\u0000\u0000\u0000\u0000\u0000\u0000Ä\b\u0000\u0000\u0001\u0000\u0000\u0000J\t\u0000\u0000\u0001\u0000\u0001\u000Epng_do_unshift\u001Avoid (int, png_bytep, int)!png_do_unshift(int,png_bytep,int)Estatic void png_do_unshift(int row_info, png_bytep row, int sig_bits)\u0000\u000EPNG_DO_UNSHIFT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000P\t\u0000\u0000\u0000\u0000\u0000\u0000O\t\u0000\u0000\u0001\u0000\u0000\u0000\t\u0000\u0000\u0001\u0000\u0001\u0014png_do_scale_16_to_8\u0015void (int, png_bytep)#png_do_scale_16_to_8(int,png_bytep)=static void png_do_scale_16_to_8(int row_info, png_bytep row)\u0000\u0014PNG_DO_SCALE_16_TO_8\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0001\u0000\u0000\u0000¡\t\u0000\u0000\u0001\u0000\u0001\vpng_do_chop\u0015void (int, png_bytep)\u001Apng_do_chop(int,png_bytep)4static void png_do_chop(int row_info, png_bytep row)\u0000\vPNG_DO_CHOP\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¦\t\u0000\u0000\u0000\u0000\u0000\u0000¥\t\u0000\u0000\u0001\u0000\u0000\u0000\u0001\n\u0000\u0000\u0001\u0000\u0001\u0016png_do_read_swap_alpha\u0015void (int, png_bytep)%png_do_read_swap_alpha(int,png_bytep)?static void png_do_read_swap_alpha(int row_info, png_bytep row)\u0000\u0016PNG_DO_READ_SWAP_ALPHA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\n\u0000\u0000\u0000\u0000\u0000\u0000\u0005\n\u0000\u0000\u0001\u0000\u0000\u0000f\n\u0000\u0000\u0001\u0000\u0001\u0018png_do_read_invert_alpha\u0015void (int, png_bytep)'png_do_read_invert_alpha(int,png_bytep)Astatic void png_do_read_invert_alpha(int row_info, png_bytep row)\u0000\u0018PNG_DO_READ_INVERT_ALPHA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000l\n\u0000\u0000\u0000\u0000\u0000\u0000k\n\u0000\u0000\u0001\u0000\u0000\u0000!\v\u0000\u0000\u0001\u0000\u0001\u0012png_do_read_filler/void (int, png_bytep, png_uint_32, png_uint_32)9png_do_read_filler(int,png_bytep,png_uint_32,png_uint_32)bstatic void png_do_read_filler(int row_info, png_bytep row, png_uint_32 filler, png_uint_32 flags)\u0000\u0012PNG_DO_READ_FILLER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000'\v\u0000\u0000\u0000\u0000\u0000\u0000&\v\u0000\u0000\u0001\u0000\u0000\u0000y\v\u0000\u0000\u0001\u0000\u0001\u0012png_do_gray_to_rgb\u0015void (int, png_bytep)!png_do_gray_to_rgb(int,png_bytep);static void png_do_gray_to_rgb(int row_info, png_bytep row)\u0000\u0012PNG_DO_GRAY_TO_RGB\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000²\v\u0000\u0000\u0000\u0000\u0000\u0000±\v\u0000\u0000\u0001\u0000\u0000\u0000q\f\u0000\u0000\u0001\u0000\u0001\u0012png_do_rgb_to_gray\u0019int (int, int, png_bytep)%png_do_rgb_to_gray(int,int,png_bytep)Gstatic int png_do_rgb_to_gray(int png_ptr, int row_info, png_bytep row)\u0000\u0012PNG_DO_RGB_TO_GRAY\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000{\f\u0000\u0000\u0000\u0000\u0000\u0000z\f\u0000\u0000\u0001\u0000\u0000\u0000X\u000F\u0000\u0000\u0001\u0000\u0001\u000Epng_do_compose\u001Avoid (int, png_bytep, int)!png_do_compose(int,png_bytep,int)Dstatic void png_do_compose(int row_info, png_bytep row, int png_ptr)\u0000\u000EPNG_DO_COMPOSE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000c\u000F\u0000\u0000\u0000\u0000\u0000\u0000b\u000F\u0000\u0000\u0001\u0000\u0000\u0000#\u0010\u0000\u0000\u0001\u0000\u0001\fpng_do_gamma\u001Avoid (int, png_bytep, int)\u001Fpng_do_gamma(int,png_bytep,int)Bstatic void png_do_gamma(int row_info, png_bytep row, int png_ptr)\u0000\fPNG_DO_GAMMA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000,\u0010\u0000\u0000\u0000\u0000\u0000\u0000+\u0010\u0000\u0000\u0001\u0000\u0000\u0000d\u0010\u0000\u0000\u0001\u0000\u0001\u0013png_do_encode_alpha\u001Avoid (int, png_bytep, int)&png_do_encode_alpha(int,png_bytep,int)Istatic void png_do_encode_alpha(int row_info, png_bytep row, int png_ptr)\u0000\u0013PNG_DO_ENCODE_ALPHA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000l\u0010\u0000\u0000\u0000\u0000\u0000\u0000k\u0010\u0000\u0000\u0001\u0000\u0000\u0000\u0014\u0011\u0000\u0000\u0001\u0000\u0001\u0015png_do_expand_palette5void (int, int, png_bytep, int, png_const_bytep, int)@png_do_expand_palette(int,int,png_bytep,int,png_const_bytep,int)ÿ\u0000\u0000\u0000static void png_do_expand_palette(int png_ptr, int row_info, png_bytep row, int palette, png_const_bytep trans_alpha, int num_trans)\u0000\u0015PNG_DO_EXPAND_PALETTE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001A\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0019\u0011\u0000\u0000\u0001\u0000\u0000\u0000ø\u0011\u0000\u0000\u0001\u0000\u0001\rpng_do_expand\u001Avoid (int, png_bytep, int) png_do_expand(int,png_bytep,int)Gstatic void png_do_expand(int row_info, png_bytep row, int trans_color)\u0000\rPNG_DO_EXPAND\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000ÿ\u0011\u0000\u0000\u0001\u0000\u0000\u0000\u0019\u0012\u0000\u0000\u0001\u0000\u0001\u0010png_do_expand_16\u0015void (int, png_bytep)\u001Fpng_do_expand_16(int,png_bytep)9static void png_do_expand_16(int row_info, png_bytep row)\u0000\u0010PNG_DO_EXPAND_16\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u001D\u0012\u0000\u0000\u0001\u0000\u0000\u0000w\u0012\u0000\u0000\u0001\u0000\u0001\u000Fpng_do_quantize7void (int, png_bytep, png_const_bytep, png_const_bytep)>png_do_quantize(int,png_bytep,png_const_bytep,png_const_bytep)ystatic void png_do_quantize(int row_info, png_bytep row, png_const_bytep palette_lookup, png_const_bytep quantize_lookup)\u0000\u000FPNG_DO_QUANTIZE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u007F\u0012\u0000\u0000\u0000\u0000\u0000\u0000~\u0012\u0000\u0000\u0001\u0000\u0000\u0000¬\u0013\u0000\u0000\u0001\u0000\u0000\u001Bpng_do_read_transformations\u000Fvoid (int, int)$png_do_read_transformations(int,int);void png_do_read_transformations(int png_ptr, int row_info)\u0000\u001BPNG_DO_READ_TRANSFORMATIONS\u0000\u0000\u0000\u0000end\u0000\u0005)\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\pngrutil.c","value":"dataF\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0000\u0000\u000Fpng_get_uint_31\"png_uint_32 (int, png_const_bytep)$png_get_uint_31(int,png_const_bytep)=png_uint_32 png_get_uint_31(int png_ptr, png_const_bytep buf)\u0000\u000FPNG_GET_UINT_31\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\b\u0000\u0000\u0000%\u0000\u0000\u0000\b\u0000\u0000\u0000%\u0000\u0000\u0000\u001C\u0000\u0000\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u000FPNG_FIXED_ERROR\u0000\u000FPNG_FIXED_ERROR\u000FPNG_FIXED_ERROR\u0000\u000FPNG_FIXED_ERROR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000\u0000\u0000\u0000'\u0000\u0000\u0000\u0001\u0000\u0000\u00004\u0000\u0000\u0000\u0001\u0000\u0001\u0013png_get_fixed_point&png_fixed_point (int, png_const_bytep)(png_get_fixed_point(int,png_const_bytep)Lstatic png_fixed_point png_get_fixed_point(int png_ptr, png_const_bytep buf)\u0000\u0013PNG_GET_FIXED_POINT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000C\u0000\u0000\u0000\u0000\u0000\u0000\u0000B\u0000\u0000\u0000\u0001\u0000\u0000\u0000L\u0000\u0000\u0000\u0001\u0000\u0000\u000Fpng_get_uint_32\u001Dpng_uint_32 (png_const_bytep) png_get_uint_32(png_const_bytep)0png_uint_32 png_get_uint_32(png_const_bytep buf)\u0000\u000FPNG_GET_UINT_32\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000T\u0000\u0000\u0000\u0000\u0000\u0000\u0000S\u0000\u0000\u0000\u0001\u0000\u0000\u0000b\u0000\u0000\u0000\u0001\u0000\u0000\u000Epng_get_int_32\u001Cpng_int_32 (png_const_bytep)\u001Fpng_get_int_32(png_const_bytep).png_int_32 png_get_int_32(png_const_bytep buf)\u0000\u000EPNG_GET_INT_32\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000e\u0000\u0000\u0000\u0001\u0000\u0000\u0000r\u0000\u0000\u0000\u0001\u0000\u0000\u000Fpng_get_uint_16\u001Dpng_uint_16 (png_const_bytep) png_get_uint_16(png_const_bytep)0png_uint_16 png_get_uint_16(png_const_bytep buf)\u0000\u000FPNG_GET_UINT_16\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000x\u0000\u0000\u0000\u0000\u0000\u0000\u0000w\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\fpng_read_sig\u000Fvoid (int, int)\u0015png_read_sig(int,int),void png_read_sig(int png_ptr, int info_ptr)\u0000\fPNG_READ_SIG\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000¿\u0000\u0000\u0000\u0001\u0000\u0000\u0015png_read_chunk_header\u0011png_uint_32 (int)\u001Apng_read_chunk_header(int).png_uint_32 png_read_chunk_header(int png_ptr)\u0000\u0015PNG_READ_CHUNK_HEADER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ã\u0000\u0000\u0000\u0000\u0000\u0000\u0000Â\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ê\u0000\u0000\u0000\u0001\u0000\u0000\fpng_crc_read\"void (int, png_bytep, png_uint_32)'png_crc_read(int,png_bytep,png_uint_32)Avoid png_crc_read(int png_ptr, png_bytep buf, png_uint_32 length)\u0000\fPNG_CRC_READ\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ò\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ñ\u0000\u0000\u0000\u0001\u0000\u0000\u0000ô\u0000\u0000\u0000\u0001\u0000\u0000\u000Epng_crc_finish\u0016int (int, png_uint_32)\u001Fpng_crc_finish(int,png_uint_32)1int png_crc_finish(int png_ptr, png_uint_32 skip)\u0000\u000EPNG_CRC_FINISH\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ú\u0000\u0000\u0000\u0000\u0000\u0000\u0000ù\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001C\u0001\u0000\u0000\u0001\u0000\u0000\rpng_crc_error\tint (int)\u0012png_crc_error(int)\u001Eint png_crc_error(int png_ptr)\u0000\rPNG_CRC_ERROR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0001\u0000\u0000\u0000K\u0001\u0000\u0000\u0001\u0000\u0001\u000Fpng_read_buffer&png_bytep (int, png_alloc_size_t, int))png_read_buffer(int,png_alloc_size_t,int)Rstatic png_bytep png_read_buffer(int png_ptr, png_alloc_size_t new_size, int warn)\u0000\u000FPNG_READ_BUFFER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000T\u0001\u0000\u0000\u0000\u0000\u0000\u0000S\u0001\u0000\u0000\u0001\u0000\u0000\u0000¹\u0001\u0000\u0000\u0001\u0000\u0001\u0011png_inflate_claim\u0016int (int, png_uint_32)\"png_inflate_claim(int,png_uint_32)<static int png_inflate_claim(int png_ptr, png_uint_32 owner)\u0000\u0011PNG_INFLATE_CLAIM\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ã\u0001\u0000\u0000\u0000\u0000\u0000\u0000Â\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ñ\u0001\u0000\u0000\u0001\u0000\u0000\u0010png_zlib_inflate\u000Eint (int, int)\u0019png_zlib_inflate(int,int),int png_zlib_inflate(int png_ptr, int flush)\u0000\u0010PNG_ZLIB_INFLATE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000â\u0001\u0000\u0000\u0000\u0000\u0000\u0000á\u0001\u0000\u0000\u0001\u0000\u0000\u0000U\u0002\u0000\u0000\u0001\u0000\u0001\vpng_inflateYint (int, png_uint_32, int, png_const_bytep, png_uint_32p, png_bytep, png_alloc_size_t *)Ypng_inflate(int,png_uint_32,int,png_const_bytep,png_uint_32p,png_bytep,png_alloc_size_t*)ÿ«\u0000\u0000\u0000static int png_inflate(int png_ptr, png_uint_32 owner, int finish, png_const_bytep input, png_uint_32p input_size_ptr, png_bytep output, png_alloc_size_t *output_size_ptr)\u0000\vPNG_INFLATE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000_\u0002\u0000\u0000\u0000\u0000\u0000\u0000^\u0002\u0000\u0000\u0001\u0000\u0000\u0000ú\u0002\u0000\u0000\u0001\u0000\u0001\u0014png_decompress_chunk<int (int, png_uint_32, png_uint_32, png_alloc_size_t *, int)Gpng_decompress_chunk(int,png_uint_32,png_uint_32,png_alloc_size_t*,int)ÿ\u0000\u0000\u0000static int png_decompress_chunk(int png_ptr, png_uint_32 chunklength, png_uint_32 prefix_size, png_alloc_size_t *newlength, int terminate)\u0000\u0014PNG_DECOMPRESS_CHUNK\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0003\u0000\u0000\u0001\u0000\u0000\u0000>\u0003\u0000\u0000\u0001\u0000\u0001\u0010png_inflate_readLint (int, png_bytep, uInt, png_uint_32p, png_bytep, png_alloc_size_t *, int)Qpng_inflate_read(int,png_bytep,uInt,png_uint_32p,png_bytep,png_alloc_size_t*,int)ÿ¥\u0000\u0000\u0000static int png_inflate_read(int png_ptr, png_bytep read_buffer, uInt read_size, png_uint_32p chunk_bytes, png_bytep next_out, png_alloc_size_t *out_size, int finish)\u0000\u0010PNG_INFLATE_READ\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000D\u0003\u0000\u0000\u0000\u0000\u0000\u0000C\u0003\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0001\u0000\u0000\u000Fpng_handle_IHDR\u001Cvoid (int, int, png_uint_32)$png_handle_IHDR(int,int,png_uint_32)Cvoid png_handle_IHDR(int png_ptr, int info_ptr, png_uint_32 length)\u0000\u000FPNG_HANDLE_IHDR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0001\u0000\u0000\u0000F\u0004\u0000\u0000\u0001\u0000\u0000\u000Fpng_handle_PLTE\u001Cvoid (int, int, png_uint_32)$png_handle_PLTE(int,int,png_uint_32)Cvoid png_handle_PLTE(int png_ptr, int info_ptr, png_uint_32 length)\u0000\u000FPNG_HANDLE_PLTE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000I\u0004\u0000\u0000\u0000\u0000\u0000\u0000H\u0004\u0000\u0000\u0001\u0000\u0000\u0000Y\u0004\u0000\u0000\u0001\u0000\u0000\u000Fpng_handle_IEND\u001Cvoid (int, int, png_uint_32)$png_handle_IEND(int,int,png_uint_32)Cvoid png_handle_IEND(int png_ptr, int info_ptr, png_uint_32 length)\u0000\u000FPNG_HANDLE_IEND\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000]\u0004\u0000\u0000\u0000\u0000\u0000\u0000\\\u0004\u0000\u0000\u0001\u0000\u0000\u0000~\u0004\u0000\u0000\u0001\u0000\u0000\u000Fpng_handle_gAMA\u001Cvoid (int, int, png_uint_32)$png_handle_gAMA(int,int,png_uint_32)Cvoid png_handle_gAMA(int png_ptr, int info_ptr, png_uint_32 length)\u0000\u000FPNG_HANDLE_GAMA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0001\u0000\u0000\u0000Ð\u0004\u0000\u0000\u0001\u0000\u0000\u000Fpng_handle_sBIT\u001Cvoid (int, int, png_uint_32)$png_handle_sBIT(int,int,png_uint_32)Cvoid png_handle_sBIT(int png_ptr, int info_ptr, png_uint_32 length)\u0000\u000FPNG_HANDLE_SBIT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Õ\u0004\u0000\u0000\u0000\u0000\u0000\u0000Ô\u0004\u0000\u0000\u0001\u0000\u0000\u0000\u0018\u0005\u0000\u0000\u0001\u0000\u0000\u000Fpng_handle_cHRM\u001Cvoid (int, int, png_uint_32)$png_handle_cHRM(int,int,png_uint_32)Cvoid png_handle_cHRM(int png_ptr, int info_ptr, png_uint_32 length)\u0000\u000FPNG_HANDLE_CHRM\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001D\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u001C\u0005\u0000\u0000\u0001\u0000\u0000\u0000J\u0005\u0000\u0000\u0001\u0000\u0000\u000Fpng_handle_sRGB\u001Cvoid (int, int, png_uint_32)$png_handle_sRGB(int,int,png_uint_32)Cvoid png_handle_sRGB(int png_ptr, int info_ptr, png_uint_32 length)\u0000\u000FPNG_HANDLE_SRGB\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000O\u0005\u0000\u0000\u0000\u0000\u0000\u0000N\u0005\u0000\u0000\u0001\u0000\u0000\u0000`\u0006\u0000\u0000\u0001\u0000\u0000\u000Fpng_handle_iCCP\u001Cvoid (int, int, png_uint_32)$png_handle_iCCP(int,int,png_uint_32)Cvoid png_handle_iCCP(int png_ptr, int info_ptr, png_uint_32 length)\u0000\u000FPNG_HANDLE_ICCP\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000e\u0006\u0000\u0000\u0000\u0000\u0000\u0000d\u0006\u0000\u0000\u0001\u0000\u0000\u0000\u0011\a\u0000\u0000\u0001\u0000\u0000\u000Fpng_handle_sPLT\u001Cvoid (int, int, png_uint_32)$png_handle_sPLT(int,int,png_uint_32)Cvoid png_handle_sPLT(int png_ptr, int info_ptr, png_uint_32 length)\u0000\u000FPNG_HANDLE_SPLT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\a\u0000\u0000\u0000\u0000\u0000\u0000\u0015\a\u0000\u0000\u0001\u0000\u0000\u0000y\a\u0000\u0000\u0001\u0000\u0000\u000Fpng_handle_tRNS\u001Cvoid (int, int, png_uint_32)$png_handle_tRNS(int,int,png_uint_32)Cvoid png_handle_tRNS(int png_ptr, int info_ptr, png_uint_32 length)\u0000\u000FPNG_HANDLE_TRNS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000~\a\u0000\u0000\u0000\u0000\u0000\u0000}\a\u0000\u0000\u0001\u0000\u0000\u0000ï\a\u0000\u0000\u0001\u0000\u0000\u000Fpng_handle_bKGD\u001Cvoid (int, int, png_uint_32)$png_handle_bKGD(int,int,png_uint_32)Cvoid png_handle_bKGD(int png_ptr, int info_ptr, png_uint_32 length)\u0000\u000FPNG_HANDLE_BKGD\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ô\a\u0000\u0000\u0000\u0000\u0000\u0000ó\a\u0000\u0000\u0001\u0000\u0000\u0000/\b\u0000\u0000\u0001\u0000\u0000\u000Fpng_handle_eXIf\u001Cvoid (int, int, png_uint_32)$png_handle_eXIf(int,int,png_uint_32)Cvoid png_handle_eXIf(int png_ptr, int info_ptr, png_uint_32 length)\u0000\u000FPNG_HANDLE_EXIF\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00004\b\u0000\u0000\u0000\u0000\u0000\u00003\b\u0000\u0000\u0001\u0000\u0000\u0000d\b\u0000\u0000\u0001\u0000\u0000\u000Fpng_handle_hIST\u001Cvoid (int, int, png_uint_32)$png_handle_hIST(int,int,png_uint_32)Cvoid png_handle_hIST(int png_ptr, int info_ptr, png_uint_32 length)\u0000\u000FPNG_HANDLE_HIST\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000i\b\u0000\u0000\u0000\u0000\u0000\u0000h\b\u0000\u0000\u0001\u0000\u0000\u0000\b\u0000\u0000\u0001\u0000\u0000\u000Fpng_handle_pHYs\u001Cvoid (int, int, png_uint_32)$png_handle_pHYs(int,int,png_uint_32)Cvoid png_handle_pHYs(int png_ptr, int info_ptr, png_uint_32 length)\u0000\u000FPNG_HANDLE_PHYS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0001\u0000\u0000\u0000À\b\u0000\u0000\u0001\u0000\u0000\u000Fpng_handle_oFFs\u001Cvoid (int, int, png_uint_32)$png_handle_oFFs(int,int,png_uint_32)Cvoid png_handle_oFFs(int png_ptr, int info_ptr, png_uint_32 length)\u0000\u000FPNG_HANDLE_OFFS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Æ\b\u0000\u0000\u0000\u0000\u0000\u0000Å\b\u0000\u0000\u0001\u0000\u0000\u0000A\t\u0000\u0000\u0001\u0000\u0000\u000Fpng_handle_pCAL\u001Cvoid (int, int, png_uint_32)$png_handle_pCAL(int,int,png_uint_32)Cvoid png_handle_pCAL(int png_ptr, int info_ptr, png_uint_32 length)\u0000\u000FPNG_HANDLE_PCAL\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000G\t\u0000\u0000\u0000\u0000\u0000\u0000F\t\u0000\u0000\u0001\u0000\u0000\u0000\t\u0000\u0000\u0001\u0000\u0000\u000Fpng_handle_sCAL\u001Cvoid (int, int, png_uint_32)$png_handle_sCAL(int,int,png_uint_32)Cvoid png_handle_sCAL(int png_ptr, int info_ptr, png_uint_32 length)\u0000\u000FPNG_HANDLE_SCAL\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¤\t\u0000\u0000\u0000\u0000\u0000\u0000£\t\u0000\u0000\u0001\u0000\u0000\u0000Ì\t\u0000\u0000\u0001\u0000\u0000\u000Fpng_handle_tIME\u001Cvoid (int, int, png_uint_32)$png_handle_tIME(int,int,png_uint_32)Cvoid png_handle_tIME(int png_ptr, int info_ptr, png_uint_32 length)\u0000\u000FPNG_HANDLE_TIME\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ò\t\u0000\u0000\u0000\u0000\u0000\u0000Ñ\t\u0000\u0000\u0001\u0000\u0000\u0000\u001D\n\u0000\u0000\u0001\u0000\u0000\u000Fpng_handle_tEXt\u001Cvoid (int, int, png_uint_32)$png_handle_tEXt(int,int,png_uint_32)Cvoid png_handle_tEXt(int png_ptr, int info_ptr, png_uint_32 length)\u0000\u000FPNG_HANDLE_TEXT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000#\n\u0000\u0000\u0000\u0000\u0000\u0000\"\n\u0000\u0000\u0001\u0000\u0000\u0000\n\u0000\u0000\u0001\u0000\u0000\u000Fpng_handle_zTXt\u001Cvoid (int, int, png_uint_32)$png_handle_zTXt(int,int,png_uint_32)Cvoid png_handle_zTXt(int png_ptr, int info_ptr, png_uint_32 length)\u0000\u000FPNG_HANDLE_ZTXT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\n\u0000\u0000\u0001\u0000\u0000\u0000(\v\u0000\u0000\u0001\u0000\u0000\u000Fpng_handle_iTXt\u001Cvoid (int, int, png_uint_32)$png_handle_iTXt(int,int,png_uint_32)Cvoid png_handle_iTXt(int png_ptr, int info_ptr, png_uint_32 length)\u0000\u000FPNG_HANDLE_ITXT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000.\v\u0000\u0000\u0000\u0000\u0000\u0000-\v\u0000\u0000\u0001\u0000\u0000\u0000d\v\u0000\u0000\u0001\u0000\u0001\u0017png_cache_unknown_chunk\u0016int (int, png_uint_32)(png_cache_unknown_chunk(int,png_uint_32)Cstatic int png_cache_unknown_chunk(int png_ptr, png_uint_32 length)\u0000\u0017PNG_CACHE_UNKNOWN_CHUNK\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000i\v\u0000\u0000\u0000\u0000\u0000\u0000h\v\u0000\u0000\u0001\u0000\u0000\u0000.\f\u0000\u0000\u0001\u0000\u0000\u0012png_handle_unknown!void (int, int, png_uint_32, int)+png_handle_unknown(int,int,png_uint_32,int)Pvoid png_handle_unknown(int png_ptr, int info_ptr, png_uint_32 length, int keep)\u0000\u0012PNG_HANDLE_UNKNOWN\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000=\f\u0000\u0000\u0000\u0000\u0000\u0000<\f\u0000\u0000\u0001\u0000\u0000\u0000M\f\u0000\u0000\u0001\u0000\u0000\u0014png_check_chunk_name\u0017void (int, png_uint_32)%png_check_chunk_name(int,png_uint_32)>void png_check_chunk_name(int png_ptr, png_uint_32 chunk_name)\u0000\u0014PNG_CHECK_CHUNK_NAME\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000P\f\u0000\u0000\u0000\u0000\u0000\u0000O\f\u0000\u0000\u0001\u0000\u0000\u0000u\f\u0000\u0000\u0001\u0000\u0000\u0016png_check_chunk_length\u0017void (int, png_uint_32)'png_check_chunk_length(int,png_uint_32)<void png_check_chunk_length(int png_ptr, png_uint_32 length)\u0000\u0016PNG_CHECK_CHUNK_LENGTH\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u007F\f\u0000\u0000\u0000\u0000\u0000\u0000~\f\u0000\u0000\u0001\u0000\u0000\u0000_\u000E\u0000\u0000\u0001\u0000\u0000\u000Fpng_combine_row\u001Avoid (int, png_bytep, int)\"png_combine_row(int,png_bytep,int)<void png_combine_row(int png_ptr, png_bytep dp, int display)\u0000\u000FPNG_COMBINE_ROW\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\u0013\u0000\u0000\u0000í\f\u0000\u0000\u0013\u0000\u0000\u0000í\f\u0000\u00003\u0000\u0000\u0000í\f\u0000\u0000\u0000\u0000\u0000\aPNG_LSR\u0000\aPNG_LSR\aPNG_LSR\u0000\aPNG_LSR\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\u0013\u0000\u0000\u0000î\f\u0000\u0000\u0013\u0000\u0000\u0000î\f\u0000\u00003\u0000\u0000\u0000î\f\u0000\u0000\u0000\u0000\u0000\aPNG_LSL\u0000\aPNG_LSL\aPNG_LSL\u0000\aPNG_LSL\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\u0010\u0000\u0000\u0000ó\f\u0000\u0000\u0010\u0000\u0000\u0000ó\f\u0000\u00006\u0000\u0000\u0000ô\f\u0000\u0000\u0000\u0000\u0000\u0006S_COPY\u0000\u0006S_COPY\u0006S_COPY\u0000\u0006S_COPY\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\u0010\u0000\u0000\u0000õ\f\u0000\u0000\u0010\u0000\u0000\u0000õ\f\u0000\u00006\u0000\u0000\u0000ö\f\u0000\u0000\u0000\u0000\u0000\u0006B_COPY\u0000\u0006B_COPY\u0006B_COPY\u0000\u0006B_COPY\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\u0010\u0000\u0000\u0000þ\f\u0000\u0000\u0010\u0000\u0000\u0000þ\f\u0000\u0000F\u0000\u0000\u0000ÿ\f\u0000\u0000\u0000\u0000\u0000\nPIXEL_MASK\u0000\nPIXEL_MASK\nPIXEL_MASK\u0000\nPIXEL_MASK\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\u0010\u0000\u0000\u0000\u0003\r\u0000\u0000\u0010\u0000\u0000\u0000\u0003\r\u0000\u0000D\u0000\u0000\u0000\u0003\r\u0000\u0000\u0000\u0000\u0000\aS_MASKx\u0000\aS_MASKx\aS_MASKx\u0000\aS_MASKX\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\u0010\u0000\u0000\u0000\u0004\r\u0000\u0000\u0010\u0000\u0000\u0000\u0004\r\u0000\u0000D\u0000\u0000\u0000\u0004\r\u0000\u0000\u0000\u0000\u0000\aB_MASKx\u0000\aB_MASKx\aB_MASKx\u0000\aB_MASKX\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\u0010\u0000\u0000\u0000\n\r\u0000\u0000\u0010\u0000\u0000\u0000\n\r\u0000\u0000P\u0000\u0000\u0000\n\r\u0000\u0000\u0000\u0000\u0000\vMASK_EXPAND\u0000\vMASK_EXPAND\vMASK_EXPAND\u0000\vMASK_EXPAND\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\u0010\u0000\u0000\u0000\f\r\u0000\u0000\u0010\u0000\u0000\u0000\f\r\u0000\u0000F\u0000\u0000\u0000\u000E\r\u0000\u0000\u0000\u0000\u0000\u0006S_MASK\u0000\u0006S_MASK\u0006S_MASK\u0000\u0006S_MASK\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\u0010\u0000\u0000\u0000\u0010\r\u0000\u0000\u0010\u0000\u0000\u0000\u0010\r\u0000\u0000F\u0000\u0000\u0000\u0012\r\u0000\u0000\u0000\u0000\u0000\u0006B_MASK\u0000\u0006B_MASK\u0006B_MASK\u0000\u0006B_MASK\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\u0010\u0000\u0000\u0000\u001A\r\u0000\u0000\u0010\u0000\u0000\u0000\u001A\r\u0000\u00009\u0000\u0000\u0000\u001B\r\u0000\u0000\u0000\u0000\u0000\aS_MASKS\u0000\aS_MASKS\aS_MASKS\u0000\aS_MASKS\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\u0010\u0000\u0000\u0000\u001D\r\u0000\u0000\u0010\u0000\u0000\u0000\u001D\r\u0000\u0000L\u0000\u0000\u0000\u001D\r\u0000\u0000\u0000\u0000\u0000\aB_MASKS\u0000\aB_MASKS\aB_MASKS\u0000\aB_MASKS\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\u0010\u0000\u0000\u0000\u001F\r\u0000\u0000\u0010\u0000\u0000\u0000\u001F\r\u0000\u00006\u0000\u0000\u0000\u001F\r\u0000\u0000\u0000\u0000\u0000\vDEPTH_INDEX\u0000\vDEPTH_INDEX\vDEPTH_INDEX\u0000\vDEPTH_INDEX\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\u0010\u0000\u0000\u00007\r\u0000\u0000\u0010\u0000\u0000\u00007\r\u0000\u00007\u0000\u0000\u00009\r\u0000\u0000\u0000\u0000\u0000\u0004MASK\u0000\u0004MASK\u0004MASK\u0000\u0004MASK\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000c\u000E\u0000\u0000\u0000\u0000\u0000\u0000b\u000E\u0000\u0000\u0001\u0000\u0000\u0000V\u000F\u0000\u0000\u0001\u0000\u0000\u0015png_do_read_interlace'void (int, png_bytep, int, png_uint_32)4png_do_read_interlace(int,png_bytep,int,png_uint_32)^void png_do_read_interlace(int row_info, png_bytep row, int pass, png_uint_32 transformations)\u0000\u0015PNG_DO_READ_INTERLACE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Z\u000F\u0000\u0000\u0000\u0000\u0000\u0000Y\u000F\u0000\u0000\u0001\u0000\u0000\u0000i\u000F\u0000\u0000\u0001\u0000\u0001\u0017png_read_filter_row_sub&void (int, png_bytep, png_const_bytep)6png_read_filter_row_sub(int,png_bytep,png_const_bytep)Zstatic void png_read_filter_row_sub(int row_info, png_bytep row, png_const_bytep prev_row)\u0000\u0017PNG_READ_FILTER_ROW_SUB\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000l\u000F\u0000\u0000\u0000\u0000\u0000\u0000k\u000F\u0000\u0000\u0001\u0000\u0000\u0000y\u000F\u0000\u0000\u0001\u0000\u0001\u0016png_read_filter_row_up&void (int, png_bytep, png_const_bytep)5png_read_filter_row_up(int,png_bytep,png_const_bytep)Ystatic void png_read_filter_row_up(int row_info, png_bytep row, png_const_bytep prev_row)\u0000\u0016PNG_READ_FILTER_ROW_UP\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000|\u000F\u0000\u0000\u0000\u0000\u0000\u0000{\u000F\u0000\u0000\u0001\u0000\u0000\u0000\u000F\u0000\u0000\u0001\u0000\u0001\u0017png_read_filter_row_avg&void (int, png_bytep, png_const_bytep)6png_read_filter_row_avg(int,png_bytep,png_const_bytep)Zstatic void png_read_filter_row_avg(int row_info, png_bytep row, png_const_bytep prev_row)\u0000\u0017PNG_READ_FILTER_ROW_AVG\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000F\u0000\u0000\u0000\u0000\u0000\u0000\u000F\u0000\u0000\u0001\u0000\u0000\u0000Ç\u000F\u0000\u0000\u0001\u0000\u0001%png_read_filter_row_paeth_1byte_pixel&void (int, png_bytep, png_const_bytep)Dpng_read_filter_row_paeth_1byte_pixel(int,png_bytep,png_const_bytep)hstatic void png_read_filter_row_paeth_1byte_pixel(int row_info, png_bytep row, png_const_bytep prev_row)\u0000%PNG_READ_FILTER_ROW_PAETH_1BYTE_PIXEL\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ê\u000F\u0000\u0000\u0000\u0000\u0000\u0000É\u000F\u0000\u0000\u0001\u0000\u0000\u0000ú\u000F\u0000\u0000\u0001\u0000\u0001)png_read_filter_row_paeth_multibyte_pixel&void (int, png_bytep, png_const_bytep)Hpng_read_filter_row_paeth_multibyte_pixel(int,png_bytep,png_const_bytep)lstatic void png_read_filter_row_paeth_multibyte_pixel(int row_info, png_bytep row, png_const_bytep prev_row)\u0000)PNG_READ_FILTER_ROW_PAETH_MULTIBYTE_PIXEL\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ý\u000F\u0000\u0000\u0000\u0000\u0000\u0000ü\u000F\u0000\u0000\u0001\u0000\u0000\u0000\u001F\u0010\u0000\u0000\u0001\u0000\u0001\u0019png_init_filter_functions\nvoid (int)\u001Epng_init_filter_functions(int)-static void png_init_filter_functions(int pp)\u0000\u0019PNG_INIT_FILTER_FUNCTIONS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\"\u0010\u0000\u0000\u0000\u0000\u0000\u0000!\u0010\u0000\u0000\u0001\u0000\u0000\u00000\u0010\u0000\u0000\u0001\u0000\u0000\u0013png_read_filter_row0void (int, int, png_bytep, png_const_bytep, int):png_read_filter_row(int,int,png_bytep,png_const_bytep,int)cvoid png_read_filter_row(int pp, int row_info, png_bytep row, png_const_bytep prev_row, int filter)\u0000\u0013PNG_READ_FILTER_ROW\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00004\u0010\u0000\u0000\u0000\u0000\u0000\u00003\u0010\u0000\u0000\u0001\u0000\u0000\u0000²\u0010\u0000\u0000\u0001\u0000\u0000\u0012png_read_IDAT_data'void (int, png_bytep, png_alloc_size_t)2png_read_IDAT_data(int,png_bytep,png_alloc_size_t)Rvoid png_read_IDAT_data(int png_ptr, png_bytep output, png_alloc_size_t avail_out)\u0000\u0012PNG_READ_IDAT_DATA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000µ\u0010\u0000\u0000\u0000\u0000\u0000\u0000´\u0010\u0000\u0000\u0001\u0000\u0000\u0000â\u0010\u0000\u0000\u0001\u0000\u0000\u0014png_read_finish_IDAT\nvoid (int)\u0019png_read_finish_IDAT(int)&void png_read_finish_IDAT(int png_ptr)\u0000\u0014PNG_READ_FINISH_IDAT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000å\u0010\u0000\u0000\u0000\u0000\u0000\u0000ä\u0010\u0000\u0000\u0001\u0000\u0000\u0000\"\u0011\u0000\u0000\u0001\u0000\u0000\u0013png_read_finish_row\nvoid (int)\u0018png_read_finish_row(int)%void png_read_finish_row(int png_ptr)\u0000\u0013PNG_READ_FINISH_ROW\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000&\u0011\u0000\u0000\u0000\u0000\u0000\u0000%\u0011\u0000\u0000\u0001\u0000\u0000\u0000F\u0012\u0000\u0000\u0001\u0000\u0000\u0012png_read_start_row\nvoid (int)\u0017png_read_start_row(int)$void png_read_start_row(int png_ptr)\u0000\u0012PNG_READ_START_ROW\u0000\u0000\u0000\u0000end\u0000\v2\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\pngset.c","value":"data,\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0000\"\u0000\u0000\u0000\u0001\u0000\u0000\fpng_set_bKGD\u0014void (int, int, int)\u0019png_set_bKGD(int,int,int)<void png_set_bKGD(int png_ptr, int info_ptr, int background)\u0000\fPNG_SET_BKGD\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000'\u0000\u0000\u0000\u0000\u0000\u0000\u0000&\u0000\u0000\u0000\u0001\u0000\u0000\u0000A\u0000\u0000\u0000\u0001\u0000\u0000\u0012png_set_cHRM_fixedÿ\u0000\u0000\u0000void (int, int, png_fixed_point, png_fixed_point, png_fixed_point, png_fixed_point, png_fixed_point, png_fixed_point, png_fixed_point, png_fixed_point)ÿ\u0000\u0000\u0000png_set_cHRM_fixed(int,int,png_fixed_point,png_fixed_point,png_fixed_point,png_fixed_point,png_fixed_point,png_fixed_point,png_fixed_point,png_fixed_point)ÿô\u0000\u0000\u0000void png_set_cHRM_fixed(int png_ptr, int info_ptr, png_fixed_point white_x, png_fixed_point white_y, png_fixed_point red_x, png_fixed_point red_y, png_fixed_point green_x, png_fixed_point green_y, png_fixed_point blue_x, png_fixed_point blue_y)\u0000\u0012PNG_SET_CHRM_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000D\u0000\u0000\u0000\u0000\u0000\u0000\u0000C\u0000\u0000\u0000\u0001\u0000\u0000\u0000a\u0000\u0000\u0000\u0001\u0000\u0000\u0016png_set_cHRM_XYZ_fixedÿ¨\u0000\u0000\u0000void (int, int, png_fixed_point, png_fixed_point, png_fixed_point, png_fixed_point, png_fixed_point, png_fixed_point, png_fixed_point, png_fixed_point, png_fixed_point)ÿ¯\u0000\u0000\u0000png_set_cHRM_XYZ_fixed(int,int,png_fixed_point,png_fixed_point,png_fixed_point,png_fixed_point,png_fixed_point,png_fixed_point,png_fixed_point,png_fixed_point,png_fixed_point)ÿ2\u0001\u0000\u0000void png_set_cHRM_XYZ_fixed(int png_ptr, int info_ptr, png_fixed_point int_red_X, png_fixed_point int_red_Y, png_fixed_point int_red_Z, png_fixed_point int_green_X, png_fixed_point int_green_Y, png_fixed_point int_green_Z, png_fixed_point int_blue_X, png_fixed_point int_blue_Y, png_fixed_point int_blue_Z)\u0000\u0016PNG_SET_CHRM_XYZ_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000d\u0000\u0000\u0000\u0001\u0000\u0000\u0000r\u0000\u0000\u0000\u0001\u0000\u0000\fpng_set_cHRMOvoid (int, int, double, double, double, double, double, double, double, double)Mpng_set_cHRM(int,int,double,double,double,double,double,double,double,double)ÿ¦\u0000\u0000\u0000void png_set_cHRM(int png_ptr, int info_ptr, double white_x, double white_y, double red_x, double red_y, double green_x, double green_y, double blue_x, double blue_y)\u0000\fPNG_SET_CHRM\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000u\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0010png_set_cHRM_XYZWvoid (int, int, double, double, double, double, double, double, double, double, double)Xpng_set_cHRM_XYZ(int,int,double,double,double,double,double,double,double,double,double)ÿ·\u0000\u0000\u0000void png_set_cHRM_XYZ(int png_ptr, int info_ptr, double red_X, double red_Y, double red_Z, double green_X, double green_Y, double green_Z, double blue_X, double blue_Y, double blue_Z)\u0000\u0010PNG_SET_CHRM_XYZ\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\fpng_set_eXIf\u001Avoid (int, int, png_bytep)\u001Fpng_set_eXIf(int,int,png_bytep)<void png_set_eXIf(int png_ptr, int info_ptr, png_bytep exif)\u0000\fPNG_SET_EXIF\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000®\u0000\u0000\u0000\u0001\u0000\u0000\u000Epng_set_eXIf_1'void (int, int, png_uint_32, png_bytep)-png_set_eXIf_1(int,int,png_uint_32,png_bytep)Tvoid png_set_eXIf_1(int png_ptr, int info_ptr, png_uint_32 num_exif, png_bytep exif)\u0000\u000EPNG_SET_EXIF_1\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000³\u0000\u0000\u0000\u0000\u0000\u0000\u0000²\u0000\u0000\u0000\u0001\u0000\u0000\u0000½\u0000\u0000\u0000\u0001\u0000\u0000\u0012png_set_gAMA_fixed void (int, int, png_fixed_point)+png_set_gAMA_fixed(int,int,png_fixed_point)Nvoid png_set_gAMA_fixed(int png_ptr, int info_ptr, png_fixed_point file_gamma)\u0000\u0012PNG_SET_GAMA_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Á\u0000\u0000\u0000\u0000\u0000\u0000\u0000À\u0000\u0000\u0000\u0001\u0000\u0000\u0000Å\u0000\u0000\u0000\u0001\u0000\u0000\fpng_set_gAMA\u0017void (int, int, double)\u001Cpng_set_gAMA(int,int,double)?void png_set_gAMA(int png_ptr, int info_ptr, double file_gamma)\u0000\fPNG_SET_GAMA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ë\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ê\u0000\u0000\u0000\u0001\u0000\u0000\u0000ñ\u0000\u0000\u0000\u0001\u0000\u0000\fpng_set_hIST#void (int, int, png_const_uint_16p)(png_set_hIST(int,int,png_const_uint_16p)Evoid png_set_hIST(int png_ptr, int info_ptr, png_const_uint_16p hist)\u0000\fPNG_SET_HIST\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000õ\u0000\u0000\u0000\u0000\u0000\u0000\u0000ô\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001A\u0001\u0000\u0000\u0001\u0000\u0000\fpng_set_IHDRBvoid (int, int, png_uint_32, png_uint_32, int, int, int, int, int)Apng_set_IHDR(int,int,png_uint_32,png_uint_32,int,int,int,int,int)ÿ­\u0000\u0000\u0000void png_set_IHDR(int png_ptr, int info_ptr, png_uint_32 width, png_uint_32 height, int bit_depth, int color_type, int interlace_type, int compression_type, int filter_type)\u0000\fPNG_SET_IHDR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u001D\u0001\u0000\u0000\u0001\u0000\u0000\u0000*\u0001\u0000\u0000\u0001\u0000\u0000\fpng_set_oFFs,void (int, int, png_int_32, png_int_32, int)/png_set_oFFs(int,int,png_int_32,png_int_32,int)evoid png_set_oFFs(int png_ptr, int info_ptr, png_int_32 offset_x, png_int_32 offset_y, int unit_type)\u0000\fPNG_SET_OFFS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u0000\u0000\u0000.\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\fpng_set_pCAL_void (int, int, png_const_charp, png_int_32, png_int_32, int, int, png_const_charp, png_charpp)^png_set_pCAL(int,int,png_const_charp,png_int_32,png_int_32,int,int,png_const_charp,png_charpp)ÿ¤\u0000\u0000\u0000void png_set_pCAL(int png_ptr, int info_ptr, png_const_charp purpose, png_int_32 X0, png_int_32 X1, int type, int nparams, png_const_charp units, png_charpp params)\u0000\fPNG_SET_PCAL\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000£\u0001\u0000\u0000\u0000\u0000\u0000\u0000¢\u0001\u0000\u0000\u0001\u0000\u0000\u0000á\u0001\u0000\u0000\u0001\u0000\u0000\u000Epng_set_sCAL_s6void (int, int, int, png_const_charp, png_const_charp);png_set_sCAL_s(int,int,int,png_const_charp,png_const_charp)ivoid png_set_sCAL_s(int png_ptr, int info_ptr, int unit, png_const_charp swidth, png_const_charp sheight)\u0000\u000EPNG_SET_SCAL_S\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000å\u0001\u0000\u0000\u0000\u0000\u0000\u0000ä\u0001\u0000\u0000\u0001\u0000\u0000\u0000þ\u0001\u0000\u0000\u0001\u0000\u0000\fpng_set_sCAL$void (int, int, int, double, double)'png_set_sCAL(int,int,int,double,double)Svoid png_set_sCAL(int png_ptr, int info_ptr, int unit, double width, double height)\u0000\fPNG_SET_SCAL\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u001A\u0002\u0000\u0000\u0001\u0000\u0000\u0012png_set_sCAL_fixed6void (int, int, int, png_fixed_point, png_fixed_point)?png_set_sCAL_fixed(int,int,int,png_fixed_point,png_fixed_point)kvoid png_set_sCAL_fixed(int png_ptr, int info_ptr, int unit, png_fixed_point width, png_fixed_point height)\u0000\u0012PNG_SET_SCAL_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0002\u0000\u0000\u0000\u0000\u0000\u0000\u001F\u0002\u0000\u0000\u0001\u0000\u0000\u0000,\u0002\u0000\u0000\u0001\u0000\u0000\fpng_set_pHYs.void (int, int, png_uint_32, png_uint_32, int)1png_set_pHYs(int,int,png_uint_32,png_uint_32,int)avoid png_set_pHYs(int png_ptr, int info_ptr, png_uint_32 res_x, png_uint_32 res_y, int unit_type)\u0000\fPNG_SET_PHYS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00000\u0002\u0000\u0000\u0000\u0000\u0000\u0000/\u0002\u0000\u0000\u0001\u0000\u0000\u0000m\u0002\u0000\u0000\u0001\u0000\u0000\fpng_set_PLTE\u0019void (int, int, int, int)\u001Dpng_set_PLTE(int,int,int,int)Jvoid png_set_PLTE(int png_ptr, int info_ptr, int palette, int num_palette)\u0000\fPNG_SET_PLTE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0002\u0000\u0000\u0000\u0000\u0000\u0000p\u0002\u0000\u0000\u0001\u0000\u0000\u0000{\u0002\u0000\u0000\u0001\u0000\u0000\fpng_set_sBIT\u0014void (int, int, int)\u0019png_set_sBIT(int,int,int)9void png_set_sBIT(int png_ptr, int info_ptr, int sig_bit)\u0000\fPNG_SET_SBIT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u007F\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\fpng_set_sRGB\u0014void (int, int, int)\u0019png_set_sRGB(int,int,int)=void png_set_sRGB(int png_ptr, int info_ptr, int srgb_intent)\u0000\fPNG_SET_SRGB\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\u001Apng_set_sRGB_gAMA_and_cHRM\u0014void (int, int, int)'png_set_sRGB_gAMA_and_cHRM(int,int,int)Kvoid png_set_sRGB_gAMA_and_cHRM(int png_ptr, int info_ptr, int srgb_intent)\u0000\u001APNG_SET_SRGB_GAMA_AND_CHRM\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000£\u0002\u0000\u0000\u0000\u0000\u0000\u0000¢\u0002\u0000\u0000\u0001\u0000\u0000\u0000è\u0002\u0000\u0000\u0001\u0000\u0000\fpng_set_iCCPCvoid (int, int, png_const_charp, int, png_const_bytep, png_uint_32)Epng_set_iCCP(int,int,png_const_charp,int,png_const_bytep,png_uint_32)ÿ\u0000\u0000\u0000void png_set_iCCP(int png_ptr, int info_ptr, png_const_charp name, int compression_type, png_const_bytep profile, png_uint_32 proflen)\u0000\fPNG_SET_ICCP\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000í\u0002\u0000\u0000\u0000\u0000\u0000\u0000ì\u0002\u0000\u0000\u0001\u0000\u0000\u0000õ\u0002\u0000\u0000\u0001\u0000\u0000\fpng_set_text\u0019void (int, int, int, int)\u001Dpng_set_text(int,int,int,int)Hvoid png_set_text(int png_ptr, int info_ptr, int text_ptr, int num_text)\u0000\fPNG_SET_TEXT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ø\u0002\u0000\u0000\u0000\u0000\u0000\u0000÷\u0002\u0000\u0000\u0001\u0000\u0000\u0000¶\u0003\u0000\u0000\u0001\u0000\u0000\u000Epng_set_text_2\u0018int (int, int, int, int)\u001Fpng_set_text_2(int,int,int,int)Iint png_set_text_2(int png_ptr, int info_ptr, int text_ptr, int num_text)\u0000\u000EPNG_SET_TEXT_2\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000»\u0003\u0000\u0000\u0000\u0000\u0000\u0000º\u0003\u0000\u0000\u0001\u0000\u0000\u0000Ð\u0003\u0000\u0000\u0001\u0000\u0000\fpng_set_tIME\u0014void (int, int, int)\u0019png_set_tIME(int,int,int):void png_set_tIME(int png_ptr, int info_ptr, int mod_time)\u0000\fPNG_SET_TIME\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Õ\u0003\u0000\u0000\u0000\u0000\u0000\u0000Ô\u0003\u0000\u0000\u0001\u0000\u0000\u0000\u0017\u0004\u0000\u0000\u0001\u0000\u0000\fpng_set_tRNS*void (int, int, png_const_bytep, int, int)-png_set_tRNS(int,int,png_const_bytep,int,int)ivoid png_set_tRNS(int png_ptr, int info_ptr, png_const_bytep trans_alpha, int num_trans, int trans_color)\u0000\fPNG_SET_TRNS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001C\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u001B\u0004\u0000\u0000\u0001\u0000\u0000\u0000~\u0004\u0000\u0000\u0001\u0000\u0000\fpng_set_sPLT\u0019void (int, int, int, int)\u001Dpng_set_sPLT(int,int,int,int)Gvoid png_set_sPLT(int png_ptr, int info_ptr, int entries, int nentries)\u0000\fPNG_SET_SPLT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0001\u0000\u0000\u0000¥\u0004\u0000\u0000\u0001\u0000\u0001\u000Echeck_location\u0013png_byte (int, int)\u0017check_location(int,int)9static png_byte check_location(int png_ptr, int location)\u0000\u000ECHECK_LOCATION\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¨\u0004\u0000\u0000\u0000\u0000\u0000\u0000§\u0004\u0000\u0000\u0001\u0000\u0000\u0000\b\u0005\u0000\u0000\u0001\u0000\u0000\u0016png_set_unknown_chunks\u0019void (int, int, int, int)'png_set_unknown_chunks(int,int,int,int)Vvoid png_set_unknown_chunks(int png_ptr, int info_ptr, int unknowns, int num_unknowns)\u0000\u0016PNG_SET_UNKNOWN_CHUNKS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\v\u0005\u0000\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0001\u0000\u0000\u0000$\u0005\u0000\u0000\u0001\u0000\u0000\u001Epng_set_unknown_chunk_location\u0019void (int, int, int, int)/png_set_unknown_chunk_location(int,int,int,int)Wvoid png_set_unknown_chunk_location(int png_ptr, int info_ptr, int chunk, int location)\u0000\u001EPNG_SET_UNKNOWN_CHUNK_LOCATION\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000)\u0005\u0000\u0000\u0000\u0000\u0000\u0000(\u0005\u0000\u0000\u0001\u0000\u0000\u00003\u0005\u0000\u0000\u0001\u0000\u0000\u0017png_permit_mng_features\u001Epng_uint_32 (int, png_uint_32)(png_permit_mng_features(int,png_uint_32)Jpng_uint_32 png_permit_mng_features(int png_ptr, png_uint_32 mng_features)\u0000\u0017PNG_PERMIT_MNG_FEATURES\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00008\u0005\u0000\u0000\u0000\u0000\u0000\u00007\u0005\u0000\u0000\u0001\u0000\u0000\u0000Q\u0005\u0000\u0000\u0001\u0000\u0001\radd_one_chunk<unsigned int (png_bytep, unsigned int, png_const_bytep, int)9add_one_chunk(png_bytep,unsigned int,png_const_bytep,int)dstatic unsigned int add_one_chunk(png_bytep list, unsigned int count, png_const_bytep add, int keep)\u0000\rADD_ONE_CHUNK\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000T\u0005\u0000\u0000\u0000\u0000\u0000\u0000S\u0005\u0000\u0000\u0001\u0000\u0000\u0000î\u0005\u0000\u0000\u0001\u0000\u0000\u001Bpng_set_keep_unknown_chunks%void (int, int, png_const_bytep, int)8png_set_keep_unknown_chunks(int,int,png_const_bytep,int)fvoid png_set_keep_unknown_chunks(int png_ptr, int keep, png_const_bytep chunk_list, int num_chunks_in)\u0000\u001BPNG_SET_KEEP_UNKNOWN_CHUNKS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ó\u0005\u0000\u0000\u0000\u0000\u0000\u0000ò\u0005\u0000\u0000\u0001\u0000\u0000\u0000ý\u0005\u0000\u0000\u0001\u0000\u0000\u001Apng_set_read_user_chunk_fn\u001Avoid (int, png_voidp, int)-png_set_read_user_chunk_fn(int,png_voidp,int)^void png_set_read_user_chunk_fn(int png_ptr, png_voidp user_chunk_ptr, int read_user_chunk_fn)\u0000\u001APNG_SET_READ_USER_CHUNK_FN\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0006\u0000\u0000\u0001\u0000\u0000\u0000\u0012\u0006\u0000\u0000\u0001\u0000\u0000\fpng_set_rows\u001Bvoid (int, int, png_bytepp) png_set_rows(int,int,png_bytepp)Evoid png_set_rows(int png_ptr, int info_ptr, png_bytepp row_pointers)\u0000\fPNG_SET_ROWS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0015\u0006\u0000\u0000\u0001\u0000\u0000\u0000Q\u0006\u0000\u0000\u0001\u0000\u0000\u001Fpng_set_compression_buffer_size\u0012void (int, size_t)+png_set_compression_buffer_size(int,size_t)>void png_set_compression_buffer_size(int png_ptr, size_t size)\u0000\u001FPNG_SET_COMPRESSION_BUFFER_SIZE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000T\u0006\u0000\u0000\u0000\u0000\u0000\u0000S\u0006\u0000\u0000\u0001\u0000\u0000\u0000X\u0006\u0000\u0000\u0001\u0000\u0000\u000Fpng_set_invalid\u0014void (int, int, int)\u001Cpng_set_invalid(int,int,int)9void png_set_invalid(int png_ptr, int info_ptr, int mask)\u0000\u000FPNG_SET_INVALID\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000^\u0006\u0000\u0000\u0000\u0000\u0000\u0000]\u0006\u0000\u0000\u0001\u0000\u0000\u0000l\u0006\u0000\u0000\u0001\u0000\u0000\u0013png_set_user_limits$void (int, png_uint_32, png_uint_32)0png_set_user_limits(int,png_uint_32,png_uint_32)^void png_set_user_limits(int png_ptr, png_uint_32 user_width_max, png_uint_32 user_height_max)\u0000\u0013PNG_SET_USER_LIMITS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000p\u0006\u0000\u0000\u0000\u0000\u0000\u0000o\u0006\u0000\u0000\u0001\u0000\u0000\u0000v\u0006\u0000\u0000\u0001\u0000\u0000\u0017png_set_chunk_cache_max\u0017void (int, png_uint_32)(png_set_chunk_cache_max(int,png_uint_32)Kvoid png_set_chunk_cache_max(int png_ptr, png_uint_32 user_chunk_cache_max)\u0000\u0017PNG_SET_CHUNK_CACHE_MAX\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000z\u0006\u0000\u0000\u0000\u0000\u0000\u0000y\u0006\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0001\u0000\u0000\u0018png_set_chunk_malloc_max\u001Cvoid (int, png_alloc_size_t).png_set_chunk_malloc_max(int,png_alloc_size_t)Rvoid png_set_chunk_malloc_max(int png_ptr, png_alloc_size_t user_chunk_malloc_max)\u0000\u0018PNG_SET_CHUNK_MALLOC_MAX\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0001\u0000\u0000\u0015png_set_benign_errors\u000Fvoid (int, int)\u001Epng_set_benign_errors(int,int)4void png_set_benign_errors(int png_ptr, int allowed)\u0000\u0015PNG_SET_BENIGN_ERRORS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¥\u0006\u0000\u0000\u0000\u0000\u0000\u0000¤\u0006\u0000\u0000\u0001\u0000\u0000\u0000®\u0006\u0000\u0000\u0001\u0000\u0000\u001Fpng_set_check_for_invalid_index\u000Fvoid (int, int)(png_set_check_for_invalid_index(int,int)>void png_set_check_for_invalid_index(int png_ptr, int allowed)\u0000\u001FPNG_SET_CHECK_FOR_INVALID_INDEX\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¾\u0006\u0000\u0000\u0000\u0000\u0000\u0000½\u0006\u0000\u0000\u0001\u0000\u0000\u0000\b\a\u0000\u0000\u0001\u0000\u0000\u0011png_check_keyword-png_uint_32 (int, png_const_charp, png_bytep)0png_check_keyword(int,png_const_charp,png_bytep)Rpng_uint_32 png_check_keyword(int png_ptr, png_const_charp key, png_bytep new_key)\u0000\u0011PNG_CHECK_KEYWORD\u0000\u0000\u0000\u0000end\u0000Q,\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\pngtrans.c","value":"data\u0019\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u0001\u0000\u0000\vpng_set_bgr\nvoid (int)\u0010png_set_bgr(int)\u001Dvoid png_set_bgr(int png_ptr)\u0000\vPNG_SET_BGR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000!\u0000\u0000\u0000\u0001\u0000\u0000\u0000+\u0000\u0000\u0000\u0001\u0000\u0000\fpng_set_swap\nvoid (int)\u0011png_set_swap(int)\u001Evoid png_set_swap(int png_ptr)\u0000\fPNG_SET_SWAP\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00001\u0000\u0000\u0000\u0000\u0000\u0000\u00000\u0000\u0000\u0000\u0001\u0000\u0000\u0000?\u0000\u0000\u0000\u0001\u0000\u0000\u000Fpng_set_packing\nvoid (int)\u0014png_set_packing(int)!void png_set_packing(int png_ptr)\u0000\u000FPNG_SET_PACKING\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000E\u0000\u0000\u0000\u0000\u0000\u0000\u0000D\u0000\u0000\u0000\u0001\u0000\u0000\u0000N\u0000\u0000\u0000\u0001\u0000\u0000\u0010png_set_packswap\nvoid (int)\u0015png_set_packswap(int)\"void png_set_packswap(int png_ptr)\u0000\u0010PNG_SET_PACKSWAP\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000S\u0000\u0000\u0000\u0000\u0000\u0000\u0000R\u0000\u0000\u0000\u0001\u0000\u0000\u0000\\\u0000\u0000\u0000\u0001\u0000\u0000\rpng_set_shift\u000Fvoid (int, int)\u0016png_set_shift(int,int).void png_set_shift(int png_ptr, int true_bits)\u0000\rPNG_SET_SHIFT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000a\u0000\u0000\u0000\u0001\u0000\u0000\u0000m\u0000\u0000\u0000\u0001\u0000\u0000\u001Apng_set_interlace_handling\tint (int)\u001Fpng_set_interlace_handling(int)+int png_set_interlace_handling(int png_ptr)\u0000\u001APNG_SET_INTERLACE_HANDLING\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000w\u0000\u0000\u0000\u0000\u0000\u0000\u0000v\u0000\u0000\u0000\u0001\u0000\u0000\u0000È\u0000\u0000\u0000\u0001\u0000\u0000\u000Epng_set_filler\u001Cvoid (int, png_uint_32, int)#png_set_filler(int,png_uint_32,int)Dvoid png_set_filler(int png_ptr, png_uint_32 filler, int filler_loc)\u0000\u000EPNG_SET_FILLER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ì\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ë\u0000\u0000\u0000\u0001\u0000\u0000\u0000×\u0000\u0000\u0000\u0001\u0000\u0000\u0011png_set_add_alpha\u001Cvoid (int, png_uint_32, int)&png_set_add_alpha(int,png_uint_32,int)Gvoid png_set_add_alpha(int png_ptr, png_uint_32 filler, int filler_loc)\u0000\u0011PNG_SET_ADD_ALPHA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Þ\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ý\u0000\u0000\u0000\u0001\u0000\u0000\u0000æ\u0000\u0000\u0000\u0001\u0000\u0000\u0012png_set_swap_alpha\nvoid (int)\u0017png_set_swap_alpha(int)$void png_set_swap_alpha(int png_ptr)\u0000\u0012PNG_SET_SWAP_ALPHA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ì\u0000\u0000\u0000\u0000\u0000\u0000\u0000ë\u0000\u0000\u0000\u0001\u0000\u0000\u0000ô\u0000\u0000\u0000\u0001\u0000\u0000\u0014png_set_invert_alpha\nvoid (int)\u0019png_set_invert_alpha(int)&void png_set_invert_alpha(int png_ptr)\u0000\u0014PNG_SET_INVERT_ALPHA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ù\u0000\u0000\u0000\u0000\u0000\u0000\u0000ø\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0001\u0000\u0000\u0001\u0000\u0000\u0013png_set_invert_mono\nvoid (int)\u0018png_set_invert_mono(int)%void png_set_invert_mono(int png_ptr)\u0000\u0013PNG_SET_INVERT_MONO\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0001\u0000\u0000\u0001\u0000\u0000\u00007\u0001\u0000\u0000\u0001\u0000\u0000\rpng_do_invert\u0015void (int, png_bytep)\u001Cpng_do_invert(int,png_bytep)/void png_do_invert(int row_info, png_bytep row)\u0000\rPNG_DO_INVERT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000>\u0001\u0000\u0000\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0001\u0000\u0000\u0000V\u0001\u0000\u0000\u0001\u0000\u0000\vpng_do_swap\u0015void (int, png_bytep)\u001Apng_do_swap(int,png_bytep)-void png_do_swap(int row_info, png_bytep row)\u0000\vPNG_DO_SWAP\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0016\u0000\u0000\u0000[\u0001\u0000\u0000\u0000\u0000\u0000\u0000[\u0001\u0000\u0000\u0001\u0000\u0000\u0000|\u0001\u0000\u0000\u0001\u0000\u0001\u000Fonebppswaptable\u0013const png_byte[256]\u000Fonebppswaptable*static const png_byte onebppswaptable[256]\u0000\u000FONEBPPSWAPTABLE\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0016\u0000\u0000\u0000~\u0001\u0000\u0000\u0000\u0000\u0000\u0000~\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0001\u000Ftwobppswaptable\u0013const png_byte[256]\u000Ftwobppswaptable*static const png_byte twobppswaptable[256]\u0000\u000FTWOBPPSWAPTABLE\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0016\u0000\u0000\u0000¡\u0001\u0000\u0000\u0000\u0000\u0000\u0000¡\u0001\u0000\u0000\u0001\u0000\u0000\u0000Â\u0001\u0000\u0000\u0001\u0000\u0001\u0010fourbppswaptable\u0013const png_byte[256]\u0010fourbppswaptable+static const png_byte fourbppswaptable[256]\u0000\u0010FOURBPPSWAPTABLE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Æ\u0001\u0000\u0000\u0000\u0000\u0000\u0000Å\u0001\u0000\u0000\u0001\u0000\u0000\u0000à\u0001\u0000\u0000\u0001\u0000\u0000\u000Fpng_do_packswap\u0015void (int, png_bytep)\u001Epng_do_packswap(int,png_bytep)1void png_do_packswap(int row_info, png_bytep row)\u0000\u000FPNG_DO_PACKSWAP\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000î\u0001\u0000\u0000\u0000\u0000\u0000\u0000í\u0001\u0000\u0000\u0001\u0000\u0000\u0000f\u0002\u0000\u0000\u0001\u0000\u0000\u0014png_do_strip_channel\u001Avoid (int, png_bytep, int)'png_do_strip_channel(int,png_bytep,int)Dvoid png_do_strip_channel(int row_info, png_bytep row, int at_start)\u0000\u0014PNG_DO_STRIP_CHANNEL\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000l\u0002\u0000\u0000\u0000\u0000\u0000\u0000k\u0002\u0000\u0000\u0001\u0000\u0000\u0000µ\u0002\u0000\u0000\u0001\u0000\u0000\npng_do_bgr\u0015void (int, png_bytep)\u0019png_do_bgr(int,png_bytep),void png_do_bgr(int row_info, png_bytep row)\u0000\nPNG_DO_BGR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¼\u0002\u0000\u0000\u0000\u0000\u0000\u0000»\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u001E\u0003\u0000\u0000\u0001\u0000\u0000\u001Cpng_do_check_palette_indexes\u000Fvoid (int, int)%png_do_check_palette_indexes(int,int)<void png_do_check_palette_indexes(int png_ptr, int row_info)\u0000\u001CPNG_DO_CHECK_PALETTE_INDEXES\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000%\u0003\u0000\u0000\u0000\u0000\u0000\u0000$\u0003\u0000\u0000\u0001\u0000\u0000\u0000:\u0003\u0000\u0000\u0001\u0000\u0000\u001Bpng_set_user_transform_info\u001Fvoid (int, png_voidp, int, int)2png_set_user_transform_info(int,png_voidp,int,int)ÿ\u0000\u0000\u0000void png_set_user_transform_info(int png_ptr, png_voidp user_transform_ptr, int user_transform_depth, int user_transform_channels)\u0000\u001BPNG_SET_USER_TRANSFORM_INFO\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000D\u0003\u0000\u0000\u0000\u0000\u0000\u0000C\u0003\u0000\u0000\u0001\u0000\u0000\u0000J\u0003\u0000\u0000\u0001\u0000\u0000\u001Apng_get_user_transform_ptr\u000Fpng_voidp (int)\u001Fpng_get_user_transform_ptr(int)1png_voidp png_get_user_transform_ptr(int png_ptr)\u0000\u001APNG_GET_USER_TRANSFORM_PTR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000O\u0003\u0000\u0000\u0000\u0000\u0000\u0000N\u0003\u0000\u0000\u0001\u0000\u0000\u0000X\u0003\u0000\u0000\u0001\u0000\u0000\u001Apng_get_current_row_number\u0011png_uint_32 (int)\u001Fpng_get_current_row_number(int)3png_uint_32 png_get_current_row_number(int png_ptr)\u0000\u001APNG_GET_CURRENT_ROW_NUMBER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000[\u0003\u0000\u0000\u0000\u0000\u0000\u0000Z\u0003\u0000\u0000\u0001\u0000\u0000\u0000`\u0003\u0000\u0000\u0001\u0000\u0000\u001Bpng_get_current_pass_number\u000Epng_byte (int) png_get_current_pass_number(int)1png_byte png_get_current_pass_number(int png_ptr)\u0000\u001BPNG_GET_CURRENT_PASS_NUMBER\u0000\u0000\u0000\u0000end\u0000\u0001\u0010\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\pngwio.c","value":"data\u0006\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001F\u0000\u0000\u0000\u0001\u0000\u0000\u0000)\u0000\u0000\u0000\u0001\u0000\u0000\u000Epng_write_data#void (int, png_const_bytep, size_t)*png_write_data(int,png_const_bytep,size_t)Evoid png_write_data(int png_ptr, png_const_bytep data, size_t length)\u0000\u000EPNG_WRITE_DATA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00002\u0000\u0000\u0000\u0000\u0000\u0000\u00001\u0000\u0000\u0000\u0001\u0000\u0000\u0000=\u0000\u0000\u0000\u0001\u0000\u0000\u0016png_default_write_data\u001Dvoid (int, png_bytep, size_t),png_default_write_data(int,png_bytep,size_t)Gvoid png_default_write_data(int png_ptr, png_bytep data, size_t length)\u0000\u0016PNG_DEFAULT_WRITE_DATA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000F\u0000\u0000\u0000\u0000\u0000\u0000\u0000E\u0000\u0000\u0000\u0001\u0000\u0000\u0000J\u0000\u0000\u0000\u0001\u0000\u0000\tpng_flush\nvoid (int)\u000Epng_flush(int)\u001Bvoid png_flush(int png_ptr)\u0000\tPNG_FLUSH\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000N\u0000\u0000\u0000\u0000\u0000\u0000\u0000M\u0000\u0000\u0000\u0001\u0000\u0000\u0000W\u0000\u0000\u0000\u0001\u0000\u0000\u0011png_default_flush\nvoid (int)\u0016png_default_flush(int)#void png_default_flush(int png_ptr)\u0000\u0011PNG_DEFAULT_FLUSH\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000y\u0000\u0000\u0000\u0000\u0000\u0000\u0000x\u0000\u0000\u0000\u0001\u0000\u0000\u0000¦\u0000\u0000\u0000\u0001\u0000\u0000\u0010png_set_write_fn\u001Fvoid (int, png_voidp, int, int)'png_set_write_fn(int,png_voidp,int,int)\\void png_set_write_fn(int png_ptr, png_voidp io_ptr, int write_data_fn, int output_flush_fn)\u0000\u0010PNG_SET_WRITE_FN\u0000\u0000\u0000\u0000end\u0000¬\u0003\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\pngwrite.c","value":"data;\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0000\u0000F\u0000\u0000\u0000\u0001\u0000\u0001\u0014write_unknown_chunks\u001Dvoid (int, int, unsigned int)*write_unknown_chunks(int,int,unsigned int)Ostatic void write_unknown_chunks(int png_ptr, int info_ptr, unsigned int where)\u0000\u0014WRITE_UNKNOWN_CHUNKS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000S\u0000\u0000\u0000\u0000\u0000\u0000\u0000R\u0000\u0000\u0000\u0001\u0000\u0000\u0000¼\u0000\u0000\u0000\u0001\u0000\u0000\u001Apng_write_info_before_PLTE\u000Fvoid (int, int)#png_write_info_before_PLTE(int,int):void png_write_info_before_PLTE(int png_ptr, int info_ptr)\u0000\u001APNG_WRITE_INFO_BEFORE_PLTE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¿\u0000\u0000\u0000\u0000\u0000\u0000\u0000¾\u0000\u0000\u0000\u0001\u0000\u0000\u0000`\u0001\u0000\u0000\u0001\u0000\u0000\u000Epng_write_info\u000Fvoid (int, int)\u0017png_write_info(int,int).void png_write_info(int png_ptr, int info_ptr)\u0000\u000EPNG_WRITE_INFO\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000h\u0001\u0000\u0000\u0000\u0000\u0000\u0000g\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ø\u0001\u0000\u0000\u0001\u0000\u0000\rpng_write_end\u000Fvoid (int, int)\u0016png_write_end(int,int)-void png_write_end(int png_ptr, int info_ptr)\u0000\rPNG_WRITE_END\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ü\u0001\u0000\u0000\u0000\u0000\u0000\u0000Û\u0001\u0000\u0000\u0001\u0000\u0000\u0000æ\u0001\u0000\u0000\u0001\u0000\u0000\u001Apng_convert_from_struct_tm\u001Dvoid (int, const struct tm *))png_convert_from_struct_tm(int,const tm*);void png_convert_from_struct_tm(int ptime, const tm *ttime)\u0000\u001APNG_CONVERT_FROM_STRUCT_TM\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000é\u0001\u0000\u0000\u0000\u0000\u0000\u0000è\u0001\u0000\u0000\u0001\u0000\u0000\u0000û\u0001\u0000\u0000\u0001\u0000\u0000\u0017png_convert_from_time_t\u0012void (int, time_t)#png_convert_from_time_t(int,time_t)5void png_convert_from_time_t(int ptime, time_t ttime)\u0000\u0017PNG_CONVERT_FROM_TIME_T\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ÿ\u0001\u0000\u0000\u0000\u0000\u0000\u0000ÿ\u0001\u0000\u0000\u0001\u0000\u0000\u0000\t\u0002\u0000\u0000\u0001\u0000\u0000\u0017png_create_write_struct*int (png_const_charp, png_voidp, int, int):png_create_write_struct(png_const_charp,png_voidp,int,int)iint png_create_write_struct(png_const_charp user_png_ver, png_voidp error_ptr, int error_fn, int warn_fn)\u0000\u0017PNG_CREATE_WRITE_STRUCT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\f\u0002\u0000\u0000\u0000\u0000\u0000\u0000\f\u0002\u0000\u0000\u0001\u0000\u0000\u0000H\u0002\u0000\u0000\u0001\u0000\u0000\u0019png_create_write_struct_2?int (png_const_charp, png_voidp, int, int, png_voidp, int, int)Npng_create_write_struct_2(png_const_charp,png_voidp,int,int,png_voidp,int,int)ÿ\u0000\u0000\u0000int png_create_write_struct_2(png_const_charp user_png_ver, png_voidp error_ptr, int error_fn, int warn_fn, png_voidp mem_ptr, int malloc_fn, int free_fn)\u0000\u0019PNG_CREATE_WRITE_STRUCT_2\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Q\u0002\u0000\u0000\u0000\u0000\u0000\u0000P\u0002\u0000\u0000\u0001\u0000\u0000\u0000a\u0002\u0000\u0000\u0001\u0000\u0000\u000Epng_write_rows#void (int, png_bytepp, png_uint_32)*png_write_rows(int,png_bytepp,png_uint_32)Fvoid png_write_rows(int png_ptr, png_bytepp row, png_uint_32 num_rows)\u0000\u000EPNG_WRITE_ROWS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000g\u0002\u0000\u0000\u0000\u0000\u0000\u0000f\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\u000Fpng_write_image\u0016void (int, png_bytepp)\u001Fpng_write_image(int,png_bytepp)3void png_write_image(int png_ptr, png_bytepp image)\u0000\u000FPNG_WRITE_IMAGE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\u0000Ã\u0002\u0000\u0000\u0001\u0000\u0001\u0017png_do_write_intrapixel\u0015void (int, png_bytep)&png_do_write_intrapixel(int,png_bytep)@static void png_do_write_intrapixel(int row_info, png_bytep row)\u0000\u0017PNG_DO_WRITE_INTRAPIXEL\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000È\u0002\u0000\u0000\u0000\u0000\u0000\u0000Ç\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0001\u0000\u0000\rpng_write_row\u001Bvoid (int, png_const_bytep)\"png_write_row(int,png_const_bytep)4void png_write_row(int png_ptr, png_const_bytep row)\u0000\rPNG_WRITE_ROW\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0001\u0000\u0000\u0000¢\u0003\u0000\u0000\u0001\u0000\u0000\rpng_set_flush\u000Fvoid (int, int)\u0016png_set_flush(int,int)*void png_set_flush(int png_ptr, int nrows)\u0000\rPNG_SET_FLUSH\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¦\u0003\u0000\u0000\u0000\u0000\u0000\u0000¥\u0003\u0000\u0000\u0001\u0000\u0000\u0000´\u0003\u0000\u0000\u0001\u0000\u0000\u000Fpng_write_flush\nvoid (int)\u0014png_write_flush(int)!void png_write_flush(int png_ptr)\u0000\u000FPNG_WRITE_FLUSH\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¹\u0003\u0000\u0000\u0000\u0000\u0000\u0000¸\u0003\u0000\u0000\u0001\u0000\u0000\u0000×\u0003\u0000\u0000\u0001\u0000\u0001\u0011png_write_destroy\nvoid (int)\u0016png_write_destroy(int)*static void png_write_destroy(int png_ptr)\u0000\u0011PNG_WRITE_DESTROY\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000á\u0003\u0000\u0000\u0000\u0000\u0000\u0000à\u0003\u0000\u0000\u0001\u0000\u0000\u0000ò\u0003\u0000\u0000\u0001\u0000\u0000\u0018png_destroy_write_struct\u000Fvoid (int, int)!png_destroy_write_struct(int,int)@void png_destroy_write_struct(int png_ptr_ptr, int info_ptr_ptr)\u0000\u0018PNG_DESTROY_WRITE_STRUCT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ö\u0003\u0000\u0000\u0000\u0000\u0000\u0000õ\u0003\u0000\u0000\u0001\u0000\u0000\u0000q\u0004\u0000\u0000\u0001\u0000\u0000\u000Epng_set_filter\u0014void (int, int, int)\u001Bpng_set_filter(int,int,int)9void png_set_filter(int png_ptr, int method, int filters)\u0000\u000EPNG_SET_FILTER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000w\u0004\u0000\u0000\u0000\u0000\u0000\u0000v\u0004\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0001\u0000\u0000\u0019png_set_filter_heuristics:void (int, int, int, png_const_doublep, png_const_doublep)Jpng_set_filter_heuristics(int,int,int,png_const_doublep,png_const_doublep)ÿ\u0000\u0000\u0000void png_set_filter_heuristics(int png_ptr, int heuristic_method, int num_weights, png_const_doublep filter_weights, png_const_doublep filter_costs)\u0000\u0019PNG_SET_FILTER_HEURISTICS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0001\u0000\u0000\u001Fpng_set_filter_heuristics_fixedFvoid (int, int, int, png_const_fixed_point_p, png_const_fixed_point_p)\\png_set_filter_heuristics_fixed(int,int,int,png_const_fixed_point_p,png_const_fixed_point_p)ÿ¦\u0000\u0000\u0000void png_set_filter_heuristics_fixed(int png_ptr, int heuristic_method, int num_weights, png_const_fixed_point_p filter_weights, png_const_fixed_point_p filter_costs)\u0000\u001FPNG_SET_FILTER_HEURISTICS_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0001\u0000\u0000\u0019png_set_compression_level\u000Fvoid (int, int)\"png_set_compression_level(int,int)6void png_set_compression_level(int png_ptr, int level)\u0000\u0019PNG_SET_COMPRESSION_LEVEL\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0001\u0000\u0000\u0000§\u0004\u0000\u0000\u0001\u0000\u0000\u001Dpng_set_compression_mem_level\u000Fvoid (int, int)&png_set_compression_mem_level(int,int)>void png_set_compression_mem_level(int png_ptr, int mem_level)\u0000\u001DPNG_SET_COMPRESSION_MEM_LEVEL\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ª\u0004\u0000\u0000\u0000\u0000\u0000\u0000©\u0004\u0000\u0000\u0001\u0000\u0000\u0000µ\u0004\u0000\u0000\u0001\u0000\u0000\u001Cpng_set_compression_strategy\u000Fvoid (int, int)%png_set_compression_strategy(int,int)<void png_set_compression_strategy(int png_ptr, int strategy)\u0000\u001CPNG_SET_COMPRESSION_STRATEGY\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000»\u0004\u0000\u0000\u0000\u0000\u0000\u0000º\u0004\u0000\u0000\u0001\u0000\u0000\u0000Õ\u0004\u0000\u0000\u0001\u0000\u0000\u001Fpng_set_compression_window_bits\u000Fvoid (int, int)(png_set_compression_window_bits(int,int)Bvoid png_set_compression_window_bits(int png_ptr, int window_bits)\u0000\u001FPNG_SET_COMPRESSION_WINDOW_BITS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ø\u0004\u0000\u0000\u0000\u0000\u0000\u0000×\u0004\u0000\u0000\u0001\u0000\u0000\u0000æ\u0004\u0000\u0000\u0001\u0000\u0000\u001Apng_set_compression_method\u000Fvoid (int, int)#png_set_compression_method(int,int)8void png_set_compression_method(int png_ptr, int method)\u0000\u001APNG_SET_COMPRESSION_METHOD\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ì\u0004\u0000\u0000\u0000\u0000\u0000\u0000ë\u0004\u0000\u0000\u0001\u0000\u0000\u0000ô\u0004\u0000\u0000\u0001\u0000\u0000\u001Epng_set_text_compression_level\u000Fvoid (int, int)'png_set_text_compression_level(int,int);void png_set_text_compression_level(int png_ptr, int level)\u0000\u001EPNG_SET_TEXT_COMPRESSION_LEVEL\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000÷\u0004\u0000\u0000\u0000\u0000\u0000\u0000ö\u0004\u0000\u0000\u0001\u0000\u0000\u0000ÿ\u0004\u0000\u0000\u0001\u0000\u0000\"png_set_text_compression_mem_level\u000Fvoid (int, int)+png_set_text_compression_mem_level(int,int)Cvoid png_set_text_compression_mem_level(int png_ptr, int mem_level)\u0000\"PNG_SET_TEXT_COMPRESSION_MEM_LEVEL\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0005\u0000\u0000\u0001\u0000\u0000\u0000\n\u0005\u0000\u0000\u0001\u0000\u0000!png_set_text_compression_strategy\u000Fvoid (int, int)*png_set_text_compression_strategy(int,int)Avoid png_set_text_compression_strategy(int png_ptr, int strategy)\u0000!PNG_SET_TEXT_COMPRESSION_STRATEGY\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u000F\u0005\u0000\u0000\u0001\u0000\u0000\u0000$\u0005\u0000\u0000\u0001\u0000\u0000$png_set_text_compression_window_bits\u000Fvoid (int, int)-png_set_text_compression_window_bits(int,int)Gvoid png_set_text_compression_window_bits(int png_ptr, int window_bits)\u0000$PNG_SET_TEXT_COMPRESSION_WINDOW_BITS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000'\u0005\u0000\u0000\u0000\u0000\u0000\u0000&\u0005\u0000\u0000\u0001\u0000\u0000\u00002\u0005\u0000\u0000\u0001\u0000\u0000\u001Fpng_set_text_compression_method\u000Fvoid (int, int)(png_set_text_compression_method(int,int)=void png_set_text_compression_method(int png_ptr, int method)\u0000\u001FPNG_SET_TEXT_COMPRESSION_METHOD\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00007\u0005\u0000\u0000\u0000\u0000\u0000\u00006\u0005\u0000\u0000\u0001\u0000\u0000\u0000?\u0005\u0000\u0000\u0001\u0000\u0000\u0017png_set_write_status_fn\u000Fvoid (int, int) png_set_write_status_fn(int,int);void png_set_write_status_fn(int png_ptr, int write_row_fn)\u0000\u0017PNG_SET_WRITE_STATUS_FN\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000C\u0005\u0000\u0000\u0000\u0000\u0000\u0000B\u0005\u0000\u0000\u0001\u0000\u0000\u0000M\u0005\u0000\u0000\u0001\u0000\u0000\u001Fpng_set_write_user_transform_fn\u000Fvoid (int, int)(png_set_write_user_transform_fn(int,int)Nvoid png_set_write_user_transform_fn(int png_ptr, int write_user_transform_fn)\u0000\u001FPNG_SET_WRITE_USER_TRANSFORM_FN\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000S\u0005\u0000\u0000\u0000\u0000\u0000\u0000R\u0005\u0000\u0000\u0001\u0000\u0000\u0000Ë\u0005\u0000\u0000\u0001\u0000\u0000\rpng_write_png\u001Bvoid (int, int, int, voidp) png_write_png(int,int,int,voidp)Kvoid png_write_png(int png_ptr, int info_ptr, int transforms, voidp params)\u0000\rPNG_WRITE_PNG\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ò\u0005\u0000\u0000\u0000\u0000\u0000\u0000Ñ\u0005\u0000\u0000\u0001\u0000\u0000\u0000ô\u0005\u0000\u0000\u0001\u0000\u0001\u0014png_image_write_init\tint (int)\u0019png_image_write_init(int)*static int png_image_write_init(int image)\u0000\u0014PNG_IMAGE_WRITE_INIT\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000÷\u0005\u0000\u0000\b\u0000\u0000\u0000÷\u0005\u0000\u0000\u0001\u0000\u0000\u0000\a\u0006\u0000\u0000\u0001\u0000\u0000Pstruct (unnamed at C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\pngwrite.c:1528:9)Pstruct (unnamed at C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\pngwrite.c:1528:9)A(unnamed at C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\pngwrite.)\u0000\u0000PSTRUCT (UNNAMED AT C:\\USERS\\SBLO\\AI-UPP\\UPPSRC\\PLUGIN\\PNG\\LIB\\PNGWRITE.C:1528:9)Pstruct (unnamed at C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\pngwrite.c:1528:9)PSTRUCT (UNNAMED AT C:\\USERS\\SBLO\\AI-UPP\\UPPSRC\\PLUGIN\\PNG\\LIB\\PNGWRITE.C:1528:9)\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000ú\u0005\u0000\u0000\u0003\u0000\u0000\u0000ú\u0005\u0000\u0000\u0018\u0000\u0000\u0000ú\u0005\u0000\u0000\u0001\u0000\u0000\u0005image\u0003int\a::image\tint image\u0000\u0005IMAGE\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000û\u0005\u0000\u0000\u0003\u0000\u0000\u0000û\u0005\u0000\u0000\u0019\u0000\u0000\u0000û\u0005\u0000\u0000\u0001\u0000\u0000\u0006buffer\u000Fpng_const_voidp\b::buffer\u0016png_const_voidp buffer\u0000\u0006BUFFER\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000ü\u0005\u0000\u0000\u0003\u0000\u0000\u0000ü\u0005\u0000\u0000\u001D\u0000\u0000\u0000ü\u0005\u0000\u0000\u0001\u0000\u0000\nrow_stride\npng_int_32\f::row_stride\u0015png_int_32 row_stride\u0000\nROW_STRIDE\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000ý\u0005\u0000\u0000\u0003\u0000\u0000\u0000ý\u0005\u0000\u0000\u001B\u0000\u0000\u0000ý\u0005\u0000\u0000\u0001\u0000\u0000\bcolormap\u000Fpng_const_voidp\n::colormap\u0018png_const_voidp colormap\u0000\bCOLORMAP\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000þ\u0005\u0000\u0000\u0003\u0000\u0000\u0000þ\u0005\u0000\u0000\"\u0000\u0000\u0000þ\u0005\u0000\u0000\u0001\u0000\u0000\u000Fconvert_to_8bit\u0003int\u0011::convert_to_8bit\u0013int convert_to_8bit\u0000\u000FCONVERT_TO_8BIT\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u001C\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0001\u0000\u0000\tfirst_row\u000Fpng_const_voidp\v::first_row\u0019png_const_voidp first_row\u0000\tFIRST_ROW\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0001\u0006\u0000\u0000\u0003\u0000\u0000\u0000\u0001\u0006\u0000\u0000\u001C\u0000\u0000\u0000\u0001\u0006\u0000\u0000\u0001\u0000\u0000\trow_bytes\tptrdiff_t\v::row_bytes\u0013ptrdiff_t row_bytes\u0000\tROW_BYTES\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0002\u0006\u0000\u0000\u0003\u0000\u0000\u0000\u0002\u0006\u0000\u0000\u001C\u0000\u0000\u0000\u0002\u0006\u0000\u0000\u0001\u0000\u0000\tlocal_row\tpng_voidp\v::local_row\u0013png_voidp local_row\u0000\tLOCAL_ROW\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0004\u0006\u0000\u0000\u0003\u0000\u0000\u0000\u0004\u0006\u0000\u0000\u001A\u0000\u0000\u0000\u0004\u0006\u0000\u0000\u0001\u0000\u0000\u0006memory\tpng_bytep\b::memory\u0010png_bytep memory\u0000\u0006MEMORY\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0005\u0006\u0000\u0000\u0003\u0000\u0000\u0000\u0005\u0006\u0000\u0000 \u0000\u0000\u0000\u0005\u0006\u0000\u0000\u0001\u0000\u0000\fmemory_bytes\u0010png_alloc_size_t\u000E::memory_bytes\u001Dpng_alloc_size_t memory_bytes\u0000\fMEMORY_BYTES\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0006\u0006\u0000\u0000\u0003\u0000\u0000\u0000\u0006\u0006\u0000\u0000 \u0000\u0000\u0000\u0006\u0006\u0000\u0000\u0001\u0000\u0000\foutput_bytes\u0010png_alloc_size_t\u000E::output_bytes\u001Dpng_alloc_size_t output_bytes\u0000\fOUTPUT_BYTES\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0002\u0000\u0000\u0000\a\u0006\u0000\u0000\u0000\u0000\u0000\u0000÷\u0005\u0000\u0000\u0019\u0000\u0000\u0000\a\u0006\u0000\u0000\u0001\u0000\u0000\u0017png_image_write_control\u0017png_image_write_control\u0017png_image_write_control\u001Ftypedef png_image_write_control\u0000\u0017PNG_IMAGE_WRITE_CONTROL\u0000\u0000A(unnamed at C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\pngwrite.)\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000E\u0006\u0000\u0000\u0000\u0000\u0000\u0000\r\u0006\u0000\u0000\u0001\u0000\u0000\u0000s\u0006\u0000\u0000\u0001\u0000\u0001\u0015png_write_image_16bit\u000Fint (png_voidp) png_write_image_16bit(png_voidp)4static int png_write_image_16bit(png_voidp argument)\u0000\u0015PNG_WRITE_IMAGE_16BIT\u0000\u0000\u0000\u0000õ\u0001\u0000\u0000\v\u0000\u0000\u0000}\u0006\u0000\u0000\v\u0000\u0000\u0000}\u0006\u0000\u0000L\u0000\u0000\u0000}\u0006\u0000\u0000\u0000\u0000\u0000\u000EUNP_RECIPROCAL\u0000\u000EUNP_RECIPROCAL\u000EUNP_RECIPROCAL\u0000\u000EUNP_RECIPROCAL\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u007F\u0006\u0000\u0000\u0001\u0000\u0000\u0000ª\u0006\u0000\u0000\u0001\u0000\u0001\u0011png_unpremultiply0png_byte (png_uint_32, png_uint_32, png_uint_32)6png_unpremultiply(png_uint_32,png_uint_32,png_uint_32)cstatic png_byte png_unpremultiply(png_uint_32 component, png_uint_32 alpha, png_uint_32 reciprocal)\u0000\u0011PNG_UNPREMULTIPLY\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000­\u0006\u0000\u0000\u0000\u0000\u0000\u0000¬\u0006\u0000\u0000\u0001\u0000\u0000\u0000\v\a\u0000\u0000\u0001\u0000\u0001\u0014png_write_image_8bit\u000Fint (png_voidp)\u001Fpng_write_image_8bit(png_voidp)3static int png_write_image_8bit(png_voidp argument)\u0000\u0014PNG_WRITE_IMAGE_8BIT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000E\a\u0000\u0000\u0000\u0000\u0000\u0000\r\a\u0000\u0000\u0001\u0000\u0000\u0000\a\u0000\u0000\u0001\u0000\u0001\u0012png_image_set_PLTE void (png_image_write_control *),png_image_set_PLTE(png_image_write_control*)@static void png_image_set_PLTE(png_image_write_control *display)\u0000\u0012PNG_IMAGE_SET_PLTE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \a\u0000\u0000\u0000\u0000\u0000\u0000\a\u0000\u0000\u0001\u0000\u0000\u0000\b\u0000\u0000\u0001\u0000\u0001\u0014png_image_write_main\u000Fint (png_voidp)\u001Fpng_image_write_main(png_voidp)3static int png_image_write_main(png_voidp argument)\u0000\u0014PNG_IMAGE_WRITE_MAIN\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0001\u0000\u0000\u0000¡\b\u0000\u0000\u0001\u0000\u0001\u0012image_memory_write\u001Dvoid (int, png_bytep, size_t)(image_memory_write(int,png_bytep,size_t)Hstatic void image_memory_write(int png_ptr, png_bytep data, size_t size)\u0000\u0012IMAGE_MEMORY_WRITE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¤\b\u0000\u0000\u0000\u0000\u0000\u0000£\b\u0000\u0000\u0001\u0000\u0000\u0000§\b\u0000\u0000\u0001\u0000\u0001\u0012image_memory_flush\nvoid (int)\u0017image_memory_flush(int)+static void image_memory_flush(int png_ptr)\u0000\u0012IMAGE_MEMORY_FLUSH\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ª\b\u0000\u0000\u0000\u0000\u0000\u0000©\b\u0000\u0000\u0001\u0000\u0000\u0000·\b\u0000\u0000\u0001\u0000\u0001\u0016png_image_write_memory\u000Fint (png_voidp)!png_image_write_memory(png_voidp)5static int png_image_write_memory(png_voidp argument)\u0000\u0016PNG_IMAGE_WRITE_MEMORY\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000º\b\u0000\u0000\u0000\u0000\u0000\u0000¹\b\u0000\u0000\u0001\u0000\u0000\u0000ù\b\u0000\u0000\u0001\u0000\u0000\u0019png_image_write_to_memoryZint (int, void *, png_alloc_size_t *restrict, int, const void *, png_int_32, const void *)gpng_image_write_to_memory(int,void*,png_alloc_size_t*__restrict,int,const void*,png_int_32,const void*)ÿ·\u0000\u0000\u0000int png_image_write_to_memory(int image, void *memory, png_alloc_size_t *__restrict memory_bytes, int convert_to_8bit, const void *buffer, png_int_32 row_stride, const void *colormap)\u0000\u0019PNG_IMAGE_WRITE_TO_MEMORY\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ý\b\u0000\u0000\u0000\u0000\u0000\u0000ü\b\u0000\u0000\u0001\u0000\u0000\u0000+\t\u0000\u0000\u0001\u0000\u0000\u0018png_image_write_to_stdio=int (int, int *, int, const void *, png_int_32, const void *)Ipng_image_write_to_stdio(int,int*,int,const void*,png_int_32,const void*)ÿ\u0000\u0000\u0000int png_image_write_to_stdio(int image, int *file, int convert_to_8bit, const void *buffer, png_int_32 row_stride, const void *colormap)\u0000\u0018PNG_IMAGE_WRITE_TO_STDIO\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000.\t\u0000\u0000\u0000\u0000\u0000\u0000-\t\u0000\u0000\u0001\u0000\u0000\u0000n\t\u0000\u0000\u0001\u0000\u0000\u0017png_image_write_to_fileDint (int, const char *, int, const void *, png_int_32, const void *)Opng_image_write_to_file(int,const char*,int,const void*,png_int_32,const void*)ÿ\u0000\u0000\u0000int png_image_write_to_file(int image, const char *file_name, int convert_to_8bit, const void *buffer, png_int_32 row_stride, const void *colormap)\u0000\u0017PNG_IMAGE_WRITE_TO_FILE\u0000\u0000\u0000\u0000end\u0000À.\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\pngwtran.c","value":"data\u0006\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0001\vpng_do_pack\"void (int, png_bytep, png_uint_32)&png_do_pack(int,png_bytep,png_uint_32)Kstatic void png_do_pack(int row_info, png_bytep row, png_uint_32 bit_depth)\u0000\vPNG_DO_PACK\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000«\u0000\u0000\u0000\u0000\u0000\u0000\u0000ª\u0000\u0000\u0000\u0001\u0000\u0000\u00000\u0001\u0000\u0000\u0001\u0000\u0001\fpng_do_shift\u001Avoid (int, png_bytep, int)\u001Fpng_do_shift(int,png_bytep,int)Dstatic void png_do_shift(int row_info, png_bytep row, int bit_depth)\u0000\fPNG_DO_SHIFT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u0000\u0000\u00004\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0001\u0017png_do_write_swap_alpha\u0015void (int, png_bytep)&png_do_write_swap_alpha(int,png_bytep)@static void png_do_write_swap_alpha(int row_info, png_bytep row)\u0000\u0017PNG_DO_WRITE_SWAP_ALPHA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000í\u0001\u0000\u0000\u0001\u0000\u0001\u0019png_do_write_invert_alpha\u0015void (int, png_bytep)(png_do_write_invert_alpha(int,png_bytep)Bstatic void png_do_write_invert_alpha(int row_info, png_bytep row)\u0000\u0019PNG_DO_WRITE_INVERT_ALPHA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ô\u0001\u0000\u0000\u0000\u0000\u0000\u0000ó\u0001\u0000\u0000\u0001\u0000\u0000\u0000<\u0002\u0000\u0000\u0001\u0000\u0000\u001Cpng_do_write_transformations\u000Fvoid (int, int)%png_do_write_transformations(int,int)<void png_do_write_transformations(int png_ptr, int row_info)\u0000\u001CPNG_DO_WRITE_TRANSFORMATIONS\u0000\u0000\u0000\u0000end\u0000\u0016\u0004\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\pngwutil.c","value":"data;\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001D\u0000\u0000\u0000\u0001\u0000\u0000\u0010png_save_uint_32\u001Dvoid (png_bytep, png_uint_32)'png_save_uint_32(png_bytep,png_uint_32)3void png_save_uint_32(png_bytep buf, png_uint_32 i)\u0000\u0010PNG_SAVE_UINT_32\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000$\u0000\u0000\u0000\u0000\u0000\u0000\u0000#\u0000\u0000\u0000\u0001\u0000\u0000\u0000(\u0000\u0000\u0000\u0001\u0000\u0000\u0010png_save_uint_16\u001Evoid (png_bytep, unsigned int)(png_save_uint_16(png_bytep,unsigned int)4void png_save_uint_16(png_bytep buf, unsigned int i)\u0000\u0010PNG_SAVE_UINT_16\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00002\u0000\u0000\u0000\u0000\u0000\u0000\u00001\u0000\u0000\u0000\u0001\u0000\u0000\u0000A\u0000\u0000\u0000\u0001\u0000\u0000\rpng_write_sig\nvoid (int)\u0012png_write_sig(int)\u001Fvoid png_write_sig(int png_ptr)\u0000\rPNG_WRITE_SIG\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000H\u0000\u0000\u0000\u0000\u0000\u0000\u0000G\u0000\u0000\u0000\u0001\u0000\u0000\u0000o\u0000\u0000\u0000\u0001\u0000\u0001\u0016png_write_chunk_header$void (int, png_uint_32, png_uint_32)3png_write_chunk_header(int,png_uint_32,png_uint_32)[static void png_write_chunk_header(int png_ptr, png_uint_32 chunk_name, png_uint_32 length)\u0000\u0016PNG_WRITE_CHUNK_HEADER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000r\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000\u0000\u0000\u0001\u0000\u0000\u0000v\u0000\u0000\u0000\u0001\u0000\u0000\u0015png_write_chunk_start(void (int, png_const_bytep, png_uint_32)6png_write_chunk_start(int,png_const_bytep,png_uint_32)Yvoid png_write_chunk_start(int png_ptr, png_const_bytep chunk_string, png_uint_32 length)\u0000\u0015PNG_WRITE_CHUNK_START\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000~\u0000\u0000\u0000\u0000\u0000\u0000\u0000}\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0014png_write_chunk_data#void (int, png_const_bytep, size_t)0png_write_chunk_data(int,png_const_bytep,size_t)Kvoid png_write_chunk_data(int png_ptr, png_const_bytep data, size_t length)\u0000\u0014PNG_WRITE_CHUNK_DATA\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000¢\u0000\u0000\u0000\u0001\u0000\u0000\u0013png_write_chunk_end\nvoid (int)\u0018png_write_chunk_end(int)%void png_write_chunk_end(int png_ptr)\u0000\u0013PNG_WRITE_CHUNK_END\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000®\u0000\u0000\u0000\u0000\u0000\u0000\u0000­\u0000\u0000\u0000\u0001\u0000\u0000\u0000»\u0000\u0000\u0000\u0001\u0000\u0001\u0018png_write_complete_chunk0void (int, png_uint_32, png_const_bytep, size_t)@png_write_complete_chunk(int,png_uint_32,png_const_bytep,size_t)nstatic void png_write_complete_chunk(int png_ptr, png_uint_32 chunk_name, png_const_bytep data, size_t length)\u0000\u0018PNG_WRITE_COMPLETE_CHUNK\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¿\u0000\u0000\u0000\u0000\u0000\u0000\u0000¾\u0000\u0000\u0000\u0001\u0000\u0000\u0000Ä\u0000\u0000\u0000\u0001\u0000\u0000\u000Fpng_write_chunk4void (int, png_const_bytep, png_const_bytep, size_t);png_write_chunk(int,png_const_bytep,png_const_bytep,size_t)dvoid png_write_chunk(int png_ptr, png_const_bytep chunk_string, png_const_bytep data, size_t length)\u0000\u000FPNG_WRITE_CHUNK\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ë\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ê\u0000\u0000\u0000\u0001\u0000\u0000\u0000ï\u0000\u0000\u0000\u0001\u0000\u0001\u000Epng_image_size\u0016png_alloc_size_t (int)\u0013png_image_size(int)3static png_alloc_size_t png_image_size(int png_ptr)\u0000\u000EPNG_IMAGE_SIZE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ù\u0000\u0000\u0000\u0000\u0000\u0000\u0000ø\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001E\u0001\u0000\u0000\u0001\u0000\u0001\foptimize_cmf\"void (png_bytep, png_alloc_size_t)(optimize_cmf(png_bytep,png_alloc_size_t)Dstatic void optimize_cmf(png_bytep data, png_alloc_size_t data_size)\u0000\fOPTIMIZE_CMF\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000\u0000\u0000\"\u0001\u0000\u0000\u0001\u0000\u0000\u0000²\u0001\u0000\u0000\u0001\u0000\u0001\u0011png_deflate_claim(int (int, png_uint_32, png_alloc_size_t)3png_deflate_claim(int,png_uint_32,png_alloc_size_t)Xstatic int png_deflate_claim(int png_ptr, png_uint_32 owner, png_alloc_size_t data_size)\u0000\u0011PNG_DEFLATE_CLAIM\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¶\u0001\u0000\u0000\u0000\u0000\u0000\u0000µ\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ç\u0001\u0000\u0000\u0001\u0000\u0000\u0014png_free_buffer_list%void (int, png_compression_bufferp *)2png_free_buffer_list(int,png_compression_bufferp*)Fvoid png_free_buffer_list(int png_ptr, png_compression_bufferp *listp)\u0000\u0014PNG_FREE_BUFFER_LIST\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000Ô\u0001\u0000\u0000\b\u0000\u0000\u0000Ô\u0001\u0000\u0000\u0001\u0000\u0000\u0000Ú\u0001\u0000\u0000\u0001\u0000\u0000\u0011compression_state\u0011compression_state\u0011compression_state\u0000\u0000\u0011COMPRESSION_STATE\u0011compression_state\u0011COMPRESSION_STATE\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000Ö\u0001\u0000\u0000\u0003\u0000\u0000\u0000Ö\u0001\u0000\u0000\u001D\u0000\u0000\u0000Ö\u0001\u0000\u0000\u0001\u0000\u0000\u0005input\u000Fpng_const_bytep\u0018compression_state::input\u0015png_const_bytep input\u0000\u0005INPUT\u0011compression_state\u0011COMPRESSION_STATE\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000×\u0001\u0000\u0000\u0003\u0000\u0000\u0000×\u0001\u0000\u0000!\u0000\u0000\u0000×\u0001\u0000\u0000\u0001\u0000\u0000\tinput_len\u0010png_alloc_size_t\u001Ccompression_state::input_len\u001Apng_alloc_size_t input_len\u0000\tINPUT_LEN\u0011compression_state\u0011COMPRESSION_STATE\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000Ø\u0001\u0000\u0000\u0003\u0000\u0000\u0000Ø\u0001\u0000\u0000\"\u0000\u0000\u0000Ø\u0001\u0000\u0000\u0001\u0000\u0000\noutput_len\vpng_uint_32\u001Dcompression_state::output_len\u0016png_uint_32 output_len\u0000\nOUTPUT_LEN\u0011compression_state\u0011COMPRESSION_STATE\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000Ù\u0001\u0000\u0000\u0003\u0000\u0000\u0000Ù\u0001\u0000\u0000$\u0000\u0000\u0000Ù\u0001\u0000\u0000\u0001\u0000\u0000\u0006output\u000Epng_byte[1024]\u0019compression_state::output\u0015png_byte output[1024]\u0000\u0006OUTPUT\u0011compression_state\u0011COMPRESSION_STATE\u0000\u0000\u0014\u0000\u0000\u0000\u0002\u0000\u0000\u0000Ú\u0001\u0000\u0000\u0000\u0000\u0000\u0000Ô\u0001\u0000\u0000\u0013\u0000\u0000\u0000Ú\u0001\u0000\u0000\u0001\u0000\u0000\u0011compression_state\u0011compression_state\u0011compression_state+typedef compression_state compression_state\u0000\u0011COMPRESSION_STATE\u0000\u0000\u0011compression_state\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ý\u0001\u0000\u0000\u0000\u0000\u0000\u0000Ü\u0001\u0000\u0000\u0001\u0000\u0000\u0000ã\u0001\u0000\u0000\u0001\u0000\u0001\u0016png_text_compress_init=void (compression_state *, png_const_bytep, png_alloc_size_t)Kpng_text_compress_init(compression_state*,png_const_bytep,png_alloc_size_t)nstatic void png_text_compress_init(compression_state *comp, png_const_bytep input, png_alloc_size_t input_len)\u0000\u0016PNG_TEXT_COMPRESS_INIT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ç\u0001\u0000\u0000\u0000\u0000\u0000\u0000æ\u0001\u0000\u0000\u0001\u0000\u0000\u0000x\u0002\u0000\u0000\u0001\u0000\u0001\u0011png_text_compress8int (int, png_uint_32, compression_state *, png_uint_32)Apng_text_compress(int,png_uint_32,compression_state*,png_uint_32)rstatic int png_text_compress(int png_ptr, png_uint_32 chunk_name, compression_state *comp, png_uint_32 prefix_len)\u0000\u0011PNG_TEXT_COMPRESS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000|\u0002\u0000\u0000\u0000\u0000\u0000\u0000{\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0001\u001Dpng_write_compressed_data_out\u001Fvoid (int, compression_state *)5png_write_compressed_data_out(int,compression_state*)Ostatic void png_write_compressed_data_out(int png_ptr, compression_state *comp)\u0000\u001DPNG_WRITE_COMPRESSED_DATA_OUT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\u0000B\u0003\u0000\u0000\u0001\u0000\u0000\u000Epng_write_IHDR=void (int, png_uint_32, png_uint_32, int, int, int, int, int)?png_write_IHDR(int,png_uint_32,png_uint_32,int,int,int,int,int)ÿ¡\u0000\u0000\u0000void png_write_IHDR(int png_ptr, png_uint_32 width, png_uint_32 height, int bit_depth, int color_type, int compression_type, int filter_type, int interlace_type)\u0000\u000EPNG_WRITE_IHDR\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000I\u0003\u0000\u0000\u0000\u0000\u0000\u0000H\u0003\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0001\u0000\u0000\u000Epng_write_PLTE\u001Cvoid (int, int, png_uint_32)#png_write_PLTE(int,int,png_uint_32)Bvoid png_write_PLTE(int png_ptr, int palette, png_uint_32 num_pal)\u0000\u000EPNG_WRITE_PLTE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000¢\u0003\u0000\u0000\u0000\u0000\u0000\u0000¡\u0003\u0000\u0000\u0001\u0000\u0000\u0000,\u0004\u0000\u0000\u0001\u0000\u0000\u0011png_compress_IDAT2void (int, png_const_bytep, png_alloc_size_t, int);png_compress_IDAT(int,png_const_bytep,png_alloc_size_t,int)avoid png_compress_IDAT(int png_ptr, png_const_bytep input, png_alloc_size_t input_len, int flush)\u0000\u0011PNG_COMPRESS_IDAT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u00000\u0004\u0000\u0000\u0000\u0000\u0000\u0000/\u0004\u0000\u0000\u0001\u0000\u0000\u00006\u0004\u0000\u0000\u0001\u0000\u0000\u000Epng_write_IEND\nvoid (int)\u0013png_write_IEND(int) void png_write_IEND(int png_ptr)\u0000\u000EPNG_WRITE_IEND\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000;\u0004\u0000\u0000\u0000\u0000\u0000\u0000:\u0004\u0000\u0000\u0001\u0000\u0000\u0000D\u0004\u0000\u0000\u0001\u0000\u0000\u0014png_write_gAMA_fixed\u001Bvoid (int, png_fixed_point))png_write_gAMA_fixed(int,png_fixed_point)Bvoid png_write_gAMA_fixed(int png_ptr, png_fixed_point file_gamma)\u0000\u0014PNG_WRITE_GAMA_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000J\u0004\u0000\u0000\u0000\u0000\u0000\u0000I\u0004\u0000\u0000\u0001\u0000\u0000\u0000V\u0004\u0000\u0000\u0001\u0000\u0000\u000Epng_write_sRGB\u000Fvoid (int, int)\u0017png_write_sRGB(int,int)1void png_write_sRGB(int png_ptr, int srgb_intent)\u0000\u000EPNG_WRITE_SRGB\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\\\u0004\u0000\u0000\u0000\u0000\u0000\u0000[\u0004\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0001\u0000\u0000\u000Epng_write_iCCP,void (int, png_const_charp, png_const_bytep)3png_write_iCCP(int,png_const_charp,png_const_bytep)Ovoid png_write_iCCP(int png_ptr, png_const_charp name, png_const_bytep profile)\u0000\u000EPNG_WRITE_ICCP\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0001\u0000\u0000\u0000è\u0004\u0000\u0000\u0001\u0000\u0000\u000Epng_write_sPLT\u000Fvoid (int, int)\u0017png_write_sPLT(int,int).void png_write_sPLT(int png_ptr, int spalette)\u0000\u000EPNG_WRITE_SPLT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000î\u0004\u0000\u0000\u0000\u0000\u0000\u0000í\u0004\u0000\u0000\u0001\u0000\u0000\u0000#\u0005\u0000\u0000\u0001\u0000\u0000\u000Epng_write_sBIT\u0014void (int, int, int)\u001Bpng_write_sBIT(int,int,int):void png_write_sBIT(int png_ptr, int sbit, int color_type)\u0000\u000EPNG_WRITE_SBIT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000)\u0005\u0000\u0000\u0000\u0000\u0000\u0000(\u0005\u0000\u0000\u0001\u0000\u0000\u0000=\u0005\u0000\u0000\u0001\u0000\u0000\u0014png_write_cHRM_fixed\u001Avoid (int, const png_xy *)'png_write_cHRM_fixed(int,const png_xy*)8void png_write_cHRM_fixed(int png_ptr, const png_xy *xy)\u0000\u0014PNG_WRITE_CHRM_FIXED\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000C\u0005\u0000\u0000\u0000\u0000\u0000\u0000B\u0005\u0000\u0000\u0001\u0000\u0000\u0000\u007F\u0005\u0000\u0000\u0001\u0000\u0000\u000Epng_write_tRNS*void (int, png_const_bytep, int, int, int)/png_write_tRNS(int,png_const_bytep,int,int,int)fvoid png_write_tRNS(int png_ptr, png_const_bytep trans_alpha, int tran, int num_trans, int color_type)\u0000\u000EPNG_WRITE_TRNS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0001\u0000\u0000\u0000¾\u0005\u0000\u0000\u0001\u0000\u0000\u000Epng_write_bKGD\u0014void (int, int, int)\u001Bpng_write_bKGD(int,int,int):void png_write_bKGD(int png_ptr, int back, int color_type)\u0000\u000EPNG_WRITE_BKGD\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ä\u0005\u0000\u0000\u0000\u0000\u0000\u0000Ã\u0005\u0000\u0000\u0001\u0000\u0000\u0000Ô\u0005\u0000\u0000\u0001\u0000\u0000\u000Epng_write_eXIf\u001Avoid (int, png_bytep, int)!png_write_eXIf(int,png_bytep,int)>void png_write_eXIf(int png_ptr, png_bytep exif, int num_exif)\u0000\u000EPNG_WRITE_EXIF\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ú\u0005\u0000\u0000\u0000\u0000\u0000\u0000Ù\u0005\u0000\u0000\u0001\u0000\u0000\u0000ó\u0005\u0000\u0000\u0001\u0000\u0000\u000Epng_write_hIST#void (int, png_const_uint_16p, int)*png_write_hIST(int,png_const_uint_16p,int)Gvoid png_write_hIST(int png_ptr, png_const_uint_16p hist, int num_hist)\u0000\u000EPNG_WRITE_HIST\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ù\u0005\u0000\u0000\u0000\u0000\u0000\u0000ø\u0005\u0000\u0000\u0001\u0000\u0000\u0000\u001E\u0006\u0000\u0000\u0001\u0000\u0000\u000Epng_write_tEXt4void (int, png_const_charp, png_const_charp, size_t):png_write_tEXt(int,png_const_charp,png_const_charp,size_t)\\void png_write_tEXt(int png_ptr, png_const_charp key, png_const_charp text, size_t text_len)\u0000\u000EPNG_WRITE_TEXT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000$\u0006\u0000\u0000\u0000\u0000\u0000\u0000#\u0006\u0000\u0000\u0001\u0000\u0000\u0000Q\u0006\u0000\u0000\u0001\u0000\u0000\u000Epng_write_zTXt1void (int, png_const_charp, png_const_charp, int)7png_write_zTXt(int,png_const_charp,png_const_charp,int)\\void png_write_zTXt(int png_ptr, png_const_charp key, png_const_charp text, int compression)\u0000\u000EPNG_WRITE_ZTXT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000W\u0006\u0000\u0000\u0000\u0000\u0000\u0000V\u0006\u0000\u0000\u0001\u0000\u0000\u0000µ\u0006\u0000\u0000\u0001\u0000\u0000\u000Epng_write_iTXtSvoid (int, int, png_const_charp, png_const_charp, png_const_charp, png_const_charp)Wpng_write_iTXt(int,int,png_const_charp,png_const_charp,png_const_charp,png_const_charp)ÿ\u0000\u0000\u0000void png_write_iTXt(int png_ptr, int compression, png_const_charp key, png_const_charp lang, png_const_charp lang_key, png_const_charp text)\u0000\u000EPNG_WRITE_ITXT\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000»\u0006\u0000\u0000\u0000\u0000\u0000\u0000º\u0006\u0000\u0000\u0001\u0000\u0000\u0000Ê\u0006\u0000\u0000\u0001\u0000\u0000\u000Epng_write_oFFs'void (int, png_int_32, png_int_32, int)-png_write_oFFs(int,png_int_32,png_int_32,int)Yvoid png_write_oFFs(int png_ptr, png_int_32 x_offset, png_int_32 y_offset, int unit_type)\u0000\u000EPNG_WRITE_OFFS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ï\u0006\u0000\u0000\u0000\u0000\u0000\u0000Î\u0006\u0000\u0000\u0001\u0000\u0000\u0000\n\a\u0000\u0000\u0001\u0000\u0000\u000Epng_write_pCALTvoid (int, png_charp, png_int_32, png_int_32, int, int, png_const_charp, png_charpp)Vpng_write_pCAL(int,png_charp,png_int_32,png_int_32,int,int,png_const_charp,png_charpp)ÿ\u0000\u0000\u0000void png_write_pCAL(int png_ptr, png_charp purpose, png_int_32 X0, png_int_32 X1, int type, int nparams, png_const_charp units, png_charpp params)\u0000\u000EPNG_WRITE_PCAL\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\a\u0000\u0000\u0000\u0000\u0000\u0000\u000F\a\u0000\u0000\u0001\u0000\u0000\u0000(\a\u0000\u0000\u0001\u0000\u0000\u0010png_write_sCAL_s1void (int, int, png_const_charp, png_const_charp)9png_write_sCAL_s(int,int,png_const_charp,png_const_charp)[void png_write_sCAL_s(int png_ptr, int unit, png_const_charp width, png_const_charp height)\u0000\u0010PNG_WRITE_SCAL_S\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000.\a\u0000\u0000\u0000\u0000\u0000\u0000-\a\u0000\u0000\u0001\u0000\u0000\u0000>\a\u0000\u0000\u0001\u0000\u0000\u000Epng_write_pHYs)void (int, png_uint_32, png_uint_32, int)/png_write_pHYs(int,png_uint_32,png_uint_32,int)mvoid png_write_pHYs(int png_ptr, png_uint_32 x_pixels_per_unit, png_uint_32 y_pixels_per_unit, int unit_type)\u0000\u000EPNG_WRITE_PHYS\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000F\a\u0000\u0000\u0000\u0000\u0000\u0000E\a\u0000\u0000\u0001\u0000\u0000\u0000\\\a\u0000\u0000\u0001\u0000\u0000\u000Epng_write_tIME\u000Fvoid (int, int)\u0017png_write_tIME(int,int).void png_write_tIME(int png_ptr, int mod_time)\u0000\u000EPNG_WRITE_TIME\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000a\a\u0000\u0000\u0000\u0000\u0000\u0000`\a\u0000\u0000\u0001\u0000\u0000\u0000Ð\a\u0000\u0000\u0001\u0000\u0000\u0013png_write_start_row\nvoid (int)\u0018png_write_start_row(int)%void png_write_start_row(int png_ptr)\u0000\u0013PNG_WRITE_START_ROW\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ô\a\u0000\u0000\u0000\u0000\u0000\u0000Ó\a\u0000\u0000\u0001\u0000\u0000\u0000$\b\u0000\u0000\u0001\u0000\u0000\u0014png_write_finish_row\nvoid (int)\u0019png_write_finish_row(int)&void png_write_finish_row(int png_ptr)\u0000\u0014PNG_WRITE_FINISH_ROW\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000/\b\u0000\u0000\u0000\u0000\u0000\u0000.\b\u0000\u0000\u0001\u0000\u0000\u0000Ø\b\u0000\u0000\u0001\u0000\u0000\u0016png_do_write_interlace\u001Avoid (int, png_bytep, int))png_do_write_interlace(int,png_bytep,int)Bvoid png_do_write_interlace(int row_info, png_bytep row, int pass)\u0000\u0016PNG_DO_WRITE_INTERLACE\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000á\b\u0000\u0000\u0000\u0000\u0000\u0000à\b\u0000\u0000\u0015\u0000\u0000\u0000â\b\u0000\u0000\u0000\u0000\u0001\u0016png_write_filtered_row\u001Dvoid (int, png_bytep, size_t),png_write_filtered_row(int,png_bytep,size_t)Ystatic void png_write_filtered_row(int png_ptr, png_bytep filtered_row, size_t row_bytes)\u0000\u0016PNG_WRITE_FILTERED_ROW\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000æ\b\u0000\u0000\u0000\u0000\u0000\u0000å\b\u0000\u0000\u0001\u0000\u0000\u0000\n\t\u0000\u0000\u0001\u0000\u0001\u0011png_setup_sub_row)size_t (int, png_uint_32, size_t, size_t)0png_setup_sub_row(int,png_uint_32,size_t,size_t)]static size_t png_setup_sub_row(int png_ptr, png_uint_32 bpp, size_t row_bytes, size_t lmins)\u0000\u0011PNG_SETUP_SUB_ROW\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r\t\u0000\u0000\u0000\u0000\u0000\u0000\f\t\u0000\u0000\u0001\u0000\u0000\u0000 \t\u0000\u0000\u0001\u0000\u0001\u0016png_setup_sub_row_only\u001Fvoid (int, png_uint_32, size_t).png_setup_sub_row_only(int,png_uint_32,size_t)Rstatic void png_setup_sub_row_only(int png_ptr, png_uint_32 bpp, size_t row_bytes)\u0000\u0016PNG_SETUP_SUB_ROW_ONLY\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000#\t\u0000\u0000\u0000\u0000\u0000\u0000\"\t\u0000\u0000\u0001\u0000\u0000\u0000<\t\u0000\u0000\u0001\u0000\u0001\u0010png_setup_up_row\u001Csize_t (int, size_t, size_t)#png_setup_up_row(int,size_t,size_t)Kstatic size_t png_setup_up_row(int png_ptr, size_t row_bytes, size_t lmins)\u0000\u0010PNG_SETUP_UP_ROW\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000>\t\u0000\u0000\u0000\u0000\u0000\u0000=\t\u0000\u0000\u0001\u0000\u0000\u0000K\t\u0000\u0000\u0001\u0000\u0001\u0015png_setup_up_row_only\u0012void (int, size_t)!png_setup_up_row_only(int,size_t)@static void png_setup_up_row_only(int png_ptr, size_t row_bytes)\u0000\u0015PNG_SETUP_UP_ROW_ONLY\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000N\t\u0000\u0000\u0000\u0000\u0000\u0000M\t\u0000\u0000\u0001\u0000\u0000\u0000t\t\u0000\u0000\u0001\u0000\u0001\u0011png_setup_avg_row)size_t (int, png_uint_32, size_t, size_t)0png_setup_avg_row(int,png_uint_32,size_t,size_t)]static size_t png_setup_avg_row(int png_ptr, png_uint_32 bpp, size_t row_bytes, size_t lmins)\u0000\u0011PNG_SETUP_AVG_ROW\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000v\t\u0000\u0000\u0000\u0000\u0000\u0000u\t\u0000\u0000\u0001\u0000\u0000\u0000\t\u0000\u0000\u0001\u0000\u0001\u0016png_setup_avg_row_only\u001Fvoid (int, png_uint_32, size_t).png_setup_avg_row_only(int,png_uint_32,size_t)Rstatic void png_setup_avg_row_only(int png_ptr, png_uint_32 bpp, size_t row_bytes)\u0000\u0016PNG_SETUP_AVG_ROW_ONLY\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0001\u0000\u0000\u0000Ç\t\u0000\u0000\u0001\u0000\u0001\u0013png_setup_paeth_row)size_t (int, png_uint_32, size_t, size_t)2png_setup_paeth_row(int,png_uint_32,size_t,size_t)_static size_t png_setup_paeth_row(int png_ptr, png_uint_32 bpp, size_t row_bytes, size_t lmins)\u0000\u0013PNG_SETUP_PAETH_ROW\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000É\t\u0000\u0000\u0000\u0000\u0000\u0000È\t\u0000\u0000\u0001\u0000\u0000\u0000ñ\t\u0000\u0000\u0001\u0000\u0001\u0018png_setup_paeth_row_only\u001Fvoid (int, png_uint_32, size_t)0png_setup_paeth_row_only(int,png_uint_32,size_t)Tstatic void png_setup_paeth_row_only(int png_ptr, png_uint_32 bpp, size_t row_bytes)\u0000\u0018PNG_SETUP_PAETH_ROW_ONLY\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000õ\t\u0000\u0000\u0000\u0000\u0000\u0000ô\t\u0000\u0000\u0001\u0000\u0000\u0000µ\n\u0000\u0000\u0001\u0000\u0000\u0015png_write_find_filter\u000Fvoid (int, int)\u001Epng_write_find_filter(int,int)5void png_write_find_filter(int png_ptr, int row_info)\u0000\u0015PNG_WRITE_FIND_FILTER\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000º\n\u0000\u0000\u0000\u0000\u0000\u0000¹\n\u0000\u0000\u0001\u0000\u0000\u0000Û\n\u0000\u0000\u0001\u0000\u0001\u0016png_write_filtered_row\u001Dvoid (int, png_bytep, size_t),png_write_filtered_row(int,png_bytep,size_t)_static void png_write_filtered_row(int png_ptr, png_bytep filtered_row, size_t full_row_length)\u0000\u0016PNG_WRITE_FILTERED_ROW\u0000\u0000\u0000\u0000end\u0000ñ2\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\arm\\arm_init.c","value":"data\u0002õ\u0001\u0000\u0000\b\u0000\u0000\u0000\r\u0000\u0000\u0000\b\u0000\u0000\u0000\r\u0000\u0000\u0000\u0017\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\r_POSIX_SOURCE\u0000\r_POSIX_SOURCE\r_POSIX_SOURCE\u0000\r_POSIX_SOURCE\u0000\u0000\u0000\u0000end\u0000f\u0000\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\arm\\filter_neon_intrinsics.c","value":"data\u0001end\u0000\t\u0000\u0000\u0000"},{"key":"C:\\Users\\sblo\\ai-upp\\uppsrc\\plugin\\png\\lib\\arm\\palette_neon_intrinsics.c","value":"data\u0001end\u0000\t\u0000\u0000\u0000"}]}