#include "Eon.h"

NAMESPACE_UPP

INITBLOCK {
	using namespace Ecs;
	Eon::__ecs_script_loader = &Single<Eon::ExtScriptEcsLoader>();
	
	TYPED_STRING_HASHER(Machine);
	TYPED_STRING_HASHER(Ecs::Engine);
	TYPED_STRING_HASHER(Ecs::Entity);
	TYPED_STRING_HASHER(Space);
	TYPED_STRING_HASHER(Loop);
	TYPED_STRING_HASHER(Pool);
	TYPED_STRING_HASHER(CustomerLink);
	TYPED_STRING_HASHER(PipeLink);
	TYPED_STRING_HASHER(PipeOptSideLink);
	TYPED_STRING_HASHER(IntervalPipeLink);
	TYPED_STRING_HASHER(PollerLink);
	TYPED_STRING_HASHER(ExternalPipeLink);
	TYPED_STRING_HASHER(DriverLink);
	TYPED_STRING_HASHER(MergerLink);
	TYPED_STRING_HASHER(JoinerLink);
	TYPED_STRING_HASHER(SplitterLink);
	
	SerialLoaderFactory::Register<SerialShadertoyLoader>(".toy");
	
	// System
	Engine::Register<EasingSystem>("easing");
	Engine::Register<WorldLogicSystem>("world.logic");
	Engine::Register<PhysicsSystem>("physics");
	Engine::Register<PlayerBodySystem>("player");
	Engine::Register<InteractionSystem>("interaction");
	Engine::Register<Ecs::RegistrySystem>("registry");
	//Engine::Register<EntityStore>("entity.store");
	//Engine::Register<ComponentStore>("component.store");
	
	// Component
	Ecs::ComponentFactory::Register<RigidBody>("body");
	Ecs::ComponentFactory::Register<TextRenderable>("text");
	Ecs::ComponentFactory::Register<Easing>("easing");
	Ecs::ComponentFactory::Register<PhysicsBody>("physics");
	Ecs::ComponentFactory::Register<Transform>("transform3");
	Ecs::ComponentFactory::Register<Transform2D>("transform2");
	
	
	//DaemonBase::Register<EcsService>("Ecs");
	
	
}

END_UPP_NAMESPACE
